var yt=Object.defineProperty;var U9=e=>{throw TypeError(e)};var _t=(e,t,n)=>t in e?yt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var A1=(e,t,n)=>_t(e,typeof t!="symbol"?t+"":t,n),x7=(e,t,n)=>t.has(e)||U9("Cannot "+n);var q2=(e,t,n)=>(x7(e,t,"read from private field"),n?n.call(e):t.get(e)),w7=(e,t,n)=>t.has(e)?U9("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,n),L5=(e,t,n,r)=>(x7(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n),v7=(e,t,n)=>(x7(e,t,"access private method"),n);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(i){if(i.ep)return;i.ep=!0;const s=n(i);fetch(i.href,s)}})();function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function getAugmentedNamespace(e){if(e.__esModule)return e;var t=e.default;if(typeof t=="function"){var n=function r(){return this instanceof r?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach(function(r){var i=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:function(){return e[r]}})}),n}var jsxRuntime={exports:{}},reactJsxRuntime_production_min={},react={exports:{}},react_production_min={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hasRequiredReact_production_min;function requireReact_production_min(){if(hasRequiredReact_production_min)return react_production_min;hasRequiredReact_production_min=1;var e=Symbol.for("react.element"),t=Symbol.for("react.portal"),n=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),o=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;function g(G){return G===null||typeof G!="object"?null:(G=p&&G[p]||G["@@iterator"],typeof G=="function"?G:null)}var x={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D=Object.assign,y={};function E(G,Q,M0){this.props=G,this.context=Q,this.refs=y,this.updater=M0||x}E.prototype.isReactComponent={},E.prototype.setState=function(G,Q){if(typeof G!="object"&&typeof G!="function"&&G!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,G,Q,"setState")},E.prototype.forceUpdate=function(G){this.updater.enqueueForceUpdate(this,G,"forceUpdate")};function F(){}F.prototype=E.prototype;function B(G,Q,M0){this.props=G,this.context=Q,this.refs=y,this.updater=M0||x}var M=B.prototype=new F;M.constructor=B,D(M,E.prototype),M.isPureReactComponent=!0;var k=Array.isArray,T=Object.prototype.hasOwnProperty,N={current:null},$={key:!0,ref:!0,__self:!0,__source:!0};function R(G,Q,M0){var C0,e0={},F0=null,O0=null;if(Q!=null)for(C0 in Q.ref!==void 0&&(O0=Q.ref),Q.key!==void 0&&(F0=""+Q.key),Q)T.call(Q,C0)&&!$.hasOwnProperty(C0)&&(e0[C0]=Q[C0]);var L0=arguments.length-2;if(L0===1)e0.children=M0;else if(1<L0){for(var B0=Array(L0),H0=0;H0<L0;H0++)B0[H0]=arguments[H0+2];e0.children=B0}if(G&&G.defaultProps)for(C0 in L0=G.defaultProps,L0)e0[C0]===void 0&&(e0[C0]=L0[C0]);return{$$typeof:e,type:G,key:F0,ref:O0,props:e0,_owner:N.current}}function O(G,Q){return{$$typeof:e,type:G.type,key:Q,ref:G.ref,props:G.props,_owner:G._owner}}function L(G){return typeof G=="object"&&G!==null&&G.$$typeof===e}function z(G){var Q={"=":"=0",":":"=2"};return"$"+G.replace(/[=:]/g,function(M0){return Q[M0]})}var X=/\/+/g;function o0(G,Q){return typeof G=="object"&&G!==null&&G.key!=null?z(""+G.key):Q.toString(36)}function Z(G,Q,M0,C0,e0){var F0=typeof G;(F0==="undefined"||F0==="boolean")&&(G=null);var O0=!1;if(G===null)O0=!0;else switch(F0){case"string":case"number":O0=!0;break;case"object":switch(G.$$typeof){case e:case t:O0=!0}}if(O0)return O0=G,e0=e0(O0),G=C0===""?"."+o0(O0,0):C0,k(e0)?(M0="",G!=null&&(M0=G.replace(X,"$&/")+"/"),Z(e0,Q,M0,"",function(H0){return H0})):e0!=null&&(L(e0)&&(e0=O(e0,M0+(!e0.key||O0&&O0.key===e0.key?"":(""+e0.key).replace(X,"$&/")+"/")+G)),Q.push(e0)),1;if(O0=0,C0=C0===""?".":C0+":",k(G))for(var L0=0;L0<G.length;L0++){F0=G[L0];var B0=C0+o0(F0,L0);O0+=Z(F0,Q,M0,B0,e0)}else if(B0=g(G),typeof B0=="function")for(G=B0.call(G),L0=0;!(F0=G.next()).done;)F0=F0.value,B0=C0+o0(F0,L0++),O0+=Z(F0,Q,M0,B0,e0);else if(F0==="object")throw Q=String(G),Error("Objects are not valid as a React child (found: "+(Q==="[object Object]"?"object with keys {"+Object.keys(G).join(", ")+"}":Q)+"). If you meant to render a collection of children, use an array instead.");return O0}function n0(G,Q,M0){if(G==null)return G;var C0=[],e0=0;return Z(G,C0,"","",function(F0){return Q.call(M0,F0,e0++)}),C0}function s0(G){if(G._status===-1){var Q=G._result;Q=Q(),Q.then(function(M0){(G._status===0||G._status===-1)&&(G._status=1,G._result=M0)},function(M0){(G._status===0||G._status===-1)&&(G._status=2,G._result=M0)}),G._status===-1&&(G._status=0,G._result=Q)}if(G._status===1)return G._result.default;throw G._result}var S0={current:null},r0={transition:null},p0={ReactCurrentDispatcher:S0,ReactCurrentBatchConfig:r0,ReactCurrentOwner:N};function h0(){throw Error("act(...) is not supported in production builds of React.")}return react_production_min.Children={map:n0,forEach:function(G,Q,M0){n0(G,function(){Q.apply(this,arguments)},M0)},count:function(G){var Q=0;return n0(G,function(){Q++}),Q},toArray:function(G){return n0(G,function(Q){return Q})||[]},only:function(G){if(!L(G))throw Error("React.Children.only expected to receive a single React element child.");return G}},react_production_min.Component=E,react_production_min.Fragment=n,react_production_min.Profiler=i,react_production_min.PureComponent=B,react_production_min.StrictMode=r,react_production_min.Suspense=c,react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=p0,react_production_min.act=h0,react_production_min.cloneElement=function(G,Q,M0){if(G==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+G+".");var C0=D({},G.props),e0=G.key,F0=G.ref,O0=G._owner;if(Q!=null){if(Q.ref!==void 0&&(F0=Q.ref,O0=N.current),Q.key!==void 0&&(e0=""+Q.key),G.type&&G.type.defaultProps)var L0=G.type.defaultProps;for(B0 in Q)T.call(Q,B0)&&!$.hasOwnProperty(B0)&&(C0[B0]=Q[B0]===void 0&&L0!==void 0?L0[B0]:Q[B0])}var B0=arguments.length-2;if(B0===1)C0.children=M0;else if(1<B0){L0=Array(B0);for(var H0=0;H0<B0;H0++)L0[H0]=arguments[H0+2];C0.children=L0}return{$$typeof:e,type:G.type,key:e0,ref:F0,props:C0,_owner:O0}},react_production_min.createContext=function(G){return G={$$typeof:o,_currentValue:G,_currentValue2:G,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},G.Provider={$$typeof:s,_context:G},G.Consumer=G},react_production_min.createElement=R,react_production_min.createFactory=function(G){var Q=R.bind(null,G);return Q.type=G,Q},react_production_min.createRef=function(){return{current:null}},react_production_min.forwardRef=function(G){return{$$typeof:l,render:G}},react_production_min.isValidElement=L,react_production_min.lazy=function(G){return{$$typeof:h,_payload:{_status:-1,_result:G},_init:s0}},react_production_min.memo=function(G,Q){return{$$typeof:f,type:G,compare:Q===void 0?null:Q}},react_production_min.startTransition=function(G){var Q=r0.transition;r0.transition={};try{G()}finally{r0.transition=Q}},react_production_min.unstable_act=h0,react_production_min.useCallback=function(G,Q){return S0.current.useCallback(G,Q)},react_production_min.useContext=function(G){return S0.current.useContext(G)},react_production_min.useDebugValue=function(){},react_production_min.useDeferredValue=function(G){return S0.current.useDeferredValue(G)},react_production_min.useEffect=function(G,Q){return S0.current.useEffect(G,Q)},react_production_min.useId=function(){return S0.current.useId()},react_production_min.useImperativeHandle=function(G,Q,M0){return S0.current.useImperativeHandle(G,Q,M0)},react_production_min.useInsertionEffect=function(G,Q){return S0.current.useInsertionEffect(G,Q)},react_production_min.useLayoutEffect=function(G,Q){return S0.current.useLayoutEffect(G,Q)},react_production_min.useMemo=function(G,Q){return S0.current.useMemo(G,Q)},react_production_min.useReducer=function(G,Q,M0){return S0.current.useReducer(G,Q,M0)},react_production_min.useRef=function(G){return S0.current.useRef(G)},react_production_min.useState=function(G){return S0.current.useState(G)},react_production_min.useSyncExternalStore=function(G,Q,M0){return S0.current.useSyncExternalStore(G,Q,M0)},react_production_min.useTransition=function(){return S0.current.useTransition()},react_production_min.version="18.3.1",react_production_min}var hasRequiredReact;function requireReact(){return hasRequiredReact||(hasRequiredReact=1,react.exports=requireReact_production_min()),react.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hasRequiredReactJsxRuntime_production_min;function requireReactJsxRuntime_production_min(){if(hasRequiredReactJsxRuntime_production_min)return reactJsxRuntime_production_min;hasRequiredReactJsxRuntime_production_min=1;var e=requireReact(),t=Symbol.for("react.element"),n=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,i=e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function o(l,c,f){var h,p={},g=null,x=null;f!==void 0&&(g=""+f),c.key!==void 0&&(g=""+c.key),c.ref!==void 0&&(x=c.ref);for(h in c)r.call(c,h)&&!s.hasOwnProperty(h)&&(p[h]=c[h]);if(l&&l.defaultProps)for(h in c=l.defaultProps,c)p[h]===void 0&&(p[h]=c[h]);return{$$typeof:t,type:l,key:g,ref:x,props:p,_owner:i.current}}return reactJsxRuntime_production_min.Fragment=n,reactJsxRuntime_production_min.jsx=o,reactJsxRuntime_production_min.jsxs=o,reactJsxRuntime_production_min}var hasRequiredJsxRuntime;function requireJsxRuntime(){return hasRequiredJsxRuntime||(hasRequiredJsxRuntime=1,jsxRuntime.exports=requireReactJsxRuntime_production_min()),jsxRuntime.exports}var jsxRuntimeExports=requireJsxRuntime(),reactExports=requireReact();const React=getDefaultExportFromCjs(reactExports);var client={},reactDom={exports:{}},reactDom_production_min={},scheduler={exports:{}},scheduler_production_min={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hasRequiredScheduler_production_min;function requireScheduler_production_min(){return hasRequiredScheduler_production_min||(hasRequiredScheduler_production_min=1,function(e){function t(r0,p0){var h0=r0.length;r0.push(p0);e:for(;0<h0;){var G=h0-1>>>1,Q=r0[G];if(0<i(Q,p0))r0[G]=p0,r0[h0]=Q,h0=G;else break e}}function n(r0){return r0.length===0?null:r0[0]}function r(r0){if(r0.length===0)return null;var p0=r0[0],h0=r0.pop();if(h0!==p0){r0[0]=h0;e:for(var G=0,Q=r0.length,M0=Q>>>1;G<M0;){var C0=2*(G+1)-1,e0=r0[C0],F0=C0+1,O0=r0[F0];if(0>i(e0,h0))F0<Q&&0>i(O0,e0)?(r0[G]=O0,r0[F0]=h0,G=F0):(r0[G]=e0,r0[C0]=h0,G=C0);else if(F0<Q&&0>i(O0,h0))r0[G]=O0,r0[F0]=h0,G=F0;else break e}}return p0}function i(r0,p0){var h0=r0.sortIndex-p0.sortIndex;return h0!==0?h0:r0.id-p0.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;e.unstable_now=function(){return s.now()}}else{var o=Date,l=o.now();e.unstable_now=function(){return o.now()-l}}var c=[],f=[],h=1,p=null,g=3,x=!1,D=!1,y=!1,E=typeof setTimeout=="function"?setTimeout:null,F=typeof clearTimeout=="function"?clearTimeout:null,B=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(r0){for(var p0=n(f);p0!==null;){if(p0.callback===null)r(f);else if(p0.startTime<=r0)r(f),p0.sortIndex=p0.expirationTime,t(c,p0);else break;p0=n(f)}}function k(r0){if(y=!1,M(r0),!D)if(n(c)!==null)D=!0,s0(T);else{var p0=n(f);p0!==null&&S0(k,p0.startTime-r0)}}function T(r0,p0){D=!1,y&&(y=!1,F(R),R=-1),x=!0;var h0=g;try{for(M(p0),p=n(c);p!==null&&(!(p.expirationTime>p0)||r0&&!z());){var G=p.callback;if(typeof G=="function"){p.callback=null,g=p.priorityLevel;var Q=G(p.expirationTime<=p0);p0=e.unstable_now(),typeof Q=="function"?p.callback=Q:p===n(c)&&r(c),M(p0)}else r(c);p=n(c)}if(p!==null)var M0=!0;else{var C0=n(f);C0!==null&&S0(k,C0.startTime-p0),M0=!1}return M0}finally{p=null,g=h0,x=!1}}var N=!1,$=null,R=-1,O=5,L=-1;function z(){return!(e.unstable_now()-L<O)}function X(){if($!==null){var r0=e.unstable_now();L=r0;var p0=!0;try{p0=$(!0,r0)}finally{p0?o0():(N=!1,$=null)}}else N=!1}var o0;if(typeof B=="function")o0=function(){B(X)};else if(typeof MessageChannel<"u"){var Z=new MessageChannel,n0=Z.port2;Z.port1.onmessage=X,o0=function(){n0.postMessage(null)}}else o0=function(){E(X,0)};function s0(r0){$=r0,N||(N=!0,o0())}function S0(r0,p0){R=E(function(){r0(e.unstable_now())},p0)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(r0){r0.callback=null},e.unstable_continueExecution=function(){D||x||(D=!0,s0(T))},e.unstable_forceFrameRate=function(r0){0>r0||125<r0?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<r0?Math.floor(1e3/r0):5},e.unstable_getCurrentPriorityLevel=function(){return g},e.unstable_getFirstCallbackNode=function(){return n(c)},e.unstable_next=function(r0){switch(g){case 1:case 2:case 3:var p0=3;break;default:p0=g}var h0=g;g=p0;try{return r0()}finally{g=h0}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(r0,p0){switch(r0){case 1:case 2:case 3:case 4:case 5:break;default:r0=3}var h0=g;g=r0;try{return p0()}finally{g=h0}},e.unstable_scheduleCallback=function(r0,p0,h0){var G=e.unstable_now();switch(typeof h0=="object"&&h0!==null?(h0=h0.delay,h0=typeof h0=="number"&&0<h0?G+h0:G):h0=G,r0){case 1:var Q=-1;break;case 2:Q=250;break;case 5:Q=1073741823;break;case 4:Q=1e4;break;default:Q=5e3}return Q=h0+Q,r0={id:h++,callback:p0,priorityLevel:r0,startTime:h0,expirationTime:Q,sortIndex:-1},h0>G?(r0.sortIndex=h0,t(f,r0),n(c)===null&&r0===n(f)&&(y?(F(R),R=-1):y=!0,S0(k,h0-G))):(r0.sortIndex=Q,t(c,r0),D||x||(D=!0,s0(T))),r0},e.unstable_shouldYield=z,e.unstable_wrapCallback=function(r0){var p0=g;return function(){var h0=g;g=p0;try{return r0.apply(this,arguments)}finally{g=h0}}}}(scheduler_production_min)),scheduler_production_min}var hasRequiredScheduler;function requireScheduler(){return hasRequiredScheduler||(hasRequiredScheduler=1,scheduler.exports=requireScheduler_production_min()),scheduler.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hasRequiredReactDom_production_min;function requireReactDom_production_min(){if(hasRequiredReactDom_production_min)return reactDom_production_min;hasRequiredReactDom_production_min=1;var e=requireReact(),t=requireScheduler();function n(a){for(var u="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=1;d<arguments.length;d++)u+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+a+"; visit "+u+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var r=new Set,i={};function s(a,u){o(a,u),o(a+"Capture",u)}function o(a,u){for(i[a]=u,a=0;a<u.length;a++)r.add(u[a])}var l=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),c=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},p={};function g(a){return c.call(p,a)?!0:c.call(h,a)?!1:f.test(a)?p[a]=!0:(h[a]=!0,!1)}function x(a,u,d,_){if(d!==null&&d.type===0)return!1;switch(typeof u){case"function":case"symbol":return!0;case"boolean":return _?!1:d!==null?!d.acceptsBooleans:(a=a.toLowerCase().slice(0,5),a!=="data-"&&a!=="aria-");default:return!1}}function D(a,u,d,_){if(u===null||typeof u>"u"||x(a,u,d,_))return!0;if(_)return!1;if(d!==null)switch(d.type){case 3:return!u;case 4:return u===!1;case 5:return isNaN(u);case 6:return isNaN(u)||1>u}return!1}function y(a,u,d,_,C,I,U){this.acceptsBooleans=u===2||u===3||u===4,this.attributeName=_,this.attributeNamespace=C,this.mustUseProperty=d,this.propertyName=a,this.type=u,this.sanitizeURL=I,this.removeEmptyString=U}var E={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){E[a]=new y(a,0,!1,a,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var u=a[0];E[u]=new y(u,1,!1,a[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(a){E[a]=new y(a,2,!1,a.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){E[a]=new y(a,2,!1,a,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){E[a]=new y(a,3,!1,a.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(a){E[a]=new y(a,3,!0,a,null,!1,!1)}),["capture","download"].forEach(function(a){E[a]=new y(a,4,!1,a,null,!1,!1)}),["cols","rows","size","span"].forEach(function(a){E[a]=new y(a,6,!1,a,null,!1,!1)}),["rowSpan","start"].forEach(function(a){E[a]=new y(a,5,!1,a.toLowerCase(),null,!1,!1)});var F=/[\-:]([a-z])/g;function B(a){return a[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var u=a.replace(F,B);E[u]=new y(u,1,!1,a,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var u=a.replace(F,B);E[u]=new y(u,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(a){var u=a.replace(F,B);E[u]=new y(u,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(a){E[a]=new y(a,1,!1,a.toLowerCase(),null,!1,!1)}),E.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(a){E[a]=new y(a,1,!1,a.toLowerCase(),null,!0,!0)});function M(a,u,d,_){var C=E.hasOwnProperty(u)?E[u]:null;(C!==null?C.type!==0:_||!(2<u.length)||u[0]!=="o"&&u[0]!=="O"||u[1]!=="n"&&u[1]!=="N")&&(D(u,d,C,_)&&(d=null),_||C===null?g(u)&&(d===null?a.removeAttribute(u):a.setAttribute(u,""+d)):C.mustUseProperty?a[C.propertyName]=d===null?C.type===3?!1:"":d:(u=C.attributeName,_=C.attributeNamespace,d===null?a.removeAttribute(u):(C=C.type,d=C===3||C===4&&d===!0?"":""+d,_?a.setAttributeNS(_,u,d):a.setAttribute(u,d))))}var k=e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,T=Symbol.for("react.element"),N=Symbol.for("react.portal"),$=Symbol.for("react.fragment"),R=Symbol.for("react.strict_mode"),O=Symbol.for("react.profiler"),L=Symbol.for("react.provider"),z=Symbol.for("react.context"),X=Symbol.for("react.forward_ref"),o0=Symbol.for("react.suspense"),Z=Symbol.for("react.suspense_list"),n0=Symbol.for("react.memo"),s0=Symbol.for("react.lazy"),S0=Symbol.for("react.offscreen"),r0=Symbol.iterator;function p0(a){return a===null||typeof a!="object"?null:(a=r0&&a[r0]||a["@@iterator"],typeof a=="function"?a:null)}var h0=Object.assign,G;function Q(a){if(G===void 0)try{throw Error()}catch(d){var u=d.stack.trim().match(/\n( *(at )?)/);G=u&&u[1]||""}return`
`+G+a}var M0=!1;function C0(a,u){if(!a||M0)return"";M0=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(u)if(u=function(){throw Error()},Object.defineProperty(u.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(u,[])}catch(b0){var _=b0}Reflect.construct(a,[],u)}else{try{u.call()}catch(b0){_=b0}a.call(u.prototype)}else{try{throw Error()}catch(b0){_=b0}a()}}catch(b0){if(b0&&_&&typeof b0.stack=="string"){for(var C=b0.stack.split(`
`),I=_.stack.split(`
`),U=C.length-1,K=I.length-1;1<=U&&0<=K&&C[U]!==I[K];)K--;for(;1<=U&&0<=K;U--,K--)if(C[U]!==I[K]){if(U!==1||K!==1)do if(U--,K--,0>K||C[U]!==I[K]){var i0=`
`+C[U].replace(" at new "," at ");return a.displayName&&i0.includes("<anonymous>")&&(i0=i0.replace("<anonymous>",a.displayName)),i0}while(1<=U&&0<=K);break}}}finally{M0=!1,Error.prepareStackTrace=d}return(a=a?a.displayName||a.name:"")?Q(a):""}function e0(a){switch(a.tag){case 5:return Q(a.type);case 16:return Q("Lazy");case 13:return Q("Suspense");case 19:return Q("SuspenseList");case 0:case 2:case 15:return a=C0(a.type,!1),a;case 11:return a=C0(a.type.render,!1),a;case 1:return a=C0(a.type,!0),a;default:return""}}function F0(a){if(a==null)return null;if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case $:return"Fragment";case N:return"Portal";case O:return"Profiler";case R:return"StrictMode";case o0:return"Suspense";case Z:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case z:return(a.displayName||"Context")+".Consumer";case L:return(a._context.displayName||"Context")+".Provider";case X:var u=a.render;return a=a.displayName,a||(a=u.displayName||u.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case n0:return u=a.displayName||null,u!==null?u:F0(a.type)||"Memo";case s0:u=a._payload,a=a._init;try{return F0(a(u))}catch{}}return null}function O0(a){var u=a.type;switch(a.tag){case 24:return"Cache";case 9:return(u.displayName||"Context")+".Consumer";case 10:return(u._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=u.render,a=a.displayName||a.name||"",u.displayName||(a!==""?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return u;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return F0(u);case 8:return u===R?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof u=="function")return u.displayName||u.name||null;if(typeof u=="string")return u}return null}function L0(a){switch(typeof a){case"boolean":case"number":case"string":case"undefined":return a;case"object":return a;default:return""}}function B0(a){var u=a.type;return(a=a.nodeName)&&a.toLowerCase()==="input"&&(u==="checkbox"||u==="radio")}function H0(a){var u=B0(a)?"checked":"value",d=Object.getOwnPropertyDescriptor(a.constructor.prototype,u),_=""+a[u];if(!a.hasOwnProperty(u)&&typeof d<"u"&&typeof d.get=="function"&&typeof d.set=="function"){var C=d.get,I=d.set;return Object.defineProperty(a,u,{configurable:!0,get:function(){return C.call(this)},set:function(U){_=""+U,I.call(this,U)}}),Object.defineProperty(a,u,{enumerable:d.enumerable}),{getValue:function(){return _},setValue:function(U){_=""+U},stopTracking:function(){a._valueTracker=null,delete a[u]}}}}function a1(a){a._valueTracker||(a._valueTracker=H0(a))}function c1(a){if(!a)return!1;var u=a._valueTracker;if(!u)return!0;var d=u.getValue(),_="";return a&&(_=B0(a)?a.checked?"true":"false":a.value),a=_,a!==d?(u.setValue(a),!0):!1}function G0(a){if(a=a||(typeof document<"u"?document:void 0),typeof a>"u")return null;try{return a.activeElement||a.body}catch{return a.body}}function j0(a,u){var d=u.checked;return h0({},u,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:d??a._wrapperState.initialChecked})}function P0(a,u){var d=u.defaultValue==null?"":u.defaultValue,_=u.checked!=null?u.checked:u.defaultChecked;d=L0(u.value!=null?u.value:d),a._wrapperState={initialChecked:_,initialValue:d,controlled:u.type==="checkbox"||u.type==="radio"?u.checked!=null:u.value!=null}}function d1(a,u){u=u.checked,u!=null&&M(a,"checked",u,!1)}function r1(a,u){d1(a,u);var d=L0(u.value),_=u.type;if(d!=null)_==="number"?(d===0&&a.value===""||a.value!=d)&&(a.value=""+d):a.value!==""+d&&(a.value=""+d);else if(_==="submit"||_==="reset"){a.removeAttribute("value");return}u.hasOwnProperty("value")?w0(a,u.type,d):u.hasOwnProperty("defaultValue")&&w0(a,u.type,L0(u.defaultValue)),u.checked==null&&u.defaultChecked!=null&&(a.defaultChecked=!!u.defaultChecked)}function u1(a,u,d){if(u.hasOwnProperty("value")||u.hasOwnProperty("defaultValue")){var _=u.type;if(!(_!=="submit"&&_!=="reset"||u.value!==void 0&&u.value!==null))return;u=""+a._wrapperState.initialValue,d||u===a.value||(a.value=u),a.defaultValue=u}d=a.name,d!==""&&(a.name=""),a.defaultChecked=!!a._wrapperState.initialChecked,d!==""&&(a.name=d)}function w0(a,u,d){(u!=="number"||G0(a.ownerDocument)!==a)&&(d==null?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+d&&(a.defaultValue=""+d))}var Z0=Array.isArray;function K0(a,u,d,_){if(a=a.options,u){u={};for(var C=0;C<d.length;C++)u["$"+d[C]]=!0;for(d=0;d<a.length;d++)C=u.hasOwnProperty("$"+a[d].value),a[d].selected!==C&&(a[d].selected=C),C&&_&&(a[d].defaultSelected=!0)}else{for(d=""+L0(d),u=null,C=0;C<a.length;C++){if(a[C].value===d){a[C].selected=!0,_&&(a[C].defaultSelected=!0);return}u!==null||a[C].disabled||(u=a[C])}u!==null&&(u.selected=!0)}}function J0(a,u){if(u.dangerouslySetInnerHTML!=null)throw Error(n(91));return h0({},u,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function H(a,u){var d=u.value;if(d==null){if(d=u.children,u=u.defaultValue,d!=null){if(u!=null)throw Error(n(92));if(Z0(d)){if(1<d.length)throw Error(n(93));d=d[0]}u=d}u==null&&(u=""),d=u}a._wrapperState={initialValue:L0(d)}}function t0(a,u){var d=L0(u.value),_=L0(u.defaultValue);d!=null&&(d=""+d,d!==a.value&&(a.value=d),u.defaultValue==null&&a.defaultValue!==d&&(a.defaultValue=d)),_!=null&&(a.defaultValue=""+_)}function f0(a){var u=a.textContent;u===a._wrapperState.initialValue&&u!==""&&u!==null&&(a.value=u)}function c0(a){switch(a){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function d0(a,u){return a==null||a==="http://www.w3.org/1999/xhtml"?c0(u):a==="http://www.w3.org/2000/svg"&&u==="foreignObject"?"http://www.w3.org/1999/xhtml":a}var g0,y0=function(a){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(u,d,_,C){MSApp.execUnsafeLocalFunction(function(){return a(u,d,_,C)})}:a}(function(a,u){if(a.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in a)a.innerHTML=u;else{for(g0=g0||document.createElement("div"),g0.innerHTML="<svg>"+u.valueOf().toString()+"</svg>",u=g0.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;u.firstChild;)a.appendChild(u.firstChild)}});function E0(a,u){if(u){var d=a.firstChild;if(d&&d===a.lastChild&&d.nodeType===3){d.nodeValue=u;return}}a.textContent=u}var k0={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},_0=["Webkit","ms","Moz","O"];Object.keys(k0).forEach(function(a){_0.forEach(function(u){u=u+a.charAt(0).toUpperCase()+a.substring(1),k0[u]=k0[a]})});function Q0(a,u,d){return u==null||typeof u=="boolean"||u===""?"":d||typeof u!="number"||u===0||k0.hasOwnProperty(a)&&k0[a]?(""+u).trim():u+"px"}function e1(a,u){a=a.style;for(var d in u)if(u.hasOwnProperty(d)){var _=d.indexOf("--")===0,C=Q0(d,u[d],_);d==="float"&&(d="cssFloat"),_?a.setProperty(d,C):a[d]=C}}var p1=h0({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function D1(a,u){if(u){if(p1[a]&&(u.children!=null||u.dangerouslySetInnerHTML!=null))throw Error(n(137,a));if(u.dangerouslySetInnerHTML!=null){if(u.children!=null)throw Error(n(60));if(typeof u.dangerouslySetInnerHTML!="object"||!("__html"in u.dangerouslySetInnerHTML))throw Error(n(61))}if(u.style!=null&&typeof u.style!="object")throw Error(n(62))}}function y1(a,u){if(a.indexOf("-")===-1)return typeof u.is=="string";switch(a){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var C1=null;function R1(a){return a=a.target||a.srcElement||window,a.correspondingUseElement&&(a=a.correspondingUseElement),a.nodeType===3?a.parentNode:a}var K1=null,B1=null,q1=null;function x2(a){if(a=_3(a)){if(typeof K1!="function")throw Error(n(280));var u=a.stateNode;u&&(u=e5(u),K1(a.stateNode,a.type,u))}}function Z1(a){B1?q1?q1.push(a):q1=[a]:B1=a}function I1(){if(B1){var a=B1,u=q1;if(q1=B1=null,x2(a),u)for(a=0;a<u.length;a++)x2(u[a])}}function o2(a,u){return a(u)}function A(){}var v=!1;function w(a,u,d){if(v)return a(u,d);v=!0;try{return o2(a,u,d)}finally{v=!1,(B1!==null||q1!==null)&&(A(),I1())}}function m(a,u){var d=a.stateNode;if(d===null)return null;var _=e5(d);if(_===null)return null;d=_[u];e:switch(u){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(_=!_.disabled)||(a=a.type,_=!(a==="button"||a==="input"||a==="select"||a==="textarea")),a=!_;break e;default:a=!1}if(a)return null;if(d&&typeof d!="function")throw Error(n(231,u,typeof d));return d}var b=!1;if(l)try{var S={};Object.defineProperty(S,"passive",{get:function(){b=!0}}),window.addEventListener("test",S,S),window.removeEventListener("test",S,S)}catch{b=!1}function q(a,u,d,_,C,I,U,K,i0){var b0=Array.prototype.slice.call(arguments,3);try{u.apply(d,b0)}catch(z0){this.onError(z0)}}var j=!1,V=null,Y=!1,u0=null,W={onError:function(a){j=!0,V=a}};function D0(a,u,d,_,C,I,U,K,i0){j=!1,V=null,q.apply(W,arguments)}function I0(a,u,d,_,C,I,U,K,i0){if(D0.apply(this,arguments),j){if(j){var b0=V;j=!1,V=null}else throw Error(n(198));Y||(Y=!0,u0=b0)}}function m0(a){var u=a,d=a;if(a.alternate)for(;u.return;)u=u.return;else{a=u;do u=a,u.flags&4098&&(d=u.return),a=u.return;while(a)}return u.tag===3?d:null}function A0(a){if(a.tag===13){var u=a.memoizedState;if(u===null&&(a=a.alternate,a!==null&&(u=a.memoizedState)),u!==null)return u.dehydrated}return null}function Y0(a){if(m0(a)!==a)throw Error(n(188))}function J(a){var u=a.alternate;if(!u){if(u=m0(a),u===null)throw Error(n(188));return u!==a?null:a}for(var d=a,_=u;;){var C=d.return;if(C===null)break;var I=C.alternate;if(I===null){if(_=C.return,_!==null){d=_;continue}break}if(C.child===I.child){for(I=C.child;I;){if(I===d)return Y0(C),a;if(I===_)return Y0(C),u;I=I.sibling}throw Error(n(188))}if(d.return!==_.return)d=C,_=I;else{for(var U=!1,K=C.child;K;){if(K===d){U=!0,d=C,_=I;break}if(K===_){U=!0,_=C,d=I;break}K=K.sibling}if(!U){for(K=I.child;K;){if(K===d){U=!0,d=I,_=C;break}if(K===_){U=!0,_=I,d=C;break}K=K.sibling}if(!U)throw Error(n(189))}}if(d.alternate!==_)throw Error(n(190))}if(d.tag!==3)throw Error(n(188));return d.stateNode.current===d?a:u}function N0(a){return a=J(a),a!==null?W0(a):null}function W0(a){if(a.tag===5||a.tag===6)return a;for(a=a.child;a!==null;){var u=W0(a);if(u!==null)return u;a=a.sibling}return null}var g1=t.unstable_scheduleCallback,m1=t.unstable_cancelCallback,k1=t.unstable_shouldYield,i1=t.unstable_requestPaint,R0=t.unstable_now,_1=t.unstable_getCurrentPriorityLevel,a0=t.unstable_ImmediatePriority,T0=t.unstable_UserBlockingPriority,X0=t.unstable_NormalPriority,U0=t.unstable_LowPriority,N1=t.unstable_IdlePriority,S1=null,E1=null;function O1(a){if(E1&&typeof E1.onCommitFiberRoot=="function")try{E1.onCommitFiberRoot(S1,a,void 0,(a.current.flags&128)===128)}catch{}}var P1=Math.clz32?Math.clz32:F2,E2=Math.log,X1=Math.LN2;function F2(a){return a>>>=0,a===0?32:31-(E2(a)/X1|0)|0}var w2=64,b1=4194304;function j1(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return a}}function t2(a,u){var d=a.pendingLanes;if(d===0)return 0;var _=0,C=a.suspendedLanes,I=a.pingedLanes,U=d&268435455;if(U!==0){var K=U&~C;K!==0?_=j1(K):(I&=U,I!==0&&(_=j1(I)))}else U=d&~C,U!==0?_=j1(U):I!==0&&(_=j1(I));if(_===0)return 0;if(u!==0&&u!==_&&!(u&C)&&(C=_&-_,I=u&-u,C>=I||C===16&&(I&4194240)!==0))return u;if(_&4&&(_|=d&16),u=a.entangledLanes,u!==0)for(a=a.entanglements,u&=_;0<u;)d=31-P1(u),C=1<<d,_|=a[d],u&=~C;return _}function p2(a,u){switch(a){case 1:case 2:case 4:return u+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return u+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function G1(a,u){for(var d=a.suspendedLanes,_=a.pingedLanes,C=a.expirationTimes,I=a.pendingLanes;0<I;){var U=31-P1(I),K=1<<U,i0=C[U];i0===-1?(!(K&d)||K&_)&&(C[U]=p2(K,u)):i0<=u&&(a.expiredLanes|=K),I&=~K}}function n3(a){return a=a.pendingLanes&-1073741825,a!==0?a:a&1073741824?1073741824:0}function N3(){var a=w2;return w2<<=1,!(w2&4194240)&&(w2=64),a}function r3(a){for(var u=[],d=0;31>d;d++)u.push(a);return u}function _4(a,u,d){a.pendingLanes|=u,u!==536870912&&(a.suspendedLanes=0,a.pingedLanes=0),a=a.eventTimes,u=31-P1(u),a[u]=d}function z5(a,u){var d=a.pendingLanes&~u;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.expiredLanes&=u,a.mutableReadLanes&=u,a.entangledLanes&=u,u=a.entanglements;var _=a.eventTimes;for(a=a.expirationTimes;0<d;){var C=31-P1(d),I=1<<C;u[C]=0,_[C]=-1,a[C]=-1,d&=~I}}function i3(a,u){var d=a.entangledLanes|=u;for(a=a.entanglements;d;){var _=31-P1(d),C=1<<_;C&u|a[_]&u&&(a[_]|=u),d&=~C}}var T1=0;function O3(a){return a&=-a,1<a?4<a?a&268435455?16:536870912:4:1}var $3,U5,_7,b7,D7,q5=!1,L3=[],t4=null,n4=null,r4=null,s3=new Map,o3=new Map,i4=[],j9="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function E7(a,u){switch(a){case"focusin":case"focusout":t4=null;break;case"dragenter":case"dragleave":n4=null;break;case"mouseover":case"mouseout":r4=null;break;case"pointerover":case"pointerout":s3.delete(u.pointerId);break;case"gotpointercapture":case"lostpointercapture":o3.delete(u.pointerId)}}function a3(a,u,d,_,C,I){return a===null||a.nativeEvent!==I?(a={blockedOn:u,domEventName:d,eventSystemFlags:_,nativeEvent:I,targetContainers:[C]},u!==null&&(u=_3(u),u!==null&&U5(u)),a):(a.eventSystemFlags|=_,u=a.targetContainers,C!==null&&u.indexOf(C)===-1&&u.push(C),a)}function H9(a,u,d,_,C){switch(u){case"focusin":return t4=a3(t4,a,u,d,_,C),!0;case"dragenter":return n4=a3(n4,a,u,d,_,C),!0;case"mouseover":return r4=a3(r4,a,u,d,_,C),!0;case"pointerover":var I=C.pointerId;return s3.set(I,a3(s3.get(I)||null,a,u,d,_,C)),!0;case"gotpointercapture":return I=C.pointerId,o3.set(I,a3(o3.get(I)||null,a,u,d,_,C)),!0}return!1}function S7(a){var u=b4(a.target);if(u!==null){var d=m0(u);if(d!==null){if(u=d.tag,u===13){if(u=A0(d),u!==null){a.blockedOn=u,D7(a.priority,function(){_7(d)});return}}else if(u===3&&d.stateNode.current.memoizedState.isDehydrated){a.blockedOn=d.tag===3?d.stateNode.containerInfo:null;return}}}a.blockedOn=null}function z3(a){if(a.blockedOn!==null)return!1;for(var u=a.targetContainers;0<u.length;){var d=H5(a.domEventName,a.eventSystemFlags,u[0],a.nativeEvent);if(d===null){d=a.nativeEvent;var _=new d.constructor(d.type,d);C1=_,d.target.dispatchEvent(_),C1=null}else return u=_3(d),u!==null&&U5(u),a.blockedOn=d,!1;u.shift()}return!0}function A7(a,u,d){z3(a)&&d.delete(u)}function V9(){q5=!1,t4!==null&&z3(t4)&&(t4=null),n4!==null&&z3(n4)&&(n4=null),r4!==null&&z3(r4)&&(r4=null),s3.forEach(A7),o3.forEach(A7)}function l3(a,u){a.blockedOn===u&&(a.blockedOn=null,q5||(q5=!0,t.unstable_scheduleCallback(t.unstable_NormalPriority,V9)))}function u3(a){function u(C){return l3(C,a)}if(0<L3.length){l3(L3[0],a);for(var d=1;d<L3.length;d++){var _=L3[d];_.blockedOn===a&&(_.blockedOn=null)}}for(t4!==null&&l3(t4,a),n4!==null&&l3(n4,a),r4!==null&&l3(r4,a),s3.forEach(u),o3.forEach(u),d=0;d<i4.length;d++)_=i4[d],_.blockedOn===a&&(_.blockedOn=null);for(;0<i4.length&&(d=i4[0],d.blockedOn===null);)S7(d),d.blockedOn===null&&i4.shift()}var R4=k.ReactCurrentBatchConfig,U3=!0;function Y9(a,u,d,_){var C=T1,I=R4.transition;R4.transition=null;try{T1=1,j5(a,u,d,_)}finally{T1=C,R4.transition=I}}function X9(a,u,d,_){var C=T1,I=R4.transition;R4.transition=null;try{T1=4,j5(a,u,d,_)}finally{T1=C,R4.transition=I}}function j5(a,u,d,_){if(U3){var C=H5(a,u,d,_);if(C===null)a6(a,u,_,q3,d),E7(a,_);else if(H9(C,a,u,d,_))_.stopPropagation();else if(E7(a,_),u&4&&-1<j9.indexOf(a)){for(;C!==null;){var I=_3(C);if(I!==null&&$3(I),I=H5(a,u,d,_),I===null&&a6(a,u,_,q3,d),I===C)break;C=I}C!==null&&_.stopPropagation()}else a6(a,u,_,null,d)}}var q3=null;function H5(a,u,d,_){if(q3=null,a=R1(_),a=b4(a),a!==null)if(u=m0(a),u===null)a=null;else if(d=u.tag,d===13){if(a=A0(u),a!==null)return a;a=null}else if(d===3){if(u.stateNode.current.memoizedState.isDehydrated)return u.tag===3?u.stateNode.containerInfo:null;a=null}else u!==a&&(a=null);return q3=a,null}function C7(a){switch(a){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(_1()){case a0:return 1;case T0:return 4;case X0:case U0:return 16;case N1:return 536870912;default:return 16}default:return 16}}var s4=null,V5=null,j3=null;function M7(){if(j3)return j3;var a,u=V5,d=u.length,_,C="value"in s4?s4.value:s4.textContent,I=C.length;for(a=0;a<d&&u[a]===C[a];a++);var U=d-a;for(_=1;_<=U&&u[d-_]===C[I-_];_++);return j3=C.slice(a,1<_?1-_:void 0)}function H3(a){var u=a.keyCode;return"charCode"in a?(a=a.charCode,a===0&&u===13&&(a=13)):a=u,a===10&&(a=13),32<=a||a===13?a:0}function V3(){return!0}function F7(){return!1}function S2(a){function u(d,_,C,I,U){this._reactName=d,this._targetInst=C,this.type=_,this.nativeEvent=I,this.target=U,this.currentTarget=null;for(var K in a)a.hasOwnProperty(K)&&(d=a[K],this[K]=d?d(I):I[K]);return this.isDefaultPrevented=(I.defaultPrevented!=null?I.defaultPrevented:I.returnValue===!1)?V3:F7,this.isPropagationStopped=F7,this}return h0(u.prototype,{preventDefault:function(){this.defaultPrevented=!0;var d=this.nativeEvent;d&&(d.preventDefault?d.preventDefault():typeof d.returnValue!="unknown"&&(d.returnValue=!1),this.isDefaultPrevented=V3)},stopPropagation:function(){var d=this.nativeEvent;d&&(d.stopPropagation?d.stopPropagation():typeof d.cancelBubble!="unknown"&&(d.cancelBubble=!0),this.isPropagationStopped=V3)},persist:function(){},isPersistent:V3}),u}var B4={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Y5=S2(B4),c3=h0({},B4,{view:0,detail:0}),G9=S2(c3),X5,G5,f3,Y3=h0({},c3,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:K5,button:0,buttons:0,relatedTarget:function(a){return a.relatedTarget===void 0?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){return"movementX"in a?a.movementX:(a!==f3&&(f3&&a.type==="mousemove"?(X5=a.screenX-f3.screenX,G5=a.screenY-f3.screenY):G5=X5=0,f3=a),X5)},movementY:function(a){return"movementY"in a?a.movementY:G5}}),k7=S2(Y3),W9=h0({},Y3,{dataTransfer:0}),K9=S2(W9),Z9=h0({},c3,{relatedTarget:0}),W5=S2(Z9),Q9=h0({},B4,{animationName:0,elapsedTime:0,pseudoElement:0}),J9=S2(Q9),ee=h0({},B4,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),te=S2(ee),ne=h0({},B4,{data:0}),T7=S2(ne),re={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ie={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},se={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function oe(a){var u=this.nativeEvent;return u.getModifierState?u.getModifierState(a):(a=se[a])?!!u[a]:!1}function K5(){return oe}var ae=h0({},c3,{key:function(a){if(a.key){var u=re[a.key]||a.key;if(u!=="Unidentified")return u}return a.type==="keypress"?(a=H3(a),a===13?"Enter":String.fromCharCode(a)):a.type==="keydown"||a.type==="keyup"?ie[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:K5,charCode:function(a){return a.type==="keypress"?H3(a):0},keyCode:function(a){return a.type==="keydown"||a.type==="keyup"?a.keyCode:0},which:function(a){return a.type==="keypress"?H3(a):a.type==="keydown"||a.type==="keyup"?a.keyCode:0}}),le=S2(ae),ue=h0({},Y3,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),I7=S2(ue),ce=h0({},c3,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:K5}),fe=S2(ce),he=h0({},B4,{propertyName:0,elapsedTime:0,pseudoElement:0}),de=S2(he),pe=h0({},Y3,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),ge=S2(pe),me=[9,13,27,32],Z5=l&&"CompositionEvent"in window,h3=null;l&&"documentMode"in document&&(h3=document.documentMode);var xe=l&&"TextEvent"in window&&!h3,P7=l&&(!Z5||h3&&8<h3&&11>=h3),R7=" ",B7=!1;function N7(a,u){switch(a){case"keyup":return me.indexOf(u.keyCode)!==-1;case"keydown":return u.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function O7(a){return a=a.detail,typeof a=="object"&&"data"in a?a.data:null}var N4=!1;function we(a,u){switch(a){case"compositionend":return O7(u);case"keypress":return u.which!==32?null:(B7=!0,R7);case"textInput":return a=u.data,a===R7&&B7?null:a;default:return null}}function ve(a,u){if(N4)return a==="compositionend"||!Z5&&N7(a,u)?(a=M7(),j3=V5=s4=null,N4=!1,a):null;switch(a){case"paste":return null;case"keypress":if(!(u.ctrlKey||u.altKey||u.metaKey)||u.ctrlKey&&u.altKey){if(u.char&&1<u.char.length)return u.char;if(u.which)return String.fromCharCode(u.which)}return null;case"compositionend":return P7&&u.locale!=="ko"?null:u.data;default:return null}}var ye={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $7(a){var u=a&&a.nodeName&&a.nodeName.toLowerCase();return u==="input"?!!ye[a.type]:u==="textarea"}function L7(a,u,d,_){Z1(_),u=Z3(u,"onChange"),0<u.length&&(d=new Y5("onChange","change",null,d,_),a.push({event:d,listeners:u}))}var d3=null,p3=null;function _e(a){r8(a,0)}function X3(a){var u=U4(a);if(c1(u))return a}function be(a,u){if(a==="change")return u}var z7=!1;if(l){var Q5;if(l){var J5="oninput"in document;if(!J5){var U7=document.createElement("div");U7.setAttribute("oninput","return;"),J5=typeof U7.oninput=="function"}Q5=J5}else Q5=!1;z7=Q5&&(!document.documentMode||9<document.documentMode)}function q7(){d3&&(d3.detachEvent("onpropertychange",j7),p3=d3=null)}function j7(a){if(a.propertyName==="value"&&X3(p3)){var u=[];L7(u,p3,a,R1(a)),w(_e,u)}}function De(a,u,d){a==="focusin"?(q7(),d3=u,p3=d,d3.attachEvent("onpropertychange",j7)):a==="focusout"&&q7()}function Ee(a){if(a==="selectionchange"||a==="keyup"||a==="keydown")return X3(p3)}function Se(a,u){if(a==="click")return X3(u)}function Ae(a,u){if(a==="input"||a==="change")return X3(u)}function Ce(a,u){return a===u&&(a!==0||1/a===1/u)||a!==a&&u!==u}var N2=typeof Object.is=="function"?Object.is:Ce;function g3(a,u){if(N2(a,u))return!0;if(typeof a!="object"||a===null||typeof u!="object"||u===null)return!1;var d=Object.keys(a),_=Object.keys(u);if(d.length!==_.length)return!1;for(_=0;_<d.length;_++){var C=d[_];if(!c.call(u,C)||!N2(a[C],u[C]))return!1}return!0}function H7(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function V7(a,u){var d=H7(a);a=0;for(var _;d;){if(d.nodeType===3){if(_=a+d.textContent.length,a<=u&&_>=u)return{node:d,offset:u-a};a=_}e:{for(;d;){if(d.nextSibling){d=d.nextSibling;break e}d=d.parentNode}d=void 0}d=H7(d)}}function Y7(a,u){return a&&u?a===u?!0:a&&a.nodeType===3?!1:u&&u.nodeType===3?Y7(a,u.parentNode):"contains"in a?a.contains(u):a.compareDocumentPosition?!!(a.compareDocumentPosition(u)&16):!1:!1}function X7(){for(var a=window,u=G0();u instanceof a.HTMLIFrameElement;){try{var d=typeof u.contentWindow.location.href=="string"}catch{d=!1}if(d)a=u.contentWindow;else break;u=G0(a.document)}return u}function e6(a){var u=a&&a.nodeName&&a.nodeName.toLowerCase();return u&&(u==="input"&&(a.type==="text"||a.type==="search"||a.type==="tel"||a.type==="url"||a.type==="password")||u==="textarea"||a.contentEditable==="true")}function Me(a){var u=X7(),d=a.focusedElem,_=a.selectionRange;if(u!==d&&d&&d.ownerDocument&&Y7(d.ownerDocument.documentElement,d)){if(_!==null&&e6(d)){if(u=_.start,a=_.end,a===void 0&&(a=u),"selectionStart"in d)d.selectionStart=u,d.selectionEnd=Math.min(a,d.value.length);else if(a=(u=d.ownerDocument||document)&&u.defaultView||window,a.getSelection){a=a.getSelection();var C=d.textContent.length,I=Math.min(_.start,C);_=_.end===void 0?I:Math.min(_.end,C),!a.extend&&I>_&&(C=_,_=I,I=C),C=V7(d,I);var U=V7(d,_);C&&U&&(a.rangeCount!==1||a.anchorNode!==C.node||a.anchorOffset!==C.offset||a.focusNode!==U.node||a.focusOffset!==U.offset)&&(u=u.createRange(),u.setStart(C.node,C.offset),a.removeAllRanges(),I>_?(a.addRange(u),a.extend(U.node,U.offset)):(u.setEnd(U.node,U.offset),a.addRange(u)))}}for(u=[],a=d;a=a.parentNode;)a.nodeType===1&&u.push({element:a,left:a.scrollLeft,top:a.scrollTop});for(typeof d.focus=="function"&&d.focus(),d=0;d<u.length;d++)a=u[d],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}var Fe=l&&"documentMode"in document&&11>=document.documentMode,O4=null,t6=null,m3=null,n6=!1;function G7(a,u,d){var _=d.window===d?d.document:d.nodeType===9?d:d.ownerDocument;n6||O4==null||O4!==G0(_)||(_=O4,"selectionStart"in _&&e6(_)?_={start:_.selectionStart,end:_.selectionEnd}:(_=(_.ownerDocument&&_.ownerDocument.defaultView||window).getSelection(),_={anchorNode:_.anchorNode,anchorOffset:_.anchorOffset,focusNode:_.focusNode,focusOffset:_.focusOffset}),m3&&g3(m3,_)||(m3=_,_=Z3(t6,"onSelect"),0<_.length&&(u=new Y5("onSelect","select",null,u,d),a.push({event:u,listeners:_}),u.target=O4)))}function G3(a,u){var d={};return d[a.toLowerCase()]=u.toLowerCase(),d["Webkit"+a]="webkit"+u,d["Moz"+a]="moz"+u,d}var $4={animationend:G3("Animation","AnimationEnd"),animationiteration:G3("Animation","AnimationIteration"),animationstart:G3("Animation","AnimationStart"),transitionend:G3("Transition","TransitionEnd")},r6={},W7={};l&&(W7=document.createElement("div").style,"AnimationEvent"in window||(delete $4.animationend.animation,delete $4.animationiteration.animation,delete $4.animationstart.animation),"TransitionEvent"in window||delete $4.transitionend.transition);function W3(a){if(r6[a])return r6[a];if(!$4[a])return a;var u=$4[a],d;for(d in u)if(u.hasOwnProperty(d)&&d in W7)return r6[a]=u[d];return a}var K7=W3("animationend"),Z7=W3("animationiteration"),Q7=W3("animationstart"),J7=W3("transitionend"),e8=new Map,t8="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function o4(a,u){e8.set(a,u),s(u,[a])}for(var i6=0;i6<t8.length;i6++){var s6=t8[i6],ke=s6.toLowerCase(),Te=s6[0].toUpperCase()+s6.slice(1);o4(ke,"on"+Te)}o4(K7,"onAnimationEnd"),o4(Z7,"onAnimationIteration"),o4(Q7,"onAnimationStart"),o4("dblclick","onDoubleClick"),o4("focusin","onFocus"),o4("focusout","onBlur"),o4(J7,"onTransitionEnd"),o("onMouseEnter",["mouseout","mouseover"]),o("onMouseLeave",["mouseout","mouseover"]),o("onPointerEnter",["pointerout","pointerover"]),o("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var x3="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ie=new Set("cancel close invalid load scroll toggle".split(" ").concat(x3));function n8(a,u,d){var _=a.type||"unknown-event";a.currentTarget=d,I0(_,u,void 0,a),a.currentTarget=null}function r8(a,u){u=(u&4)!==0;for(var d=0;d<a.length;d++){var _=a[d],C=_.event;_=_.listeners;e:{var I=void 0;if(u)for(var U=_.length-1;0<=U;U--){var K=_[U],i0=K.instance,b0=K.currentTarget;if(K=K.listener,i0!==I&&C.isPropagationStopped())break e;n8(C,K,b0),I=i0}else for(U=0;U<_.length;U++){if(K=_[U],i0=K.instance,b0=K.currentTarget,K=K.listener,i0!==I&&C.isPropagationStopped())break e;n8(C,K,b0),I=i0}}}if(Y)throw a=u0,Y=!1,u0=null,a}function L1(a,u){var d=u[d6];d===void 0&&(d=u[d6]=new Set);var _=a+"__bubble";d.has(_)||(i8(u,a,2,!1),d.add(_))}function o6(a,u,d){var _=0;u&&(_|=4),i8(d,a,_,u)}var K3="_reactListening"+Math.random().toString(36).slice(2);function w3(a){if(!a[K3]){a[K3]=!0,r.forEach(function(d){d!=="selectionchange"&&(Ie.has(d)||o6(d,!1,a),o6(d,!0,a))});var u=a.nodeType===9?a:a.ownerDocument;u===null||u[K3]||(u[K3]=!0,o6("selectionchange",!1,u))}}function i8(a,u,d,_){switch(C7(u)){case 1:var C=Y9;break;case 4:C=X9;break;default:C=j5}d=C.bind(null,u,d,a),C=void 0,!b||u!=="touchstart"&&u!=="touchmove"&&u!=="wheel"||(C=!0),_?C!==void 0?a.addEventListener(u,d,{capture:!0,passive:C}):a.addEventListener(u,d,!0):C!==void 0?a.addEventListener(u,d,{passive:C}):a.addEventListener(u,d,!1)}function a6(a,u,d,_,C){var I=_;if(!(u&1)&&!(u&2)&&_!==null)e:for(;;){if(_===null)return;var U=_.tag;if(U===3||U===4){var K=_.stateNode.containerInfo;if(K===C||K.nodeType===8&&K.parentNode===C)break;if(U===4)for(U=_.return;U!==null;){var i0=U.tag;if((i0===3||i0===4)&&(i0=U.stateNode.containerInfo,i0===C||i0.nodeType===8&&i0.parentNode===C))return;U=U.return}for(;K!==null;){if(U=b4(K),U===null)return;if(i0=U.tag,i0===5||i0===6){_=I=U;continue e}K=K.parentNode}}_=_.return}w(function(){var b0=I,z0=R1(d),q0=[];e:{var $0=e8.get(a);if($0!==void 0){var t1=Y5,o1=a;switch(a){case"keypress":if(H3(d)===0)break e;case"keydown":case"keyup":t1=le;break;case"focusin":o1="focus",t1=W5;break;case"focusout":o1="blur",t1=W5;break;case"beforeblur":case"afterblur":t1=W5;break;case"click":if(d.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t1=k7;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t1=K9;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t1=fe;break;case K7:case Z7:case Q7:t1=J9;break;case J7:t1=de;break;case"scroll":t1=G9;break;case"wheel":t1=ge;break;case"copy":case"cut":case"paste":t1=te;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t1=I7}var l1=(u&4)!==0,W1=!l1&&a==="scroll",x0=l1?$0!==null?$0+"Capture":null:$0;l1=[];for(var l0=b0,v0;l0!==null;){v0=l0;var V0=v0.stateNode;if(v0.tag===5&&V0!==null&&(v0=V0,x0!==null&&(V0=m(l0,x0),V0!=null&&l1.push(v3(l0,V0,v0)))),W1)break;l0=l0.return}0<l1.length&&($0=new t1($0,o1,null,d,z0),q0.push({event:$0,listeners:l1}))}}if(!(u&7)){e:{if($0=a==="mouseover"||a==="pointerover",t1=a==="mouseout"||a==="pointerout",$0&&d!==C1&&(o1=d.relatedTarget||d.fromElement)&&(b4(o1)||o1[X2]))break e;if((t1||$0)&&($0=z0.window===z0?z0:($0=z0.ownerDocument)?$0.defaultView||$0.parentWindow:window,t1?(o1=d.relatedTarget||d.toElement,t1=b0,o1=o1?b4(o1):null,o1!==null&&(W1=m0(o1),o1!==W1||o1.tag!==5&&o1.tag!==6)&&(o1=null)):(t1=null,o1=b0),t1!==o1)){if(l1=k7,V0="onMouseLeave",x0="onMouseEnter",l0="mouse",(a==="pointerout"||a==="pointerover")&&(l1=I7,V0="onPointerLeave",x0="onPointerEnter",l0="pointer"),W1=t1==null?$0:U4(t1),v0=o1==null?$0:U4(o1),$0=new l1(V0,l0+"leave",t1,d,z0),$0.target=W1,$0.relatedTarget=v0,V0=null,b4(z0)===b0&&(l1=new l1(x0,l0+"enter",o1,d,z0),l1.target=v0,l1.relatedTarget=W1,V0=l1),W1=V0,t1&&o1)t:{for(l1=t1,x0=o1,l0=0,v0=l1;v0;v0=L4(v0))l0++;for(v0=0,V0=x0;V0;V0=L4(V0))v0++;for(;0<l0-v0;)l1=L4(l1),l0--;for(;0<v0-l0;)x0=L4(x0),v0--;for(;l0--;){if(l1===x0||x0!==null&&l1===x0.alternate)break t;l1=L4(l1),x0=L4(x0)}l1=null}else l1=null;t1!==null&&s8(q0,$0,t1,l1,!1),o1!==null&&W1!==null&&s8(q0,W1,o1,l1,!0)}}e:{if($0=b0?U4(b0):window,t1=$0.nodeName&&$0.nodeName.toLowerCase(),t1==="select"||t1==="input"&&$0.type==="file")var f1=be;else if($7($0))if(z7)f1=Ae;else{f1=Ee;var x1=De}else(t1=$0.nodeName)&&t1.toLowerCase()==="input"&&($0.type==="checkbox"||$0.type==="radio")&&(f1=Se);if(f1&&(f1=f1(a,b0))){L7(q0,f1,d,z0);break e}x1&&x1(a,$0,b0),a==="focusout"&&(x1=$0._wrapperState)&&x1.controlled&&$0.type==="number"&&w0($0,"number",$0.value)}switch(x1=b0?U4(b0):window,a){case"focusin":($7(x1)||x1.contentEditable==="true")&&(O4=x1,t6=b0,m3=null);break;case"focusout":m3=t6=O4=null;break;case"mousedown":n6=!0;break;case"contextmenu":case"mouseup":case"dragend":n6=!1,G7(q0,d,z0);break;case"selectionchange":if(Fe)break;case"keydown":case"keyup":G7(q0,d,z0)}var w1;if(Z5)e:{switch(a){case"compositionstart":var v1="onCompositionStart";break e;case"compositionend":v1="onCompositionEnd";break e;case"compositionupdate":v1="onCompositionUpdate";break e}v1=void 0}else N4?N7(a,d)&&(v1="onCompositionEnd"):a==="keydown"&&d.keyCode===229&&(v1="onCompositionStart");v1&&(P7&&d.locale!=="ko"&&(N4||v1!=="onCompositionStart"?v1==="onCompositionEnd"&&N4&&(w1=M7()):(s4=z0,V5="value"in s4?s4.value:s4.textContent,N4=!0)),x1=Z3(b0,v1),0<x1.length&&(v1=new T7(v1,a,null,d,z0),q0.push({event:v1,listeners:x1}),w1?v1.data=w1:(w1=O7(d),w1!==null&&(v1.data=w1)))),(w1=xe?we(a,d):ve(a,d))&&(b0=Z3(b0,"onBeforeInput"),0<b0.length&&(z0=new T7("onBeforeInput","beforeinput",null,d,z0),q0.push({event:z0,listeners:b0}),z0.data=w1))}r8(q0,u)})}function v3(a,u,d){return{instance:a,listener:u,currentTarget:d}}function Z3(a,u){for(var d=u+"Capture",_=[];a!==null;){var C=a,I=C.stateNode;C.tag===5&&I!==null&&(C=I,I=m(a,d),I!=null&&_.unshift(v3(a,I,C)),I=m(a,u),I!=null&&_.push(v3(a,I,C))),a=a.return}return _}function L4(a){if(a===null)return null;do a=a.return;while(a&&a.tag!==5);return a||null}function s8(a,u,d,_,C){for(var I=u._reactName,U=[];d!==null&&d!==_;){var K=d,i0=K.alternate,b0=K.stateNode;if(i0!==null&&i0===_)break;K.tag===5&&b0!==null&&(K=b0,C?(i0=m(d,I),i0!=null&&U.unshift(v3(d,i0,K))):C||(i0=m(d,I),i0!=null&&U.push(v3(d,i0,K)))),d=d.return}U.length!==0&&a.push({event:u,listeners:U})}var Pe=/\r\n?/g,Re=/\u0000|\uFFFD/g;function o8(a){return(typeof a=="string"?a:""+a).replace(Pe,`
`).replace(Re,"")}function Q3(a,u,d){if(u=o8(u),o8(a)!==u&&d)throw Error(n(425))}function J3(){}var l6=null,u6=null;function c6(a,u){return a==="textarea"||a==="noscript"||typeof u.children=="string"||typeof u.children=="number"||typeof u.dangerouslySetInnerHTML=="object"&&u.dangerouslySetInnerHTML!==null&&u.dangerouslySetInnerHTML.__html!=null}var f6=typeof setTimeout=="function"?setTimeout:void 0,Be=typeof clearTimeout=="function"?clearTimeout:void 0,a8=typeof Promise=="function"?Promise:void 0,Ne=typeof queueMicrotask=="function"?queueMicrotask:typeof a8<"u"?function(a){return a8.resolve(null).then(a).catch(Oe)}:f6;function Oe(a){setTimeout(function(){throw a})}function h6(a,u){var d=u,_=0;do{var C=d.nextSibling;if(a.removeChild(d),C&&C.nodeType===8)if(d=C.data,d==="/$"){if(_===0){a.removeChild(C),u3(u);return}_--}else d!=="$"&&d!=="$?"&&d!=="$!"||_++;d=C}while(d);u3(u)}function a4(a){for(;a!=null;a=a.nextSibling){var u=a.nodeType;if(u===1||u===3)break;if(u===8){if(u=a.data,u==="$"||u==="$!"||u==="$?")break;if(u==="/$")return null}}return a}function l8(a){a=a.previousSibling;for(var u=0;a;){if(a.nodeType===8){var d=a.data;if(d==="$"||d==="$!"||d==="$?"){if(u===0)return a;u--}else d==="/$"&&u++}a=a.previousSibling}return null}var z4=Math.random().toString(36).slice(2),j2="__reactFiber$"+z4,y3="__reactProps$"+z4,X2="__reactContainer$"+z4,d6="__reactEvents$"+z4,$e="__reactListeners$"+z4,Le="__reactHandles$"+z4;function b4(a){var u=a[j2];if(u)return u;for(var d=a.parentNode;d;){if(u=d[X2]||d[j2]){if(d=u.alternate,u.child!==null||d!==null&&d.child!==null)for(a=l8(a);a!==null;){if(d=a[j2])return d;a=l8(a)}return u}a=d,d=a.parentNode}return null}function _3(a){return a=a[j2]||a[X2],!a||a.tag!==5&&a.tag!==6&&a.tag!==13&&a.tag!==3?null:a}function U4(a){if(a.tag===5||a.tag===6)return a.stateNode;throw Error(n(33))}function e5(a){return a[y3]||null}var p6=[],q4=-1;function l4(a){return{current:a}}function z1(a){0>q4||(a.current=p6[q4],p6[q4]=null,q4--)}function $1(a,u){q4++,p6[q4]=a.current,a.current=u}var u4={},u2=l4(u4),v2=l4(!1),D4=u4;function j4(a,u){var d=a.type.contextTypes;if(!d)return u4;var _=a.stateNode;if(_&&_.__reactInternalMemoizedUnmaskedChildContext===u)return _.__reactInternalMemoizedMaskedChildContext;var C={},I;for(I in d)C[I]=u[I];return _&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=u,a.__reactInternalMemoizedMaskedChildContext=C),C}function y2(a){return a=a.childContextTypes,a!=null}function t5(){z1(v2),z1(u2)}function u8(a,u,d){if(u2.current!==u4)throw Error(n(168));$1(u2,u),$1(v2,d)}function c8(a,u,d){var _=a.stateNode;if(u=u.childContextTypes,typeof _.getChildContext!="function")return d;_=_.getChildContext();for(var C in _)if(!(C in u))throw Error(n(108,O0(a)||"Unknown",C));return h0({},d,_)}function n5(a){return a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||u4,D4=u2.current,$1(u2,a),$1(v2,v2.current),!0}function f8(a,u,d){var _=a.stateNode;if(!_)throw Error(n(169));d?(a=c8(a,u,D4),_.__reactInternalMemoizedMergedChildContext=a,z1(v2),z1(u2),$1(u2,a)):z1(v2),$1(v2,d)}var G2=null,r5=!1,g6=!1;function h8(a){G2===null?G2=[a]:G2.push(a)}function ze(a){r5=!0,h8(a)}function c4(){if(!g6&&G2!==null){g6=!0;var a=0,u=T1;try{var d=G2;for(T1=1;a<d.length;a++){var _=d[a];do _=_(!0);while(_!==null)}G2=null,r5=!1}catch(C){throw G2!==null&&(G2=G2.slice(a+1)),g1(a0,c4),C}finally{T1=u,g6=!1}}return null}var H4=[],V4=0,i5=null,s5=0,k2=[],T2=0,E4=null,W2=1,K2="";function S4(a,u){H4[V4++]=s5,H4[V4++]=i5,i5=a,s5=u}function d8(a,u,d){k2[T2++]=W2,k2[T2++]=K2,k2[T2++]=E4,E4=a;var _=W2;a=K2;var C=32-P1(_)-1;_&=~(1<<C),d+=1;var I=32-P1(u)+C;if(30<I){var U=C-C%5;I=(_&(1<<U)-1).toString(32),_>>=U,C-=U,W2=1<<32-P1(u)+C|d<<C|_,K2=I+a}else W2=1<<I|d<<C|_,K2=a}function m6(a){a.return!==null&&(S4(a,1),d8(a,1,0))}function x6(a){for(;a===i5;)i5=H4[--V4],H4[V4]=null,s5=H4[--V4],H4[V4]=null;for(;a===E4;)E4=k2[--T2],k2[T2]=null,K2=k2[--T2],k2[T2]=null,W2=k2[--T2],k2[T2]=null}var A2=null,C2=null,U1=!1,O2=null;function p8(a,u){var d=B2(5,null,null,0);d.elementType="DELETED",d.stateNode=u,d.return=a,u=a.deletions,u===null?(a.deletions=[d],a.flags|=16):u.push(d)}function g8(a,u){switch(a.tag){case 5:var d=a.type;return u=u.nodeType!==1||d.toLowerCase()!==u.nodeName.toLowerCase()?null:u,u!==null?(a.stateNode=u,A2=a,C2=a4(u.firstChild),!0):!1;case 6:return u=a.pendingProps===""||u.nodeType!==3?null:u,u!==null?(a.stateNode=u,A2=a,C2=null,!0):!1;case 13:return u=u.nodeType!==8?null:u,u!==null?(d=E4!==null?{id:W2,overflow:K2}:null,a.memoizedState={dehydrated:u,treeContext:d,retryLane:1073741824},d=B2(18,null,null,0),d.stateNode=u,d.return=a,a.child=d,A2=a,C2=null,!0):!1;default:return!1}}function w6(a){return(a.mode&1)!==0&&(a.flags&128)===0}function v6(a){if(U1){var u=C2;if(u){var d=u;if(!g8(a,u)){if(w6(a))throw Error(n(418));u=a4(d.nextSibling);var _=A2;u&&g8(a,u)?p8(_,d):(a.flags=a.flags&-4097|2,U1=!1,A2=a)}}else{if(w6(a))throw Error(n(418));a.flags=a.flags&-4097|2,U1=!1,A2=a}}}function m8(a){for(a=a.return;a!==null&&a.tag!==5&&a.tag!==3&&a.tag!==13;)a=a.return;A2=a}function o5(a){if(a!==A2)return!1;if(!U1)return m8(a),U1=!0,!1;var u;if((u=a.tag!==3)&&!(u=a.tag!==5)&&(u=a.type,u=u!=="head"&&u!=="body"&&!c6(a.type,a.memoizedProps)),u&&(u=C2)){if(w6(a))throw x8(),Error(n(418));for(;u;)p8(a,u),u=a4(u.nextSibling)}if(m8(a),a.tag===13){if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(n(317));e:{for(a=a.nextSibling,u=0;a;){if(a.nodeType===8){var d=a.data;if(d==="/$"){if(u===0){C2=a4(a.nextSibling);break e}u--}else d!=="$"&&d!=="$!"&&d!=="$?"||u++}a=a.nextSibling}C2=null}}else C2=A2?a4(a.stateNode.nextSibling):null;return!0}function x8(){for(var a=C2;a;)a=a4(a.nextSibling)}function Y4(){C2=A2=null,U1=!1}function y6(a){O2===null?O2=[a]:O2.push(a)}var Ue=k.ReactCurrentBatchConfig;function b3(a,u,d){if(a=d.ref,a!==null&&typeof a!="function"&&typeof a!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(n(309));var _=d.stateNode}if(!_)throw Error(n(147,a));var C=_,I=""+a;return u!==null&&u.ref!==null&&typeof u.ref=="function"&&u.ref._stringRef===I?u.ref:(u=function(U){var K=C.refs;U===null?delete K[I]:K[I]=U},u._stringRef=I,u)}if(typeof a!="string")throw Error(n(284));if(!d._owner)throw Error(n(290,a))}return a}function a5(a,u){throw a=Object.prototype.toString.call(u),Error(n(31,a==="[object Object]"?"object with keys {"+Object.keys(u).join(", ")+"}":a))}function w8(a){var u=a._init;return u(a._payload)}function v8(a){function u(x0,l0){if(a){var v0=x0.deletions;v0===null?(x0.deletions=[l0],x0.flags|=16):v0.push(l0)}}function d(x0,l0){if(!a)return null;for(;l0!==null;)u(x0,l0),l0=l0.sibling;return null}function _(x0,l0){for(x0=new Map;l0!==null;)l0.key!==null?x0.set(l0.key,l0):x0.set(l0.index,l0),l0=l0.sibling;return x0}function C(x0,l0){return x0=w4(x0,l0),x0.index=0,x0.sibling=null,x0}function I(x0,l0,v0){return x0.index=v0,a?(v0=x0.alternate,v0!==null?(v0=v0.index,v0<l0?(x0.flags|=2,l0):v0):(x0.flags|=2,l0)):(x0.flags|=1048576,l0)}function U(x0){return a&&x0.alternate===null&&(x0.flags|=2),x0}function K(x0,l0,v0,V0){return l0===null||l0.tag!==6?(l0=f7(v0,x0.mode,V0),l0.return=x0,l0):(l0=C(l0,v0),l0.return=x0,l0)}function i0(x0,l0,v0,V0){var f1=v0.type;return f1===$?z0(x0,l0,v0.props.children,V0,v0.key):l0!==null&&(l0.elementType===f1||typeof f1=="object"&&f1!==null&&f1.$$typeof===s0&&w8(f1)===l0.type)?(V0=C(l0,v0.props),V0.ref=b3(x0,l0,v0),V0.return=x0,V0):(V0=T5(v0.type,v0.key,v0.props,null,x0.mode,V0),V0.ref=b3(x0,l0,v0),V0.return=x0,V0)}function b0(x0,l0,v0,V0){return l0===null||l0.tag!==4||l0.stateNode.containerInfo!==v0.containerInfo||l0.stateNode.implementation!==v0.implementation?(l0=h7(v0,x0.mode,V0),l0.return=x0,l0):(l0=C(l0,v0.children||[]),l0.return=x0,l0)}function z0(x0,l0,v0,V0,f1){return l0===null||l0.tag!==7?(l0=P4(v0,x0.mode,V0,f1),l0.return=x0,l0):(l0=C(l0,v0),l0.return=x0,l0)}function q0(x0,l0,v0){if(typeof l0=="string"&&l0!==""||typeof l0=="number")return l0=f7(""+l0,x0.mode,v0),l0.return=x0,l0;if(typeof l0=="object"&&l0!==null){switch(l0.$$typeof){case T:return v0=T5(l0.type,l0.key,l0.props,null,x0.mode,v0),v0.ref=b3(x0,null,l0),v0.return=x0,v0;case N:return l0=h7(l0,x0.mode,v0),l0.return=x0,l0;case s0:var V0=l0._init;return q0(x0,V0(l0._payload),v0)}if(Z0(l0)||p0(l0))return l0=P4(l0,x0.mode,v0,null),l0.return=x0,l0;a5(x0,l0)}return null}function $0(x0,l0,v0,V0){var f1=l0!==null?l0.key:null;if(typeof v0=="string"&&v0!==""||typeof v0=="number")return f1!==null?null:K(x0,l0,""+v0,V0);if(typeof v0=="object"&&v0!==null){switch(v0.$$typeof){case T:return v0.key===f1?i0(x0,l0,v0,V0):null;case N:return v0.key===f1?b0(x0,l0,v0,V0):null;case s0:return f1=v0._init,$0(x0,l0,f1(v0._payload),V0)}if(Z0(v0)||p0(v0))return f1!==null?null:z0(x0,l0,v0,V0,null);a5(x0,v0)}return null}function t1(x0,l0,v0,V0,f1){if(typeof V0=="string"&&V0!==""||typeof V0=="number")return x0=x0.get(v0)||null,K(l0,x0,""+V0,f1);if(typeof V0=="object"&&V0!==null){switch(V0.$$typeof){case T:return x0=x0.get(V0.key===null?v0:V0.key)||null,i0(l0,x0,V0,f1);case N:return x0=x0.get(V0.key===null?v0:V0.key)||null,b0(l0,x0,V0,f1);case s0:var x1=V0._init;return t1(x0,l0,v0,x1(V0._payload),f1)}if(Z0(V0)||p0(V0))return x0=x0.get(v0)||null,z0(l0,x0,V0,f1,null);a5(l0,V0)}return null}function o1(x0,l0,v0,V0){for(var f1=null,x1=null,w1=l0,v1=l0=0,s2=null;w1!==null&&v1<v0.length;v1++){w1.index>v1?(s2=w1,w1=null):s2=w1.sibling;var F1=$0(x0,w1,v0[v1],V0);if(F1===null){w1===null&&(w1=s2);break}a&&w1&&F1.alternate===null&&u(x0,w1),l0=I(F1,l0,v1),x1===null?f1=F1:x1.sibling=F1,x1=F1,w1=s2}if(v1===v0.length)return d(x0,w1),U1&&S4(x0,v1),f1;if(w1===null){for(;v1<v0.length;v1++)w1=q0(x0,v0[v1],V0),w1!==null&&(l0=I(w1,l0,v1),x1===null?f1=w1:x1.sibling=w1,x1=w1);return U1&&S4(x0,v1),f1}for(w1=_(x0,w1);v1<v0.length;v1++)s2=t1(w1,x0,v1,v0[v1],V0),s2!==null&&(a&&s2.alternate!==null&&w1.delete(s2.key===null?v1:s2.key),l0=I(s2,l0,v1),x1===null?f1=s2:x1.sibling=s2,x1=s2);return a&&w1.forEach(function(v4){return u(x0,v4)}),U1&&S4(x0,v1),f1}function l1(x0,l0,v0,V0){var f1=p0(v0);if(typeof f1!="function")throw Error(n(150));if(v0=f1.call(v0),v0==null)throw Error(n(151));for(var x1=f1=null,w1=l0,v1=l0=0,s2=null,F1=v0.next();w1!==null&&!F1.done;v1++,F1=v0.next()){w1.index>v1?(s2=w1,w1=null):s2=w1.sibling;var v4=$0(x0,w1,F1.value,V0);if(v4===null){w1===null&&(w1=s2);break}a&&w1&&v4.alternate===null&&u(x0,w1),l0=I(v4,l0,v1),x1===null?f1=v4:x1.sibling=v4,x1=v4,w1=s2}if(F1.done)return d(x0,w1),U1&&S4(x0,v1),f1;if(w1===null){for(;!F1.done;v1++,F1=v0.next())F1=q0(x0,F1.value,V0),F1!==null&&(l0=I(F1,l0,v1),x1===null?f1=F1:x1.sibling=F1,x1=F1);return U1&&S4(x0,v1),f1}for(w1=_(x0,w1);!F1.done;v1++,F1=v0.next())F1=t1(w1,x0,v1,F1.value,V0),F1!==null&&(a&&F1.alternate!==null&&w1.delete(F1.key===null?v1:F1.key),l0=I(F1,l0,v1),x1===null?f1=F1:x1.sibling=F1,x1=F1);return a&&w1.forEach(function(vt){return u(x0,vt)}),U1&&S4(x0,v1),f1}function W1(x0,l0,v0,V0){if(typeof v0=="object"&&v0!==null&&v0.type===$&&v0.key===null&&(v0=v0.props.children),typeof v0=="object"&&v0!==null){switch(v0.$$typeof){case T:e:{for(var f1=v0.key,x1=l0;x1!==null;){if(x1.key===f1){if(f1=v0.type,f1===$){if(x1.tag===7){d(x0,x1.sibling),l0=C(x1,v0.props.children),l0.return=x0,x0=l0;break e}}else if(x1.elementType===f1||typeof f1=="object"&&f1!==null&&f1.$$typeof===s0&&w8(f1)===x1.type){d(x0,x1.sibling),l0=C(x1,v0.props),l0.ref=b3(x0,x1,v0),l0.return=x0,x0=l0;break e}d(x0,x1);break}else u(x0,x1);x1=x1.sibling}v0.type===$?(l0=P4(v0.props.children,x0.mode,V0,v0.key),l0.return=x0,x0=l0):(V0=T5(v0.type,v0.key,v0.props,null,x0.mode,V0),V0.ref=b3(x0,l0,v0),V0.return=x0,x0=V0)}return U(x0);case N:e:{for(x1=v0.key;l0!==null;){if(l0.key===x1)if(l0.tag===4&&l0.stateNode.containerInfo===v0.containerInfo&&l0.stateNode.implementation===v0.implementation){d(x0,l0.sibling),l0=C(l0,v0.children||[]),l0.return=x0,x0=l0;break e}else{d(x0,l0);break}else u(x0,l0);l0=l0.sibling}l0=h7(v0,x0.mode,V0),l0.return=x0,x0=l0}return U(x0);case s0:return x1=v0._init,W1(x0,l0,x1(v0._payload),V0)}if(Z0(v0))return o1(x0,l0,v0,V0);if(p0(v0))return l1(x0,l0,v0,V0);a5(x0,v0)}return typeof v0=="string"&&v0!==""||typeof v0=="number"?(v0=""+v0,l0!==null&&l0.tag===6?(d(x0,l0.sibling),l0=C(l0,v0),l0.return=x0,x0=l0):(d(x0,l0),l0=f7(v0,x0.mode,V0),l0.return=x0,x0=l0),U(x0)):d(x0,l0)}return W1}var X4=v8(!0),y8=v8(!1),l5=l4(null),u5=null,G4=null,_6=null;function b6(){_6=G4=u5=null}function D6(a){var u=l5.current;z1(l5),a._currentValue=u}function E6(a,u,d){for(;a!==null;){var _=a.alternate;if((a.childLanes&u)!==u?(a.childLanes|=u,_!==null&&(_.childLanes|=u)):_!==null&&(_.childLanes&u)!==u&&(_.childLanes|=u),a===d)break;a=a.return}}function W4(a,u){u5=a,_6=G4=null,a=a.dependencies,a!==null&&a.firstContext!==null&&(a.lanes&u&&(_2=!0),a.firstContext=null)}function I2(a){var u=a._currentValue;if(_6!==a)if(a={context:a,memoizedValue:u,next:null},G4===null){if(u5===null)throw Error(n(308));G4=a,u5.dependencies={lanes:0,firstContext:a}}else G4=G4.next=a;return u}var A4=null;function S6(a){A4===null?A4=[a]:A4.push(a)}function _8(a,u,d,_){var C=u.interleaved;return C===null?(d.next=d,S6(u)):(d.next=C.next,C.next=d),u.interleaved=d,Z2(a,_)}function Z2(a,u){a.lanes|=u;var d=a.alternate;for(d!==null&&(d.lanes|=u),d=a,a=a.return;a!==null;)a.childLanes|=u,d=a.alternate,d!==null&&(d.childLanes|=u),d=a,a=a.return;return d.tag===3?d.stateNode:null}var f4=!1;function A6(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function b8(a,u){a=a.updateQueue,u.updateQueue===a&&(u.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function Q2(a,u){return{eventTime:a,lane:u,tag:0,payload:null,callback:null,next:null}}function h4(a,u,d){var _=a.updateQueue;if(_===null)return null;if(_=_.shared,M1&2){var C=_.pending;return C===null?u.next=u:(u.next=C.next,C.next=u),_.pending=u,Z2(a,d)}return C=_.interleaved,C===null?(u.next=u,S6(_)):(u.next=C.next,C.next=u),_.interleaved=u,Z2(a,d)}function c5(a,u,d){if(u=u.updateQueue,u!==null&&(u=u.shared,(d&4194240)!==0)){var _=u.lanes;_&=a.pendingLanes,d|=_,u.lanes=d,i3(a,d)}}function D8(a,u){var d=a.updateQueue,_=a.alternate;if(_!==null&&(_=_.updateQueue,d===_)){var C=null,I=null;if(d=d.firstBaseUpdate,d!==null){do{var U={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};I===null?C=I=U:I=I.next=U,d=d.next}while(d!==null);I===null?C=I=u:I=I.next=u}else C=I=u;d={baseState:_.baseState,firstBaseUpdate:C,lastBaseUpdate:I,shared:_.shared,effects:_.effects},a.updateQueue=d;return}a=d.lastBaseUpdate,a===null?d.firstBaseUpdate=u:a.next=u,d.lastBaseUpdate=u}function f5(a,u,d,_){var C=a.updateQueue;f4=!1;var I=C.firstBaseUpdate,U=C.lastBaseUpdate,K=C.shared.pending;if(K!==null){C.shared.pending=null;var i0=K,b0=i0.next;i0.next=null,U===null?I=b0:U.next=b0,U=i0;var z0=a.alternate;z0!==null&&(z0=z0.updateQueue,K=z0.lastBaseUpdate,K!==U&&(K===null?z0.firstBaseUpdate=b0:K.next=b0,z0.lastBaseUpdate=i0))}if(I!==null){var q0=C.baseState;U=0,z0=b0=i0=null,K=I;do{var $0=K.lane,t1=K.eventTime;if((_&$0)===$0){z0!==null&&(z0=z0.next={eventTime:t1,lane:0,tag:K.tag,payload:K.payload,callback:K.callback,next:null});e:{var o1=a,l1=K;switch($0=u,t1=d,l1.tag){case 1:if(o1=l1.payload,typeof o1=="function"){q0=o1.call(t1,q0,$0);break e}q0=o1;break e;case 3:o1.flags=o1.flags&-65537|128;case 0:if(o1=l1.payload,$0=typeof o1=="function"?o1.call(t1,q0,$0):o1,$0==null)break e;q0=h0({},q0,$0);break e;case 2:f4=!0}}K.callback!==null&&K.lane!==0&&(a.flags|=64,$0=C.effects,$0===null?C.effects=[K]:$0.push(K))}else t1={eventTime:t1,lane:$0,tag:K.tag,payload:K.payload,callback:K.callback,next:null},z0===null?(b0=z0=t1,i0=q0):z0=z0.next=t1,U|=$0;if(K=K.next,K===null){if(K=C.shared.pending,K===null)break;$0=K,K=$0.next,$0.next=null,C.lastBaseUpdate=$0,C.shared.pending=null}}while(!0);if(z0===null&&(i0=q0),C.baseState=i0,C.firstBaseUpdate=b0,C.lastBaseUpdate=z0,u=C.shared.interleaved,u!==null){C=u;do U|=C.lane,C=C.next;while(C!==u)}else I===null&&(C.shared.lanes=0);F4|=U,a.lanes=U,a.memoizedState=q0}}function E8(a,u,d){if(a=u.effects,u.effects=null,a!==null)for(u=0;u<a.length;u++){var _=a[u],C=_.callback;if(C!==null){if(_.callback=null,_=d,typeof C!="function")throw Error(n(191,C));C.call(_)}}}var D3={},H2=l4(D3),E3=l4(D3),S3=l4(D3);function C4(a){if(a===D3)throw Error(n(174));return a}function C6(a,u){switch($1(S3,u),$1(E3,a),$1(H2,D3),a=u.nodeType,a){case 9:case 11:u=(u=u.documentElement)?u.namespaceURI:d0(null,"");break;default:a=a===8?u.parentNode:u,u=a.namespaceURI||null,a=a.tagName,u=d0(u,a)}z1(H2),$1(H2,u)}function K4(){z1(H2),z1(E3),z1(S3)}function S8(a){C4(S3.current);var u=C4(H2.current),d=d0(u,a.type);u!==d&&($1(E3,a),$1(H2,d))}function M6(a){E3.current===a&&(z1(H2),z1(E3))}var H1=l4(0);function h5(a){for(var u=a;u!==null;){if(u.tag===13){var d=u.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||d.data==="$?"||d.data==="$!"))return u}else if(u.tag===19&&u.memoizedProps.revealOrder!==void 0){if(u.flags&128)return u}else if(u.child!==null){u.child.return=u,u=u.child;continue}if(u===a)break;for(;u.sibling===null;){if(u.return===null||u.return===a)return null;u=u.return}u.sibling.return=u.return,u=u.sibling}return null}var F6=[];function k6(){for(var a=0;a<F6.length;a++)F6[a]._workInProgressVersionPrimary=null;F6.length=0}var d5=k.ReactCurrentDispatcher,T6=k.ReactCurrentBatchConfig,M4=0,V1=null,J1=null,r2=null,p5=!1,A3=!1,C3=0,qe=0;function c2(){throw Error(n(321))}function I6(a,u){if(u===null)return!1;for(var d=0;d<u.length&&d<a.length;d++)if(!N2(a[d],u[d]))return!1;return!0}function P6(a,u,d,_,C,I){if(M4=I,V1=u,u.memoizedState=null,u.updateQueue=null,u.lanes=0,d5.current=a===null||a.memoizedState===null?Ye:Xe,a=d(_,C),A3){I=0;do{if(A3=!1,C3=0,25<=I)throw Error(n(301));I+=1,r2=J1=null,u.updateQueue=null,d5.current=Ge,a=d(_,C)}while(A3)}if(d5.current=x5,u=J1!==null&&J1.next!==null,M4=0,r2=J1=V1=null,p5=!1,u)throw Error(n(300));return a}function R6(){var a=C3!==0;return C3=0,a}function V2(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return r2===null?V1.memoizedState=r2=a:r2=r2.next=a,r2}function P2(){if(J1===null){var a=V1.alternate;a=a!==null?a.memoizedState:null}else a=J1.next;var u=r2===null?V1.memoizedState:r2.next;if(u!==null)r2=u,J1=a;else{if(a===null)throw Error(n(310));J1=a,a={memoizedState:J1.memoizedState,baseState:J1.baseState,baseQueue:J1.baseQueue,queue:J1.queue,next:null},r2===null?V1.memoizedState=r2=a:r2=r2.next=a}return r2}function M3(a,u){return typeof u=="function"?u(a):u}function B6(a){var u=P2(),d=u.queue;if(d===null)throw Error(n(311));d.lastRenderedReducer=a;var _=J1,C=_.baseQueue,I=d.pending;if(I!==null){if(C!==null){var U=C.next;C.next=I.next,I.next=U}_.baseQueue=C=I,d.pending=null}if(C!==null){I=C.next,_=_.baseState;var K=U=null,i0=null,b0=I;do{var z0=b0.lane;if((M4&z0)===z0)i0!==null&&(i0=i0.next={lane:0,action:b0.action,hasEagerState:b0.hasEagerState,eagerState:b0.eagerState,next:null}),_=b0.hasEagerState?b0.eagerState:a(_,b0.action);else{var q0={lane:z0,action:b0.action,hasEagerState:b0.hasEagerState,eagerState:b0.eagerState,next:null};i0===null?(K=i0=q0,U=_):i0=i0.next=q0,V1.lanes|=z0,F4|=z0}b0=b0.next}while(b0!==null&&b0!==I);i0===null?U=_:i0.next=K,N2(_,u.memoizedState)||(_2=!0),u.memoizedState=_,u.baseState=U,u.baseQueue=i0,d.lastRenderedState=_}if(a=d.interleaved,a!==null){C=a;do I=C.lane,V1.lanes|=I,F4|=I,C=C.next;while(C!==a)}else C===null&&(d.lanes=0);return[u.memoizedState,d.dispatch]}function N6(a){var u=P2(),d=u.queue;if(d===null)throw Error(n(311));d.lastRenderedReducer=a;var _=d.dispatch,C=d.pending,I=u.memoizedState;if(C!==null){d.pending=null;var U=C=C.next;do I=a(I,U.action),U=U.next;while(U!==C);N2(I,u.memoizedState)||(_2=!0),u.memoizedState=I,u.baseQueue===null&&(u.baseState=I),d.lastRenderedState=I}return[I,_]}function A8(){}function C8(a,u){var d=V1,_=P2(),C=u(),I=!N2(_.memoizedState,C);if(I&&(_.memoizedState=C,_2=!0),_=_.queue,O6(k8.bind(null,d,_,a),[a]),_.getSnapshot!==u||I||r2!==null&&r2.memoizedState.tag&1){if(d.flags|=2048,F3(9,F8.bind(null,d,_,C,u),void 0,null),i2===null)throw Error(n(349));M4&30||M8(d,u,C)}return C}function M8(a,u,d){a.flags|=16384,a={getSnapshot:u,value:d},u=V1.updateQueue,u===null?(u={lastEffect:null,stores:null},V1.updateQueue=u,u.stores=[a]):(d=u.stores,d===null?u.stores=[a]:d.push(a))}function F8(a,u,d,_){u.value=d,u.getSnapshot=_,T8(u)&&I8(a)}function k8(a,u,d){return d(function(){T8(u)&&I8(a)})}function T8(a){var u=a.getSnapshot;a=a.value;try{var d=u();return!N2(a,d)}catch{return!0}}function I8(a){var u=Z2(a,1);u!==null&&U2(u,a,1,-1)}function P8(a){var u=V2();return typeof a=="function"&&(a=a()),u.memoizedState=u.baseState=a,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:M3,lastRenderedState:a},u.queue=a,a=a.dispatch=Ve.bind(null,V1,a),[u.memoizedState,a]}function F3(a,u,d,_){return a={tag:a,create:u,destroy:d,deps:_,next:null},u=V1.updateQueue,u===null?(u={lastEffect:null,stores:null},V1.updateQueue=u,u.lastEffect=a.next=a):(d=u.lastEffect,d===null?u.lastEffect=a.next=a:(_=d.next,d.next=a,a.next=_,u.lastEffect=a)),a}function R8(){return P2().memoizedState}function g5(a,u,d,_){var C=V2();V1.flags|=a,C.memoizedState=F3(1|u,d,void 0,_===void 0?null:_)}function m5(a,u,d,_){var C=P2();_=_===void 0?null:_;var I=void 0;if(J1!==null){var U=J1.memoizedState;if(I=U.destroy,_!==null&&I6(_,U.deps)){C.memoizedState=F3(u,d,I,_);return}}V1.flags|=a,C.memoizedState=F3(1|u,d,I,_)}function B8(a,u){return g5(8390656,8,a,u)}function O6(a,u){return m5(2048,8,a,u)}function N8(a,u){return m5(4,2,a,u)}function O8(a,u){return m5(4,4,a,u)}function $8(a,u){if(typeof u=="function")return a=a(),u(a),function(){u(null)};if(u!=null)return a=a(),u.current=a,function(){u.current=null}}function L8(a,u,d){return d=d!=null?d.concat([a]):null,m5(4,4,$8.bind(null,u,a),d)}function $6(){}function z8(a,u){var d=P2();u=u===void 0?null:u;var _=d.memoizedState;return _!==null&&u!==null&&I6(u,_[1])?_[0]:(d.memoizedState=[a,u],a)}function U8(a,u){var d=P2();u=u===void 0?null:u;var _=d.memoizedState;return _!==null&&u!==null&&I6(u,_[1])?_[0]:(a=a(),d.memoizedState=[a,u],a)}function q8(a,u,d){return M4&21?(N2(d,u)||(d=N3(),V1.lanes|=d,F4|=d,a.baseState=!0),u):(a.baseState&&(a.baseState=!1,_2=!0),a.memoizedState=d)}function je(a,u){var d=T1;T1=d!==0&&4>d?d:4,a(!0);var _=T6.transition;T6.transition={};try{a(!1),u()}finally{T1=d,T6.transition=_}}function j8(){return P2().memoizedState}function He(a,u,d){var _=m4(a);if(d={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null},H8(a))V8(u,d);else if(d=_8(a,u,d,_),d!==null){var C=m2();U2(d,a,_,C),Y8(d,u,_)}}function Ve(a,u,d){var _=m4(a),C={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null};if(H8(a))V8(u,C);else{var I=a.alternate;if(a.lanes===0&&(I===null||I.lanes===0)&&(I=u.lastRenderedReducer,I!==null))try{var U=u.lastRenderedState,K=I(U,d);if(C.hasEagerState=!0,C.eagerState=K,N2(K,U)){var i0=u.interleaved;i0===null?(C.next=C,S6(u)):(C.next=i0.next,i0.next=C),u.interleaved=C;return}}catch{}finally{}d=_8(a,u,C,_),d!==null&&(C=m2(),U2(d,a,_,C),Y8(d,u,_))}}function H8(a){var u=a.alternate;return a===V1||u!==null&&u===V1}function V8(a,u){A3=p5=!0;var d=a.pending;d===null?u.next=u:(u.next=d.next,d.next=u),a.pending=u}function Y8(a,u,d){if(d&4194240){var _=u.lanes;_&=a.pendingLanes,d|=_,u.lanes=d,i3(a,d)}}var x5={readContext:I2,useCallback:c2,useContext:c2,useEffect:c2,useImperativeHandle:c2,useInsertionEffect:c2,useLayoutEffect:c2,useMemo:c2,useReducer:c2,useRef:c2,useState:c2,useDebugValue:c2,useDeferredValue:c2,useTransition:c2,useMutableSource:c2,useSyncExternalStore:c2,useId:c2,unstable_isNewReconciler:!1},Ye={readContext:I2,useCallback:function(a,u){return V2().memoizedState=[a,u===void 0?null:u],a},useContext:I2,useEffect:B8,useImperativeHandle:function(a,u,d){return d=d!=null?d.concat([a]):null,g5(4194308,4,$8.bind(null,u,a),d)},useLayoutEffect:function(a,u){return g5(4194308,4,a,u)},useInsertionEffect:function(a,u){return g5(4,2,a,u)},useMemo:function(a,u){var d=V2();return u=u===void 0?null:u,a=a(),d.memoizedState=[a,u],a},useReducer:function(a,u,d){var _=V2();return u=d!==void 0?d(u):u,_.memoizedState=_.baseState=u,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:u},_.queue=a,a=a.dispatch=He.bind(null,V1,a),[_.memoizedState,a]},useRef:function(a){var u=V2();return a={current:a},u.memoizedState=a},useState:P8,useDebugValue:$6,useDeferredValue:function(a){return V2().memoizedState=a},useTransition:function(){var a=P8(!1),u=a[0];return a=je.bind(null,a[1]),V2().memoizedState=a,[u,a]},useMutableSource:function(){},useSyncExternalStore:function(a,u,d){var _=V1,C=V2();if(U1){if(d===void 0)throw Error(n(407));d=d()}else{if(d=u(),i2===null)throw Error(n(349));M4&30||M8(_,u,d)}C.memoizedState=d;var I={value:d,getSnapshot:u};return C.queue=I,B8(k8.bind(null,_,I,a),[a]),_.flags|=2048,F3(9,F8.bind(null,_,I,d,u),void 0,null),d},useId:function(){var a=V2(),u=i2.identifierPrefix;if(U1){var d=K2,_=W2;d=(_&~(1<<32-P1(_)-1)).toString(32)+d,u=":"+u+"R"+d,d=C3++,0<d&&(u+="H"+d.toString(32)),u+=":"}else d=qe++,u=":"+u+"r"+d.toString(32)+":";return a.memoizedState=u},unstable_isNewReconciler:!1},Xe={readContext:I2,useCallback:z8,useContext:I2,useEffect:O6,useImperativeHandle:L8,useInsertionEffect:N8,useLayoutEffect:O8,useMemo:U8,useReducer:B6,useRef:R8,useState:function(){return B6(M3)},useDebugValue:$6,useDeferredValue:function(a){var u=P2();return q8(u,J1.memoizedState,a)},useTransition:function(){var a=B6(M3)[0],u=P2().memoizedState;return[a,u]},useMutableSource:A8,useSyncExternalStore:C8,useId:j8,unstable_isNewReconciler:!1},Ge={readContext:I2,useCallback:z8,useContext:I2,useEffect:O6,useImperativeHandle:L8,useInsertionEffect:N8,useLayoutEffect:O8,useMemo:U8,useReducer:N6,useRef:R8,useState:function(){return N6(M3)},useDebugValue:$6,useDeferredValue:function(a){var u=P2();return J1===null?u.memoizedState=a:q8(u,J1.memoizedState,a)},useTransition:function(){var a=N6(M3)[0],u=P2().memoizedState;return[a,u]},useMutableSource:A8,useSyncExternalStore:C8,useId:j8,unstable_isNewReconciler:!1};function $2(a,u){if(a&&a.defaultProps){u=h0({},u),a=a.defaultProps;for(var d in a)u[d]===void 0&&(u[d]=a[d]);return u}return u}function L6(a,u,d,_){u=a.memoizedState,d=d(_,u),d=d==null?u:h0({},u,d),a.memoizedState=d,a.lanes===0&&(a.updateQueue.baseState=d)}var w5={isMounted:function(a){return(a=a._reactInternals)?m0(a)===a:!1},enqueueSetState:function(a,u,d){a=a._reactInternals;var _=m2(),C=m4(a),I=Q2(_,C);I.payload=u,d!=null&&(I.callback=d),u=h4(a,I,C),u!==null&&(U2(u,a,C,_),c5(u,a,C))},enqueueReplaceState:function(a,u,d){a=a._reactInternals;var _=m2(),C=m4(a),I=Q2(_,C);I.tag=1,I.payload=u,d!=null&&(I.callback=d),u=h4(a,I,C),u!==null&&(U2(u,a,C,_),c5(u,a,C))},enqueueForceUpdate:function(a,u){a=a._reactInternals;var d=m2(),_=m4(a),C=Q2(d,_);C.tag=2,u!=null&&(C.callback=u),u=h4(a,C,_),u!==null&&(U2(u,a,_,d),c5(u,a,_))}};function X8(a,u,d,_,C,I,U){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(_,I,U):u.prototype&&u.prototype.isPureReactComponent?!g3(d,_)||!g3(C,I):!0}function G8(a,u,d){var _=!1,C=u4,I=u.contextType;return typeof I=="object"&&I!==null?I=I2(I):(C=y2(u)?D4:u2.current,_=u.contextTypes,I=(_=_!=null)?j4(a,C):u4),u=new u(d,I),a.memoizedState=u.state!==null&&u.state!==void 0?u.state:null,u.updater=w5,a.stateNode=u,u._reactInternals=a,_&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=C,a.__reactInternalMemoizedMaskedChildContext=I),u}function W8(a,u,d,_){a=u.state,typeof u.componentWillReceiveProps=="function"&&u.componentWillReceiveProps(d,_),typeof u.UNSAFE_componentWillReceiveProps=="function"&&u.UNSAFE_componentWillReceiveProps(d,_),u.state!==a&&w5.enqueueReplaceState(u,u.state,null)}function z6(a,u,d,_){var C=a.stateNode;C.props=d,C.state=a.memoizedState,C.refs={},A6(a);var I=u.contextType;typeof I=="object"&&I!==null?C.context=I2(I):(I=y2(u)?D4:u2.current,C.context=j4(a,I)),C.state=a.memoizedState,I=u.getDerivedStateFromProps,typeof I=="function"&&(L6(a,u,I,d),C.state=a.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof C.getSnapshotBeforeUpdate=="function"||typeof C.UNSAFE_componentWillMount!="function"&&typeof C.componentWillMount!="function"||(u=C.state,typeof C.componentWillMount=="function"&&C.componentWillMount(),typeof C.UNSAFE_componentWillMount=="function"&&C.UNSAFE_componentWillMount(),u!==C.state&&w5.enqueueReplaceState(C,C.state,null),f5(a,d,C,_),C.state=a.memoizedState),typeof C.componentDidMount=="function"&&(a.flags|=4194308)}function Z4(a,u){try{var d="",_=u;do d+=e0(_),_=_.return;while(_);var C=d}catch(I){C=`
Error generating stack: `+I.message+`
`+I.stack}return{value:a,source:u,stack:C,digest:null}}function U6(a,u,d){return{value:a,source:null,stack:d??null,digest:u??null}}function q6(a,u){try{console.error(u.value)}catch(d){setTimeout(function(){throw d})}}var We=typeof WeakMap=="function"?WeakMap:Map;function K8(a,u,d){d=Q2(-1,d),d.tag=3,d.payload={element:null};var _=u.value;return d.callback=function(){S5||(S5=!0,r7=_),q6(a,u)},d}function Z8(a,u,d){d=Q2(-1,d),d.tag=3;var _=a.type.getDerivedStateFromError;if(typeof _=="function"){var C=u.value;d.payload=function(){return _(C)},d.callback=function(){q6(a,u)}}var I=a.stateNode;return I!==null&&typeof I.componentDidCatch=="function"&&(d.callback=function(){q6(a,u),typeof _!="function"&&(p4===null?p4=new Set([this]):p4.add(this));var U=u.stack;this.componentDidCatch(u.value,{componentStack:U!==null?U:""})}),d}function Q8(a,u,d){var _=a.pingCache;if(_===null){_=a.pingCache=new We;var C=new Set;_.set(u,C)}else C=_.get(u),C===void 0&&(C=new Set,_.set(u,C));C.has(d)||(C.add(d),a=ut.bind(null,a,u,d),u.then(a,a))}function J8(a){do{var u;if((u=a.tag===13)&&(u=a.memoizedState,u=u!==null?u.dehydrated!==null:!0),u)return a;a=a.return}while(a!==null);return null}function e9(a,u,d,_,C){return a.mode&1?(a.flags|=65536,a.lanes=C,a):(a===u?a.flags|=65536:(a.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(u=Q2(-1,1),u.tag=2,h4(d,u,1))),d.lanes|=1),a)}var Ke=k.ReactCurrentOwner,_2=!1;function g2(a,u,d,_){u.child=a===null?y8(u,null,d,_):X4(u,a.child,d,_)}function t9(a,u,d,_,C){d=d.render;var I=u.ref;return W4(u,C),_=P6(a,u,d,_,I,C),d=R6(),a!==null&&!_2?(u.updateQueue=a.updateQueue,u.flags&=-2053,a.lanes&=~C,J2(a,u,C)):(U1&&d&&m6(u),u.flags|=1,g2(a,u,_,C),u.child)}function n9(a,u,d,_,C){if(a===null){var I=d.type;return typeof I=="function"&&!c7(I)&&I.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(u.tag=15,u.type=I,r9(a,u,I,_,C)):(a=T5(d.type,null,_,u,u.mode,C),a.ref=u.ref,a.return=u,u.child=a)}if(I=a.child,!(a.lanes&C)){var U=I.memoizedProps;if(d=d.compare,d=d!==null?d:g3,d(U,_)&&a.ref===u.ref)return J2(a,u,C)}return u.flags|=1,a=w4(I,_),a.ref=u.ref,a.return=u,u.child=a}function r9(a,u,d,_,C){if(a!==null){var I=a.memoizedProps;if(g3(I,_)&&a.ref===u.ref)if(_2=!1,u.pendingProps=_=I,(a.lanes&C)!==0)a.flags&131072&&(_2=!0);else return u.lanes=a.lanes,J2(a,u,C)}return j6(a,u,d,_,C)}function i9(a,u,d){var _=u.pendingProps,C=_.children,I=a!==null?a.memoizedState:null;if(_.mode==="hidden")if(!(u.mode&1))u.memoizedState={baseLanes:0,cachePool:null,transitions:null},$1(J4,M2),M2|=d;else{if(!(d&1073741824))return a=I!==null?I.baseLanes|d:d,u.lanes=u.childLanes=1073741824,u.memoizedState={baseLanes:a,cachePool:null,transitions:null},u.updateQueue=null,$1(J4,M2),M2|=a,null;u.memoizedState={baseLanes:0,cachePool:null,transitions:null},_=I!==null?I.baseLanes:d,$1(J4,M2),M2|=_}else I!==null?(_=I.baseLanes|d,u.memoizedState=null):_=d,$1(J4,M2),M2|=_;return g2(a,u,C,d),u.child}function s9(a,u){var d=u.ref;(a===null&&d!==null||a!==null&&a.ref!==d)&&(u.flags|=512,u.flags|=2097152)}function j6(a,u,d,_,C){var I=y2(d)?D4:u2.current;return I=j4(u,I),W4(u,C),d=P6(a,u,d,_,I,C),_=R6(),a!==null&&!_2?(u.updateQueue=a.updateQueue,u.flags&=-2053,a.lanes&=~C,J2(a,u,C)):(U1&&_&&m6(u),u.flags|=1,g2(a,u,d,C),u.child)}function o9(a,u,d,_,C){if(y2(d)){var I=!0;n5(u)}else I=!1;if(W4(u,C),u.stateNode===null)y5(a,u),G8(u,d,_),z6(u,d,_,C),_=!0;else if(a===null){var U=u.stateNode,K=u.memoizedProps;U.props=K;var i0=U.context,b0=d.contextType;typeof b0=="object"&&b0!==null?b0=I2(b0):(b0=y2(d)?D4:u2.current,b0=j4(u,b0));var z0=d.getDerivedStateFromProps,q0=typeof z0=="function"||typeof U.getSnapshotBeforeUpdate=="function";q0||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(K!==_||i0!==b0)&&W8(u,U,_,b0),f4=!1;var $0=u.memoizedState;U.state=$0,f5(u,_,U,C),i0=u.memoizedState,K!==_||$0!==i0||v2.current||f4?(typeof z0=="function"&&(L6(u,d,z0,_),i0=u.memoizedState),(K=f4||X8(u,d,K,_,$0,i0,b0))?(q0||typeof U.UNSAFE_componentWillMount!="function"&&typeof U.componentWillMount!="function"||(typeof U.componentWillMount=="function"&&U.componentWillMount(),typeof U.UNSAFE_componentWillMount=="function"&&U.UNSAFE_componentWillMount()),typeof U.componentDidMount=="function"&&(u.flags|=4194308)):(typeof U.componentDidMount=="function"&&(u.flags|=4194308),u.memoizedProps=_,u.memoizedState=i0),U.props=_,U.state=i0,U.context=b0,_=K):(typeof U.componentDidMount=="function"&&(u.flags|=4194308),_=!1)}else{U=u.stateNode,b8(a,u),K=u.memoizedProps,b0=u.type===u.elementType?K:$2(u.type,K),U.props=b0,q0=u.pendingProps,$0=U.context,i0=d.contextType,typeof i0=="object"&&i0!==null?i0=I2(i0):(i0=y2(d)?D4:u2.current,i0=j4(u,i0));var t1=d.getDerivedStateFromProps;(z0=typeof t1=="function"||typeof U.getSnapshotBeforeUpdate=="function")||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(K!==q0||$0!==i0)&&W8(u,U,_,i0),f4=!1,$0=u.memoizedState,U.state=$0,f5(u,_,U,C);var o1=u.memoizedState;K!==q0||$0!==o1||v2.current||f4?(typeof t1=="function"&&(L6(u,d,t1,_),o1=u.memoizedState),(b0=f4||X8(u,d,b0,_,$0,o1,i0)||!1)?(z0||typeof U.UNSAFE_componentWillUpdate!="function"&&typeof U.componentWillUpdate!="function"||(typeof U.componentWillUpdate=="function"&&U.componentWillUpdate(_,o1,i0),typeof U.UNSAFE_componentWillUpdate=="function"&&U.UNSAFE_componentWillUpdate(_,o1,i0)),typeof U.componentDidUpdate=="function"&&(u.flags|=4),typeof U.getSnapshotBeforeUpdate=="function"&&(u.flags|=1024)):(typeof U.componentDidUpdate!="function"||K===a.memoizedProps&&$0===a.memoizedState||(u.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||K===a.memoizedProps&&$0===a.memoizedState||(u.flags|=1024),u.memoizedProps=_,u.memoizedState=o1),U.props=_,U.state=o1,U.context=i0,_=b0):(typeof U.componentDidUpdate!="function"||K===a.memoizedProps&&$0===a.memoizedState||(u.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||K===a.memoizedProps&&$0===a.memoizedState||(u.flags|=1024),_=!1)}return H6(a,u,d,_,I,C)}function H6(a,u,d,_,C,I){s9(a,u);var U=(u.flags&128)!==0;if(!_&&!U)return C&&f8(u,d,!1),J2(a,u,I);_=u.stateNode,Ke.current=u;var K=U&&typeof d.getDerivedStateFromError!="function"?null:_.render();return u.flags|=1,a!==null&&U?(u.child=X4(u,a.child,null,I),u.child=X4(u,null,K,I)):g2(a,u,K,I),u.memoizedState=_.state,C&&f8(u,d,!0),u.child}function a9(a){var u=a.stateNode;u.pendingContext?u8(a,u.pendingContext,u.pendingContext!==u.context):u.context&&u8(a,u.context,!1),C6(a,u.containerInfo)}function l9(a,u,d,_,C){return Y4(),y6(C),u.flags|=256,g2(a,u,d,_),u.child}var V6={dehydrated:null,treeContext:null,retryLane:0};function Y6(a){return{baseLanes:a,cachePool:null,transitions:null}}function u9(a,u,d){var _=u.pendingProps,C=H1.current,I=!1,U=(u.flags&128)!==0,K;if((K=U)||(K=a!==null&&a.memoizedState===null?!1:(C&2)!==0),K?(I=!0,u.flags&=-129):(a===null||a.memoizedState!==null)&&(C|=1),$1(H1,C&1),a===null)return v6(u),a=u.memoizedState,a!==null&&(a=a.dehydrated,a!==null)?(u.mode&1?a.data==="$!"?u.lanes=8:u.lanes=1073741824:u.lanes=1,null):(U=_.children,a=_.fallback,I?(_=u.mode,I=u.child,U={mode:"hidden",children:U},!(_&1)&&I!==null?(I.childLanes=0,I.pendingProps=U):I=I5(U,_,0,null),a=P4(a,_,d,null),I.return=u,a.return=u,I.sibling=a,u.child=I,u.child.memoizedState=Y6(d),u.memoizedState=V6,a):X6(u,U));if(C=a.memoizedState,C!==null&&(K=C.dehydrated,K!==null))return Ze(a,u,U,_,K,C,d);if(I){I=_.fallback,U=u.mode,C=a.child,K=C.sibling;var i0={mode:"hidden",children:_.children};return!(U&1)&&u.child!==C?(_=u.child,_.childLanes=0,_.pendingProps=i0,u.deletions=null):(_=w4(C,i0),_.subtreeFlags=C.subtreeFlags&14680064),K!==null?I=w4(K,I):(I=P4(I,U,d,null),I.flags|=2),I.return=u,_.return=u,_.sibling=I,u.child=_,_=I,I=u.child,U=a.child.memoizedState,U=U===null?Y6(d):{baseLanes:U.baseLanes|d,cachePool:null,transitions:U.transitions},I.memoizedState=U,I.childLanes=a.childLanes&~d,u.memoizedState=V6,_}return I=a.child,a=I.sibling,_=w4(I,{mode:"visible",children:_.children}),!(u.mode&1)&&(_.lanes=d),_.return=u,_.sibling=null,a!==null&&(d=u.deletions,d===null?(u.deletions=[a],u.flags|=16):d.push(a)),u.child=_,u.memoizedState=null,_}function X6(a,u){return u=I5({mode:"visible",children:u},a.mode,0,null),u.return=a,a.child=u}function v5(a,u,d,_){return _!==null&&y6(_),X4(u,a.child,null,d),a=X6(u,u.pendingProps.children),a.flags|=2,u.memoizedState=null,a}function Ze(a,u,d,_,C,I,U){if(d)return u.flags&256?(u.flags&=-257,_=U6(Error(n(422))),v5(a,u,U,_)):u.memoizedState!==null?(u.child=a.child,u.flags|=128,null):(I=_.fallback,C=u.mode,_=I5({mode:"visible",children:_.children},C,0,null),I=P4(I,C,U,null),I.flags|=2,_.return=u,I.return=u,_.sibling=I,u.child=_,u.mode&1&&X4(u,a.child,null,U),u.child.memoizedState=Y6(U),u.memoizedState=V6,I);if(!(u.mode&1))return v5(a,u,U,null);if(C.data==="$!"){if(_=C.nextSibling&&C.nextSibling.dataset,_)var K=_.dgst;return _=K,I=Error(n(419)),_=U6(I,_,void 0),v5(a,u,U,_)}if(K=(U&a.childLanes)!==0,_2||K){if(_=i2,_!==null){switch(U&-U){case 4:C=2;break;case 16:C=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:C=32;break;case 536870912:C=268435456;break;default:C=0}C=C&(_.suspendedLanes|U)?0:C,C!==0&&C!==I.retryLane&&(I.retryLane=C,Z2(a,C),U2(_,a,C,-1))}return u7(),_=U6(Error(n(421))),v5(a,u,U,_)}return C.data==="$?"?(u.flags|=128,u.child=a.child,u=ct.bind(null,a),C._reactRetry=u,null):(a=I.treeContext,C2=a4(C.nextSibling),A2=u,U1=!0,O2=null,a!==null&&(k2[T2++]=W2,k2[T2++]=K2,k2[T2++]=E4,W2=a.id,K2=a.overflow,E4=u),u=X6(u,_.children),u.flags|=4096,u)}function c9(a,u,d){a.lanes|=u;var _=a.alternate;_!==null&&(_.lanes|=u),E6(a.return,u,d)}function G6(a,u,d,_,C){var I=a.memoizedState;I===null?a.memoizedState={isBackwards:u,rendering:null,renderingStartTime:0,last:_,tail:d,tailMode:C}:(I.isBackwards=u,I.rendering=null,I.renderingStartTime=0,I.last=_,I.tail=d,I.tailMode=C)}function f9(a,u,d){var _=u.pendingProps,C=_.revealOrder,I=_.tail;if(g2(a,u,_.children,d),_=H1.current,_&2)_=_&1|2,u.flags|=128;else{if(a!==null&&a.flags&128)e:for(a=u.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&c9(a,d,u);else if(a.tag===19)c9(a,d,u);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===u)break e;for(;a.sibling===null;){if(a.return===null||a.return===u)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}_&=1}if($1(H1,_),!(u.mode&1))u.memoizedState=null;else switch(C){case"forwards":for(d=u.child,C=null;d!==null;)a=d.alternate,a!==null&&h5(a)===null&&(C=d),d=d.sibling;d=C,d===null?(C=u.child,u.child=null):(C=d.sibling,d.sibling=null),G6(u,!1,C,d,I);break;case"backwards":for(d=null,C=u.child,u.child=null;C!==null;){if(a=C.alternate,a!==null&&h5(a)===null){u.child=C;break}a=C.sibling,C.sibling=d,d=C,C=a}G6(u,!0,d,null,I);break;case"together":G6(u,!1,null,null,void 0);break;default:u.memoizedState=null}return u.child}function y5(a,u){!(u.mode&1)&&a!==null&&(a.alternate=null,u.alternate=null,u.flags|=2)}function J2(a,u,d){if(a!==null&&(u.dependencies=a.dependencies),F4|=u.lanes,!(d&u.childLanes))return null;if(a!==null&&u.child!==a.child)throw Error(n(153));if(u.child!==null){for(a=u.child,d=w4(a,a.pendingProps),u.child=d,d.return=u;a.sibling!==null;)a=a.sibling,d=d.sibling=w4(a,a.pendingProps),d.return=u;d.sibling=null}return u.child}function Qe(a,u,d){switch(u.tag){case 3:a9(u),Y4();break;case 5:S8(u);break;case 1:y2(u.type)&&n5(u);break;case 4:C6(u,u.stateNode.containerInfo);break;case 10:var _=u.type._context,C=u.memoizedProps.value;$1(l5,_._currentValue),_._currentValue=C;break;case 13:if(_=u.memoizedState,_!==null)return _.dehydrated!==null?($1(H1,H1.current&1),u.flags|=128,null):d&u.child.childLanes?u9(a,u,d):($1(H1,H1.current&1),a=J2(a,u,d),a!==null?a.sibling:null);$1(H1,H1.current&1);break;case 19:if(_=(d&u.childLanes)!==0,a.flags&128){if(_)return f9(a,u,d);u.flags|=128}if(C=u.memoizedState,C!==null&&(C.rendering=null,C.tail=null,C.lastEffect=null),$1(H1,H1.current),_)break;return null;case 22:case 23:return u.lanes=0,i9(a,u,d)}return J2(a,u,d)}var h9,W6,d9,p9;h9=function(a,u){for(var d=u.child;d!==null;){if(d.tag===5||d.tag===6)a.appendChild(d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===u)break;for(;d.sibling===null;){if(d.return===null||d.return===u)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},W6=function(){},d9=function(a,u,d,_){var C=a.memoizedProps;if(C!==_){a=u.stateNode,C4(H2.current);var I=null;switch(d){case"input":C=j0(a,C),_=j0(a,_),I=[];break;case"select":C=h0({},C,{value:void 0}),_=h0({},_,{value:void 0}),I=[];break;case"textarea":C=J0(a,C),_=J0(a,_),I=[];break;default:typeof C.onClick!="function"&&typeof _.onClick=="function"&&(a.onclick=J3)}D1(d,_);var U;d=null;for(b0 in C)if(!_.hasOwnProperty(b0)&&C.hasOwnProperty(b0)&&C[b0]!=null)if(b0==="style"){var K=C[b0];for(U in K)K.hasOwnProperty(U)&&(d||(d={}),d[U]="")}else b0!=="dangerouslySetInnerHTML"&&b0!=="children"&&b0!=="suppressContentEditableWarning"&&b0!=="suppressHydrationWarning"&&b0!=="autoFocus"&&(i.hasOwnProperty(b0)?I||(I=[]):(I=I||[]).push(b0,null));for(b0 in _){var i0=_[b0];if(K=C!=null?C[b0]:void 0,_.hasOwnProperty(b0)&&i0!==K&&(i0!=null||K!=null))if(b0==="style")if(K){for(U in K)!K.hasOwnProperty(U)||i0&&i0.hasOwnProperty(U)||(d||(d={}),d[U]="");for(U in i0)i0.hasOwnProperty(U)&&K[U]!==i0[U]&&(d||(d={}),d[U]=i0[U])}else d||(I||(I=[]),I.push(b0,d)),d=i0;else b0==="dangerouslySetInnerHTML"?(i0=i0?i0.__html:void 0,K=K?K.__html:void 0,i0!=null&&K!==i0&&(I=I||[]).push(b0,i0)):b0==="children"?typeof i0!="string"&&typeof i0!="number"||(I=I||[]).push(b0,""+i0):b0!=="suppressContentEditableWarning"&&b0!=="suppressHydrationWarning"&&(i.hasOwnProperty(b0)?(i0!=null&&b0==="onScroll"&&L1("scroll",a),I||K===i0||(I=[])):(I=I||[]).push(b0,i0))}d&&(I=I||[]).push("style",d);var b0=I;(u.updateQueue=b0)&&(u.flags|=4)}},p9=function(a,u,d,_){d!==_&&(u.flags|=4)};function k3(a,u){if(!U1)switch(a.tailMode){case"hidden":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?a.tail=null:d.sibling=null;break;case"collapsed":d=a.tail;for(var _=null;d!==null;)d.alternate!==null&&(_=d),d=d.sibling;_===null?u||a.tail===null?a.tail=null:a.tail.sibling=null:_.sibling=null}}function f2(a){var u=a.alternate!==null&&a.alternate.child===a.child,d=0,_=0;if(u)for(var C=a.child;C!==null;)d|=C.lanes|C.childLanes,_|=C.subtreeFlags&14680064,_|=C.flags&14680064,C.return=a,C=C.sibling;else for(C=a.child;C!==null;)d|=C.lanes|C.childLanes,_|=C.subtreeFlags,_|=C.flags,C.return=a,C=C.sibling;return a.subtreeFlags|=_,a.childLanes=d,u}function Je(a,u,d){var _=u.pendingProps;switch(x6(u),u.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return f2(u),null;case 1:return y2(u.type)&&t5(),f2(u),null;case 3:return _=u.stateNode,K4(),z1(v2),z1(u2),k6(),_.pendingContext&&(_.context=_.pendingContext,_.pendingContext=null),(a===null||a.child===null)&&(o5(u)?u.flags|=4:a===null||a.memoizedState.isDehydrated&&!(u.flags&256)||(u.flags|=1024,O2!==null&&(o7(O2),O2=null))),W6(a,u),f2(u),null;case 5:M6(u);var C=C4(S3.current);if(d=u.type,a!==null&&u.stateNode!=null)d9(a,u,d,_,C),a.ref!==u.ref&&(u.flags|=512,u.flags|=2097152);else{if(!_){if(u.stateNode===null)throw Error(n(166));return f2(u),null}if(a=C4(H2.current),o5(u)){_=u.stateNode,d=u.type;var I=u.memoizedProps;switch(_[j2]=u,_[y3]=I,a=(u.mode&1)!==0,d){case"dialog":L1("cancel",_),L1("close",_);break;case"iframe":case"object":case"embed":L1("load",_);break;case"video":case"audio":for(C=0;C<x3.length;C++)L1(x3[C],_);break;case"source":L1("error",_);break;case"img":case"image":case"link":L1("error",_),L1("load",_);break;case"details":L1("toggle",_);break;case"input":P0(_,I),L1("invalid",_);break;case"select":_._wrapperState={wasMultiple:!!I.multiple},L1("invalid",_);break;case"textarea":H(_,I),L1("invalid",_)}D1(d,I),C=null;for(var U in I)if(I.hasOwnProperty(U)){var K=I[U];U==="children"?typeof K=="string"?_.textContent!==K&&(I.suppressHydrationWarning!==!0&&Q3(_.textContent,K,a),C=["children",K]):typeof K=="number"&&_.textContent!==""+K&&(I.suppressHydrationWarning!==!0&&Q3(_.textContent,K,a),C=["children",""+K]):i.hasOwnProperty(U)&&K!=null&&U==="onScroll"&&L1("scroll",_)}switch(d){case"input":a1(_),u1(_,I,!0);break;case"textarea":a1(_),f0(_);break;case"select":case"option":break;default:typeof I.onClick=="function"&&(_.onclick=J3)}_=C,u.updateQueue=_,_!==null&&(u.flags|=4)}else{U=C.nodeType===9?C:C.ownerDocument,a==="http://www.w3.org/1999/xhtml"&&(a=c0(d)),a==="http://www.w3.org/1999/xhtml"?d==="script"?(a=U.createElement("div"),a.innerHTML="<script><\/script>",a=a.removeChild(a.firstChild)):typeof _.is=="string"?a=U.createElement(d,{is:_.is}):(a=U.createElement(d),d==="select"&&(U=a,_.multiple?U.multiple=!0:_.size&&(U.size=_.size))):a=U.createElementNS(a,d),a[j2]=u,a[y3]=_,h9(a,u,!1,!1),u.stateNode=a;e:{switch(U=y1(d,_),d){case"dialog":L1("cancel",a),L1("close",a),C=_;break;case"iframe":case"object":case"embed":L1("load",a),C=_;break;case"video":case"audio":for(C=0;C<x3.length;C++)L1(x3[C],a);C=_;break;case"source":L1("error",a),C=_;break;case"img":case"image":case"link":L1("error",a),L1("load",a),C=_;break;case"details":L1("toggle",a),C=_;break;case"input":P0(a,_),C=j0(a,_),L1("invalid",a);break;case"option":C=_;break;case"select":a._wrapperState={wasMultiple:!!_.multiple},C=h0({},_,{value:void 0}),L1("invalid",a);break;case"textarea":H(a,_),C=J0(a,_),L1("invalid",a);break;default:C=_}D1(d,C),K=C;for(I in K)if(K.hasOwnProperty(I)){var i0=K[I];I==="style"?e1(a,i0):I==="dangerouslySetInnerHTML"?(i0=i0?i0.__html:void 0,i0!=null&&y0(a,i0)):I==="children"?typeof i0=="string"?(d!=="textarea"||i0!=="")&&E0(a,i0):typeof i0=="number"&&E0(a,""+i0):I!=="suppressContentEditableWarning"&&I!=="suppressHydrationWarning"&&I!=="autoFocus"&&(i.hasOwnProperty(I)?i0!=null&&I==="onScroll"&&L1("scroll",a):i0!=null&&M(a,I,i0,U))}switch(d){case"input":a1(a),u1(a,_,!1);break;case"textarea":a1(a),f0(a);break;case"option":_.value!=null&&a.setAttribute("value",""+L0(_.value));break;case"select":a.multiple=!!_.multiple,I=_.value,I!=null?K0(a,!!_.multiple,I,!1):_.defaultValue!=null&&K0(a,!!_.multiple,_.defaultValue,!0);break;default:typeof C.onClick=="function"&&(a.onclick=J3)}switch(d){case"button":case"input":case"select":case"textarea":_=!!_.autoFocus;break e;case"img":_=!0;break e;default:_=!1}}_&&(u.flags|=4)}u.ref!==null&&(u.flags|=512,u.flags|=2097152)}return f2(u),null;case 6:if(a&&u.stateNode!=null)p9(a,u,a.memoizedProps,_);else{if(typeof _!="string"&&u.stateNode===null)throw Error(n(166));if(d=C4(S3.current),C4(H2.current),o5(u)){if(_=u.stateNode,d=u.memoizedProps,_[j2]=u,(I=_.nodeValue!==d)&&(a=A2,a!==null))switch(a.tag){case 3:Q3(_.nodeValue,d,(a.mode&1)!==0);break;case 5:a.memoizedProps.suppressHydrationWarning!==!0&&Q3(_.nodeValue,d,(a.mode&1)!==0)}I&&(u.flags|=4)}else _=(d.nodeType===9?d:d.ownerDocument).createTextNode(_),_[j2]=u,u.stateNode=_}return f2(u),null;case 13:if(z1(H1),_=u.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(U1&&C2!==null&&u.mode&1&&!(u.flags&128))x8(),Y4(),u.flags|=98560,I=!1;else if(I=o5(u),_!==null&&_.dehydrated!==null){if(a===null){if(!I)throw Error(n(318));if(I=u.memoizedState,I=I!==null?I.dehydrated:null,!I)throw Error(n(317));I[j2]=u}else Y4(),!(u.flags&128)&&(u.memoizedState=null),u.flags|=4;f2(u),I=!1}else O2!==null&&(o7(O2),O2=null),I=!0;if(!I)return u.flags&65536?u:null}return u.flags&128?(u.lanes=d,u):(_=_!==null,_!==(a!==null&&a.memoizedState!==null)&&_&&(u.child.flags|=8192,u.mode&1&&(a===null||H1.current&1?e2===0&&(e2=3):u7())),u.updateQueue!==null&&(u.flags|=4),f2(u),null);case 4:return K4(),W6(a,u),a===null&&w3(u.stateNode.containerInfo),f2(u),null;case 10:return D6(u.type._context),f2(u),null;case 17:return y2(u.type)&&t5(),f2(u),null;case 19:if(z1(H1),I=u.memoizedState,I===null)return f2(u),null;if(_=(u.flags&128)!==0,U=I.rendering,U===null)if(_)k3(I,!1);else{if(e2!==0||a!==null&&a.flags&128)for(a=u.child;a!==null;){if(U=h5(a),U!==null){for(u.flags|=128,k3(I,!1),_=U.updateQueue,_!==null&&(u.updateQueue=_,u.flags|=4),u.subtreeFlags=0,_=d,d=u.child;d!==null;)I=d,a=_,I.flags&=14680066,U=I.alternate,U===null?(I.childLanes=0,I.lanes=a,I.child=null,I.subtreeFlags=0,I.memoizedProps=null,I.memoizedState=null,I.updateQueue=null,I.dependencies=null,I.stateNode=null):(I.childLanes=U.childLanes,I.lanes=U.lanes,I.child=U.child,I.subtreeFlags=0,I.deletions=null,I.memoizedProps=U.memoizedProps,I.memoizedState=U.memoizedState,I.updateQueue=U.updateQueue,I.type=U.type,a=U.dependencies,I.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext}),d=d.sibling;return $1(H1,H1.current&1|2),u.child}a=a.sibling}I.tail!==null&&R0()>e3&&(u.flags|=128,_=!0,k3(I,!1),u.lanes=4194304)}else{if(!_)if(a=h5(U),a!==null){if(u.flags|=128,_=!0,d=a.updateQueue,d!==null&&(u.updateQueue=d,u.flags|=4),k3(I,!0),I.tail===null&&I.tailMode==="hidden"&&!U.alternate&&!U1)return f2(u),null}else 2*R0()-I.renderingStartTime>e3&&d!==1073741824&&(u.flags|=128,_=!0,k3(I,!1),u.lanes=4194304);I.isBackwards?(U.sibling=u.child,u.child=U):(d=I.last,d!==null?d.sibling=U:u.child=U,I.last=U)}return I.tail!==null?(u=I.tail,I.rendering=u,I.tail=u.sibling,I.renderingStartTime=R0(),u.sibling=null,d=H1.current,$1(H1,_?d&1|2:d&1),u):(f2(u),null);case 22:case 23:return l7(),_=u.memoizedState!==null,a!==null&&a.memoizedState!==null!==_&&(u.flags|=8192),_&&u.mode&1?M2&1073741824&&(f2(u),u.subtreeFlags&6&&(u.flags|=8192)):f2(u),null;case 24:return null;case 25:return null}throw Error(n(156,u.tag))}function et(a,u){switch(x6(u),u.tag){case 1:return y2(u.type)&&t5(),a=u.flags,a&65536?(u.flags=a&-65537|128,u):null;case 3:return K4(),z1(v2),z1(u2),k6(),a=u.flags,a&65536&&!(a&128)?(u.flags=a&-65537|128,u):null;case 5:return M6(u),null;case 13:if(z1(H1),a=u.memoizedState,a!==null&&a.dehydrated!==null){if(u.alternate===null)throw Error(n(340));Y4()}return a=u.flags,a&65536?(u.flags=a&-65537|128,u):null;case 19:return z1(H1),null;case 4:return K4(),null;case 10:return D6(u.type._context),null;case 22:case 23:return l7(),null;case 24:return null;default:return null}}var _5=!1,d2=!1,tt=typeof WeakSet=="function"?WeakSet:Set,s1=null;function Q4(a,u){var d=a.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(_){Y1(a,u,_)}else d.current=null}function K6(a,u,d){try{d()}catch(_){Y1(a,u,_)}}var g9=!1;function nt(a,u){if(l6=U3,a=X7(),e6(a)){if("selectionStart"in a)var d={start:a.selectionStart,end:a.selectionEnd};else e:{d=(d=a.ownerDocument)&&d.defaultView||window;var _=d.getSelection&&d.getSelection();if(_&&_.rangeCount!==0){d=_.anchorNode;var C=_.anchorOffset,I=_.focusNode;_=_.focusOffset;try{d.nodeType,I.nodeType}catch{d=null;break e}var U=0,K=-1,i0=-1,b0=0,z0=0,q0=a,$0=null;t:for(;;){for(var t1;q0!==d||C!==0&&q0.nodeType!==3||(K=U+C),q0!==I||_!==0&&q0.nodeType!==3||(i0=U+_),q0.nodeType===3&&(U+=q0.nodeValue.length),(t1=q0.firstChild)!==null;)$0=q0,q0=t1;for(;;){if(q0===a)break t;if($0===d&&++b0===C&&(K=U),$0===I&&++z0===_&&(i0=U),(t1=q0.nextSibling)!==null)break;q0=$0,$0=q0.parentNode}q0=t1}d=K===-1||i0===-1?null:{start:K,end:i0}}else d=null}d=d||{start:0,end:0}}else d=null;for(u6={focusedElem:a,selectionRange:d},U3=!1,s1=u;s1!==null;)if(u=s1,a=u.child,(u.subtreeFlags&1028)!==0&&a!==null)a.return=u,s1=a;else for(;s1!==null;){u=s1;try{var o1=u.alternate;if(u.flags&1024)switch(u.tag){case 0:case 11:case 15:break;case 1:if(o1!==null){var l1=o1.memoizedProps,W1=o1.memoizedState,x0=u.stateNode,l0=x0.getSnapshotBeforeUpdate(u.elementType===u.type?l1:$2(u.type,l1),W1);x0.__reactInternalSnapshotBeforeUpdate=l0}break;case 3:var v0=u.stateNode.containerInfo;v0.nodeType===1?v0.textContent="":v0.nodeType===9&&v0.documentElement&&v0.removeChild(v0.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(n(163))}}catch(V0){Y1(u,u.return,V0)}if(a=u.sibling,a!==null){a.return=u.return,s1=a;break}s1=u.return}return o1=g9,g9=!1,o1}function T3(a,u,d){var _=u.updateQueue;if(_=_!==null?_.lastEffect:null,_!==null){var C=_=_.next;do{if((C.tag&a)===a){var I=C.destroy;C.destroy=void 0,I!==void 0&&K6(u,d,I)}C=C.next}while(C!==_)}}function b5(a,u){if(u=u.updateQueue,u=u!==null?u.lastEffect:null,u!==null){var d=u=u.next;do{if((d.tag&a)===a){var _=d.create;d.destroy=_()}d=d.next}while(d!==u)}}function Z6(a){var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 5:a=d;break;default:a=d}typeof u=="function"?u(a):u.current=a}}function m9(a){var u=a.alternate;u!==null&&(a.alternate=null,m9(u)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(u=a.stateNode,u!==null&&(delete u[j2],delete u[y3],delete u[d6],delete u[$e],delete u[Le])),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function x9(a){return a.tag===5||a.tag===3||a.tag===4}function w9(a){e:for(;;){for(;a.sibling===null;){if(a.return===null||x9(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue e;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function Q6(a,u,d){var _=a.tag;if(_===5||_===6)a=a.stateNode,u?d.nodeType===8?d.parentNode.insertBefore(a,u):d.insertBefore(a,u):(d.nodeType===8?(u=d.parentNode,u.insertBefore(a,d)):(u=d,u.appendChild(a)),d=d._reactRootContainer,d!=null||u.onclick!==null||(u.onclick=J3));else if(_!==4&&(a=a.child,a!==null))for(Q6(a,u,d),a=a.sibling;a!==null;)Q6(a,u,d),a=a.sibling}function J6(a,u,d){var _=a.tag;if(_===5||_===6)a=a.stateNode,u?d.insertBefore(a,u):d.appendChild(a);else if(_!==4&&(a=a.child,a!==null))for(J6(a,u,d),a=a.sibling;a!==null;)J6(a,u,d),a=a.sibling}var a2=null,L2=!1;function d4(a,u,d){for(d=d.child;d!==null;)v9(a,u,d),d=d.sibling}function v9(a,u,d){if(E1&&typeof E1.onCommitFiberUnmount=="function")try{E1.onCommitFiberUnmount(S1,d)}catch{}switch(d.tag){case 5:d2||Q4(d,u);case 6:var _=a2,C=L2;a2=null,d4(a,u,d),a2=_,L2=C,a2!==null&&(L2?(a=a2,d=d.stateNode,a.nodeType===8?a.parentNode.removeChild(d):a.removeChild(d)):a2.removeChild(d.stateNode));break;case 18:a2!==null&&(L2?(a=a2,d=d.stateNode,a.nodeType===8?h6(a.parentNode,d):a.nodeType===1&&h6(a,d),u3(a)):h6(a2,d.stateNode));break;case 4:_=a2,C=L2,a2=d.stateNode.containerInfo,L2=!0,d4(a,u,d),a2=_,L2=C;break;case 0:case 11:case 14:case 15:if(!d2&&(_=d.updateQueue,_!==null&&(_=_.lastEffect,_!==null))){C=_=_.next;do{var I=C,U=I.destroy;I=I.tag,U!==void 0&&(I&2||I&4)&&K6(d,u,U),C=C.next}while(C!==_)}d4(a,u,d);break;case 1:if(!d2&&(Q4(d,u),_=d.stateNode,typeof _.componentWillUnmount=="function"))try{_.props=d.memoizedProps,_.state=d.memoizedState,_.componentWillUnmount()}catch(K){Y1(d,u,K)}d4(a,u,d);break;case 21:d4(a,u,d);break;case 22:d.mode&1?(d2=(_=d2)||d.memoizedState!==null,d4(a,u,d),d2=_):d4(a,u,d);break;default:d4(a,u,d)}}function y9(a){var u=a.updateQueue;if(u!==null){a.updateQueue=null;var d=a.stateNode;d===null&&(d=a.stateNode=new tt),u.forEach(function(_){var C=ft.bind(null,a,_);d.has(_)||(d.add(_),_.then(C,C))})}}function z2(a,u){var d=u.deletions;if(d!==null)for(var _=0;_<d.length;_++){var C=d[_];try{var I=a,U=u,K=U;e:for(;K!==null;){switch(K.tag){case 5:a2=K.stateNode,L2=!1;break e;case 3:a2=K.stateNode.containerInfo,L2=!0;break e;case 4:a2=K.stateNode.containerInfo,L2=!0;break e}K=K.return}if(a2===null)throw Error(n(160));v9(I,U,C),a2=null,L2=!1;var i0=C.alternate;i0!==null&&(i0.return=null),C.return=null}catch(b0){Y1(C,u,b0)}}if(u.subtreeFlags&12854)for(u=u.child;u!==null;)_9(u,a),u=u.sibling}function _9(a,u){var d=a.alternate,_=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:if(z2(u,a),Y2(a),_&4){try{T3(3,a,a.return),b5(3,a)}catch(l1){Y1(a,a.return,l1)}try{T3(5,a,a.return)}catch(l1){Y1(a,a.return,l1)}}break;case 1:z2(u,a),Y2(a),_&512&&d!==null&&Q4(d,d.return);break;case 5:if(z2(u,a),Y2(a),_&512&&d!==null&&Q4(d,d.return),a.flags&32){var C=a.stateNode;try{E0(C,"")}catch(l1){Y1(a,a.return,l1)}}if(_&4&&(C=a.stateNode,C!=null)){var I=a.memoizedProps,U=d!==null?d.memoizedProps:I,K=a.type,i0=a.updateQueue;if(a.updateQueue=null,i0!==null)try{K==="input"&&I.type==="radio"&&I.name!=null&&d1(C,I),y1(K,U);var b0=y1(K,I);for(U=0;U<i0.length;U+=2){var z0=i0[U],q0=i0[U+1];z0==="style"?e1(C,q0):z0==="dangerouslySetInnerHTML"?y0(C,q0):z0==="children"?E0(C,q0):M(C,z0,q0,b0)}switch(K){case"input":r1(C,I);break;case"textarea":t0(C,I);break;case"select":var $0=C._wrapperState.wasMultiple;C._wrapperState.wasMultiple=!!I.multiple;var t1=I.value;t1!=null?K0(C,!!I.multiple,t1,!1):$0!==!!I.multiple&&(I.defaultValue!=null?K0(C,!!I.multiple,I.defaultValue,!0):K0(C,!!I.multiple,I.multiple?[]:"",!1))}C[y3]=I}catch(l1){Y1(a,a.return,l1)}}break;case 6:if(z2(u,a),Y2(a),_&4){if(a.stateNode===null)throw Error(n(162));C=a.stateNode,I=a.memoizedProps;try{C.nodeValue=I}catch(l1){Y1(a,a.return,l1)}}break;case 3:if(z2(u,a),Y2(a),_&4&&d!==null&&d.memoizedState.isDehydrated)try{u3(u.containerInfo)}catch(l1){Y1(a,a.return,l1)}break;case 4:z2(u,a),Y2(a);break;case 13:z2(u,a),Y2(a),C=a.child,C.flags&8192&&(I=C.memoizedState!==null,C.stateNode.isHidden=I,!I||C.alternate!==null&&C.alternate.memoizedState!==null||(n7=R0())),_&4&&y9(a);break;case 22:if(z0=d!==null&&d.memoizedState!==null,a.mode&1?(d2=(b0=d2)||z0,z2(u,a),d2=b0):z2(u,a),Y2(a),_&8192){if(b0=a.memoizedState!==null,(a.stateNode.isHidden=b0)&&!z0&&a.mode&1)for(s1=a,z0=a.child;z0!==null;){for(q0=s1=z0;s1!==null;){switch($0=s1,t1=$0.child,$0.tag){case 0:case 11:case 14:case 15:T3(4,$0,$0.return);break;case 1:Q4($0,$0.return);var o1=$0.stateNode;if(typeof o1.componentWillUnmount=="function"){_=$0,d=$0.return;try{u=_,o1.props=u.memoizedProps,o1.state=u.memoizedState,o1.componentWillUnmount()}catch(l1){Y1(_,d,l1)}}break;case 5:Q4($0,$0.return);break;case 22:if($0.memoizedState!==null){E9(q0);continue}}t1!==null?(t1.return=$0,s1=t1):E9(q0)}z0=z0.sibling}e:for(z0=null,q0=a;;){if(q0.tag===5){if(z0===null){z0=q0;try{C=q0.stateNode,b0?(I=C.style,typeof I.setProperty=="function"?I.setProperty("display","none","important"):I.display="none"):(K=q0.stateNode,i0=q0.memoizedProps.style,U=i0!=null&&i0.hasOwnProperty("display")?i0.display:null,K.style.display=Q0("display",U))}catch(l1){Y1(a,a.return,l1)}}}else if(q0.tag===6){if(z0===null)try{q0.stateNode.nodeValue=b0?"":q0.memoizedProps}catch(l1){Y1(a,a.return,l1)}}else if((q0.tag!==22&&q0.tag!==23||q0.memoizedState===null||q0===a)&&q0.child!==null){q0.child.return=q0,q0=q0.child;continue}if(q0===a)break e;for(;q0.sibling===null;){if(q0.return===null||q0.return===a)break e;z0===q0&&(z0=null),q0=q0.return}z0===q0&&(z0=null),q0.sibling.return=q0.return,q0=q0.sibling}}break;case 19:z2(u,a),Y2(a),_&4&&y9(a);break;case 21:break;default:z2(u,a),Y2(a)}}function Y2(a){var u=a.flags;if(u&2){try{e:{for(var d=a.return;d!==null;){if(x9(d)){var _=d;break e}d=d.return}throw Error(n(160))}switch(_.tag){case 5:var C=_.stateNode;_.flags&32&&(E0(C,""),_.flags&=-33);var I=w9(a);J6(a,I,C);break;case 3:case 4:var U=_.stateNode.containerInfo,K=w9(a);Q6(a,K,U);break;default:throw Error(n(161))}}catch(i0){Y1(a,a.return,i0)}a.flags&=-3}u&4096&&(a.flags&=-4097)}function rt(a,u,d){s1=a,b9(a)}function b9(a,u,d){for(var _=(a.mode&1)!==0;s1!==null;){var C=s1,I=C.child;if(C.tag===22&&_){var U=C.memoizedState!==null||_5;if(!U){var K=C.alternate,i0=K!==null&&K.memoizedState!==null||d2;K=_5;var b0=d2;if(_5=U,(d2=i0)&&!b0)for(s1=C;s1!==null;)U=s1,i0=U.child,U.tag===22&&U.memoizedState!==null?S9(C):i0!==null?(i0.return=U,s1=i0):S9(C);for(;I!==null;)s1=I,b9(I),I=I.sibling;s1=C,_5=K,d2=b0}D9(a)}else C.subtreeFlags&8772&&I!==null?(I.return=C,s1=I):D9(a)}}function D9(a){for(;s1!==null;){var u=s1;if(u.flags&8772){var d=u.alternate;try{if(u.flags&8772)switch(u.tag){case 0:case 11:case 15:d2||b5(5,u);break;case 1:var _=u.stateNode;if(u.flags&4&&!d2)if(d===null)_.componentDidMount();else{var C=u.elementType===u.type?d.memoizedProps:$2(u.type,d.memoizedProps);_.componentDidUpdate(C,d.memoizedState,_.__reactInternalSnapshotBeforeUpdate)}var I=u.updateQueue;I!==null&&E8(u,I,_);break;case 3:var U=u.updateQueue;if(U!==null){if(d=null,u.child!==null)switch(u.child.tag){case 5:d=u.child.stateNode;break;case 1:d=u.child.stateNode}E8(u,U,d)}break;case 5:var K=u.stateNode;if(d===null&&u.flags&4){d=K;var i0=u.memoizedProps;switch(u.type){case"button":case"input":case"select":case"textarea":i0.autoFocus&&d.focus();break;case"img":i0.src&&(d.src=i0.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(u.memoizedState===null){var b0=u.alternate;if(b0!==null){var z0=b0.memoizedState;if(z0!==null){var q0=z0.dehydrated;q0!==null&&u3(q0)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(n(163))}d2||u.flags&512&&Z6(u)}catch($0){Y1(u,u.return,$0)}}if(u===a){s1=null;break}if(d=u.sibling,d!==null){d.return=u.return,s1=d;break}s1=u.return}}function E9(a){for(;s1!==null;){var u=s1;if(u===a){s1=null;break}var d=u.sibling;if(d!==null){d.return=u.return,s1=d;break}s1=u.return}}function S9(a){for(;s1!==null;){var u=s1;try{switch(u.tag){case 0:case 11:case 15:var d=u.return;try{b5(4,u)}catch(i0){Y1(u,d,i0)}break;case 1:var _=u.stateNode;if(typeof _.componentDidMount=="function"){var C=u.return;try{_.componentDidMount()}catch(i0){Y1(u,C,i0)}}var I=u.return;try{Z6(u)}catch(i0){Y1(u,I,i0)}break;case 5:var U=u.return;try{Z6(u)}catch(i0){Y1(u,U,i0)}}}catch(i0){Y1(u,u.return,i0)}if(u===a){s1=null;break}var K=u.sibling;if(K!==null){K.return=u.return,s1=K;break}s1=u.return}}var it=Math.ceil,D5=k.ReactCurrentDispatcher,e7=k.ReactCurrentOwner,R2=k.ReactCurrentBatchConfig,M1=0,i2=null,Q1=null,l2=0,M2=0,J4=l4(0),e2=0,I3=null,F4=0,E5=0,t7=0,P3=null,b2=null,n7=0,e3=1/0,e4=null,S5=!1,r7=null,p4=null,A5=!1,g4=null,C5=0,R3=0,i7=null,M5=-1,F5=0;function m2(){return M1&6?R0():M5!==-1?M5:M5=R0()}function m4(a){return a.mode&1?M1&2&&l2!==0?l2&-l2:Ue.transition!==null?(F5===0&&(F5=N3()),F5):(a=T1,a!==0||(a=window.event,a=a===void 0?16:C7(a.type)),a):1}function U2(a,u,d,_){if(50<R3)throw R3=0,i7=null,Error(n(185));_4(a,d,_),(!(M1&2)||a!==i2)&&(a===i2&&(!(M1&2)&&(E5|=d),e2===4&&x4(a,l2)),D2(a,_),d===1&&M1===0&&!(u.mode&1)&&(e3=R0()+500,r5&&c4()))}function D2(a,u){var d=a.callbackNode;G1(a,u);var _=t2(a,a===i2?l2:0);if(_===0)d!==null&&m1(d),a.callbackNode=null,a.callbackPriority=0;else if(u=_&-_,a.callbackPriority!==u){if(d!=null&&m1(d),u===1)a.tag===0?ze(C9.bind(null,a)):h8(C9.bind(null,a)),Ne(function(){!(M1&6)&&c4()}),d=null;else{switch(O3(_)){case 1:d=a0;break;case 4:d=T0;break;case 16:d=X0;break;case 536870912:d=N1;break;default:d=X0}d=B9(d,A9.bind(null,a))}a.callbackPriority=u,a.callbackNode=d}}function A9(a,u){if(M5=-1,F5=0,M1&6)throw Error(n(327));var d=a.callbackNode;if(t3()&&a.callbackNode!==d)return null;var _=t2(a,a===i2?l2:0);if(_===0)return null;if(_&30||_&a.expiredLanes||u)u=k5(a,_);else{u=_;var C=M1;M1|=2;var I=F9();(i2!==a||l2!==u)&&(e4=null,e3=R0()+500,T4(a,u));do try{at();break}catch(K){M9(a,K)}while(!0);b6(),D5.current=I,M1=C,Q1!==null?u=0:(i2=null,l2=0,u=e2)}if(u!==0){if(u===2&&(C=n3(a),C!==0&&(_=C,u=s7(a,C))),u===1)throw d=I3,T4(a,0),x4(a,_),D2(a,R0()),d;if(u===6)x4(a,_);else{if(C=a.current.alternate,!(_&30)&&!st(C)&&(u=k5(a,_),u===2&&(I=n3(a),I!==0&&(_=I,u=s7(a,I))),u===1))throw d=I3,T4(a,0),x4(a,_),D2(a,R0()),d;switch(a.finishedWork=C,a.finishedLanes=_,u){case 0:case 1:throw Error(n(345));case 2:I4(a,b2,e4);break;case 3:if(x4(a,_),(_&130023424)===_&&(u=n7+500-R0(),10<u)){if(t2(a,0)!==0)break;if(C=a.suspendedLanes,(C&_)!==_){m2(),a.pingedLanes|=a.suspendedLanes&C;break}a.timeoutHandle=f6(I4.bind(null,a,b2,e4),u);break}I4(a,b2,e4);break;case 4:if(x4(a,_),(_&4194240)===_)break;for(u=a.eventTimes,C=-1;0<_;){var U=31-P1(_);I=1<<U,U=u[U],U>C&&(C=U),_&=~I}if(_=C,_=R0()-_,_=(120>_?120:480>_?480:1080>_?1080:1920>_?1920:3e3>_?3e3:4320>_?4320:1960*it(_/1960))-_,10<_){a.timeoutHandle=f6(I4.bind(null,a,b2,e4),_);break}I4(a,b2,e4);break;case 5:I4(a,b2,e4);break;default:throw Error(n(329))}}}return D2(a,R0()),a.callbackNode===d?A9.bind(null,a):null}function s7(a,u){var d=P3;return a.current.memoizedState.isDehydrated&&(T4(a,u).flags|=256),a=k5(a,u),a!==2&&(u=b2,b2=d,u!==null&&o7(u)),a}function o7(a){b2===null?b2=a:b2.push.apply(b2,a)}function st(a){for(var u=a;;){if(u.flags&16384){var d=u.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var _=0;_<d.length;_++){var C=d[_],I=C.getSnapshot;C=C.value;try{if(!N2(I(),C))return!1}catch{return!1}}}if(d=u.child,u.subtreeFlags&16384&&d!==null)d.return=u,u=d;else{if(u===a)break;for(;u.sibling===null;){if(u.return===null||u.return===a)return!0;u=u.return}u.sibling.return=u.return,u=u.sibling}}return!0}function x4(a,u){for(u&=~t7,u&=~E5,a.suspendedLanes|=u,a.pingedLanes&=~u,a=a.expirationTimes;0<u;){var d=31-P1(u),_=1<<d;a[d]=-1,u&=~_}}function C9(a){if(M1&6)throw Error(n(327));t3();var u=t2(a,0);if(!(u&1))return D2(a,R0()),null;var d=k5(a,u);if(a.tag!==0&&d===2){var _=n3(a);_!==0&&(u=_,d=s7(a,_))}if(d===1)throw d=I3,T4(a,0),x4(a,u),D2(a,R0()),d;if(d===6)throw Error(n(345));return a.finishedWork=a.current.alternate,a.finishedLanes=u,I4(a,b2,e4),D2(a,R0()),null}function a7(a,u){var d=M1;M1|=1;try{return a(u)}finally{M1=d,M1===0&&(e3=R0()+500,r5&&c4())}}function k4(a){g4!==null&&g4.tag===0&&!(M1&6)&&t3();var u=M1;M1|=1;var d=R2.transition,_=T1;try{if(R2.transition=null,T1=1,a)return a()}finally{T1=_,R2.transition=d,M1=u,!(M1&6)&&c4()}}function l7(){M2=J4.current,z1(J4)}function T4(a,u){a.finishedWork=null,a.finishedLanes=0;var d=a.timeoutHandle;if(d!==-1&&(a.timeoutHandle=-1,Be(d)),Q1!==null)for(d=Q1.return;d!==null;){var _=d;switch(x6(_),_.tag){case 1:_=_.type.childContextTypes,_!=null&&t5();break;case 3:K4(),z1(v2),z1(u2),k6();break;case 5:M6(_);break;case 4:K4();break;case 13:z1(H1);break;case 19:z1(H1);break;case 10:D6(_.type._context);break;case 22:case 23:l7()}d=d.return}if(i2=a,Q1=a=w4(a.current,null),l2=M2=u,e2=0,I3=null,t7=E5=F4=0,b2=P3=null,A4!==null){for(u=0;u<A4.length;u++)if(d=A4[u],_=d.interleaved,_!==null){d.interleaved=null;var C=_.next,I=d.pending;if(I!==null){var U=I.next;I.next=C,_.next=U}d.pending=_}A4=null}return a}function M9(a,u){do{var d=Q1;try{if(b6(),d5.current=x5,p5){for(var _=V1.memoizedState;_!==null;){var C=_.queue;C!==null&&(C.pending=null),_=_.next}p5=!1}if(M4=0,r2=J1=V1=null,A3=!1,C3=0,e7.current=null,d===null||d.return===null){e2=1,I3=u,Q1=null;break}e:{var I=a,U=d.return,K=d,i0=u;if(u=l2,K.flags|=32768,i0!==null&&typeof i0=="object"&&typeof i0.then=="function"){var b0=i0,z0=K,q0=z0.tag;if(!(z0.mode&1)&&(q0===0||q0===11||q0===15)){var $0=z0.alternate;$0?(z0.updateQueue=$0.updateQueue,z0.memoizedState=$0.memoizedState,z0.lanes=$0.lanes):(z0.updateQueue=null,z0.memoizedState=null)}var t1=J8(U);if(t1!==null){t1.flags&=-257,e9(t1,U,K,I,u),t1.mode&1&&Q8(I,b0,u),u=t1,i0=b0;var o1=u.updateQueue;if(o1===null){var l1=new Set;l1.add(i0),u.updateQueue=l1}else o1.add(i0);break e}else{if(!(u&1)){Q8(I,b0,u),u7();break e}i0=Error(n(426))}}else if(U1&&K.mode&1){var W1=J8(U);if(W1!==null){!(W1.flags&65536)&&(W1.flags|=256),e9(W1,U,K,I,u),y6(Z4(i0,K));break e}}I=i0=Z4(i0,K),e2!==4&&(e2=2),P3===null?P3=[I]:P3.push(I),I=U;do{switch(I.tag){case 3:I.flags|=65536,u&=-u,I.lanes|=u;var x0=K8(I,i0,u);D8(I,x0);break e;case 1:K=i0;var l0=I.type,v0=I.stateNode;if(!(I.flags&128)&&(typeof l0.getDerivedStateFromError=="function"||v0!==null&&typeof v0.componentDidCatch=="function"&&(p4===null||!p4.has(v0)))){I.flags|=65536,u&=-u,I.lanes|=u;var V0=Z8(I,K,u);D8(I,V0);break e}}I=I.return}while(I!==null)}T9(d)}catch(f1){u=f1,Q1===d&&d!==null&&(Q1=d=d.return);continue}break}while(!0)}function F9(){var a=D5.current;return D5.current=x5,a===null?x5:a}function u7(){(e2===0||e2===3||e2===2)&&(e2=4),i2===null||!(F4&268435455)&&!(E5&268435455)||x4(i2,l2)}function k5(a,u){var d=M1;M1|=2;var _=F9();(i2!==a||l2!==u)&&(e4=null,T4(a,u));do try{ot();break}catch(C){M9(a,C)}while(!0);if(b6(),M1=d,D5.current=_,Q1!==null)throw Error(n(261));return i2=null,l2=0,e2}function ot(){for(;Q1!==null;)k9(Q1)}function at(){for(;Q1!==null&&!k1();)k9(Q1)}function k9(a){var u=R9(a.alternate,a,M2);a.memoizedProps=a.pendingProps,u===null?T9(a):Q1=u,e7.current=null}function T9(a){var u=a;do{var d=u.alternate;if(a=u.return,u.flags&32768){if(d=et(d,u),d!==null){d.flags&=32767,Q1=d;return}if(a!==null)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{e2=6,Q1=null;return}}else if(d=Je(d,u,M2),d!==null){Q1=d;return}if(u=u.sibling,u!==null){Q1=u;return}Q1=u=a}while(u!==null);e2===0&&(e2=5)}function I4(a,u,d){var _=T1,C=R2.transition;try{R2.transition=null,T1=1,lt(a,u,d,_)}finally{R2.transition=C,T1=_}return null}function lt(a,u,d,_){do t3();while(g4!==null);if(M1&6)throw Error(n(327));d=a.finishedWork;var C=a.finishedLanes;if(d===null)return null;if(a.finishedWork=null,a.finishedLanes=0,d===a.current)throw Error(n(177));a.callbackNode=null,a.callbackPriority=0;var I=d.lanes|d.childLanes;if(z5(a,I),a===i2&&(Q1=i2=null,l2=0),!(d.subtreeFlags&2064)&&!(d.flags&2064)||A5||(A5=!0,B9(X0,function(){return t3(),null})),I=(d.flags&15990)!==0,d.subtreeFlags&15990||I){I=R2.transition,R2.transition=null;var U=T1;T1=1;var K=M1;M1|=4,e7.current=null,nt(a,d),_9(d,a),Me(u6),U3=!!l6,u6=l6=null,a.current=d,rt(d),i1(),M1=K,T1=U,R2.transition=I}else a.current=d;if(A5&&(A5=!1,g4=a,C5=C),I=a.pendingLanes,I===0&&(p4=null),O1(d.stateNode),D2(a,R0()),u!==null)for(_=a.onRecoverableError,d=0;d<u.length;d++)C=u[d],_(C.value,{componentStack:C.stack,digest:C.digest});if(S5)throw S5=!1,a=r7,r7=null,a;return C5&1&&a.tag!==0&&t3(),I=a.pendingLanes,I&1?a===i7?R3++:(R3=0,i7=a):R3=0,c4(),null}function t3(){if(g4!==null){var a=O3(C5),u=R2.transition,d=T1;try{if(R2.transition=null,T1=16>a?16:a,g4===null)var _=!1;else{if(a=g4,g4=null,C5=0,M1&6)throw Error(n(331));var C=M1;for(M1|=4,s1=a.current;s1!==null;){var I=s1,U=I.child;if(s1.flags&16){var K=I.deletions;if(K!==null){for(var i0=0;i0<K.length;i0++){var b0=K[i0];for(s1=b0;s1!==null;){var z0=s1;switch(z0.tag){case 0:case 11:case 15:T3(8,z0,I)}var q0=z0.child;if(q0!==null)q0.return=z0,s1=q0;else for(;s1!==null;){z0=s1;var $0=z0.sibling,t1=z0.return;if(m9(z0),z0===b0){s1=null;break}if($0!==null){$0.return=t1,s1=$0;break}s1=t1}}}var o1=I.alternate;if(o1!==null){var l1=o1.child;if(l1!==null){o1.child=null;do{var W1=l1.sibling;l1.sibling=null,l1=W1}while(l1!==null)}}s1=I}}if(I.subtreeFlags&2064&&U!==null)U.return=I,s1=U;else e:for(;s1!==null;){if(I=s1,I.flags&2048)switch(I.tag){case 0:case 11:case 15:T3(9,I,I.return)}var x0=I.sibling;if(x0!==null){x0.return=I.return,s1=x0;break e}s1=I.return}}var l0=a.current;for(s1=l0;s1!==null;){U=s1;var v0=U.child;if(U.subtreeFlags&2064&&v0!==null)v0.return=U,s1=v0;else e:for(U=l0;s1!==null;){if(K=s1,K.flags&2048)try{switch(K.tag){case 0:case 11:case 15:b5(9,K)}}catch(f1){Y1(K,K.return,f1)}if(K===U){s1=null;break e}var V0=K.sibling;if(V0!==null){V0.return=K.return,s1=V0;break e}s1=K.return}}if(M1=C,c4(),E1&&typeof E1.onPostCommitFiberRoot=="function")try{E1.onPostCommitFiberRoot(S1,a)}catch{}_=!0}return _}finally{T1=d,R2.transition=u}}return!1}function I9(a,u,d){u=Z4(d,u),u=K8(a,u,1),a=h4(a,u,1),u=m2(),a!==null&&(_4(a,1,u),D2(a,u))}function Y1(a,u,d){if(a.tag===3)I9(a,a,d);else for(;u!==null;){if(u.tag===3){I9(u,a,d);break}else if(u.tag===1){var _=u.stateNode;if(typeof u.type.getDerivedStateFromError=="function"||typeof _.componentDidCatch=="function"&&(p4===null||!p4.has(_))){a=Z4(d,a),a=Z8(u,a,1),u=h4(u,a,1),a=m2(),u!==null&&(_4(u,1,a),D2(u,a));break}}u=u.return}}function ut(a,u,d){var _=a.pingCache;_!==null&&_.delete(u),u=m2(),a.pingedLanes|=a.suspendedLanes&d,i2===a&&(l2&d)===d&&(e2===4||e2===3&&(l2&130023424)===l2&&500>R0()-n7?T4(a,0):t7|=d),D2(a,u)}function P9(a,u){u===0&&(a.mode&1?(u=b1,b1<<=1,!(b1&130023424)&&(b1=4194304)):u=1);var d=m2();a=Z2(a,u),a!==null&&(_4(a,u,d),D2(a,d))}function ct(a){var u=a.memoizedState,d=0;u!==null&&(d=u.retryLane),P9(a,d)}function ft(a,u){var d=0;switch(a.tag){case 13:var _=a.stateNode,C=a.memoizedState;C!==null&&(d=C.retryLane);break;case 19:_=a.stateNode;break;default:throw Error(n(314))}_!==null&&_.delete(u),P9(a,d)}var R9;R9=function(a,u,d){if(a!==null)if(a.memoizedProps!==u.pendingProps||v2.current)_2=!0;else{if(!(a.lanes&d)&&!(u.flags&128))return _2=!1,Qe(a,u,d);_2=!!(a.flags&131072)}else _2=!1,U1&&u.flags&1048576&&d8(u,s5,u.index);switch(u.lanes=0,u.tag){case 2:var _=u.type;y5(a,u),a=u.pendingProps;var C=j4(u,u2.current);W4(u,d),C=P6(null,u,_,a,C,d);var I=R6();return u.flags|=1,typeof C=="object"&&C!==null&&typeof C.render=="function"&&C.$$typeof===void 0?(u.tag=1,u.memoizedState=null,u.updateQueue=null,y2(_)?(I=!0,n5(u)):I=!1,u.memoizedState=C.state!==null&&C.state!==void 0?C.state:null,A6(u),C.updater=w5,u.stateNode=C,C._reactInternals=u,z6(u,_,a,d),u=H6(null,u,_,!0,I,d)):(u.tag=0,U1&&I&&m6(u),g2(null,u,C,d),u=u.child),u;case 16:_=u.elementType;e:{switch(y5(a,u),a=u.pendingProps,C=_._init,_=C(_._payload),u.type=_,C=u.tag=dt(_),a=$2(_,a),C){case 0:u=j6(null,u,_,a,d);break e;case 1:u=o9(null,u,_,a,d);break e;case 11:u=t9(null,u,_,a,d);break e;case 14:u=n9(null,u,_,$2(_.type,a),d);break e}throw Error(n(306,_,""))}return u;case 0:return _=u.type,C=u.pendingProps,C=u.elementType===_?C:$2(_,C),j6(a,u,_,C,d);case 1:return _=u.type,C=u.pendingProps,C=u.elementType===_?C:$2(_,C),o9(a,u,_,C,d);case 3:e:{if(a9(u),a===null)throw Error(n(387));_=u.pendingProps,I=u.memoizedState,C=I.element,b8(a,u),f5(u,_,null,d);var U=u.memoizedState;if(_=U.element,I.isDehydrated)if(I={element:_,isDehydrated:!1,cache:U.cache,pendingSuspenseBoundaries:U.pendingSuspenseBoundaries,transitions:U.transitions},u.updateQueue.baseState=I,u.memoizedState=I,u.flags&256){C=Z4(Error(n(423)),u),u=l9(a,u,_,d,C);break e}else if(_!==C){C=Z4(Error(n(424)),u),u=l9(a,u,_,d,C);break e}else for(C2=a4(u.stateNode.containerInfo.firstChild),A2=u,U1=!0,O2=null,d=y8(u,null,_,d),u.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Y4(),_===C){u=J2(a,u,d);break e}g2(a,u,_,d)}u=u.child}return u;case 5:return S8(u),a===null&&v6(u),_=u.type,C=u.pendingProps,I=a!==null?a.memoizedProps:null,U=C.children,c6(_,C)?U=null:I!==null&&c6(_,I)&&(u.flags|=32),s9(a,u),g2(a,u,U,d),u.child;case 6:return a===null&&v6(u),null;case 13:return u9(a,u,d);case 4:return C6(u,u.stateNode.containerInfo),_=u.pendingProps,a===null?u.child=X4(u,null,_,d):g2(a,u,_,d),u.child;case 11:return _=u.type,C=u.pendingProps,C=u.elementType===_?C:$2(_,C),t9(a,u,_,C,d);case 7:return g2(a,u,u.pendingProps,d),u.child;case 8:return g2(a,u,u.pendingProps.children,d),u.child;case 12:return g2(a,u,u.pendingProps.children,d),u.child;case 10:e:{if(_=u.type._context,C=u.pendingProps,I=u.memoizedProps,U=C.value,$1(l5,_._currentValue),_._currentValue=U,I!==null)if(N2(I.value,U)){if(I.children===C.children&&!v2.current){u=J2(a,u,d);break e}}else for(I=u.child,I!==null&&(I.return=u);I!==null;){var K=I.dependencies;if(K!==null){U=I.child;for(var i0=K.firstContext;i0!==null;){if(i0.context===_){if(I.tag===1){i0=Q2(-1,d&-d),i0.tag=2;var b0=I.updateQueue;if(b0!==null){b0=b0.shared;var z0=b0.pending;z0===null?i0.next=i0:(i0.next=z0.next,z0.next=i0),b0.pending=i0}}I.lanes|=d,i0=I.alternate,i0!==null&&(i0.lanes|=d),E6(I.return,d,u),K.lanes|=d;break}i0=i0.next}}else if(I.tag===10)U=I.type===u.type?null:I.child;else if(I.tag===18){if(U=I.return,U===null)throw Error(n(341));U.lanes|=d,K=U.alternate,K!==null&&(K.lanes|=d),E6(U,d,u),U=I.sibling}else U=I.child;if(U!==null)U.return=I;else for(U=I;U!==null;){if(U===u){U=null;break}if(I=U.sibling,I!==null){I.return=U.return,U=I;break}U=U.return}I=U}g2(a,u,C.children,d),u=u.child}return u;case 9:return C=u.type,_=u.pendingProps.children,W4(u,d),C=I2(C),_=_(C),u.flags|=1,g2(a,u,_,d),u.child;case 14:return _=u.type,C=$2(_,u.pendingProps),C=$2(_.type,C),n9(a,u,_,C,d);case 15:return r9(a,u,u.type,u.pendingProps,d);case 17:return _=u.type,C=u.pendingProps,C=u.elementType===_?C:$2(_,C),y5(a,u),u.tag=1,y2(_)?(a=!0,n5(u)):a=!1,W4(u,d),G8(u,_,C),z6(u,_,C,d),H6(null,u,_,!0,a,d);case 19:return f9(a,u,d);case 22:return i9(a,u,d)}throw Error(n(156,u.tag))};function B9(a,u){return g1(a,u)}function ht(a,u,d,_){this.tag=a,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=u,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=_,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function B2(a,u,d,_){return new ht(a,u,d,_)}function c7(a){return a=a.prototype,!(!a||!a.isReactComponent)}function dt(a){if(typeof a=="function")return c7(a)?1:0;if(a!=null){if(a=a.$$typeof,a===X)return 11;if(a===n0)return 14}return 2}function w4(a,u){var d=a.alternate;return d===null?(d=B2(a.tag,u,a.key,a.mode),d.elementType=a.elementType,d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=u,d.type=a.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=a.flags&14680064,d.childLanes=a.childLanes,d.lanes=a.lanes,d.child=a.child,d.memoizedProps=a.memoizedProps,d.memoizedState=a.memoizedState,d.updateQueue=a.updateQueue,u=a.dependencies,d.dependencies=u===null?null:{lanes:u.lanes,firstContext:u.firstContext},d.sibling=a.sibling,d.index=a.index,d.ref=a.ref,d}function T5(a,u,d,_,C,I){var U=2;if(_=a,typeof a=="function")c7(a)&&(U=1);else if(typeof a=="string")U=5;else e:switch(a){case $:return P4(d.children,C,I,u);case R:U=8,C|=8;break;case O:return a=B2(12,d,u,C|2),a.elementType=O,a.lanes=I,a;case o0:return a=B2(13,d,u,C),a.elementType=o0,a.lanes=I,a;case Z:return a=B2(19,d,u,C),a.elementType=Z,a.lanes=I,a;case S0:return I5(d,C,I,u);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case L:U=10;break e;case z:U=9;break e;case X:U=11;break e;case n0:U=14;break e;case s0:U=16,_=null;break e}throw Error(n(130,a==null?a:typeof a,""))}return u=B2(U,d,u,C),u.elementType=a,u.type=_,u.lanes=I,u}function P4(a,u,d,_){return a=B2(7,a,_,u),a.lanes=d,a}function I5(a,u,d,_){return a=B2(22,a,_,u),a.elementType=S0,a.lanes=d,a.stateNode={isHidden:!1},a}function f7(a,u,d){return a=B2(6,a,null,u),a.lanes=d,a}function h7(a,u,d){return u=B2(4,a.children!==null?a.children:[],a.key,u),u.lanes=d,u.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},u}function pt(a,u,d,_,C){this.tag=u,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=r3(0),this.expirationTimes=r3(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=r3(0),this.identifierPrefix=_,this.onRecoverableError=C,this.mutableSourceEagerHydrationData=null}function d7(a,u,d,_,C,I,U,K,i0){return a=new pt(a,u,d,K,i0),u===1?(u=1,I===!0&&(u|=8)):u=0,I=B2(3,null,null,u),a.current=I,I.stateNode=a,I.memoizedState={element:_,isDehydrated:d,cache:null,transitions:null,pendingSuspenseBoundaries:null},A6(I),a}function gt(a,u,d){var _=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:N,key:_==null?null:""+_,children:a,containerInfo:u,implementation:d}}function N9(a){if(!a)return u4;a=a._reactInternals;e:{if(m0(a)!==a||a.tag!==1)throw Error(n(170));var u=a;do{switch(u.tag){case 3:u=u.stateNode.context;break e;case 1:if(y2(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}}u=u.return}while(u!==null);throw Error(n(171))}if(a.tag===1){var d=a.type;if(y2(d))return c8(a,d,u)}return u}function O9(a,u,d,_,C,I,U,K,i0){return a=d7(d,_,!0,a,C,I,U,K,i0),a.context=N9(null),d=a.current,_=m2(),C=m4(d),I=Q2(_,C),I.callback=u??null,h4(d,I,C),a.current.lanes=C,_4(a,C,_),D2(a,_),a}function P5(a,u,d,_){var C=u.current,I=m2(),U=m4(C);return d=N9(d),u.context===null?u.context=d:u.pendingContext=d,u=Q2(I,U),u.payload={element:a},_=_===void 0?null:_,_!==null&&(u.callback=_),a=h4(C,u,U),a!==null&&(U2(a,C,U,I),c5(a,C,U)),U}function R5(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function $9(a,u){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var d=a.retryLane;a.retryLane=d!==0&&d<u?d:u}}function p7(a,u){$9(a,u),(a=a.alternate)&&$9(a,u)}var L9=typeof reportError=="function"?reportError:function(a){console.error(a)};function g7(a){this._internalRoot=a}B5.prototype.render=g7.prototype.render=function(a){var u=this._internalRoot;if(u===null)throw Error(n(409));P5(a,u,null,null)},B5.prototype.unmount=g7.prototype.unmount=function(){var a=this._internalRoot;if(a!==null){this._internalRoot=null;var u=a.containerInfo;k4(function(){P5(null,a,null,null)}),u[X2]=null}};function B5(a){this._internalRoot=a}B5.prototype.unstable_scheduleHydration=function(a){if(a){var u=b7();a={blockedOn:null,target:a,priority:u};for(var d=0;d<i4.length&&u!==0&&u<i4[d].priority;d++);i4.splice(d,0,a),d===0&&S7(a)}};function m7(a){return!(!a||a.nodeType!==1&&a.nodeType!==9&&a.nodeType!==11)}function N5(a){return!(!a||a.nodeType!==1&&a.nodeType!==9&&a.nodeType!==11&&(a.nodeType!==8||a.nodeValue!==" react-mount-point-unstable "))}function z9(){}function mt(a,u,d,_,C){if(C){if(typeof _=="function"){var I=_;_=function(){var b0=R5(U);I.call(b0)}}var U=O9(u,_,a,0,null,!1,!1,"",z9);return a._reactRootContainer=U,a[X2]=U.current,w3(a.nodeType===8?a.parentNode:a),k4(),U}for(;C=a.lastChild;)a.removeChild(C);if(typeof _=="function"){var K=_;_=function(){var b0=R5(i0);K.call(b0)}}var i0=d7(a,0,!1,null,null,!1,!1,"",z9);return a._reactRootContainer=i0,a[X2]=i0.current,w3(a.nodeType===8?a.parentNode:a),k4(function(){P5(u,i0,d,_)}),i0}function O5(a,u,d,_,C){var I=d._reactRootContainer;if(I){var U=I;if(typeof C=="function"){var K=C;C=function(){var i0=R5(U);K.call(i0)}}P5(u,U,a,C)}else U=mt(d,u,a,C,_);return R5(U)}$3=function(a){switch(a.tag){case 3:var u=a.stateNode;if(u.current.memoizedState.isDehydrated){var d=j1(u.pendingLanes);d!==0&&(i3(u,d|1),D2(u,R0()),!(M1&6)&&(e3=R0()+500,c4()))}break;case 13:k4(function(){var _=Z2(a,1);if(_!==null){var C=m2();U2(_,a,1,C)}}),p7(a,1)}},U5=function(a){if(a.tag===13){var u=Z2(a,134217728);if(u!==null){var d=m2();U2(u,a,134217728,d)}p7(a,134217728)}},_7=function(a){if(a.tag===13){var u=m4(a),d=Z2(a,u);if(d!==null){var _=m2();U2(d,a,u,_)}p7(a,u)}},b7=function(){return T1},D7=function(a,u){var d=T1;try{return T1=a,u()}finally{T1=d}},K1=function(a,u,d){switch(u){case"input":if(r1(a,d),u=d.name,d.type==="radio"&&u!=null){for(d=a;d.parentNode;)d=d.parentNode;for(d=d.querySelectorAll("input[name="+JSON.stringify(""+u)+'][type="radio"]'),u=0;u<d.length;u++){var _=d[u];if(_!==a&&_.form===a.form){var C=e5(_);if(!C)throw Error(n(90));c1(_),r1(_,C)}}}break;case"textarea":t0(a,d);break;case"select":u=d.value,u!=null&&K0(a,!!d.multiple,u,!1)}},o2=a7,A=k4;var xt={usingClientEntryPoint:!1,Events:[_3,U4,e5,Z1,I1,a7]},B3={findFiberByHostInstance:b4,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},wt={bundleType:B3.bundleType,version:B3.version,rendererPackageName:B3.rendererPackageName,rendererConfig:B3.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){return a=N0(a),a===null?null:a.stateNode},findFiberByHostInstance:B3.findFiberByHostInstance,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var $5=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!$5.isDisabled&&$5.supportsFiber)try{S1=$5.inject(wt),E1=$5}catch{}}return reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=xt,reactDom_production_min.createPortal=function(a,u){var d=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!m7(u))throw Error(n(200));return gt(a,u,null,d)},reactDom_production_min.createRoot=function(a,u){if(!m7(a))throw Error(n(299));var d=!1,_="",C=L9;return u!=null&&(u.unstable_strictMode===!0&&(d=!0),u.identifierPrefix!==void 0&&(_=u.identifierPrefix),u.onRecoverableError!==void 0&&(C=u.onRecoverableError)),u=d7(a,1,!1,null,null,d,!1,_,C),a[X2]=u.current,w3(a.nodeType===8?a.parentNode:a),new g7(u)},reactDom_production_min.findDOMNode=function(a){if(a==null)return null;if(a.nodeType===1)return a;var u=a._reactInternals;if(u===void 0)throw typeof a.render=="function"?Error(n(188)):(a=Object.keys(a).join(","),Error(n(268,a)));return a=N0(u),a=a===null?null:a.stateNode,a},reactDom_production_min.flushSync=function(a){return k4(a)},reactDom_production_min.hydrate=function(a,u,d){if(!N5(u))throw Error(n(200));return O5(null,a,u,!0,d)},reactDom_production_min.hydrateRoot=function(a,u,d){if(!m7(a))throw Error(n(405));var _=d!=null&&d.hydratedSources||null,C=!1,I="",U=L9;if(d!=null&&(d.unstable_strictMode===!0&&(C=!0),d.identifierPrefix!==void 0&&(I=d.identifierPrefix),d.onRecoverableError!==void 0&&(U=d.onRecoverableError)),u=O9(u,null,a,1,d??null,C,!1,I,U),a[X2]=u.current,w3(a),_)for(a=0;a<_.length;a++)d=_[a],C=d._getVersion,C=C(d._source),u.mutableSourceEagerHydrationData==null?u.mutableSourceEagerHydrationData=[d,C]:u.mutableSourceEagerHydrationData.push(d,C);return new B5(u)},reactDom_production_min.render=function(a,u,d){if(!N5(u))throw Error(n(200));return O5(null,a,u,!1,d)},reactDom_production_min.unmountComponentAtNode=function(a){if(!N5(a))throw Error(n(40));return a._reactRootContainer?(k4(function(){O5(null,null,a,!1,function(){a._reactRootContainer=null,a[X2]=null})}),!0):!1},reactDom_production_min.unstable_batchedUpdates=a7,reactDom_production_min.unstable_renderSubtreeIntoContainer=function(a,u,d,_){if(!N5(d))throw Error(n(200));if(a==null||a._reactInternals===void 0)throw Error(n(38));return O5(a,u,d,!1,_)},reactDom_production_min.version="18.3.1-next-f1338f8080-20240426",reactDom_production_min}var hasRequiredReactDom;function requireReactDom(){if(hasRequiredReactDom)return reactDom.exports;hasRequiredReactDom=1;function e(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}return e(),reactDom.exports=requireReactDom_production_min(),reactDom.exports}var hasRequiredClient;function requireClient(){if(hasRequiredClient)return client;hasRequiredClient=1;var e=requireReactDom();return client.createRoot=e.createRoot,client.hydrateRoot=e.hydrateRoot,client}var clientExports=requireClient();const sizes=[784,80,80,10],weights=JSON.parse("[[[0.05586913823245088,0.03351558722570602,-0.01815114966386813,-0.004204548808655493,0.04936859233056898,0.15625783578221236,-0.023300444862471674,0.018192880532726965,-0.019412369890370835,-0.12445995776666596,-0.000035424276409889435,-0.039247660625413724,-0.04327565888508903,0.008376451303538757,-0.002364445532717362,0.04397486441538621,-0.037461261968732486,-0.024776981885785827,-0.06493493074362186,-0.015784676922519184,0.02621306543586427,0.10214325184710428,0.07097389939899378,-0.06785899911139755,0.017120158558141037,-0.0009535220476372128,0.030123345143032314,0.01661093388496651,0.029917066478470228,-0.08556177986293004,-0.031990374706208205,-0.022530047504423993,0.022243793025153266,0.035538664748538736,0.10796919805787036,0.05180366806733849,0.022112138823388937,-0.041522909106905426,0.04711994096856336,0.046404440130122085,-0.07119566663528558,-0.04837806582536839,-0.07374010926323617,-0.02527571110749074,0.0012092029262798394,-0.026167133212016434,0.03310634874607307,0.014070900104191332,0.11370741873858477,0.039857333774949426,-0.05048677300979094,-0.003338290560276987,0.05759419647183926,0.03931113650582371,0.07261790545326088,-0.01760123774189591,0.008270792001640291,-0.02327034719100313,-0.04986892518145559,0.05056422383348031,0.024150104245281943,0.03177201578354085,-0.007388041283514317,-0.06918778142958212,-0.01799889291114142,-0.019707165758327524,-0.01359964897763836,0.09926440350623028,-0.06918243297858569,0.04020779864680928,-0.05537472653064649,-0.07375752559194647,-0.07206323556161648,-0.008665964814315981,-0.012961356499261518,0.010631122475813699,0.022736639903297436,0.04095706254930443,0.06873644019319136,0.002263146190827378,0.06515288741798535,-0.023034079362652046,0.027039541107748546,-0.028719503541293954,-0.004468331349158464,-0.031888185068425993,0.03134867186924084,0.046015471865480814,0.012355888247890244,0.003930146120589483,-0.022508947902923338,0.015268886676038358,0.08717347176181338,-0.09422284329391438,-0.002193937662417588,-0.02742360715471737,-0.01621512441865853,0.039756733766778074,-0.07208131597279496,-0.024493584129702234,0.09053510738632571,0.056765249112568465,-0.12064076077116126,0.0437136381438437,-0.02341385346423718,-0.09855114786519407,0.04354434596485903,0.008183215467443864,-0.004978513729871771,0.05350018482859966,0.030443451462911674,0.06089401926573596,-0.017556227846074992,-0.0007729103121190845,0.04936988526931094,-0.013542907616821729,0.06986822708317929,-0.0364323035266306,0.020433678847153303,0.04431818026599343,-0.0036207712884697395,0.005639994277540613,-0.03347291157844693,-0.010942772761949434,-0.016431759038184224,-0.049600272859893255,0.03168790863007353,-0.057694481682448354,0.14321563918058444,-0.012729720246691254,-0.01911640420295241,-0.06672017961161653,-0.01797100536072101,-0.0036825081916811797,0.02004844715818959,-0.0011617605742668565,-0.002494412940405186,-0.015438947496522188,-0.1083166580337578,-0.0035358032067247824,0.03980210260353898,0.054857673562566614,0.00015799326415739254,0.11187238945018518,0.0018143866257377603,-0.06872491201453061,0.022689954280770266,0.14597050368867842,-0.019594445900625666,-0.08179309635734225,-0.03655469947278876,0.0018958674571657814,-0.011097713148787498,-0.08232773957878689,0.0699746232362475,0.018753188428994573,0.05059239686043701,0.06303908570363213,0.026158827553468416,-0.04948111533094221,-0.013759690103495406,-0.01756203096604833,-0.07963227509652676,0.03633381678088527,-0.024601860203751973,0.014625865749234412,0.019989546830706185,-0.002293472151507526,0.022767274235518786,0.026064425208282442,0.0018517434237996261,0.06944231557091807,-0.10421704212668943,-0.012028124075987757,0.040281352131774084,0.004615115967944333,-0.02521751226741238,-0.02346765079433392,-0.03981045197640325,0.044883317524809105,0.03855203933996819,0.022257788269889684,0.04816877032511445,-0.02585002461341692,-0.14517628944801075,0.041275146345429586,-0.0037873386481287966,-0.044008029362631346,0.025568740221930245,0.07331187028976832,-0.044460708569311495,0.024006399498978013,0.06357154000081071,-0.012755916523847928,0.04862495359239124,0.027489132782880014,-0.05456418501004193,-0.0667063854279025,0.024381077460809957,0.026297298521929073,-0.026698801258752687,0.1432808629545872,0.10436875432217227,0.03168976941330541,0.07538016071037647,0.04636927467127364,0.0516428618207533,-0.042086316017193086,-0.048533936788077915,0.011916796221769374,0.05025550839261286,0.07002849005512293,-0.004600573480985973,-0.16678305967761725,0.07107900025396635,-0.011733042695778682,0.048949437578672594,-0.07865701578606178,0.02838875640601856,0.10753912658906789,0.024287442400713347,-0.005705760525301845,-0.010754333668247901,-0.06944269954083164,0.06382757532484176,0.027334505623428602,0.06825820132878407,-0.0744720803209508,0.009498031793457706,0.026251024852311386,-0.06985315122837786,-0.04225392292844462,0.00016564260194028388,0.0845158196522636,0.07040433422981422,-0.06881212688026572,0.039822563538804215,0.03156779725596895,0.05155826031320648,0.007644345571627304,-0.037767122654238636,-0.03193006048438879,0.07761610674048627,0.01481622802660417,-0.03787869480029931,-0.0503123468677308,0.07031247267257602,0.036300221554754944,-0.014444376738715844,-0.029743635866643955,-0.05691120055029713,0.05322069499183921,-0.05117514211324204,-0.05907778226156611,-0.031260367885103196,-0.026199488617534825,0.04771314629573966,-0.07526883552257117,0.0967399932406983,-0.02345662299299303,-0.05652056458203875,-0.003550625146197566,0.019362097432042393,-0.05434595698208232,-0.010736123881401213,0.04937892083223364,-0.04813149897773179,0.10696322779682794,-0.04677253000023452,0.05347552605584783,0.006310411642855667,0.030968170680616608,0.05830370489212311,-0.04675846115575579,-0.02462586172045785,0.048828802179830016,0.07600826855889485,-0.08701954537678037,-0.04483237492282324,0.14291758135276075,0.028531509099985024,0.08825379496110168,0.058408707954363724,-0.07716314948278118,0.012363049731071623,0.09539329544443804,0.018541149332255716,0.05792226284941815,0.056523878866547944,-0.057420095775036054,0.018006746004889704,0.1065568206565204,-0.024514224942985687,-0.02137349179133514,-0.0348360011676339,-0.006970582211163985,-0.08424802472304321,0.05869078728718128,-0.0777367743576158,-0.07013100774553774,0.04273672161510219,-0.0195468657319307,0.023836704757298096,0.12736465931798363,0.0266077051693219,0.0673073185855068,-0.048079392304292985,-0.051559705319279066,-0.0034023315901507587,-0.06717449478066044,0.1272006554557509,-0.042766885224511574,-0.09530287266666555,-0.06631130499519426,0.08842744982296229,0.10252521256898248,0.020773565153608575,-0.07738141077580656,-0.0017248991774943025,0.05429385495984187,-0.028444307743075173,0.015748090759922458,-0.09419197604810263,0.11989326473012561,-0.051482549715962965,-0.10981931468383796,0.04395953900833883,-0.026434153718473026,0.009346209748274253,0.0020463838901329167,-0.03943421089086631,0.018703343002405632,-0.06917461183408231,0.03063171264941061,0.024044440935017983,-0.01451397812095083,-0.08094681999608841,0.050465963001089235,0.027343996237157074,0.030826046845168157,-0.0682407540338874,-0.0020147318259357,0.0298437738852377,0.0037808316384626253,-0.1277223357229495,0.07054180243168928,-0.0501445916842909,-0.061115114067569046,-0.06109011352924769,0.012905083492216007,-0.04928017336638837,-0.017178756075327265,-0.04468827217238478,0.03251670409412749,0.005506036195061006,-0.08118584132813526,-0.008171664280533904,-0.02491648585341957,0.028171865238458306,0.030508438974352008,0.10324400599402925,0.011889134605456745,-0.14262670437938238,0.05880999224518989,0.007844449943844046,-0.05036430154575145,-0.06996210724873692,-0.023858998383916252,0.006307496382160824,0.0262996447363659,0.03490779162245609,0.10002351587779625,0.041853789242254594,0.0033421152849706435,-0.05434368616913139,0.0017254608871421578,0.017317237274508287,-0.021350149213363846,-0.053762533769641734,-0.05690837054127539,-0.012332477295838033,-0.07771443159328408,-0.005150888905229574,-0.042100202894360526,0.03417331936940389,0.015607646828341147,0.04784748611475308,-0.08890677693997472,-0.0007238971673282839,0.013527549110268192,0.04795096017501918,-0.021097836480187624,-0.025212368763108853,-0.017164889771545608,-0.06279435740185525,0.0019859155580924876,0.008800480960464537,-0.005102544816897661,0.06406754426539303,0.06120990594326254,-0.04966412460916116,-0.04940441465824774,0.012113481439204652,-0.031023064587438712,0.019969837781104238,-0.08231831537601249,-0.03222781587784378,-0.017884955351176186,0.02501635893798678,0.0696153874164354,-0.07597952805817916,0.012753486850563059,-0.023804373851007296,-0.051826851597102236,0.05563383167808583,0.07824669714573848,-0.020926817383418148,-0.010414500404725904,-0.011644859575644895,-0.01553588601678188,-0.0487621122140665,-0.07515329054317982,0.10599062342915741,-0.0379857052523997,-0.02637527561489131,0.01419516341247686,0.005169425358148517,0.042229043900813175,0.00005762899135557557,-0.06514321129545356,-0.042471524676662896,0.08605897928628772,0.08845646780962797,0.02146083630170237,-0.0605865222001622,-0.015862391451937484,0.00008247801347653726,-0.051339306381380796,-0.004339851496984868,-0.04584645547212297,-0.051957119583834435,-0.031042258330461474,0.06281111219560773,-0.008838562342018406,0.0006819135304924168,0.08671587993722686,-0.09316677448213612,-0.004380796551343937,0.0016173456641808534,-0.020449582220975638,-0.04667948935631918,0.07653039206202997,-0.08505670815503935,0.09871419936167822,0.044543962799456584,0.03873370294272199,-0.0011302183399124154,-0.0844033252236591,-0.11822487057094709,0.04891990632577862,-0.05868502771965769,-0.08324544731334566,-0.07647235508223907,-0.018422660659684616,-0.08342411485786587,-0.05135350612881302,-0.06738704055479453,-0.06409294374984169,-0.05203301482253082,0.12130239681400048,-0.0008798474374212517,-0.05946058582040234,-0.06947625086736448,-0.016144149628617717,0.03692873235814783,0.03751385937903558,0.0012281339270179955,-0.03334739608556628,0.12843710824728283,-0.07739685820911969,-0.059460075203168164,0.04176411895564862,-0.06157859027395231,0.10479267562841355,-0.07354145252324874,-0.030607794497777185,0.02418808002868768,-0.08768562772241065,0.09713545345646668,-0.09251971565577886,-0.00002825348725365009,-0.05254946261600979,-0.10667136097401221,0.039077464207321506,0.02548227280932629,0.04657005634068663,0.05415240068043751,-0.04378615742093006,0.004068322592766901,0.06571689466677637,0.025312789096575587,-0.014643300252203522,-0.02431394082715995,-0.00977467375668698,0.09107156281282712,0.00551189534405642,0.025332949848783134,-0.01057641221953024,0.05607845625029177,0.016388140371415647,0.12037674130343509,0.025049687964660502,0.028830947021931848,0.018829543203312732,-0.04169796168926233,-0.03875034047922188,0.02495610169391763,0.1264053956172819,-0.015315599731669531,-0.008874841194907668,-0.026466636070303983,-0.03591753960127214,-0.04695067196963763,0.04723101305766349,0.06031737746298511,-0.02971871699771057,-0.019849105443358193,-0.06950581013261653,0.018868080412446545,-0.030600890810023453,-0.08650810575175889,-0.00012494867567843583,-0.0664064487563368,0.019256840665026996,0.03841355663301487,-0.011672327510988685,0.06746320395278775,0.10367297710603868,0.05213236641240446,0.04196857071390014,0.060614095078435654,-0.04219470858839058,-0.023480912376641783,-0.06317502634955789,-0.08619474971794534,0.005765794948008509,-0.023058193495442993,0.07005541067540273,-0.04163807507472246,0.026592475885314406,-0.022869922737803843,-0.007529112733014279,-0.05620383325653675,-0.06082952282475685,0.07452808486844736,-0.04038947172621036,0.010097465357682363,-0.04549601785301348,-0.0025497104689310556,0.07322737162533062,-0.0037173942238653487,-0.013754406651264739,0.040148498860545286,0.04334288304054549,-0.014301308274095087,0.02387098563984226,-0.04052407163576436,0.1089544810512076,0.07058547425868777,-0.08897548402714814,-0.0886243154343255,-0.02080932477913621,0.023299576181093597,0.024702348918489526,-0.09658797435384348,-0.023832032510152684,-0.0553679268258166,0.05154422451864227,-0.0291057109060557,-0.033881593319088965,-0.06243799313192459,-0.03833600632813606,-0.05035604074646799,-0.09771082019082478,0.08059482740647517,0.0062405585971839145,0.0016600716485028648,0.08513621882638547,0.0568314363305839,-0.013020975048482116,0.05336990361138671,-0.057555831136175704,-0.0308752912609775,0.06318905143975448,0.052783030043730784,-0.008761543555305212,0.0446202360900192,0.02521432647738585,-0.11754731890163628,0.16151504641462625,0.1113443601826385,-0.08671220308199007,-0.05640511304600311,-0.014706591023794641,-0.01881303591901403,0.033739489744869844,-0.015612957633513433,-0.023061957299319674,-0.013106395779129547,-0.03511754195428291,0.055133549918957955,-0.09150465285152316,0.01818697064044437,0.056490379057024885,0.015920772941734416,-0.07277861693232371,-0.03217492081145404,-0.022069782009035924,-0.038337733243822746,-0.01822776529622656,0.013072280282203313,0.014183490046854576,-0.09701292975504379,-0.07166095990326216,0.07544154192278149,-0.05651560761063418,-0.04848698104689073,0.07264651928979149,0.02829635865166499,-0.08385153843372557,-0.02205950729428884,0.09126251390523664,0.02514457159287896,0.01566552809278852,0.09041311334886458,-0.03861208304061982,-0.017486484965967827,-0.01053009315424932,0.024897887607712398,0.013077592011376118,0.015856453210660756,0.0440468788808556,0.009695468751664845,-0.06854626526116316,0.05195217546459385,0.04006500429458617,-0.10026315430299067,-0.06914901798788334,0.011429853889141353,0.04269767818040728,-0.03554705125377647,-0.06605516436519168,-0.08497704290163756,-0.022176199473537245,-0.025256565673297048,0.019475228994929306,0.0010549018331230807,-0.054347546845637064,0.016348176442225065,-0.0038089691339204686,0.030980591523529524,0.07192789533598383,0.03548730262924699,0.06320886420959194,-0.004208774696976541,0.005073980947313908,-0.019949897624260346,-0.007005972589202447,0.0664769655078697,0.041561238643491816,0.05536367145887725,0.06828966896268568,-0.03319545542359094,-0.00020998690852222593,0.01719735828113587,0.07455560211212198,0.01458001060962442,0.030075606225220253,0.0548084440061947,-0.10080175745124802,0.023550518128549268,-0.018992252783669554,-0.002325184900686244,-0.02642090142865068,0.0255012679088913,0.02076703227734397,0.004228410092712915,-0.05894796413401369,0.027128707474157215,0.008695049512008578,0.04991197591616146,-0.0024334247076879057,0.04763566785653169,-0.037325362140253185,-0.037333254469944406,0.029648697009986034,-0.018377870551761967,0.03288693309797153,0.03020167730644836,-0.012282606763877182,-0.01664001822803183,0.09789677737778613,-0.008573975774559397,-0.11497757572595643,0.010356458211003138,-0.02375687405255282,-0.017442138355928793,0.008002258110991428,-0.05683743922170252,-0.03308339696965624,0.05215333182624619,0.10623167485034116,-0.04161362358045236,0.0005485291250140302,0.030598754697060096,-0.025473025708689086,-0.0190413744597645,-0.07712995318071635,0.07470393217226685,-0.04827622872003966,-0.02388791762355496,-0.013063801970404836,-0.026071340892830034,0.0210502518096878,-0.09676048925638633,0.03838686768886604,-0.06175542335639651,-0.055171032523077444,-0.025756902454072163,-0.08562536062203112,-0.019032490210336886,0.01208703856497492,0.01699353821888036,0.005347544941271298,0.004841100331085374,-0.02477388303045164,-0.014488709321403562,-0.06423631982819467,-0.006762774777596029,-0.09100866707482629,-0.0016341747244658516,0.08940268980902993,-0.0021732947746738317,-0.02302025456633809,-0.01121541665633571,0.05512111814905984,0.045376996672698525,-0.005148710052919078,-0.020283419692215067,-0.07218761135184913,-0.016709492913805322,-0.021761744818116865,-0.10890379061479141,0.04356932265199855,-0.1140760153890567,0.05451927034725844,-0.025398395213126326,0.098420360558705,0.09181725962614536,-0.03176849714645247,-0.03995291787236851,-0.0463611640898529,0.007946261480362638,-0.03223617015840019,-0.00745140413335783,-0.06171804552257371,-0.030713646934218908,-0.012026454215860159,-0.051485253370141454,-0.00956101310184886,0.020653635191570516,-0.0408293770144704,0.11555085767038534,-0.06295398691802492,-0.03928655961062631,0.004628619067352843,-0.02626593276134386,0.04345946085288713,0.05265483427058148,0.022464756673250878,0.09196893072864923,0.12341484417836131,0.027376834794785577,0.05508639260879238],[0.05325380214221313,0.02195487814243573,0.0481510521428146,-0.002529283821419761,-0.09400718240427049,0.014134846136789241,0.00044551491843413136,-0.07632969670672728,0.02887593533222556,0.03832548776803543,-0.0011915492516779346,-0.03409343834165603,0.009145792775561346,0.06884724722800661,-0.04401864429595051,-0.06465371510013732,0.06066735141230613,-0.008878575023205375,0.017323096174503037,0.06410441909999584,-0.018830671473089863,0.02663830767856936,-0.009051330011695218,-0.0792382586775338,-0.11813985547776296,0.08191288589724538,0.014308807804872101,-0.010853905181544922,-0.018386241833476733,-0.0678488731618536,0.03620400330308104,0.012444257594560745,0.03315725913747161,-0.06254158390107868,-0.0322978651570309,0.014604142583394998,0.02984652863275175,-0.0880891824120808,-0.022557927132422453,-0.06828353635449931,0.011336115477529099,0.015585933289269334,-0.03838493421281177,0.09998763125852514,0.05123542132419378,0.0941668382721017,-0.010441325438313323,0.03814684916259785,0.06258270689927217,-0.02601664702188034,0.055840222331264566,-0.04607831610474772,-0.03473228934672498,-0.03232322811602866,0.020655575997625145,0.02005607947949793,-0.002520456096939757,0.025151259348714625,-0.05141368397376651,-0.03793527650797813,0.0344773107235195,0.023306606527328487,-0.014607815511559357,-0.03444342426396338,-0.08283112268318768,0.06824697853875207,-0.009434707239595556,0.0990159738355122,0.08038285148976095,0.016012584272587865,-0.053932243812266044,-0.11559510398129998,0.09092192182541815,-0.12696805464010452,0.012202257305075456,0.034813113661657784,0.03520631189038877,0.15497287914441518,-0.03219326172951652,0.030982244961791937,-0.0377690083038229,-0.07584176519900883,0.01696990591867888,-0.09177101280846668,0.010230607596949836,-0.006891260871834571,-0.009312996346199972,0.1132384249413607,-0.00018589606757503312,0.10797380003180446,0.005573585589411596,-0.04607376329308504,-0.02822633130788655,-0.09681343119168419,-0.015562778776858802,-0.03843562340231745,-0.06678707151216016,-0.07655558120521971,-0.026835712990421607,0.04745941317490568,-0.046599440493681935,0.07513114971360942,-0.07543632288791396,0.009477324863983828,-0.008575213634345996,-0.12891842980656518,-0.062486584049951124,-0.06347682020822808,0.029723836717853204,0.07998160214348857,0.05781033944969762,-0.00510128741806398,0.06068789343008979,-0.032065058773406624,-0.010482833784047971,0.06259493331921838,-0.005018315323526289,0.05251444237946703,0.010589826167133597,-0.006790705614066371,0.07338577078877882,-0.03569645142910935,-0.07213709463001912,-0.05738876683888543,-0.04536521222852368,-0.08768188735014369,-0.004518743938929027,0.028480184245223406,-0.08412403680262347,0.009300883872864915,0.027625076706297855,0.049389335089474844,-0.043860485450437504,-0.10805995718575037,-0.014476998185194745,0.0690031623411245,0.012916880016892056,-0.04084580930223625,-0.033013503679867794,-0.039455838030670376,0.019251737992844763,0.08029062002265913,-0.008879782120343592,-0.09879383496781743,-0.0923510424587588,0.011760022992450431,0.0936860356781841,-0.04109628109443935,-0.06018947562210539,-0.019447466212925462,-0.12345904701007054,-0.006937948704531692,-0.16956759393000329,-0.16003989721742456,-0.05640118576970768,0.006021653749618291,-0.029219192687540602,0.009256371179419258,-0.02288031358232156,-0.12662684586817058,0.01892026120887413,0.05460011575111126,0.03784441208151702,0.0407009596954042,0.08272650641106158,0.004511847694536915,-0.002806789875628757,-0.07709902098835078,0.04551587537006883,-0.06231276866057591,0.012495525287716507,-0.04519401296257472,0.01761980159771604,-0.02431460242191386,0.007703960869792483,-0.01837573310533832,-0.06818587787771875,-0.05914435148418021,0.03180427530761475,-0.08317414352200225,-0.09040642133674917,-0.10456359190347116,-0.0642853405143866,0.004203395061605377,-0.05873721561354615,-0.02596648552045657,-0.0767980630848608,-0.05769436647913869,-0.10952339185372104,0.01452704483845048,-0.0005661927392574035,0.004567911257327591,-0.026208724792296488,0.027647075220512227,-0.0013569956816708272,0.03649157169740111,-0.006250660471028103,-0.0034255288564040832,-0.0035087300169207997,0.008994782892805586,0.041481717285705294,-0.011279812306150858,0.05943596101777894,0.018555361838570254,-0.04114553350530358,-0.01866149022082188,-0.0666235513653013,0.01832966000710674,-0.12328883463147873,-0.05836904556111108,-0.10236812166821266,-0.007163225327966204,-0.03308234721526628,-0.0018464230930886605,-0.15034955582067716,-0.012845959290182337,-0.006266321217548589,-0.00008981699680063999,0.017191067501129906,0.09361178249944917,-0.00046718063713254153,0.019085144792341288,-0.027775045069962843,0.04593305537480164,0.015908436701670494,0.03488701836396695,0.01089271832768228,-0.061104241864941435,-0.0178433571507333,-0.006658433207319678,0.003996173701534263,0.026835163803656935,-0.05361735810111262,0.05549086263297927,-0.040846437385430055,-0.03111630600693096,-0.12430190166969833,-0.05810557720599363,0.008588072278538233,0.07302960246251644,0.010839422416768996,0.044520370635834146,-0.011028523444869681,-0.020833675139146513,-0.002885473194250413,-0.05838888705593046,0.04284289632400529,-0.019182221859997947,0.03290613345745107,-0.03966171740532895,0.05620603098212742,0.04668997278279544,0.02713484920953196,0.055595649934246635,-0.019667848026178342,0.08949929025638945,-0.033228824740063806,-0.09475819777796153,0.05239299266951874,-0.009238508439751486,0.025673619939814367,-0.013089879277806778,-0.018776138399016797,-0.048578504430138746,-0.03953126247379846,-0.03862464898331316,0.05805794519633423,0.076946608492786,0.12981587941082293,0.13605302304932282,0.07880748176080724,0.032605949347985066,0.06767393248229692,-0.0596415597114049,-0.005245584233037417,0.06868356576585358,0.08118837786266139,0.12129258646251005,0.07364829195082795,0.05342426119433233,-0.03473651505166046,-0.07807801822695924,-0.06578760561470795,0.020185969834784316,0.11078115928268872,-0.06070853829704074,-0.06421775289516525,0.08926916550715695,-0.08566207990315958,0.0012482477274434356,0.030426487459931754,0.062121336588465595,-0.10975877503814822,0.08508721345346879,0.09291650990902878,0.10750382241880015,0.14648486303029523,0.044624486585967245,0.08151061457401344,0.031259778794568455,0.005854901538836331,0.11141162418392295,0.06240790013886622,-0.03898180388260942,-0.033213214975501656,0.01967504473833963,-0.022189916074360924,-0.02614779599884742,0.005417788217234936,-0.050823551383171295,0.07510987818855368,0.02397913017983519,-0.08068735366042136,-0.05566006696872777,-0.06865550330499032,0.0065949592983774894,-0.040017340738411615,-0.02580717816968248,0.0433416677857663,-0.039455891183241845,-0.009796487277973661,0.0095831438020969,0.12427326962017111,0.06657574892485227,0.06788103055197946,-0.020622043562618604,0.0287017918169705,-0.0679929048633889,-0.06930711809440293,0.060470475839835634,0.009109366327612847,-0.04841308728491519,0.13979660619670872,-0.06356797306001206,-0.03151449811412328,-0.05292419979125952,0.0038532612486044137,0.01862469048338798,-0.004689558417476206,-0.07289782622830307,-0.0594905544649408,0.009288000761589922,-0.002532498221010005,0.049091024903224124,0.01945117143567831,-0.048658694269659575,0.013798996612181967,-0.023056303114742212,-0.019483901218275184,-0.01801681929083175,0.10441272532500766,-0.02845141676592464,-0.06732889680936331,-0.008131718354676647,-0.09688390826801041,-0.10282705651123893,-0.061807491662068316,-0.027606856807909655,-0.021228891217808847,0.004443965210049074,-0.002130370970645907,-0.08209605219887157,0.016241061964238638,0.043614413734480245,0.0062874696920973035,0.0025812450618856848,0.057101666059247935,0.036462454308348054,-0.047030439010969226,-0.04537412835248938,0.01857234033642911,-0.06849610646719859,-0.022369946933220582,0.08993019798832329,-0.04620349883695524,-0.02248833658430253,0.0020536971730861354,-0.08536767123788096,-0.012395736040711943,0.07948196307041769,0.01853257204990844,-0.12385001806350801,-0.12830910905035736,-0.11992742565036581,0.10917700350994498,-0.13358680201148612,-0.0491299881723596,-0.05419165424582644,-0.09364315722114402,-0.02041393910004031,0.0126929838876278,-0.07377537589154652,-0.053631591121860285,0.039964231362184355,-0.028745835080620685,-0.036745539611049136,-0.05505983143607459,0.025118158135819108,0.005945823033106344,0.06240562711777618,-0.01726351698394731,0.04831155187025203,-0.006938023979040977,0.021501245258596934,-0.0335008300259418,-0.07477256982450181,0.07331306763333656,0.12215300743802279,-0.029664994449422923,-0.03328835393477654,-0.051966670448166545,-0.16164024888126136,-0.07808350226937762,-0.031096744030229943,-0.09071680757585737,-0.04149723698310312,-0.0892414893807428,0.01627961234222996,-0.04603981231277304,-0.08861889478834946,-0.021586706278331202,0.02558063645545193,-0.011993846154480303,-0.0418748247134309,-0.03247200453092618,0.04152050515890525,0.040314287567665,0.0724647736527865,0.06778068090537735,0.10653286486647547,0.02486713532318679,0.026663401209775946,-0.05189272578404665,-0.041347984010956365,0.0432613271178535,0.03711037842260563,-0.09757908947291374,0.13676773931793854,0.01818747786428196,-0.009640503992447315,-0.007454833324608296,-0.045218193474390114,-0.034782043816088105,0.026046280560705345,0.024004123487725515,-0.01619671992425611,-0.10967578544192155,-0.055879773771902425,-0.09597221141610017,-0.045099716183801486,0.012832604633381121,0.019823222972910694,0.03852610109224117,0.06623008551202282,0.03877177423646301,0.06292271495167176,0.013651368086241865,0.13170274478968308,0.03042892075331416,-0.07248904821369438,-0.07490948019282705,0.04271878209631876,0.10800353584223382,0.11999084845129113,0.018504915746965604,-0.04602754429016581,0.016352437894485355,-0.03082516844832404,-0.018235770371219106,-0.044642049839695275,-0.03819278465478347,-0.010653162731282265,0.01990852403568541,-0.03195825333256822,-0.04339232970593898,0.10084714052257297,-0.02927138243919508,-0.06490077151355249,0.02969469228308586,-0.06967727487040093,-0.11775507100006154,-0.09138863595475596,0.0008976548395773157,0.03699965431146056,-0.027789064032529186,-0.03841038893628301,-0.03734359392976684,0.05113978643193126,-0.00884933202017208,0.06948564061689995,0.03478319225077108,0.06217593982024062,-0.00006167727684694981,-0.022410443857446494,-0.07580577508887976,-0.07300162418606246,0.004067070264876153,0.007150093886957765,0.02989537970009399,0.04941865943133104,0.027797556472675882,0.013876556830979199,-0.027809806635500853,0.016547259625481044,0.023335987077685943,0.07306858137137665,0.03340354152855721,0.013346694329183737,0.0295932030379373,0.01578244671343931,-0.11356203433834941,-0.02639628744195126,0.03237751768583963,-0.0135244649721062,-0.0007552976444600032,0.04578450527393328,-0.04221064460489753,0.11968961775120474,0.06495587704568567,0.04808822499621973,-0.014493038237557382,-0.016337151527028203,-0.03276214223040522,-0.06385079845925723,-0.056468688118974285,-0.1339770393824967,0.03785427102191778,0.039024664744078355,0.02700453853495115,-0.02721433878479418,-0.03465950667792387,-0.07489918158013956,-0.01587166296306949,-0.04028482577457813,-0.019037824130418435,-0.07003765915729816,-0.0672873112750607,0.01186314178562086,-0.0545614668682443,0.002518620486603701,0.01432241027772332,-0.022142172859005486,0.008407210382392893,0.04758746874794932,-0.021372317919484057,0.009869679048775804,0.005952223121798157,0.032158609426439444,0.0022629212110318567,-0.0010097076668442273,-0.1110020357830049,-0.12825850732885538,-0.00026909720164304866,0.003104837005467596,-0.04932273084190028,-0.01935095842003166,-0.015906934425361983,-0.07002860581527856,0.05894667908460752,-0.03237193363604364,-0.04835486977171745,0.05366860523054784,-0.06512478083471934,-0.034482966706870996,0.04022996918664965,-0.023658021040806766,-0.029042612835246367,-0.025988857260337315,-0.0190007473046802,-0.027457191976615856,0.032282105303546235,0.08048526799340504,-0.031198228228457248,0.005984035588107603,-0.06272969887643445,0.03185566700422054,-0.11815320618097006,-0.08284979332687653,0.01605579177585903,0.015392169681070874,-0.0536730950416059,-0.010663695967652055,-0.03295827170810499,0.049063078151406064,-0.0201366714580023,-0.00169382894523357,0.06703817130720656,-0.005547696006785954,0.09021739373210684,-0.04741903875016743,-0.022690186372113865,0.009461382533862132,0.02392855382896539,-0.03241474569316189,0.04236776564745952,0.0011390909926245845,0.020433989566314044,0.0020933563653540645,0.040500490037378455,-0.039478896202567566,-0.05717142094050766,0.01329961337653087,0.0022834576723765447,0.019505515857657432,0.011248822661057572,-0.022752319029954376,-0.06382782944339019,0.04440515402474019,-0.0071315800075389185,0.05254608273546848,-0.04943689959532638,-0.05641297554606124,-0.015791732827454788,-0.03761064435293373,0.06389267605322896,-0.04275647828609261,-0.08078901736193277,-0.06921369274541658,-0.026882881206906503,-0.025637572098603456,0.027801641065979963,-0.04374374299448034,0.02559291206976228,-0.01965537557530958,0.014474246179122198,0.1380887535791998,-0.00009324645711720201,0.03729260687953372,0.0305566633284542,-0.021952564239041916,0.03131506770987151,0.013174281524448902,0.11866952024944218,-0.026641345731496683,0.024861495419538686,-0.008317013481205258,0.055939788056129446,0.043577862463408154,0.03479312242375895,0.08085887753371405,0.014790325378563944,-0.04451579405062455,-0.0910479172728133,-0.006022323824033351,-0.11073394279381657,-0.013244007370903187,0.0038452599589529853,-0.0014866782705236928,0.045946326978907735,-0.04789670647241619,0.027606200521372717,-0.06455330274620093,0.04847867258167364,0.04762893226175467,0.03845847236206038,-0.0048216515871570016,0.00471559248736363,0.11735551316848042,0.11608586506739707,0.010567151385022266,-0.010741295332587194,0.040128143354537696,0.013260432906418235,-0.043646937148491535,0.027454159506911182,-0.01703620100811768,0.0843505768355247,0.03722017406043814,-0.03556969370614709,0.021099333127600445,-0.03766284889157389,-0.06236762831021465,0.015861273792798447,0.022349458960866514,-0.04147643434770272,0.025416805701594294,0.01751420674142259,0.011405386002259665,0.026945952458455175,0.016197646751730833,0.02174712367971807,0.03392850443422965,-0.030775612151821632,0.019354519603270722,-0.047814823837047216,-0.05032203220270643,-0.12260696951644286,0.005762839582368928,0.008405065916352759,0.0066301814515802,-0.0017940702197374256,0.038989471286686644,0.03723196396117587,0.08229942680465989,0.000058448145247134436,0.005528516207071401,-0.011187397128550151,-0.08352811268055865,-0.0951876270126871,-0.008258792137387668,-0.002874049650499274,0.0689990581902504,0.014072380156049006,0.04446836758448054,-0.00860529179780308,0.02511803377021322,0.021522125199122166,-0.03990059221115592,-0.04315047543075802,-0.008457927001742053,-0.06232120311260887,0.037536246723377395,0.008605021700093134,-0.05769548952082642,-0.0001538790510062755,-0.004125915819835811,-0.07278794187377144,-0.04168093478639121,0.04509443927957276,-0.04635737413233685,0.07607181846076808,-0.055434508126908894,-0.010627966284322813,0.012286434173199096,-0.003723135304329963,0.0009071000506316199,0.010449162361887815,-0.06359174263291983,-0.07652638860175402,-0.04790522260965159,-0.045079800066973735,0.0015573196472295782,0.011862516099312811,0.01156670699196589,-0.0995426467171673,0.024190131017772266,-0.05550382316385197,-0.0374558567354848,-0.02643093930569941,-0.02992139405721998,-0.032573899701496975,0.022863446458502117,0.011969994701178177,-0.017234750690001854,-0.10576996831817846,0.007158416691468965,0.08539530999933696,-0.0482891787637102,0.019644926550694067,-0.024349940244425862,-0.08071184429090605,-0.03603029766099539,-0.016316509040418696,0.03858606678616102,0.05248933049628333,0.02487733296921114,-0.034784647288616695,-0.09353341902154819,-0.023025282381965922,-0.04127155635634377,0.04044945318200742,-0.04789700602187603,-0.04076346423589783,-0.00628307364745417,-0.018982459118100235,-0.11925450141987207,-0.1681420784333668,0.03224032957091896,-0.019290234699807413,0.12063265143633976,0.05191701550963923,-0.006940791489116171,-0.05759881764569269,0.0014126809195268146,-0.05907049771919724,0.023577424375141705,0.07267318661714017,0.0005663792464394631,-0.007579696563338317,-0.004404507582253528,-0.07594773038467076,-0.05736430520630187,0.031235647202050004,0.055311219620737644],[0.02848137275087357,-0.021006418310400708,0.06713922102489395,-0.044150832708885944,-0.050277056753961484,0.09583656735592885,-0.03016092149019922,0.034682737120763286,-0.0375079256999646,-0.048745287258245985,-0.04025484815005307,-0.06510461259465909,-0.0765836947683722,0.05749730814542676,0.06559322147682804,0.011950738052209257,-0.0018197492178511842,-0.03659454056413237,-0.057000292972395714,-0.011600790116341663,0.019674122537330217,0.0006996040264449524,-0.007352885430344556,0.09007840466036739,-0.008467367072376993,-0.02471056839202519,-0.0023433026942058263,0.04244579728943328,0.004992085797124784,0.02223004289582259,0.004154658116705172,-0.01661364525734001,-0.03382732379083342,0.06800286981648597,-0.10046310489917526,0.09444988990687321,-0.018231196446367188,-0.056516700396868166,0.11151637203085973,-0.03841458331910523,-0.013243750708770385,-0.04103360128092572,-0.031287952094772815,0.0133547257677261,0.023044546928324517,0.0770806705730081,0.04235949170503463,-0.07446379926011329,0.07068956119074284,0.00045700927862337776,-0.020098070157347166,0.06272139139500998,0.05358522345568087,-0.02674841036421834,0.04170282910396385,-0.009085857569026565,-0.019335427970609425,-0.033109070512975285,0.0017545674471576647,0.00920280774096522,-0.02413690823353383,0.012109217700155632,0.07557002190189266,-0.08586813236648569,-0.012558254956694659,-0.005448153120631844,0.01899396812630767,0.04519544699671472,0.029964741762748978,-0.05346958124897452,0.05264318168158746,-0.03905278467711713,0.027929167718506696,-0.06695295799481059,-0.02546837890881231,0.007473331283361339,-0.03744784190600305,0.0012129586821513973,-0.025495778215920015,-0.04079641235249025,0.012483239304375924,0.06005824667899498,0.05395143546297168,-0.004696217128202642,-0.05373673723695622,-0.07211238297505534,-0.12291039823193395,-0.031925035040354426,-0.018346145537181325,-0.08922534011259957,0.013298979060381116,0.038725093796520504,-0.0064631917363402545,0.09289669681633707,-0.01221972469523414,0.10704847053273844,0.03129715198594294,-0.01961671927277063,-0.03591178357017842,0.027869877398234457,-0.0077626015466759814,0.08098441827869717,0.006281529773039439,0.02364528617795813,-0.06450358575352998,-0.07399620792543025,-0.054864524292701375,0.025708359280466886,0.06362529212408434,0.08474096730212174,0.043637523670949654,0.038024324177057915,-0.0535637928144862,-0.10327590807792769,-0.015056402459448576,0.026486810853268313,0.01798800302132849,-0.0776965614526895,-0.06649206991703605,0.11705067606762024,0.05525834796456692,-0.07347183694080593,-0.007520577049750051,0.08005183654752093,-0.010704855450392443,-0.003668469826929836,-0.014599365834626206,0.03098733359424632,-0.00011538481581499163,-0.072485511082272,0.07589900900688998,0.048313071561643994,0.045817395325949965,0.09239632579510014,0.025482697402858634,-0.035284477744424864,-0.06494770444950543,0.006662865307270957,-0.025757055095440955,0.05196283722619936,-0.09058103251742118,-0.023384261238587552,-0.013242719316859362,-0.021179809958747967,-0.05707523214400339,0.01833753347653454,0.03096187140956562,-0.011199911927474321,0.0012884510852972124,0.058138688846612704,-0.03356501876160637,0.04313566580370081,0.04197489843246893,0.04385061467520093,-0.0007681108385407911,0.006040117918672625,0.038113146054407236,0.017903287943881782,0.07267008850075987,0.03245157939795778,0.0030640735550142026,-0.035492531833030146,0.017027949154692395,0.035476918003248155,0.06593690825853722,-0.06470941167958191,-0.0018169834858540682,0.010144211905858222,0.017054467186960433,0.06786080021625503,-0.030995526092594077,0.0964443439436434,0.011953223976427894,0.05067391389242282,-0.007035939797304857,0.08114056683828505,0.03178446858368108,0.03964559047134075,0.042394375892924906,0.04817380173212176,0.02491732426801904,0.017262183072829076,0.01967242981439028,0.027138796608985553,0.007434720521443579,0.03855017464473974,0.03919790363769913,0.08352115942901228,0.014337543961179672,-0.001509605359885847,0.11080284349830663,-0.006818689892205661,-0.07002622701560532,0.020263876480439664,0.06388909320855182,0.030059483907896395,0.01615747693220918,-0.054623143894008026,-0.014713357144000449,0.023969657806466968,-0.0958332319846528,0.11626401424816657,0.03629449122846464,0.05514505047490373,0.08084766270697254,0.04129984746350447,0.10499613996281154,-0.004963306971782237,0.04513320650875213,0.07104969514685176,0.06074723329076976,0.040464426447765635,-0.0212257353876915,-0.010417433551910292,0.012418620451831794,0.017007832142778987,0.020474887113562757,0.1059362665338156,0.034335951431597345,0.03601244217588977,-0.03989197842194441,0.03488915928892853,0.024486271236102388,0.0021941349161133912,-0.007469313433800205,0.0538142439556921,-0.07884524583910249,0.09830921725191961,0.10465447249515214,0.017121965679657996,0.030458461548461425,0.0480966925267761,-0.023329012024892886,0.04370129961312471,0.09128610656478414,0.08665900541657873,-0.024851330112940558,0.09183821741011561,-0.03491554503220051,0.09376244099222848,-0.012253576130484105,-0.07050074057111358,0.0023909362720824978,-0.005217906269605916,0.11449653341020614,0.051936706925861956,0.018209501429731535,0.12401279263092573,-0.033554406342437275,-0.09455449706335595,-0.06199871813664839,0.02801419222702921,0.0356258479436247,-0.030733351346500033,-0.0764255058247995,0.07479495255048303,-0.014099838064205953,0.10123099169201974,-0.08689866605061128,0.08137808590634024,-0.005502737108323303,0.01655733596403828,-0.0032418099405702515,0.0410647247529838,0.015063904690335994,0.0032634475018605835,-0.010821833198851265,0.06171962073397878,0.07080699348844365,0.026900997312769955,0.05476188728912112,0.015185348201494961,-0.010196476248121143,-0.020627795296952214,-0.025167911716687502,-0.006542850788190957,-0.06571154724448941,0.004714844275743138,0.0787893808473489,-0.04227242373912026,0.06984956062829498,-0.07498640442414965,-0.005121692615967056,0.06343003930965573,-0.0017093479997822537,0.03219717674533137,-0.020911242246029613,0.022880271437379814,0.01729142874863973,-0.09438068023471505,0.046028866451511365,-0.02904372305089037,-0.06690835796960751,0.0636829794854012,-0.09586810598322933,-0.034493360231139254,-0.033286437398829784,-0.07374297821494893,-0.004887369084983496,0.04264776979805888,-0.004776718249352497,0.07472792333406629,-0.03863910150284788,0.020845154854225924,0.02914648420558837,0.018461965047446457,-0.02823122031356904,0.09372034921859339,0.04113829835484669,-0.008126917844252042,0.087646121046718,-0.0023728151518133253,-0.03867181972008291,-0.13406665729832878,0.000717088832666038,-0.08410840595926436,0.009215173658354711,-0.05011385763640383,-0.14748182514272998,-0.036562303317097526,-0.08913484074359827,-0.03546794998916261,-0.027803780936913575,-0.15389209532856465,-0.048952087202292195,-0.002176079967587629,-0.012972379249489345,-0.029269919902463276,-0.0331319517535218,-0.06302035456311093,-0.056612242988619894,-0.059615620064491726,0.021567587625851353,0.056368723822995695,-0.08915503942953121,0.0100040487829172,0.02315553680876337,-0.022323454859849184,-0.017849105260950602,0.00836943955784411,-0.09606491728357555,0.0294603355174401,-0.06710304894746391,-0.07169570427175881,-0.03681965795875904,-0.10678904135981518,0.05652506570812703,-0.11531827660701115,-0.09331321243634988,-0.09306339686919596,0.0684907603677915,-0.09675243352478506,-0.08647461320993702,-0.026807683945645908,0.0020960829663419457,0.06754572263285963,0.06790446145885906,0.011663690566362185,-0.0745558209913324,-0.0023102389683858308,-0.10166287272884059,-0.018037582883478686,-0.031453905879704105,-0.0360361798118278,0.07276175451592677,-0.021040166685925357,0.07633075049310359,-0.03861458964995611,-0.027059260436146433,-0.037314830586159704,-0.07307927647093783,-0.14884364972319095,-0.12166760344588148,-0.13636570937455764,-0.07088173453802474,-0.04050151982076793,-0.0468410200616913,0.02978628273268223,-0.017867611304432,0.013845791407111289,0.006613825375447298,0.0173028053746692,-0.00965927751122044,-0.053911278794950064,-0.08194338776149945,0.0034395232874699267,-0.08034139302525516,-0.04739700731435313,-0.0070330195235502845,0.03715481583430977,0.011505977616717357,0.03053673655269789,0.03408657983091672,-0.017290729120318822,0.004750774687924526,-0.057008340230842225,-0.08837095549635614,-0.10061189208875028,-0.045626286499436744,-0.12457929927484863,-0.00812941160011956,0.022372136123147323,-0.08071479761963649,-0.006252408580173634,0.027229605333649303,-0.0675880901567856,0.04728284731125887,0.10458024452527274,-0.04088952950654346,-0.04720239214222035,-0.03590622561444831,-0.05789028177328194,-0.018341923118439504,0.06725950461039126,-0.053952236193615055,-0.053755073577106335,0.017146438640668633,-0.005404902669606547,0.06453976843057364,0.05304105086710517,-0.0754080613876104,0.0440215288632375,0.020063676198793158,0.1327910039632382,0.001977755178599895,0.000026667031424187482,-0.0856503620888878,-0.11873712072661624,-0.13458412564919128,-0.08146272317409449,-0.047223558438745365,0.012872299532950143,0.09680391135692211,0.040389481900671514,0.03253704428350955,-0.008801288842597236,0.04062639948498317,0.010771260401906516,-0.005290710114121195,0.02369271142835051,-0.008963259573813814,-0.08406982707589492,0.007621995852903234,0.009844066439244346,-0.03496960911564968,-0.033407261603560445,0.08382856102646939,-0.026417328540856787,-0.08816365478653157,-0.013420959626945816,0.018235045964307715,0.06390018938112917,0.014605275791273405,-0.1383043161075303,-0.013084069767049037,-0.05961935874638479,-0.013250792838644486,0.04520971086957281,0.0024959930457827705,-0.02823279373052292,0.11292881588742322,-0.03324030032517407,-0.011877973764775703,0.03196133640123582,0.08501866305288192,0.054998527289946586,0.06523116261732782,-0.05191339753428903,0.015306486181615822,0.0519150768192123,0.0766138244272168,0.019095336090475326,0.04847625646201882,0.07040171244247602,0.04114164101526085,0.01280955850694652,-0.008018411982141326,0.10052845065866105,-0.03057769001575956,0.02304510265974667,-0.04278550787352524,-0.04443165590438175,0.03576343219053915,-0.07140150611296456,0.022841191932254055,0.006405324416258129,-0.011457005557182041,-0.06409562027304276,0.049318784273282186,-0.006449028199243713,0.09427708133190256,-0.02999650458485435,0.0112357978169371,0.03980752813529585,-0.005989185855945473,0.1048728227437191,0.03915034580125303,0.016755560585205248,0.060430734385827106,0.024963776363033124,0.10957761876375792,0.056069363051433056,-0.07492248486286872,-0.0436138462765078,0.06665855706365631,0.031250565377481235,0.020159393641779464,0.06478949549935377,0.010391249705047406,0.012797141204245958,0.00456800364091028,-0.04982219858321211,-0.01576785848397877,0.06800174948942693,-0.04754850757788261,0.04374770020580894,-0.1284800037238914,0.023984414359780798,0.020621803465492805,0.04557781984770833,0.01706624479104445,0.007216849859109113,0.014551716924812502,0.08906209342038304,-0.06821812499340489,-0.034572417323566904,0.03138870591343155,0.012204867297729415,0.01319084551326964,0.11854303907804761,-0.018475679099276828,0.0430234952090518,0.00684243510104639,-0.10064117328841782,0.013271817599988774,0.04287904179316819,0.09555394851348381,0.07652480536851795,0.002725214297836148,0.08458914221223114,-0.0576179042633231,0.0983826578331091,-0.04116384587888462,0.035339274071855054,-0.032410263930742915,0.06483544808123273,0.14657799917490663,0.016769052055690084,0.11131747528513036,-0.0618751991542629,-0.0013718063965837556,-0.09463882955593125,-0.0054160810599888564,0.07951003868424304,0.016557244942574482,0.09105814237886227,0.07768950116860658,0.05577462768068948,-0.05304863625693876,-0.006936798703438737,0.00404720145372607,-0.0780666715926559,0.02932194864958279,-0.06010909730533189,0.11254106315351468,0.09408331592742128,0.021383734209388106,0.1076491597199853,0.041942269479994895,-0.0028540006348768293,0.0505658636478773,0.05733271376425432,0.032073980604790095,-0.06341269695673143,-0.022548128519520285,0.018374876088241714,-0.05586061557974642,0.01856567136614396,-0.045599796321883414,-0.002746388604681643,0.04500856922729473,0.02232564471608729,0.08468803710718978,-0.07548038475647305,0.06653647553842662,0.05535714276479554,-0.009991158380372631,-0.08935646393161704,0.02118759691664581,0.046361561195253566,-0.05358428343666216,0.004411094313186131,-0.10455009744477088,0.09194772820097043,0.046600104968230124,0.033522542864969807,0.056020812138312386,-0.05153792208840815,-0.05126994751776739,0.004253331517476686,0.07281866965471474,0.029107734383652186,0.05125044081968279,-0.06599380906059715,-0.07021723496360194,-0.03225408165660713,0.01825469002792513,0.06844832667259264,-0.06714432034588493,-0.09568283654597073,0.03886013897072203,0.051512985026435074,0.03617756668436778,-0.00821593076047228,0.003099985346581536,-0.09977388256348758,0.022346451323508633,-0.060357811656098756,0.024766182431289162,-0.08228194364915693,-0.027916927969161297,-0.04286323530001691,-0.04957226021833408,-0.0002450006591549229,0.08708628254096613,-0.004475253063326906,0.046585979407396935,-0.01906172770703885,-0.011501888961414472,0.014765927451899252,0.023185132730066445,-0.039193475280593186,-0.007373169381070222,0.010397963508584799,-0.06879120657335185,0.03906698814512795,0.09634739577802484,-0.021746245921646878,0.06044983392231946,0.04680420378370807,0.07546054348976156,-0.001117280291928121,-0.1085700916858174,-0.027560881040156332,-0.005306859751866105,0.017889898782721392,0.03392952565774026,-0.06326450309983331,0.12100451501778756,-0.0018466444537060872,-0.05330691247846853,0.08417078456477725,-0.0033003513106562065,-0.02941375431145847,0.018554114901372803,0.027191618214486724,-0.019434497862945644,-0.007638992765403378,0.009068051436700102,0.061072449421744314,0.03727873350129066,0.021889044960724732,0.0315986633248174,0.0004042118685080357,-0.010429487997309314,-0.002488806111670945,0.010866351896930084,-0.06921289448974059,-0.023773872128747518,-0.03177587536854936,0.01891374230678621,-0.06711835473213837,-0.021198325827952932,-0.028850896286621464,-0.01664109629654597,-0.024256817678669797,0.01033810158152385,-0.06822721609215923,-0.050903477144009085,-0.006139524618521727,0.08605255960613796,-0.026715457136308837,0.029235887143178634,-0.013501744171602725,-0.004261256016288744,0.015457553486621152,-0.03606395819259865,0.07166155791577071,0.006660252777587025,-0.017404767500023035,-0.01961934586474593,-0.003086744910588405,0.01007573496170432,-0.06065551788685437,-0.07299320016450495,0.0036213169554300084,-0.03375596951642315,-0.02858599911108838,-0.008618084650821117,-0.000671440848913365,0.027315242891479578,0.06401190867137188,-0.023760447416784135,-0.02288400633558761,0.0011342509449387616,-0.08879760658770271,-0.02584412267171544,0.03123253896539053,0.07054654213803516,-0.004494423434073454,-0.006430129327819853,0.045123868843291746,0.09038622103805133,0.01919174175585684,0.029101524932953194,0.07682882276063048,0.0038007386197901187,0.040247311463646636,0.05136627122952762,-0.049293199976331546,-0.046257762616373994,0.007461849626121412,0.027445720003937964,-0.006294700042331797,0.09426302517293556,-0.016155514676813774,0.01925518443331931,-0.003370833348606326,0.0249982297388187,0.06128204032639395,0.05317839326945346,0.03494411327542061,-0.0508035706912061,-0.11965991544509154,-0.13135538261616916,0.050682213547259075,0.040582530193932445,0.05735182866453079,-0.024320385450851224,0.02368820352018928,-0.019672598859021884,-0.03868220532954026,-0.06887167398115293,-0.026257556436071063,0.0777305593121425,-0.13081930850881704,-0.009468033773255153,-0.06365714771999957,-0.0149725675954011,0.04416092270480356,0.1391338076523307,-0.006325856257784449,0.030350778108251757,0.05446504662411895,0.07351470670096998,0.06028111797500694,0.09670417042222473,-0.023797494549875176,-0.1196485650486961,-0.04281184271899291,0.022240537973632964,-0.023388309568501187,0.07269654793407851,-0.07370233593498278,-0.006863057950687519,-0.032456384465388746,0.04022888501608845,0.0006688154545496345,-0.06436576586847045,0.04266403476610922,-0.040223978929694856,-0.04539267085686384,0.024104691378126573,-0.18554662261442814,0.05140339828469358,0.01832571905838053,0.04861739070443556,0.03341867581292729,0.009977722315918201,0.020827295629909984,-0.011486935506468787,0.09330208804978388,0.1242511462652209,-0.07756252059805266],[-0.005335824107189481,0.025214297973074402,0.0655330681603247,-0.012111729460035275,-0.02362859609043826,0.07330463520754746,-0.041225883971694105,0.06134324502400106,-0.06687269917580514,-0.14347392625872896,-0.015897265556549335,0.007353294667234486,-0.03421808518786153,0.029099472314361025,0.06783474536897818,0.03503041760795851,0.08247913303720136,0.01872906318768835,0.11774552332502071,-0.06503938817701095,-0.05899699851836556,0.07342413383170468,-0.12739546342908115,0.07404756734349639,0.0005645024104951542,-0.07423561969216347,-0.007852826141696401,-0.03829702720849681,0.06682652011420483,-0.01734411562937754,-0.034008618489342106,-0.022496120172790804,-0.009651258870305017,0.06265160251330738,-0.02208098611654502,-0.003071661401691931,0.01583136425097339,0.020831115743522026,0.03583822795830209,-0.0716332638959585,-0.0018566863115089896,0.061498477700233665,0.049272636545103526,0.07097759763384377,0.025492148547776164,0.023643220001869632,-0.04486773675058119,0.001914048498885852,-0.03402252293464974,0.09494868310642467,0.08797891318788643,0.002390571907329722,0.10776227069503072,0.038834920614562105,-0.009408384181688026,0.0506173693211666,0.000572308872648015,-0.032900404801830346,-0.025668310986120255,-0.06695008343766264,-0.003823730487116855,-0.013218908444963626,-0.0031582094584000275,0.04047919299818071,0.050536420185306526,-0.026287951263460223,-0.010784589798979817,-0.03318891985858033,0.01910626134204536,0.08056144088309128,-0.0533265610351332,0.0209315703897449,0.02512822624302996,0.0673416378656478,-0.023297460024107413,-0.010225587162408649,0.06756688044018097,0.0007492554911650949,0.011447365839628673,-0.05898297692095265,0.006208265923973841,-0.040290147076365364,-0.06538747876352861,-0.05981683485023079,0.031075464225523125,0.06420705109839411,0.0629774134749786,-0.04034784291885168,-0.08805356748020249,0.03759934999153686,0.005674180408876338,0.010204990263590624,0.015794234711418356,0.0361544012972189,-0.05142543338345821,-0.02190842191593724,-0.07885738295986422,-0.07242730244564627,-0.04831994885185312,0.0378403044269469,0.0524301800976648,-0.009092933759316876,0.02597099940856679,-0.055599940210156996,0.06366724776312711,0.014896182821749216,-0.015808764842954424,0.0812558406285098,-0.08243493397154754,-0.06076109350174292,-0.04659369763293726,-0.0829631178459301,-0.030737363483546724,0.10252777231176456,0.03982931626181965,0.042541313255035594,-0.028536073794902896,0.06405314341961879,0.05140879964643936,0.00039804154986110795,0.05025619710336293,0.04811063784991542,-0.00039723054046293015,0.01210375263378892,-0.013569887283552537,-0.1071589845068714,-0.0019746635671205512,0.03778340691715266,0.009108705675573335,-0.05369478804732219,0.02283605647708423,0.02518710087175846,0.10954319401179664,0.06007165452472131,0.016788734010904482,-0.0026826069229284317,0.06951149684375699,0.0033810977299200367,0.05973334533026155,-0.01244294087737258,-0.002369281142081423,-0.01124000249106315,-0.029918187876104514,0.03056905239764732,0.08801670099896941,-0.007803417037894383,-0.06947654919948748,-0.009992169254701155,0.00047768574672395344,-0.013796132814764692,-0.09385211095799514,-0.050237033801347426,0.06571543271075607,0.035169269650997474,0.046908852765753024,0.007182210813905093,-0.008136602727146936,-0.0060573371780855475,0.0019143593843749915,-0.027482323278576092,0.07412946642148113,0.0743904128620774,0.035473513507321267,0.05572285263332775,-0.0014627542671620632,0.038637841417900755,0.0005953983068390948,-0.019020137251675482,-0.05203632688411015,0.015904197380451908,-0.04576656567793734,0.05419031426375503,0.0005287462405160841,0.011800235636214027,-0.013942143051710836,0.03518291081430418,0.03148015601943475,0.03128080831506123,0.06184688769789014,-0.00979930084004755,0.06106785636842345,-0.02234394480778253,0.01257371530974683,0.07271054279121475,0.047661943482755355,-0.07931765508037221,-0.03183023037751683,-0.09798189144897013,0.009696743656141435,0.07432233300474693,-0.024928968701014586,0.008701924760911882,0.03480080246259272,0.023075922946485763,0.07444374421131802,-0.010602858983453069,-0.08401447263989721,0.11176016791556136,0.016281159249396382,-0.017930310016474885,-0.031574909965257705,-0.05438204050677262,-0.05010117115892027,0.05607608301052169,0.12621795194862187,-0.014832233702048248,0.0802509876326344,-0.012785196116583405,-0.03381612428561408,-0.012031248262416618,0.06142144192757799,0.08421853629401829,0.08271685143664809,0.06344842558462734,0.06981968809002237,-0.007027136783052028,0.032492972099017615,-0.053261803779468396,0.014503495020228435,0.01015617558179951,-0.045162274156031086,0.04045793711670642,0.03224712540658738,0.052001768659888224,-0.002296380019032584,0.07286163294964801,-0.04178058242947675,0.059921666889329754,0.0035981689694823947,0.021585670114856917,0.025036422073531864,0.06238430477134423,-0.0065263422672592435,-0.07745557574905011,-0.015427648041474248,-0.00276954089527577,0.051523596510893124,0.05988661316308417,-0.0007366562767493051,-0.06388221093987481,-0.04351224986716837,-0.021646319716954333,-0.06922725409575052,-0.07031007189183912,0.010424633717910994,-0.019596090971332917,0.026236828223102613,0.002780324138426908,0.014977833944300752,-0.03932347412800783,0.012901802865560013,0.0681687619983836,0.03377871939040941,0.0010316904675758047,-0.012442617059124859,0.0495884375704536,0.022618151612291776,0.012905958536435728,-0.012043783288130744,0.12896637882069106,0.09183688075427734,0.10515133225119797,-0.06082493267117818,0.05543183802979306,-0.08433496991324238,-0.043426586068369334,-0.03680928515177404,-0.02186915806909669,-0.048341246362077796,-0.11238863086911864,-0.03261570022010633,-0.018175922627042537,0.011371797549535028,0.025442457834241185,-0.0035998480568889004,-0.04773873741769292,-0.049623130843059804,-0.08670892922801719,0.007460281412036234,0.013241444024382588,0.03517823877196734,-0.05008163760483207,-0.10357998676021812,-0.08414471788270195,0.047066123005622275,-0.02492396895594157,0.03263071444802468,0.04780926993122872,0.017048772862312378,-0.027150345588950797,0.10748942172827572,0.03711652740797393,-0.05756489987669248,0.02554709903161658,-0.06678590745348713,-0.004379894393152133,-0.054298713885006934,-0.1018754252279727,-0.15742881586598584,-0.044867369480464436,-0.10381253077993934,0.005884835916053264,-0.0050003705525522146,0.03865943322581078,-0.07529933138220644,-0.0019905605955364337,0.04909857536239593,-0.0848204736541319,-0.055758203351411025,0.01793660284895634,0.055748147678519155,-0.03252639611143015,-0.0038880472498172684,0.07701641308763513,0.060662647434462535,0.033878084499014555,-0.007728515534174687,0.10697889115179705,0.1446416740570864,0.07012810943835382,0.0835849462695972,-0.0017857028991404543,-0.05387706547787666,0.050827036788364255,0.0756158473312316,0.04340226173653866,0.013288258895983687,0.06876900042751669,0.08164299207292913,0.028308877696810585,0.02114762316240064,0.033602811430179146,-0.05247856817825568,-0.03857835365967399,-0.03342696807492056,0.03176003442637603,-0.04667771444325416,0.01641775789857589,-0.028203720709448408,0.07847370868222861,0.0491917032387519,0.08335264283337535,0.05487725806029555,0.10077312568868207,0.07120923791031375,-0.00024491396737006917,0.050748419974706735,0.007637494288475335,0.05447190338295667,0.07158269493885924,0.12352198446500935,0.09890863556602886,0.12336538758253618,-0.03858520997820593,-0.03652898672825317,-0.04251911304237677,-0.012629643359743523,0.000004883372341218427,-0.011870110989580731,0.03220092614862817,-0.015799802879984687,-0.0417500597552304,-0.06918238995852746,-0.0003827272844576544,-0.07030856850082702,-0.017369972578362182,-0.019359217468299657,0.008364672471315919,0.04408436231975475,0.011363088883323129,0.10384341067255744,0.027352666206708065,0.007477786096034093,-0.02624326419034996,-0.00847846428116318,-0.001501850023870302,-0.04902770263264067,-0.0047362347214415365,0.0767519248144505,0.15393205229102983,0.11398334485833737,0.05261807984414473,-0.0012242325925991354,0.06330213990878959,0.0421773474240236,0.07848040583774825,0.060814307636755244,0.05134666267864175,0.022996031944001485,-0.003595320449804848,0.05615669230231255,0.0021416733344854213,0.06408113612772881,-0.03203489934667457,0.03368369230986996,-0.04987338071632069,0.07378997264225723,0.04404323416005544,-0.023213225708673395,-0.027064658170270216,-0.010775388476572783,0.04441120981017018,-0.005939866606981684,-0.005020401682868524,-0.010424915883961793,-0.009189071156583652,0.07340314734944003,0.1582379912530255,0.05929581431457499,0.10056918417952607,0.014860287322668898,-0.05087992639962762,0.010294449722607303,0.030045367203032126,-0.005206193308778293,0.09465867294693445,0.05490622677077865,0.02256140825155353,-0.0017041060108815222,0.07902892684297497,-0.004638997443767486,-0.0597920145131242,-0.03812753101320209,0.12800079155440167,-0.054467963430906804,-0.01677920833630693,0.003199845218375841,-0.006921008364601234,0.05478768794100299,0.03436618312288578,-0.06901617641755581,0.12534643692918873,0.04211210980482292,0.06619283743708194,0.10011213873147648,0.15742968892535733,0.01162834639376916,0.014815536038975017,0.009227921990241347,0.07810104297132767,0.058870835641833756,0.048169007138053214,-0.031213060400730797,-0.028048877712374156,-0.041362612384426636,-0.05964174184986692,-0.0997484354368839,-0.07128511357129678,0.05425153727428555,0.016381561753398253,-0.07498136113657307,-0.05196657501421524,-0.012519942842873477,0.03568167722390236,0.01894761056781384,0.0071017432075173095,0.07808444875398364,0.025040940148289784,0.02704661826716455,0.012227829740588298,0.1296053650905347,0.06435338010467673,0.13653440788577448,0.13263646606680024,0.10558004529766943,0.01238319509600947,0.002627966777970173,0.042627075739849425,-0.05447797615699137,-0.031486022882447125,0.07468169835962614,-0.1187974035305574,-0.012195410281811252,-0.01164069334613578,-0.09631896907875875,0.05789076377814178,-0.0032850960784389237,-0.004106016339273186,-0.03732783142133302,-0.09752649283779195,-0.0669009254629724,-0.06070581713868615,-0.13841989183717648,-0.006605848403831722,0.0015755359017564365,-0.040326135043502145,-0.028360828766373112,0.09922848523466367,0.01827367862745072,0.024026839311636992,0.09445606403098601,0.089903292485116,-0.0029066113418534678,0.08548238616931739,0.03499168814794782,0.01562915400948334,0.05068248932403767,0.038107904041764874,0.033869828682723785,0.01576539180397835,-0.00986003466208649,0.04264615288453496,0.09178242036692562,-0.05798290971672469,0.012554832265009235,-0.03706361256104224,0.015150059377975719,0.020104122498124613,-0.08167950487915523,-0.09049738330868926,-0.09765764920891665,-0.04917210190542666,-0.006854677942872861,-0.016548383493617744,-0.0331025667789019,0.07275838910600929,0.07562521307882634,0.10694647182179211,0.028768091317893294,0.11012775224935652,0.006071308850389436,-0.043311582601292906,-0.007758743475950151,0.056210474578803696,0.07781442238222123,-0.04471659253314462,-0.021655921126699836,-0.03853418885835443,0.0486287773941621,-0.04791611480794059,0.047213459234373506,0.053938657246931795,-0.003860635566688013,-0.0058031346071556675,-0.015153164298179892,-0.004424365798740695,0.0713055329702584,-0.033309468294712,-0.04338265995147209,0.0401995967691696,-0.10201102364146458,0.002570073639251361,-0.12574127029416365,-0.06474776602051682,0.0641918416069397,0.09935558226828142,0.04312401119007569,-0.02259024424361817,0.04111637673634995,-0.004959938204649576,-0.03983325621638522,-0.02933325456060408,-0.03155147662478229,0.04602465110843174,-0.0024101254885209424,-0.022272285881143203,0.016839510624752845,0.04064589273699266,-0.062911170639219,-0.013081206377971475,0.009096106623791048,-0.04661194877293732,0.039250588775879926,-0.059439101370645925,-0.03784967644952055,-0.06357547410083605,-0.00795837855243275,-0.047359367122651735,-0.054045315164495136,-0.007004189837175531,-0.06678504936080305,0.030632634021535342,-0.005993081644536539,-0.03494708507185614,0.11335892892560671,0.030789552194536572,-0.1836269881823847,-0.07168744319452341,0.10724305920592465,-0.007655962926279414,-0.008288301015693169,0.0030371004653136726,-0.16454078461625102,0.017624151947426288,0.03830082274219848,0.0015239518806008945,-0.014587134704808382,0.040030916070293014,0.04240776053194497,0.04758753905345692,0.02116998305004346,0.01296127317902621,0.03349041897564309,-0.06011149463841457,-0.03220115543837633,-0.009483228079304051,0.06080688470352748,0.08744381948295847,0.07597289527438734,-0.02820998478569908,0.05697303204499132,0.06671598387282687,0.05449339619562132,0.03736514074942092,0.04473436864789454,0.11480875506480556,0.06322408581536938,-0.016408673415301122,-0.008135727050747887,-0.04042911956328064,-0.02622227555316607,-0.07915959661482393,0.0006395165387756947,-0.07588552121818021,0.04433215110732235,0.08803203313147959,0.12326503720846817,-0.00420238856717735,0.05038850951415254,-0.05588902657936369,-0.05854016488373604,-0.10053166649315483,-0.02720108018982483,-0.004982852079140642,0.05956411863516478,-0.035035363571679336,0.11676990999288506,-0.04852530767986935,0.0005939137644828089,-0.10076897471268516,-0.049607029750954386,-0.040511712763787754,-0.03837046343146461,0.002803432868102502,0.003882789206459905,-0.026762595475607394,0.00818101172403496,0.11490241524891141,-0.047549206094073426,0.08444340547653591,0.09456841564346413,0.0031965346826124167,0.0005403386781359378,-0.10417390671961943,0.15923129476845121,0.0187909663617257,-0.025857475841157333,-0.014599706123759795,-0.027831367106142132,-0.07037162116415022,-0.013625771431423206,-0.07802458448314892,0.017616401481129643,-0.007744761540572488,-0.08563736403983073,-0.09000488263169285,-0.059137882956570485,0.08392347099467236,-0.08987840471127516,0.06645282317620152,0.018871625996169948,-0.017681472932098895,0.07796709568280753,0.011371974666966208,0.012508882927000716,0.03598324653454433,0.031320186333309616,-0.046446288873121834,0.03171247400190516,-0.019157674023125588,0.02430752832101813,-0.08237178893495604,-0.019981453399286413,0.08124618142408915,0.01096566226539295,0.06861079266560581,0.04440407279652759,0.08232986286444248,-0.027582470150696283,-0.007058027102615274,-0.0001299859673336405,-0.036640489632980534,0.018556229511524937,0.013557954456586571,-0.03716868130348851,-0.09419533665335299,-0.07853431495095513,0.09000382446668981,-0.07507038369281313,-0.021936763080071982,-0.09410772928770034,0.007192848695305271,-0.03431094148518043,0.02098602117286585,0.06841120279184375,0.026543977336638186,-0.10109321785745624,0.0908213480712254,0.053437839186772175,-0.00457448919335826,0.018838724701150163,-0.02060770098234037,-0.016832558556177976,-0.048193316997910025,-0.061093618096190155,-0.007413175388218127,0.09172515303733862,-0.03163310314802128,0.10281657409173557,-0.024811703295556778,-0.02477046374885709,-0.07585405067662519,-0.009544569991854327,0.01715762522017569,-0.013093403312228939,0.09305365453078762,-0.050716359292703295,-0.004530419643864515,-0.04653418420498391,0.033902263929714474,-0.09589340238021193,0.10067688766681429,0.09306976123543524,-0.019617886521336902,-0.015738934350824012,-0.04624014426096871,-0.0673578215896903,0.018340158938851544,0.017100033886269857,-0.04382189981123134,0.042832067451237577,0.007970735840387834,-0.0019997138794999435,0.0241197812032345,0.012541336217146901,-0.09612244576397576,0.0629632564211244,0.0411709074864726,-0.05130864508388109,0.011591543770630302,0.01970679562584932,0.054929081388213744,0.036171447208966645,0.015680610334579792,-0.000619535694034954,0.0009923200183827557,-0.08518648684894396,-0.01755298946475587,0.04405726855773196,0.04454069206710104,-0.08205716985028952,-0.005507771103886036,-0.10033880550985329,-0.008980493112491383,0.04027095498560677,-0.014628594857810548,0.007409291621636565,0.007753148209189993,-0.021074536299333164,0.05148970719739603,-0.00013336373375528597,0.09206381768411642,0.02255423580542209,0.07279311488198564,0.03844321316675936,-0.01592414432019783,-0.09475459144896989,0.00236449306838228,-0.028761429523373253,0.0016583840560562035,-0.007332844104274612,0.11484360283575425,-0.1001250096453842,0.034597881821396635,-0.008882339522169528,-0.036176983114119675,-0.01859114581747761,-0.034211098665141784,-0.09547286168022469,-0.0031934748662754355,0.03380183413286252,-0.09096331696204858,0.07978464584169527,0.012405664922871157],[0.0552224151193328,-0.01482776159152749,0.058462627592294494,0.006848743600079327,-0.01840079421249858,0.005573339123490297,-0.0008287231145883583,0.00561310748655268,-0.09499840941330163,-0.045909198008971606,-0.038670998118031416,-0.00764616181642413,0.03275190266211935,0.04763939622308039,-0.03832129926211555,0.039898801730993916,0.03158446921369562,-0.03615044705779496,0.09053941937936852,-0.010504195496427107,-0.0036692214642797243,-0.09376372002500874,0.06224948030763664,-0.04398854860886551,-0.08085989186587272,-0.014934699730734424,-0.060481066144055205,0.03259742630941059,0.036456043642163885,0.051466727857962725,0.005132592896938362,-0.0479102987994453,-0.006123412084973446,-0.014700579086497323,0.04480977644029395,-0.04168419664948242,-0.05473949535531951,-0.038950359934933974,0.01296585356952698,0.07055121644464236,-0.008088896326409379,-0.050937961414147664,-0.04080745642625884,-0.06719519910524016,0.061290948348464346,0.0017520254095798285,0.09633975276481618,0.040436414431965405,0.024971253829973894,0.005416224775196065,-0.023776717083848903,0.0011372842296357034,0.04646211006892113,-0.07393926155716522,-0.10606541667506708,0.09598604211925184,0.01986851289134593,0.01647019547730737,-0.006120576225651321,0.043053274969794164,-0.00533645413460187,-0.025365778445932328,-0.069581628832173,-0.08093290576547912,0.0898335822074805,-0.06817550945164737,-0.10289165962457744,0.024050395483432935,-0.055995406833236956,0.0382355852326187,-0.08998598442257646,-0.018202725798417075,-0.03343401500088563,-0.09795420996520347,-0.0030838952967190206,-0.056925104370575824,-0.011093425866763101,0.005278277642467522,0.06443392005801363,-0.002285401109393248,-0.02759468971356883,0.028043458875596953,0.05998451145552301,0.029377594164523922,-0.0729210373540904,0.06000785928951316,-0.022781860611914794,0.07592905866785188,0.030531223434700626,0.03561210873860609,0.014254017100146772,-0.0859244333485764,0.06838738780672347,-0.03742219138588417,0.03507205897745068,-0.05279546397861131,-0.0034200816496097663,-0.013685846347254461,0.11453566346201122,0.027167438565587856,-0.04008202117824051,-0.02994809502900636,-0.009040481467105411,-0.009455419708015502,0.027963996648541913,0.027653189032220315,0.07940368977953978,-0.004916026199656301,0.07748841065112658,0.006717827916449046,-0.01635221984254795,0.0648562079348872,-0.041445097834874566,-0.06033554001862408,0.022440644488914818,-0.04931641638495232,0.03527192558018688,0.03255529098752255,-0.036095116167798424,0.018933854271338063,-0.06755466725392818,0.021889363508932252,-0.0030048715700234977,0.008263766268001255,0.08273372463515527,-0.0001940858255061494,0.08484715522851197,0.002585355826238043,0.0541607518717807,0.05902323898259444,0.02326661435398492,-0.0733531249636034,-0.009670745515190586,-0.04167652308850325,-0.00951660877089491,0.01036941274982712,-0.03757233758766775,-0.053433168668531504,-0.040706098848855246,0.08398028787814363,0.079834870749568,-0.009948005815891609,-0.015315990598845584,-0.05933478620114896,0.040101981183534544,-0.031219059469385285,-0.0029693192189093874,0.14705858919589648,-0.05373240704633458,0.0205143315976714,0.028405566681204156,-0.007473664144416374,0.047511415543880976,0.07436969198155072,-0.04614507262056904,0.01984925027133583,-0.009922693175870105,-0.017066711259856135,0.047384910824574716,-0.029642013322567322,-0.023551704033261123,-0.15260670902938628,-0.03454692685132471,-0.01882029104446318,0.006193504649491263,-0.04481466786811252,-0.0764031082023427,0.046332604230961486,0.0549256422933147,0.06759396977245014,-0.000128531058689779,0.05704914300899201,0.0012357431042566602,0.05352635975215864,0.030884243855123294,0.025963670930081843,-0.014438126438308663,-0.0005090898163261667,-0.0054502818290940395,-0.04177325022302665,0.026899179308953122,0.06328887867162979,0.0835524878070448,0.07821407377700987,0.03985656252706323,0.030305283832828836,0.05939351406737289,0.057857017066852964,0.10014420258402515,0.02783026228305791,0.07504398512272417,-0.033064183503431974,-0.030289726828540288,0.01286014929986553,0.0598625705478446,0.070578718314491,0.013955620605732626,0.07269934531482315,0.03964463606105842,0.039480144810137285,0.00981933145256569,-0.09110610740211637,-0.019264375036600542,0.02944273534951794,-0.015612807574417412,-0.034083645599112485,0.10070632460092217,-0.021568355609892335,-0.04003249515555891,-0.012390886214367616,0.14209943049980844,0.13874970357487468,0.06387685236200116,0.014950277152655404,-0.016673371002908638,0.005230743558072288,0.09010157431937504,-0.0037197792040421372,-0.0056613089359037905,-0.008388365527586029,0.0001436021888229992,0.07494878417709616,-0.07613466005243402,-0.032682278600046334,0.0031004767039645754,-0.04536818884129043,0.032673678381066065,0.020700091536846692,-0.029264773049782554,-0.023358517298939716,-0.02494548510486511,-0.09613637368192966,0.002665429720848508,-0.055106768229722033,-0.057601913704866115,-0.007519691332723957,-0.059541707008969116,0.016537825446165114,0.03177642139214421,0.05142750156114578,0.07960562048323878,0.13981245406430312,0.13737961481810282,0.05693902026645807,-0.006053301161269071,0.04712856136444797,-0.06703398537551308,0.061439452697582206,0.06766622849973043,-0.02642436930198545,0.01077409988858655,-0.011532656852057644,-0.11099421121467838,0.01453508832882089,0.032245663775424496,-0.013156148349141925,0.08428200720831186,-0.049591430033916875,-0.04543538821055284,-0.0652242040893319,-0.0735258716551244,-0.034156169927167045,-0.004416723263968803,0.027283790271478117,0.03017530368575444,-0.03942872179203375,0.04682246573864867,0.052610381551330306,0.07614190072783088,0.1736572522138236,0.09997891507414439,0.036042298821156366,0.07910199814338328,0.0551230436503052,0.08846340270475282,-0.04040640910411109,0.026897358555335104,-0.003140482440482267,0.05734947346785054,0.010449777072297432,-0.021718540248445772,0.04055082039287387,-0.0248046146749206,-0.01714734790119932,0.038318007232391184,-0.05673573725303014,0.003942146146716976,-0.03977718106402183,-0.05651038149095701,0.03351547599548728,-0.11462539431886343,-0.02135066617988973,-0.016588065303051066,0.031734442926123804,0.02811302090148033,-0.028458671598895233,0.013878347501065235,0.07646591764563225,0.04794383465407727,0.04774030816031606,0.043187625731643614,0.062255213668776274,0.07773753630898143,-0.031110120888104543,-0.0029043860065548132,-0.0415027453148226,-0.05042649434518193,-0.03719600847811256,0.016223215001109563,-0.049838623314404196,0.03410010667886377,0.020108958754117782,-0.015362660073095594,0.003947061445540169,0.03623714893247604,0.0027472968300998324,-0.029846558252143014,-0.021129725356022616,-0.04190311020406546,-0.06099276848366554,-0.05141871189280646,0.0922234587190674,0.10143371133148678,0.0645588187142594,-0.01820020577475783,-0.029631950177939632,0.03646445592746229,0.012825373702044382,0.06524292236651823,-0.01708557943998058,0.048181368436183696,-0.008153808231405973,-0.07125826888519171,0.09092497745705987,0.03695201034305199,0.01648414453258424,-0.027385915347999928,-0.04097234503672649,-0.00447321771284823,0.022169057156687894,0.004789621157839202,0.09942849825030421,-0.021159485314898235,-0.00752235355080592,-0.03112081772430769,-0.00027505491256437547,0.061163139076632685,-0.011348367427729487,0.023226024224507303,-0.001970598759996503,-0.0030602359163449874,-0.0061370818956310216,0.06958298314366029,-0.04115320674958865,0.06730560252842574,0.05552540867443752,0.01969901623207531,0.014214474688332158,0.020364985617231435,0.05817653360964237,-0.004686794415889508,-0.0005612186686408965,-0.03399702678758438,0.03985179669898294,0.04903525925155945,0.022063467472142422,0.0408293347712452,-0.08301848380274221,0.05274514229299546,-0.03781774514367247,-0.053260765320483336,-0.060011750428395856,0.07305903652490264,-0.007118611825552777,-0.014998524928222855,-0.08293579579640406,-0.0015098775451367892,0.06972160648905415,-0.038328705093300254,-0.04535305708537576,-0.00237039633986436,-0.05460254570592316,-0.0012424557071611714,-0.01174260846539364,0.016689071029200007,-0.05373622162892048,-0.03767303576696464,-0.027709908903288866,-0.03621685791671605,-0.03114346167294377,0.055118436883289844,-0.05213612735672444,0.011225912088202207,0.0014525173887462806,0.05971247635161581,0.06292759227194092,0.017897303786109372,0.04104801073841496,-0.001285713273999259,-0.019603025965053734,-0.017841628764783197,-0.00533558880188203,-0.032904361079599286,-0.010260692776082804,-0.03576077715769987,-0.03408817587857871,-0.03918130439525886,-0.03572435896186635,0.026767893991134124,-0.018530686291706924,0.033568271515388916,0.034022708229883014,0.01349315057726147,-0.0047710397734385315,-0.057532301331876805,-0.037113579699873,0.00634070069489491,-0.029176547562623615,0.047514048522986664,0.005100532548124472,-0.01658314774971724,-0.02667681267370984,-0.03236206727858167,-0.022182058500944027,-0.018471422842847873,0.019771160118381204,-0.03340289844625792,-0.023395440970038806,-0.12454554804755151,-0.08502543247534225,-0.006439602156503813,-0.08748426213518289,-0.07097562934305063,0.015160922781258109,-0.0064526303712803155,-0.011132944629127053,0.01557180834830838,0.03072525677492898,-0.06336790068442143,0.03638154204493794,-0.02309673672014022,0.02270316378192245,0.028205557897834608,0.06656736193927576,-0.09690703820731164,-0.02103013582820706,-0.02455203132479548,-0.03281843262110909,0.006723033574499914,0.004647876695192966,0.042017777463563236,0.1229531049066565,-0.021566319027429053,0.042706456181866484,-0.08534194004980498,-0.0478438044646584,-0.01038783110072068,-0.040290566698736444,-0.00444297501568598,-0.10383486480703376,-0.06010327688767567,-0.022801679777084517,-0.06080446231836059,-0.09933855137620867,0.02657062645438349,0.012211721044766791,0.07781445698063696,0.03520099096656944,-0.06328501504985613,-0.07663052552981839,0.005872821182513221,0.01628956876922501,0.05895036322195568,-0.1111082300257314,-0.052382751633882174,0.025572386759347726,-0.04974102222047468,-0.023386878990756702,-0.0374388616550034,-0.06335630042258644,0.017619851487732246,0.018905283118606495,0.10920535937589938,0.09239062318770654,-0.03900046467059501,-0.007905585288007416,0.00005816947528692196,-0.055809817032475464,-0.009341490412294541,-0.051977653551075885,0.027920546144775082,-0.05538010490569964,0.026247564515676183,0.019852500393652776,0.08839338873881286,0.02530845576298427,0.012341473223262225,0.05536212221420613,0.015497082300309337,-0.05531602420571128,-0.03358666100502853,-0.03919641281483739,0.03732121088256709,0.05559813014025059,-0.1028760478505523,0.05370985588278456,0.08768892015075525,-0.05584018046398426,0.10047735106853418,0.06313956317886803,-0.15418142908769375,0.03851638146748507,0.049258483429041676,0.059818573985226345,0.026069037980956992,-0.009910252404093678,0.009636752051811486,-0.05936070805925858,0.037261234457095414,0.06477222146766869,0.0929509866457446,0.010968942899703786,0.036828679349779965,-0.07985863681834034,-0.017890300406598593,0.005094130463640883,-0.0193027097484472,0.005798435328580607,-0.020208658285903205,-0.1133708085161095,-0.030790761188888162,-0.05888372044003443,0.0019181482944689995,0.09654158748834014,-0.00037052205128597793,-0.096532931101717,-0.011288536340283937,0.008468971860749307,0.059915027367201557,-0.01501363220883918,0.04989135263601538,0.0379652909349184,0.0227274410506536,-0.09952886703450409,-0.032323649742337306,-0.011543396891465137,0.0841553384808298,-0.05285132670210817,-0.041677127985808034,0.05647786790546042,0.1012417421537674,-0.006125868559518929,0.010922050854065033,-0.051531769365296604,-0.03220110864069934,0.018180968248644243,-0.00212748490505541,-0.021982434536375366,-0.11907981835275382,0.10911972259037382,0.05080610811415453,0.042267118027612564,0.019752799228689156,-0.007393826800628555,0.004171373001139976,0.09751219316580569,0.03993332540782407,-0.0987836116382591,0.03317708004737311,0.029402718155856922,0.05082187177597289,-0.0626489121994705,-0.035020726863709016,-0.05318734714560066,0.0853230030826173,0.049722088594704374,0.04303323305008674,0.02221567050330636,-0.04432454844648128,0.023458841675692017,-0.030237278107671912,-0.11955921877951282,-0.048336219642980946,0.0523779136997257,-0.12145908733542397,0.017333811800725546,-0.006193548585832077,0.06403272407802453,-0.030072194458175168,-0.047351239314663805,0.010722369616041373,-0.07774275882102757,0.06621983939166183,-0.024898401073352845,-0.06190726220968292,0.001565678738457312,0.02031558372195193,0.027131212564046735,0.025269891408785376,-0.050568176993491476,0.07435741133796818,0.03362417795899062,0.01757524311300967,0.0071093171092107095,0.038325393447585114,-0.04402957910664126,-0.05054672767985719,-0.07837893216709942,-0.09674475557461686,-0.10070602612376112,-0.04329573194759639,-0.03695752675072227,-0.012939932009948958,-0.005076362120084256,0.033447684238962286,0.018020120114793838,0.00888860778686398,0.007030152488908749,-0.04530202140395138,0.04442701718317785,-0.058648643813951996,-0.07956991404289208,-0.08010092184111942,-0.004855714577595482,0.003365722246229928,0.018445622849583523,-0.028113079800911805,-0.07757037822851517,-0.037756821035997395,-0.06234356592763531,-0.036094879922463345,-0.048054939219446625,0.05256733826008054,-0.003273210212433688,-0.1206233622028216,-0.03646295639704055,-0.016160302875189294,-0.008553053677504412,0.004581063049130187,0.07048171617307125,0.008710570288085612,-0.06688085355088272,0.04082359563509457,-0.011969647510565104,-0.01785817774730045,-0.04247280330350799,-0.0025497877712909755,0.014350900673702214,-0.02671253658903012,0.05858830550966505,0.02304666343427626,0.08977628234901389,0.027739383570953687,-0.03542940492159719,0.004433135373996133,-0.04413167658086505,-0.05644548039391068,0.0885346631615935,-0.02412193154859343,0.022967770989019688,-0.004133568352734538,-0.05557906785947306,-0.025468037495244532,-0.06725401442109818,-0.032118800558499784,0.008628650954502914,-0.02798456123264155,0.014427934467664785,-0.03632002184095099,0.03500272343398051,0.012821451863690785,0.03927893842965131,-0.07656865527330338,0.023029091393801507,-0.022312937668308316,-0.08882465110626334,0.019737173466314966,0.012056710821423707,-0.017651666960719663,0.04060838424939571,0.020987532259275875,-0.0019862281778765876,0.08781140223966255,0.028755613141384972,0.06444731200295484,-0.018713245027895276,-0.05362145925557536,0.05548237659189772,0.11414202612618142,0.027098367208401565,0.0006932247969548262,0.025069639389778298,-0.03702403988888197,-0.007216031517988831,0.028402187879940363,0.015212094846177663,-0.054409814876952754,0.02008331927791101,-0.08202895140079287,0.04061895684642692,0.07374039201943829,0.07793419145923135,-0.02715169859401265,0.03977781870404089,-0.04214976103747683,-0.0899932371312067,-0.0580828910136565,0.04896659692796671,0.013134792840424252,0.082619123804924,0.027792300080982782,-0.010431937778881116,-0.010274181863897454,-0.006915506741245264,0.04112146372845263,0.03186367025462898,0.03955545699057497,-0.005022175067549872,0.009000589983157658,0.07531554250199338,-0.010492367135046718,0.014869252675772686,0.03689315989152253,0.019929572349723798,-0.017127180306571826,0.030324772916688756,-0.03316290293329878,0.07173817015806881,-0.07587392201149348,-0.031123999677263762,-0.04672021830458175,-0.027410712871705264,-0.03332725868749876,0.007393067999762078,0.012930980699411416,0.0005787347916793819,0.013640282306362807,-0.018451159932955246,-0.014643401199347122,0.0004371103886854597,-0.00944200901571086,-0.03219182453203952,0.04408639341220166,0.024056587070065683,-0.048049303562616816,0.01053333107019412,-0.00865772771143121,0.046990181793335375,-0.04279834417727582,-0.01809695100015506,-0.07585017799230717,-0.0025870437817489384,-0.08297800057680067,0.08985264631864669,-0.017759664223321377,0.008769649813211605,-0.04375290331005526,-0.07805004850326709,0.0021564784795343713,-0.06753675494944224,-0.05644706055740669,-0.05496958289746118,0.017078236869948343,-0.012677752717830323,0.02262223528917299,-0.030363955039855305,-0.04683997328264668,0.002410393848292483,-0.03682012435948485,0.08696823364811504,0.02852712845846203,-0.027727981750789204,-0.00797675479591793,0.013909410749649015,-0.011190078497255602,-0.05073093065859439,0.03671705296901874,-0.0757973873504658,-0.059975992269532936,0.022278418121499617,-0.031106367384019666,-0.04855781815547664,-0.048044232213177517,-0.0364202001791365],[-0.008649178589734807,-0.06649698259387336,0.07910346092376998,-0.09728487611228148,0.09080873769908693,-0.04389643165419595,0.059772879358863384,-0.0363433634598979,0.04148865963048753,-0.057118442128414916,-0.10393535219906644,-0.018879285789226843,-0.024758688086251424,-0.06153807766974409,0.006081476383463863,-0.058099741044002715,0.04782698949511733,0.009757884890220852,0.0005613307590324595,-0.06512910821912941,-0.02783965838230871,0.03425995634516777,0.01663970943173779,0.07714277413024831,0.04039088345388422,0.05803090102290133,0.055460533869642746,0.01981266666079801,-0.03394852105541635,0.034003880466549924,-0.04908568888506121,-0.08471435623299535,0.02423790634925023,-0.016201444385292793,-0.04225820300444523,-0.14578267926598704,0.04358174361983881,-0.0020472188043401643,-0.006762360493490028,0.073938734031877,-0.02460013772115595,-0.06454382581904355,0.048483825848289,-0.08435577288633811,0.04188728983850795,-0.013511602486108368,0.11576590525959995,0.061536627358279396,0.02605047553536501,-0.00852041056881111,-0.06581202316593572,0.008973079594235808,-0.112638686842389,-0.013120775100922988,0.01711975139987966,-0.003339268534647642,-0.12360294031139764,0.047660171926137355,-0.0017545297375100067,-0.012209926167402225,-0.05108480557657055,0.05533868562697695,-0.011698047450914816,0.07592628109496591,-0.027095748938134774,-0.031931274225475606,0.011479862156458957,0.01283584264290294,0.006647108760840631,-0.006765749041566925,0.00017862649206734163,0.09062734108742238,-0.04303173292377454,-0.060589476075448616,0.02098544725128296,-0.0010686272430330556,0.007840188708641407,0.04541191518743287,0.08078503766790025,0.034748980119383294,-0.02130513005095909,-0.020243612499164034,0.03550553311392524,-0.033353479628289016,0.034733230821208806,-0.025159892841425054,-0.08767831760515009,0.046041369890177,0.08366655991361041,-0.0727950903284921,0.005603398815681999,0.026757589088877667,-0.001522654311853392,0.006904020492538019,0.03254159279634396,0.02656514121379073,-0.008491429433645855,-0.05827901671119425,-0.12463991668693573,-0.007088309840332358,0.007692641460432257,-0.030326088348552233,-0.0012099165131606727,-0.030689863899199903,0.043686035022653454,0.0017774730225788922,0.09777494277488172,0.00945988219937369,0.04214934683214906,0.02507705825000563,0.021741684913623903,-0.02181121070944238,0.013760151374729461,0.0006723078519070511,-0.06172397919194915,-0.02262695736639505,0.019212113076602165,0.03218243977702669,0.09549378350571508,-0.03052263567792062,0.05731530512787339,0.031431099562385593,-0.0039042927380160937,-0.06753932304352496,-0.027227675284417305,0.014073350852291415,-0.08321699364068723,0.05167815656039659,-0.061807148745967266,-0.07788890240390979,-0.01865766489724062,-0.007493303767618368,0.0656595749961645,0.07565337706636066,-0.027241987909286735,0.05874418581361979,0.005083413253472536,-0.08824403790867516,0.006996819528676556,0.06749739004783452,-0.08043505127441994,0.059131041524308085,-0.06520423250023824,-0.028624026901567106,-0.010142204849020432,-0.03336484109134821,0.003746963448610119,-0.002197731369552484,0.014507660804900749,-0.10290453526903913,0.05557963072325118,-0.00979156934587893,-0.04946165242497533,-0.11029854034633638,0.025225459428484906,-0.05643768516838232,-0.037512116967775566,-0.0035883845663826457,0.06798361644897005,0.0642174500324892,0.09697124398750262,0.019382231820018813,-0.019643058882449688,0.1178647340990866,-0.03434634224864662,0.07311725717554149,0.04863628858127443,0.02155053287153136,0.07678930824577349,-0.06359896593956849,0.0015415271646614362,-0.024459977476044704,-0.05358051651997095,-0.047176269917137297,0.051239848100059576,-0.01893647523476081,-0.09484187858057137,0.0019893729333969887,-0.08327855386559771,-0.03408105799056638,0.004717425402926145,-0.037690987503880106,0.013262618949259626,-0.02384303838563449,-0.012110535021010694,0.04097891995074502,0.057018593785802874,0.09535476173410469,-0.10232930807947219,-0.0423843268066209,-0.0823956537852423,0.02997067749460752,-0.007896407554764532,-0.04750287339922751,-0.03275570255909902,0.06367378826744349,-0.0456888244526453,-0.04684721693615622,0.07807755896361761,0.021592747490036295,0.05158467425614209,0.09896032943013269,-0.0444963591210096,0.020750733247199366,0.0732051148046337,-0.08268678794437541,-0.06401462521007163,-0.02664768902176031,0.027643034030771348,0.061639191295315886,-0.0365469254367342,-0.09029791213363386,0.018862074047674874,0.02168011279695069,-0.0017357009403288865,0.010830911032761237,-0.018835310752648177,0.04818604932561068,0.10439471513010762,-0.005771063492153445,0.12483496717511589,-0.09435821804404973,0.0138596250796,0.026737004802356034,-0.07214053518602959,0.030585550493766954,-0.06505913920320743,-0.020658675024131185,-0.03951754788277449,0.09164456211807658,-0.01198207670054347,0.004834975876855485,0.01851351381598866,-0.027716488545136767,-0.01627898034984474,-0.04004297508402476,-0.05578574899240226,-0.11631732647185851,0.021825072308486616,-0.05157227173731241,0.0273461404031146,-0.011485430904622892,0.0581126244042766,-0.0009861862557386304,0.008528659637044755,0.032459894957743526,-0.04834383525244809,0.002316701484736591,0.0068227217859634206,0.08251135210299995,0.06306208174652864,-0.08295972344114658,0.06244413150282857,0.007210497309251986,0.02928202258325941,0.01949931773832538,0.03647450878985119,0.042776646428893464,0.007839290759672395,0.04243873607610006,-0.0562620921959998,-0.0130646212623518,0.08188549519935841,-0.02551253743718954,0.011660905788423697,0.03657509811612995,0.05270833346029268,-0.0562550590751799,0.02913314854346307,0.014456897227289324,0.012984488176329871,-0.06557792105447652,0.06819233554639391,0.04620406210752747,-0.00456560364266921,-0.03531656325445472,-0.052244175137299814,0.017572413999331963,-0.0483909360595652,0.04239358379730423,0.017063776797615105,-0.0021404311467563388,0.09276196748360101,0.09724111906971582,0.0448111757663691,0.020524922755807334,-0.026712612872019082,-0.04780847896927375,-0.1275219874801101,-0.12328502605227053,0.08040146129614956,0.060138175924093686,0.05202765702790162,-0.0008415316907086505,-0.03119033465462352,0.039592520817679513,0.04575662239299425,-0.06749813498957317,0.033986841639591474,-0.044885453994519105,0.005650549228919375,0.024517930005867963,-0.051228390923684995,-0.028007849083785195,-0.021486226872302124,0.016918139720254535,0.03896426964523013,-0.1032977823156717,-0.06165960830195715,0.02547720897709896,-0.017569129243305406,-0.05249655085201906,0.02660306451297078,0.04586570165883578,0.029744101929696787,0.07701896596571046,0.014345265828708225,0.025313248580121583,-0.07045785557707034,0.035095559991227564,0.04085307446365112,0.0655575648542353,-0.035635338427411525,0.015679715485213904,0.09915886349770296,0.0009843157338626186,0.07464535254238064,-0.0312630107204587,-0.026539773464489148,-0.07487524449017277,0.08149552585258764,0.026207752349517496,0.012508951748758115,0.11224680289817116,0.04487550176371884,0.05396761555790692,0.034106237561971946,-0.053142046380842904,0.07966189941421396,0.07998880330954614,-0.022046618056614474,-0.015859492315875214,0.05169341062012519,0.02869513870824195,-0.13525118274599604,0.0030139830551333675,-0.010864608863021874,0.07684556999758685,-0.017783733420555416,-0.005158715122896549,0.03880447987504191,-0.022092575032485153,-0.09259947838769007,-0.007087571709402481,-0.02691343309459205,-0.07736659068777196,-0.016598736530498478,-0.06171120650839329,0.016671931431617253,-0.03905926680023142,0.002296257159087502,-0.0029622376698611947,0.04391271312279221,-0.037678617244939976,-0.020661859679284744,0.017014423692874727,0.07351997808921414,0.022403223519712672,-0.0064527513911767755,-0.02910774304021501,-0.008029900360237553,-0.007502886628570008,-0.02187695596070843,0.018843680462920422,-0.05753643471345648,0.013329906025074903,0.13478890631701376,0.06384401375111878,0.04935991697214309,0.04439302775228173,-0.017082872082756106,0.001774908051220553,0.024237614102471453,0.007018356030759694,-0.013064469822456156,0.04978390737805259,0.020329255995100676,0.021960191955516063,0.04902767238152008,-0.0039095702404017075,0.005762280259998329,0.034237409018693585,-0.01747862774364901,-0.009554637996757846,-0.08168926946034188,0.028769128451982727,-0.03374337223426875,-0.023297789162462335,-0.0249368502308783,-0.09688334592194991,-0.027206944195993277,-0.03321738285988045,0.07699458901767942,-0.04418945977949032,0.06323117997588139,0.06795791703891468,-0.000556114129917358,-0.029607661307934185,-0.09611122044563168,0.09354103739486794,0.009305759012770637,-0.03337184657522819,-0.17615852389663872,0.03846067878614038,0.056120680530093975,-0.013962201104918444,-0.03534803282480561,-0.016509037161020916,0.09773751407029331,0.015355625866316792,-0.005081780457468933,-0.0108235505381495,-0.03004628972939405,-0.041022088685734655,-0.12653322885174328,0.022172714451865926,-0.09777081908292845,-0.043508285290761194,0.10937671122008419,0.0033875625241428908,0.06323302876375979,-0.045616399472017725,-0.019052817258401227,0.04026970376133817,-0.05818641375310035,0.010471930393976694,0.044081698034813536,-0.04453215038176457,-0.03846083736624998,-0.00028868185037086926,-0.004019540828354672,-0.011270769112881083,-0.07608600746270372,0.015888671494791076,-0.09734410559830653,0.022832056036164693,-0.0686585046985906,0.006583684518553576,-0.049371135490974,0.027626635641410165,-0.03505864602078882,0.08619208303901486,0.09478468762935477,0.027413928568403467,-0.018157125148045097,0.01079116875721169,-0.03580570154778934,-0.017954025715185486,-0.0396884528174226,0.04774159703187785,0.06560160789061917,0.0005944294387019292,-0.019841036639082422,-0.041853679431608906,-0.022748338522856862,0.08798207832820627,-0.00907404062275599,0.0438900371517558,0.030356204510320083,0.08302975517129496,-0.043640057548351756,-0.02200422813237191,-0.07923987063385612,0.009646765778196875,0.014179107987750704,0.09303213112056873,-0.028296028712953575,0.060460778565475826,-0.08740239867374737,-0.012748658269058424,-0.08816197503349388,-0.030256239622307605,-0.1020752057126323,0.008202355401219356,-0.03273559761341689,-0.047448397378713036,0.05075822183711927,-0.047867640472577064,-0.04563463054123168,-0.01970702782325647,-0.025858467426066897,-0.017950644670985942,0.04898570644665361,0.09339275186376896,0.09863680652059227,-0.011082404683779065,-0.060353554196093014,0.026031806214403642,-0.10515769393940524,-0.008129549574264875,0.006537614562646662,-0.039088411625219165,0.06520637432094704,0.015925117347276842,0.054149241104277636,0.03397597616284645,0.0311407175108377,-0.0328524284248081,-0.027232769988847747,-0.0513958777265248,0.027681028800363033,-0.0830969735572411,-0.09337884726691688,-0.0005158242122999178,0.006969471642456697,0.006567452197878821,-0.011450007624943819,0.021491835526784363,0.017865215802130876,-0.08909920482568331,0.026957332779311543,0.11937095595256435,0.08737364329957902,-0.07281846496345154,-0.051583073078517845,-0.1210108941159785,-0.006993085264612017,0.014064427141226637,-0.06620042335286032,0.008210452673529229,-0.053747069202508345,0.019902107206168404,0.051647016335176904,0.03589105844990772,0.0329293697246921,0.03969778737317118,-0.025454076640494313,-0.012918295415515361,0.07388343125158896,0.0718035384443634,0.06749882116686891,0.009202840636903823,0.024741899975502957,0.019456672479272887,0.023312085546801056,0.0016698248488788087,-0.012086079100733057,-0.01886038534947037,0.02183473055800937,0.06628749614747576,-0.03761115693320778,0.08260499330801874,-0.08928339631321433,-0.04695161606070337,0.03370205812296192,-0.025826435371872798,-0.07672627374099271,-0.031959557753785,-0.06389900512767678,-0.08305358005753735,-0.012897784972553514,0.011807735768987856,-0.027610446508748842,-0.049994720356400645,0.05272932668084285,0.013456472833004534,-0.06923139065055184,0.03388620207973575,0.049960586672787216,-0.05770012768311032,-0.07250086163541004,0.06379227394959583,-0.053985805474956974,-0.03867645861757832,-0.1320161414501189,0.007752025795971396,0.08840813703397202,-0.022819077933643767,-0.03691835796745706,-0.017425891839296683,-0.013083415059104835,-0.08479129646193648,-0.012387890977231036,0.0467112802773604,-0.0826194327666413,0.012262346857248614,0.005173627014502241,-0.00010897917815944014,-0.057253675484696114,0.006058819463681645,0.01978847112153264,-0.002866385424265389,-0.10200129538293279,-0.03830497083917826,0.035849376140379176,-0.044921559113926146,-0.06042345689321271,0.023070016273994687,0.10844421375498035,0.006282000047939624,0.07146991174507443,-0.11732598369061215,-0.01919473724207523,-0.031001694754155585,0.025158268442303035,0.01608379791063332,-0.045402628023642394,0.029731508507818902,0.013268407064344796,-0.030044143380474963,-0.04015355130061643,0.01885093465578422,-0.006212240298752532,0.0056598161212508295,-0.043133206736423325,0.03954271173232914,0.009185054121160177,0.05643284165745473,-0.006552795301492012,-0.05979008126549373,0.011697046457152863,-0.01792867732504385,-0.01277644457287921,-0.07270594785781616,-0.11903524799954684,-0.018422839182110327,-0.006549703921745019,-0.010285750295822956,0.07048259311377715,0.0790599855791103,-0.006100259703373288,0.08953643758020022,0.1443538816566288,-0.02154675831815982,-0.018300500792472536,-0.017956385446148186,-0.01629370493405374,-0.02625155315552038,0.025626398983799308,0.05526263500660403,-0.04301757764571657,-0.06355769815443559,0.019192287864946617,0.08744807036029532,0.017215205280492963,0.07540619824750218,0.04454257106094681,0.05358325934807072,0.061047459433196644,0.018473364021353134,0.004228777172398059,-0.09015747363771313,-0.04324304911418487,-0.015800168506112634,-0.04521497020873591,-0.07546604832647205,-0.03923138055620454,0.09420367325442522,0.016799912206314143,0.06673752987149136,0.08203622594382873,0.0365366229703323,0.08029580228358853,-0.05377267148288523,0.05268573666289023,-0.039662273262454466,0.04473088128886344,-0.04729474683913154,-0.012617642373810372,-0.027934174676878986,0.06459702136216801,-0.06372388875361949,0.03093010066574287,0.015138413919796883,-0.016659073474549636,0.04715986755546959,-0.0163678779495466,-0.05989285798556293,-0.023240316254818462,-0.06377870202004757,0.03024835714101098,-0.007717062701367751,0.060059163988922595,-0.057004456779244636,-0.03279935225526673,-0.026943232234065775,-0.06484445864940129,0.07851356321145693,0.10430130166895342,-0.03470769707682729,-0.06048472763302484,0.036658981853929164,-0.08751718665144567,0.03593237030894518,-0.10156337333114264,0.10746010765415864,0.021663804200133852,0.06385829999535662,0.031022582984197175,-0.015431021184795921,0.0362367399550077,-0.024807935236447927,-0.12575363728495045,0.026138602578834623,-0.06277132052551639,0.03498562624388947,-0.07852832319569591,-0.08344702808946755,-0.13919833758970615,-0.034103908746832806,0.06421252207355259,0.016536958959983437,0.004406061946827606,-0.07240298652139861,-0.021347197901292747,-0.00031266069061012245,0.05725129517480556,0.08236290301873962,-0.010489048568443278,-0.018645438460389168,-0.00824437679966636,0.0645155361028323,0.009032604307063695,-0.08850992278778097,-0.014286103511695937,-0.022804039868598337,-0.04140742784417378,0.026123446179697904,-0.049419875149292636,-0.06719763061610655,0.029807304329947493,0.009015083260602045,-0.05376577342129747,0.026053413598509746,-0.015774959785295337,-0.015090038127696265,0.03638592401763318,0.04104247096634078,0.02360323321351591,0.08735242340850849,0.026942499123139445,-0.010745818454049682,-0.14648115808122825,-0.022509290045076215,0.11357754796547068,0.048554875864134636,0.01774081941198876,0.00877753177779935,0.12722942478085766,-0.06179721525822583,-0.027976163535972803,0.04441743088212773,0.10063997530461241,-0.04895324482239313,-0.01617999766795316,0.026351759299619384,0.02258517675819787,-0.07138635375948975,0.029484981734520115,0.05129304334481346,-0.03698261824829769,-0.058776455433642745,-0.04347613982965852,0.03850429810257505,0.006390230030874421,-0.05523467988085083,-0.026508752025569692,0.04175930095129291,-0.043827632929912166,0.026771691348576265,-0.07356350477311716,-0.015866505360263697,0.007596040702657202,-0.14942636900455944,-0.010051587678214105,0.038037975358395815,0.03134236873225575,0.07765730951597738,-0.034809132118798304,-0.015502971191997983,0.03698489325715386,-0.014204085398347714,0.03458004817677823,-0.022773433616377056],[-0.0245867961813615,0.04435260954739436,-0.054598527974336016,-0.03516259281438337,-0.05782052475978828,0.04340220166496319,0.0163339829401476,-0.005211261103329634,-0.0025841442625144516,-0.01062497338885047,0.00023178516832637557,0.11396320529809184,-0.04744214473855726,-0.019877374528501943,0.031555839252212545,0.042490038721935616,-0.017706814746235013,0.06402816285673914,0.0011158983811385846,0.029045356559977645,-0.02768953991207855,-0.01961671215382252,-0.010541735629336963,-0.04262800290153002,-0.03388963309881961,-0.00022174814710582407,-0.00028727869705881374,0.029812594957708903,-0.08999843518953228,-0.02674656854137377,0.03223573683802264,-0.07438674016001427,-0.013790158870902873,-0.04115821245898539,0.044972434664090837,0.08006725381442723,0.09427360191935269,0.00439632765908968,-0.02095780422461512,0.009700474335520032,-0.0017467442307773293,0.00035666574188954577,-0.04811914711325487,-0.0011324024678416296,-0.007986111085250115,-0.01990689982725634,-0.001560952800855723,0.031747346543488056,0.07742376098539158,0.03029995294530856,-0.03292537276609476,-0.02474738105493534,0.12564516998249853,-0.06387884398066736,0.08441987962504023,0.0010194567830139308,0.013334555385575122,-0.02412413560188507,0.03634166843248367,-0.024660184442127406,-0.02563324062080767,-0.04440724638973983,-0.05725391304758618,-0.001984386331304696,-0.01028253869444925,-0.011069853602544777,0.0013816903952997225,-0.03788359653388856,-0.0009590384829761535,-0.022842971750036904,0.060770123638928655,-0.007051926776316196,-0.011706128796749416,0.010508559794428763,-0.020909381617077796,0.022027168566167633,0.05134541208003852,0.04214087813390882,0.000547597828906845,-0.01733827972306525,0.06663559710261623,-0.017720628108770252,-0.004973244378300212,-0.047498980874386816,-0.0392175029774251,0.0023310559635878986,0.0020212039214393997,-0.0010997620382688258,0.025692689676160944,0.03820958874881849,-0.0275508938799554,0.030704023369988172,0.010211029344943529,-0.049793655202628406,0.012888688738839141,0.014963542233519493,0.009410402839047528,0.02622044733273298,0.09228938501374157,0.013087292793744177,-0.019719193364317045,-0.00002025384870707325,0.11981318553968591,0.008987355174512381,0.01150868636711653,-0.026470669676761583,-0.02212379209003682,0.040286289752253686,-0.007394723861344211,-0.03012139226263035,0.0058319169273502855,-0.10713233826200073,0.023501876033513874,-0.019593703407753477,-0.011914250319351958,0.005241485204000272,0.01376363599254278,0.03207254589431999,0.04211806006548726,0.012892065915860538,0.08377743859588685,-0.013395588232683222,-0.01047596633981021,0.09196849011679324,0.035258747286289534,0.0682849046128243,-0.060769909906706346,0.008431387691479036,0.13273295742847874,0.07149147683451139,-0.022801792422970674,0.009874201019413453,0.07678313963305329,-0.036483094778592164,0.10714950822884976,0.003388453505076167,0.0802341583131787,0.08865211370556102,-0.0010840754087011338,-0.02443608577798647,0.04950923138634807,-0.014905019699425122,-0.1120128352486141,-0.026196661262849995,-0.03789514644769672,0.050652957911439304,0.04049165103741205,0.0395469163209676,0.020803762406172932,-0.02373984899585446,0.002043409445423042,0.03328664641208289,-0.07156842461850792,-0.04810154314076411,0.018403108586522304,0.05543467800805045,-0.004361746410731483,-0.040020236230082246,-0.040213870020709155,-0.056954308503250575,-0.017231189924974168,-0.07013062911583978,0.005201922019521615,-0.035207578946204215,-0.0826769768418719,0.047041288480690405,-0.03647972514612065,-0.02830386114281024,-0.05112603352917874,-0.10951572572134405,-0.020561490672539175,-0.02432289770482733,-0.07190124194679148,-0.001724704845703671,-0.05442285604367658,-0.10843920471281314,0.022287429636771945,0.01729064835048816,0.03982148610634713,-0.02559683791449742,0.01556391468819256,-0.010999457097212208,0.06707398865140501,-0.04756266668088825,0.07904242152002457,-0.015631203645282966,-0.01843726613270921,-0.001539576193823217,0.037481603253571166,-0.10254837110409773,-0.002930433246315494,-0.002420589865819451,0.014574580743051025,-0.03122977313825846,-0.019643331040882863,-0.019438598657312647,0.028249637112457097,0.11520718468188028,-0.053725347452498795,-0.010583211427171144,0.0015634400828672679,-0.08838836538939836,0.0002331274092691634,0.17381127134731858,-0.022291178312433386,-0.018810035153888852,0.0757719677255346,0.011083178854136266,-0.007515740864419052,0.014141843387756231,0.05403923314101202,-0.07052087615259005,-0.010954525504753142,0.10069187393325993,-0.06511826610183775,-0.1018679660435866,-0.05767954536608541,-0.0676539814480556,-0.059457020051450975,0.007716012916314368,0.03337851207064746,0.04240604498009196,0.020752005821895264,0.029818805966012305,0.027447013021660856,-0.018864564118249105,-0.05356372454575003,0.01914914703957501,0.014268253274580348,0.06420072037300294,-0.019526785576908314,-0.009071410709989541,0.08487992611169337,0.06277502047476255,-0.03573996234672699,-0.06265513473800538,-0.04259516337142954,0.002247377885243375,-0.036774143819458247,0.016877869079817434,-0.012601471079281,-0.12835663974722772,-0.09470015253117488,-0.053224844458894416,-0.007084720930088879,-0.02494058666062572,-0.04980604520797872,0.04338781638752008,-0.07949302074923309,0.09558454159437424,0.07545386508587477,0.048360438845436456,0.06500028415180616,0.047330722929433675,0.02172762975532285,-0.0014509349322338503,0.03602161759759475,0.12229907557065398,0.038371762106755934,0.026223587873348983,-0.03546136607030726,0.022104304402239174,0.054589519900081235,-0.019248667379936052,-0.08145407579153027,0.03420189963649135,0.006339082963131588,-0.008813617533971514,-0.09409876674155118,-0.04931846919959304,-0.08714032209849686,-0.015197043438070166,0.015303396966064127,-0.006770521218304087,0.08066521573444735,-0.08327763255964502,-0.03716876666697957,-0.006569133725218839,0.04764286014808614,0.038677891408078334,0.04156314338802238,0.0261373112123946,-0.010441768849450049,-0.018307441869995937,0.022567550078528426,0.031033520378522115,0.0050699939511997276,0.0864454996763407,0.008788141699931364,0.0999054764344418,0.061399484818655405,-0.03703804144973924,-0.012905541066103208,0.007394481640633325,0.08992124742434557,-0.006769193091999002,-0.09086442907003581,-0.06293133669993459,-0.03894890387264269,0.0720984327775327,0.04480179339081911,0.030711177184814108,0.020470012199576094,0.07569578169667122,0.11859223722781999,0.043842478422169505,-0.026563928292295532,-0.06973684013015989,0.041307489216398596,-0.036123652871478874,-0.02363847754160065,0.11458103414981055,0.009025693166545076,0.069329451443699,0.05538936073014605,0.03150076785366499,-0.02944599057500716,-0.006983980206571078,0.06919934211539712,0.03485638911485154,0.13695922850721434,0.21018647392929318,0.134738464310526,0.04306409536137548,-0.12837034854429835,-0.005131539073654092,-0.056590937779116446,-0.011931097260993678,0.0981511029416815,0.008803970858016902,0.02634972276780717,0.015345506422962639,-0.020604246986219495,-0.06458204960480116,0.13110300641115968,-0.00839245572255358,0.012723321354285697,0.05482491679778609,-0.017855262824723824,-0.08620942980267439,0.02491490280255242,0.03004969827324209,-0.026045707268819804,0.030363838831872252,0.07143063957510377,0.08352344384654463,0.03891305951518484,0.016326934151283397,0.09023284419342958,0.1412068904226283,0.19667817352007,0.10286553540375033,-0.015408076050330323,0.023730807372284682,-0.020627267432611736,0.09718558677645231,0.03785852889954059,0.019044949354446884,0.06997290485613702,0.03604733820324724,0.01035572150632783,-0.04431323350980665,0.04904632657166102,0.007390645918204264,0.06036554738568287,0.0489135267665665,0.044792785328587055,0.033292987898019176,0.021491129339089362,0.008364586635783966,-0.011994525469294574,-0.08159587627852857,0.04709103189138677,0.03650337057488632,0.0325979909617922,0.0653635903212275,-0.05520862811160097,0.060806761654305555,0.1553729785248528,0.05385330905973352,0.19526809628079336,-0.024097425085760932,0.047749178351380865,0.05667438201666237,0.0388785974768952,0.06417711131498582,-0.023855214364372084,-0.020995554330671566,-0.06916546660432726,-0.032059662203863935,-0.048034015185803254,-0.017075012562050778,0.07996640557234032,-0.007578804031661951,-0.023875511541082074,-0.042343639777907546,-0.01970642300371351,0.03074230867196295,0.04457733058039356,-0.0017912524611086744,-0.019161274635063147,0.036035575236171645,0.003913446366907982,0.029712295881113918,0.0012913772893590582,0.021225903289205643,0.015456084236069314,0.07495554902122663,0.00876104493255988,-0.00581693207184059,-0.054553344802467166,-0.031111324385790107,-0.13439424585219073,0.06013862747978464,-0.09757370365731245,0.004391351981086937,0.03429503281096933,0.05722975723815228,0.10142217585460912,-0.06671156462790759,-0.07461305943778894,0.07220399427285207,0.014636071422263483,0.060426667334555824,0.04910805462266401,-0.09197992338023081,-0.04790694746186583,0.01710009675594267,-0.07807808018741687,-0.10773856802512509,-0.03128501678980455,0.05394309330277516,0.02785334493080845,0.08559986877597209,0.12870979332194402,0.0595497602892011,-0.04437962719346806,0.02005604785555389,0.12231897906788385,0.012659389807226395,0.027987491935550307,0.0016448575032298217,0.016797758341953968,-0.08121780222841725,-0.11138763067484052,0.055697609993908895,-0.021131419008937398,0.06918044588752947,0.08743421304152406,-0.06218938566300187,0.012843074911552826,0.03232603780543767,0.04302199254705031,-0.07443248911598002,0.007681379502511723,0.019694910830269717,-0.020495304691485056,-0.05788843214734764,0.04580183112199884,-0.0002775651748394931,-0.03592705169057584,0.00021078657784164175,0.023182790189821674,0.017743755798882,0.056018471467028576,-0.12352730164622683,-0.026265460001182506,0.014002086033907386,-0.006726669140937418,0.010631839528398511,-0.0022594354113666427,-0.0013342176570993076,0.055281537551143456,0.008066796796350736,-0.015642769874717685,-0.02847032110992843,-0.06267389635652165,-0.018685330856617183,-0.05629869237421011,-0.004161213216553634,0.019518207539771716,0.0036705640705256533,0.033891373350012056,-0.02218060624726903,0.01261525445283206,0.03373471510635023,0.03676286629408968,0.046114242258325895,0.030941426627892545,0.11689390484075306,-0.09721443901908393,0.003024383453515714,-0.028473181586376923,0.059352161561941,0.11465665960159367,-0.008326933372360975,-0.005903127264352818,-0.05644195297006381,0.03146533522900763,-0.04643769640096368,0.0001283801460658848,-0.042741267019737454,-0.08171839944665099,0.021479136838171348,0.019646989887213476,-0.03230455795463175,0.012729202196339136,-0.09897528458347771,0.005238756784203778,-0.025183988692491506,0.02381507144088131,-0.003568844786881469,-0.008106669690284105,-0.05357263951738604,0.00003728528852563877,-0.02325181902547287,0.028767036869382243,0.10089127871560091,-0.039371185113002076,-0.050423591964501115,0.028609839242162757,0.03715885948539696,-0.0012414233315283963,-0.06342398435357091,0.03276821888525134,0.0063867504943559755,0.0076816957920440715,0.010465962486547553,-0.02928864371437975,-0.08793666281023647,-0.005962393707682958,0.04119404619201174,0.005780184295810242,0.06218151436450437,-0.06002660658922495,-0.09823722173392606,0.014707106376537443,0.06167135298064848,0.08124018785788673,0.0024601069079346265,0.015886104214182753,-0.025677197963262698,0.08729692575802782,-0.03329189881029745,-0.05475221809649602,0.044057111213092345,0.005165994122780835,0.060118389897028786,0.049096949115009475,0.11693678127704668,-0.039782399693602234,0.06977570920348522,-0.10974899832024126,0.10438162971312916,-0.0340649573903124,-0.0027025359089116823,-0.06977318647058083,-0.12009164983837951,-0.04641710555051879,-0.08450214072106454,-0.05575719222272056,0.04326527722549003,-0.0012011414576969688,0.038152417786271875,-0.012008070883255532,-0.11964225862900091,0.006030848773312952,-0.028653041958985218,-0.06957915728526752,0.004339747686048101,0.061726613853283124,0.0015899822666507863,0.019359126846866942,0.03126899998617532,0.07184311200135576,0.03806861633945812,0.010389041558657611,-0.050016408881474635,0.050246260991300216,0.0483512335554243,0.05372069513392727,-0.0515791340301406,0.06323931523676854,0.0005744017845955848,0.009654644860803892,0.04949446539354165,0.014961068010893242,-0.024813206011941886,-0.08486442286281934,-0.0006026348618051395,-0.11683857721176717,-0.06124794440719834,-0.0816414026854534,-0.008650268727689765,0.025483429857696797,-0.005619844226906567,0.05053411004410475,-0.09798495987032486,-0.04539834570176556,0.06207718208460456,0.028128587600434032,0.1245400723893015,0.14012295959965557,0.08276187944842109,0.060872883878835556,0.028723196936769994,-0.10739099203329146,0.004113166935437353,0.029523496062229728,-0.06165484107956107,-0.041979773571074644,0.08360279960201505,-0.06728580308510407,0.03815752598817854,-0.04981999176771154,0.012977820925364699,-0.0663651419077331,0.04679124634362267,0.03486738410266219,-0.020136420196057457,0.023145301771053818,-0.0015715221320165248,-0.09127082703744285,0.01999321108552673,-0.04739561850554464,0.011792750559718445,-0.006742462771254331,-0.06054125613359531,0.0710242912319252,0.02221868309479586,0.018700786650415205,0.024520148957665588,0.009222723729493858,0.07510884222944829,-0.05465654380154988,0.0423586973938172,-0.04572980775094161,-0.0788047925182095,0.002448948381783614,-0.05954413415176932,-0.02376057124324711,0.05518352388034715,-0.07952304340751043,0.014020800198899636,0.07285243004483613,-0.09598011031589729,0.04207654285980817,0.036428390775135926,-0.09609924683761233,-0.048244420275165845,-0.15755319849520644,-0.04974215430746155,0.05650222849313336,0.056179244398143716,0.010165143913302522,0.019727767525195547,0.01612023761005828,0.00267806176389355,0.010018813225840634,-0.07665773902252732,0.03328452231398258,0.007783623486072533,-0.0027204158677234147,-0.03381738041285845,-0.04280381513304422,-0.08727332963197866,-0.008275109692490755,0.016361121558916066,-0.06354519445583125,0.0398161487387249,-0.12147288263797781,-0.008407049140906394,0.013505285236976574,-0.0190799233165228,-0.005117188030490712,0.006622076023332999,0.038562478164495664,0.08350790417405764,0.05688771869473109,0.07622690548570189,0.023263727573320875,-0.046972120294740335,0.10925824028946239,0.0224784809389706,0.09663446788472335,-0.035171282078875814,0.06192983720949336,0.042791580152182,-0.03896496117421076,0.008771126961428033,0.03134884160120818,0.02796130244648177,-0.11907478575468888,-0.013400849295707874,-0.02823726420251046,-0.01959379611174411,0.022248034650742786,-0.030215587475709512,-0.029750226959858427,-0.02083658082626606,-0.012501359039517932,-0.0026176756369386965,-0.07505556774089311,0.018015786138960065,0.025049723353065118,0.02792659454145703,0.06671070006309178,0.149413254964177,0.07280118070800977,0.07773559295368034,0.16005655895141221,0.011406316569696638,0.048043770523574406,0.1221399241359888,0.10160518992764855,0.03637556754340119,0.007684056311910022,0.04796353885296257,-0.008745582986796521,-0.009452841578024385,-0.1476617604653107,-0.05285792932831942,0.0352179983710686,-0.0013927128552474715,0.059704164185258,0.009468917747489279,0.10461444678344628,-0.015128153245691658,0.04331025800294605,0.014238446474293249,0.018032532827523987,-0.01383022246005757,0.030506534866232567,0.023935818257472798,-0.014317548746759452,0.022966910193967394,-0.0722595317340772,-0.06283918473398269,0.020980947945295245,0.09846831343943988,0.06378384049961636,0.022484248790570097,0.02025324802161298,-0.06074943361318467,0.014228919819791167,0.024828946060012954,-0.05840759193549414,-0.008379117116704835,0.0165908558832483,-0.03086414262711906,-0.06725419182502836,-0.044996398821330594,0.027899738420740488,0.01543320576084817,0.05210624776772613,-0.06555887176713358,0.02103250591548101,0.03739867843838933,-0.014531387971446536,-0.005238533579540143,0.04192241518273544,-0.048452387669656885,-0.012850206878003671,-0.05304327869503788,-0.03636721556552937,-0.02912720306356364,-0.05599369685737144,0.10046152587674961,-0.05553550233563994,0.051739282196969036,-0.06637461892599658,-0.09265259268355774,0.00949547667094801,-0.009663469177926294,0.06650475463168125,-0.07234674789651012,0.020852858290342176,-0.009983886939741123,0.0824092416907612,-0.006807074627084013,0.10566886755433942,0.04600816313819893,-0.011909871282081232,-0.0643131387507619],[0.022181900336798066,-0.019058283545623823,0.026880186859949556,-0.038652189505929385,-0.04408472450607695,0.008406025130108845,-0.024220132455550963,-0.006770035898123744,-0.03033258364472666,-0.06505355521090697,0.1065964183956082,0.050074090595363406,-0.010901869452712551,0.02411207418821438,0.03699095898013426,-0.05850677116624409,0.03147579502388942,0.11821210799779903,-0.004920362445229726,0.005391321800915622,-0.0797626410178348,0.08004203165877494,-0.044061547681859374,0.021302753972611183,-0.007853639650056924,-0.06360399444564761,0.00030496201033700126,-0.10183247489042345,-0.07564231212887558,-0.10477471775978335,0.012487889514618478,-0.0007360179004990473,-0.07758888327127574,0.04738806273314451,-0.11226893790114736,-0.06109541006313795,0.003917737474515206,0.0706919310780098,0.021873554275098007,0.07087160597294027,-0.009289495330740038,-0.0046793346361310465,0.025044668420860457,-0.004290222552614814,0.025266939397148525,0.03594887055919477,0.023370245141482948,0.0006373806212985706,-0.055058485894772934,0.06869464020936003,0.06732720382795054,0.019141639654319007,-0.004387639109606538,0.05801105473814422,0.018764450247455065,-0.07342391344082104,-0.03734815999501151,-0.032047974085849834,0.07670538882512543,0.010753253971536305,-0.11229581173002628,0.07396832711020884,0.07797907830765408,0.03565415320861273,-0.02042821571953259,0.00041187415462400203,0.09105128127597073,0.029877347922296068,-0.020867858608742816,0.003191119935662516,0.05066204031741152,0.026161503600324362,0.0032723897187662034,-0.010665939792563651,0.0017144818104949068,0.03103628402374685,-0.011828213106416307,0.018087640817530223,-0.011487436908595728,0.02452021623787984,0.01417662032712403,-0.07122001616231359,0.02997689684474376,-0.03325479173834983,-0.04231159252970107,0.08140738836056219,-0.1091381743546231,0.0059087032401885006,-0.01618241430900039,-0.0632862853155914,-0.013790534372851075,0.06224073052457291,0.01220649689288076,-0.028672430647021574,-0.025478980357614155,-0.0319809679838403,-0.04107803957783358,0.07187424655756938,0.0002657275294165324,-0.07590048912989936,0.029694441408009527,-0.030955338227650328,0.0017597337707447491,-0.050833220477425056,0.016109834020640607,0.019947829724355017,-0.0397846091812033,-0.028442454564062983,0.006875655184941486,0.044357952861425375,0.05909715581211287,-0.045396759722810626,-0.09946829020986027,-0.032235983895039184,-0.06783556630876945,0.0774491429397085,0.01852240017717265,-0.09179355847012177,-0.016069779814133024,-0.005063037143473875,0.0032509037342415567,0.0036601814497171092,-0.07705922060097492,0.005096468757562474,0.07336547231382656,-0.008821299741254672,0.015986542454687513,0.094609026646141,0.02046195493416004,0.037051421569728876,0.013848278022971906,0.03630931824545767,0.02653505445908677,0.008667102116082985,-0.05688842645189837,0.05696555860493734,0.020369155038920558,-0.03886839605191285,0.03190232560589071,0.019683244462605505,0.06759594773670907,-0.0018417222206680297,0.07744522285298895,0.05416099894834424,-0.07952030328132285,-0.09407863059131176,0.049056482634997574,-0.025576820068758794,0.06275908206196004,0.0036910723216605555,-0.018545632231953272,0.004944839833142827,0.0930644542458963,-0.05106891306899785,0.06402509772227748,0.0054509266092799555,0.06224497264739561,0.0862607808306326,0.07295559382292106,0.08206836998963801,0.053421449635133456,-0.05428379666974287,0.011621272798831584,-0.04727542722867957,-0.06408089869287195,0.00923212548786544,0.06374357123131794,0.05353413490992558,0.04671932060758296,-0.010664829063395805,-0.047244906107374585,-0.05192947789499807,-0.05543465462645841,0.06854403753260556,0.026824194705595807,-0.034503010874773955,0.04603517304143468,-0.08445875484959395,-0.04089678026068842,-0.03844482062973849,-0.05124605667993161,-0.03239728598677577,0.12930677712967234,0.022139924477649432,0.003454373212658411,-0.0001942666455020047,-0.037201896844565936,0.057176983908127754,-0.03622220770987503,-0.062044069517446176,-0.05313901414670092,0.04738730905914908,-0.020101883422643314,0.07921755520040856,-0.06723510816953834,-0.05063198779338007,-0.015166790069967127,0.013860083259736315,0.00010335734942343408,0.09143987363370425,-0.05395411938374408,-0.06553070203800017,-0.050200352091368354,0.005478334025132747,-0.06596914168483523,0.029490112226446413,0.025113031220874688,0.03879224536008852,-0.07719779188658159,-0.02012052770000834,-0.08308423302511092,0.04019523439664316,0.0654061608520058,0.01925919926832731,-0.13681230592949983,-0.05088834179769913,-0.1286035387519306,-0.06037529496744368,0.03050265589605182,0.04857679375698473,0.009992819469718353,0.009844623308931185,-0.039997405423173434,-0.02027665121878905,-0.14465915545139493,-0.007864393019979184,0.045117807814675386,-0.0558355339214813,0.049630005111160114,-0.00659375823138853,-0.020379874930702556,-0.07725145406171481,-0.09243786340119808,-0.043615076411636665,0.03702209545739509,-0.04658575165747407,0.08754582061245643,-0.012229008468866882,0.04156413753420283,-0.07348082364856671,0.055471902666978906,-0.006345070382067225,-0.02913530499128223,-0.06433517746510557,0.05527697071832222,-0.0941071491052927,-0.02576743153317326,-0.010214466820169316,0.00186667038129013,-0.057016352985011134,-0.0666235639375319,-0.05507216033466959,-0.044839759547890795,-0.05184967276110795,-0.0721136976433916,-0.044270051052743786,0.016366510223464577,0.038089416601044104,-0.09935055430413188,0.04409382633335782,-0.011306844506506736,0.034991240196054166,0.01395388695694327,0.05960843183101737,-0.07271552297387232,0.04427513025005069,-0.016605120243946253,0.00012651248076215712,-0.03643443193555105,-0.02499321201161824,-0.043390257065731165,-0.0007884625562026325,-0.02027539183190304,0.04767242265402893,-0.07774560689884878,0.04469217513687881,-0.022609742177618953,0.028538453837742634,0.05921601409895216,-0.0489594252895701,-0.052304794874235665,0.031720447581304524,-0.0013807216349743926,-0.0572157455304604,-0.005807640471528105,-0.03480751855136644,-0.09434971054743477,0.030101703440375063,0.01931550659978055,-0.04574823192222442,-0.08276254602718779,0.050299089916417294,0.053335948329995476,-0.0067844143434318905,0.041691176957170666,0.002941543820776962,-0.012492811482514191,0.05073015450887258,-0.03518154664685769,0.016436232099668702,0.08825658208350577,-0.03247747134451499,-0.0549955754069933,0.057322469097769474,-0.11350946600182003,-0.055093908170003106,-0.005108574137593005,-0.06521777538320286,0.057486682127620654,0.07226353727592746,0.052217121787767946,-0.013843037987343753,-0.0669678228023426,0.030574236866860702,0.032338162545346064,0.02850055763164497,0.0313911886794182,0.0348271689558118,0.04454833045045949,-0.0022909323875185223,-0.0015166729508606,-0.03144755842184452,0.03811284165326767,-0.04872952042618805,-0.06601522721182275,-0.021917960607137445,-0.08153246398929606,0.03147035210942232,0.00965525567352512,-0.06711215477392003,0.0173215043141337,0.07692464294212,-0.05976601068995685,0.0028309330114801748,0.006886062837917753,0.013146076389139895,0.02484436349545649,0.02456666193274667,-0.03171292037083051,-0.016729988066224666,0.03745433452081993,-0.03102273165042527,0.03283973624027787,0.03879825461231301,0.014582952434433489,0.024352033124698327,0.015645529988026947,-0.022339430035877524,-0.02580714884893016,0.04750199296953692,0.12952763221835348,-0.013729681982109948,0.005245285157195057,0.0351377525152609,-0.0623955448368293,0.012542692564020371,0.07431874934949388,0.056487111574323734,-0.07178815997235266,-0.01356344186375256,0.02914182199897175,-0.02850580604471,-0.015182572453135574,-0.015715600920359212,0.07168704016551836,0.06664812810827436,0.06806245928219957,-0.021101889534576597,-0.0788973282946187,0.013636117225696054,0.009896713900252253,-0.06323383236272244,0.08686198465055608,0.030569128283372382,-0.08276192805198128,0.06633882750439017,0.016573760892362233,0.042988242910816744,0.04470255917471152,0.1369420434183443,0.028300188833303708,-0.015699733979397376,0.050715631342792875,0.04273380771055499,0.018249861806093032,-0.1477922826414956,-0.03107254896461044,-0.08497144130210321,-0.005931252884995624,-0.016315039421841995,-0.05035285009557039,-0.02805009763366802,-0.00292633626913931,-0.02862643053778876,0.0035477987323159032,0.0029462118618631132,-0.032569458319903856,0.05905829550473561,0.004463424317100583,-0.04996948340667167,0.0014507539595514883,0.03365930544414493,-0.03085006544550221,-0.0190113578528673,0.03858790599463429,0.06678821869118569,0.04547810067022163,-0.08603280014573288,-0.015341885527589584,0.004112079125041406,-0.03301636962474302,0.005005736141250143,-0.003947198223313623,-0.10358061797051053,-0.05541339485059462,-0.05332668005337558,-0.04513335146480091,0.046119725977817085,0.08185326928954341,-0.1077569217396763,0.0372562261599283,0.008022292566733962,-0.00016249450441439798,0.0011890392200683293,-0.06011934601790002,-0.032744315757810144,0.02731440407213401,-0.09672556248427758,0.08503079482959171,-0.030889085273533932,-0.01032784879892326,0.011621449500301775,0.021488335653581304,0.076747672823264,0.15027399590106502,-0.008215952516980823,0.121856196581083,0.03631520723942491,-0.06017108702296558,-0.09432380015767243,-0.033045044550369794,-0.09748067734052936,-0.05510862508463066,-0.02843523948823029,-0.0042450238258733815,-0.03428130364729963,0.03599330441727593,-0.06638677797401346,-0.05984012426461043,-0.05180146723351627,-0.040240988038097066,0.029010988498228564,-0.040217958080725875,-0.1022722521572455,0.006910585310189009,0.04117067031436383,0.002295507420332254,0.05426961652909831,0.0713542874466683,0.012286573529258538,0.05310286478001442,0.07605797003926043,0.005292803065336748,0.09286826337834946,0.023937973355139832,-0.05584397039319546,-0.009485288478143367,-0.08069667794977092,-0.06215657802574681,-0.09588205947044619,-0.04866965225767228,-0.05960365097813129,0.04269592847152207,0.13022013411518535,0.005852181573328342,-0.09216922045397041,0.08304819160267678,0.03647997534645016,-0.02573713136696215,-0.015400972811422551,-0.04106422252568444,0.10203157195101406,-0.08073933209953027,0.14310302841670913,-0.026971069605027806,0.12948110008260877,0.053219570983293725,-0.019918108493656647,-0.024810177281900842,0.09137459604364125,0.033883712651776164,0.10752883253615064,0.020557689579352632,0.05904688964681665,0.12040181875471502,-0.0881017199172693,-0.03697375964514884,0.017639150889849662,-0.06106901095070075,-0.042689596515491236,-0.00003570724956125879,-0.023140523884570365,-0.03260505011669898,-0.014000835583749155,0.08292789371810419,0.07463618096890799,0.014993725839680859,-0.12111675840288451,0.049476559879997876,0.057106388062493886,0.07416876460784219,0.1225866621153008,0.057622888510730406,0.08766707826782422,0.07273365549716326,0.00954247462555859,0.1347332952379038,0.037844426303980494,0.054776761525978615,0.028291044485285754,0.06343960691231915,-0.0760021491368772,0.0011747083064731275,0.020680251205651208,-0.06967858012678435,-0.04912216527288749,-0.008775390964338233,0.052718404968970886,0.04513522426207237,0.02091472765829683,-0.01492728487392214,-0.04857321138981797,0.027266370302664506,-0.004890344488360466,-0.0621454721454301,0.05309174939222726,-0.10853917141058222,0.047049534275773824,0.0430196349172292,0.05084709068559477,0.0534960971666815,-0.010108567085244304,-0.09223720011647212,0.028899634802497395,0.004977644057439247,0.021034872088423737,0.02141180880364079,0.030817520582823957,0.02406936787241528,0.030903500422667353,0.07743160302163013,-0.01737237909279721,0.0744113898093868,0.036079853607023045,0.07598745952458577,0.0020185220009664336,0.02109785652896819,-0.034377656879903885,0.009048450042206694,0.04568594048227546,-0.011125767974091223,-0.019193204603878657,-0.03798747392792173,-0.05675682138065122,-0.07189309783842945,0.03517291321600818,0.05441930957595876,0.015125819239492902,-0.04720290970812031,0.060032810958739045,-0.0017503185484543423,-0.036181839149087826,0.04771596830696202,0.05419827090827313,0.01856206868562604,0.03213164655232096,0.06654111647358175,0.03169768871919518,0.07029725284312961,0.0899314108571797,0.04523510702869346,-0.010356607356552375,-0.009426920446750335,0.05763929980373205,0.02290786465581954,0.08659753817852482,-0.029114982264903482,-0.06932348407526412,-0.03297867629352738,-0.030664240493124217,0.060877561637783184,0.01656834310698014,0.0013310831631462442,-0.02421366020611097,0.07031591800645623,0.007080622114185463,-0.017192542738084387,-0.00017765704617366278,-0.02756588132301577,-0.005805481242168988,0.03712236977628172,0.029667389517713156,0.10826343633502064,0.009562472500185135,0.056227832453214756,0.016510653287832765,-0.07960153664580473,0.04339793031354519,0.030671517859275448,0.03211485893664818,0.09086809889923984,-0.005039896122625376,0.017436924208715107,-0.0067546000627912335,0.041779122074662764,0.010581662862068722,0.012690311791431041,-0.0160717619195442,-0.029078113464769358,-0.057889536658514935,0.02369537723786016,-0.05764640075284895,-0.055409230916266886,-0.09933920839590846,0.07284952503051502,-0.05280291148709501,0.046368315547790286,0.05321704118854437,0.055293149985261206,0.024855219773647515,-0.030463046043420417,-0.033550740789355334,0.040976604712613635,0.016591047918346206,0.14661942339666045,0.06437259604226163,-0.006517539504249188,0.061168090166954084,0.029793747768210966,0.006187853710880259,0.04604119904158157,-0.005319668981495784,-0.003675761076122893,-0.025869991678491903,-0.0372508299685951,-0.04580044513247368,0.03520537380114146,0.04728752502753942,0.008193985433573183,-0.04086167067798441,-0.06622057442998734,-0.021564334392699055,-0.06686614032582584,-0.0007319615383422835,-0.06503530483344062,-0.08414016987996398,0.11588326001894271,-0.03677158000921272,0.0394028901378604,-0.006514498436729766,0.09840048502098207,0.033977884933667095,-0.025437637200379105,0.08198142818836206,0.028585332637293098,0.05640572213327908,0.08070450446873098,0.0704418207647218,0.021779441181689015,-0.013268301630232012,0.02385806039264558,-0.041996773186109025,0.04585686623091343,-0.009253171868616633,-0.04091591167865335,0.038385289550020026,-0.04255655146704044,-0.009962630926670797,-0.08440431916996227,-0.13028849830061953,0.04955485694457927,0.042002942639671234,-0.01564538560550306,0.017957503684092234,-0.07371313055317306,-0.05165587150884727,-0.012723555985444076,-0.007148562994746914,0.02393587706411679,0.062348055940834105,-0.006480770771266756,0.09138413396596438,0.09543202564949713,0.06322352354624992,0.023911497571287754,0.019963627931946993,-0.009283524536271289,0.027309653156897234,0.0020066479145098605,0.03428474609479141,-0.04963948619311157,0.007663298727162803,0.03777505548739188,0.015607412655709078,-0.026682727580388702,-0.009752098524015313,-0.09365453858699425,-0.09694824930348152,-0.043885213106259834,-0.09511143931005764,0.07701234257558666,-0.026321201056075955,-0.03764906086300019,0.029003161579098314,0.0016557006999153977,-0.03203634855925172,0.04042901368051095,-0.0384355382287246,-0.03846059130150562,-0.09615403447922968,-0.07232021410593827,0.05650099950419777,0.09238585500878295,0.04120612967880961,-0.019171990482736493,0.041244012815739195,-0.04171893594099982,0.0358885471483932,-0.00836481183317062,0.04280767409878879,0.03134677677954602,0.05435666220110839,0.13929469832116856,-0.02976033983669975,0.0873560114079724,-0.04813425064863767,0.009720832498356242,-0.09982792463093812,-0.02943497774821076,0.06151260232696423,-0.11433783403227166,-0.02488496934452897,-0.09371755407013158,-0.09166235683367654,0.03952794240006677,-0.02951996208206345,-0.1317866420056684,0.025516418525480082,-0.12342627990157884,0.058469885705285,-0.10064050044134404,0.10208372738336806,0.05406186604495047,-0.012262179950427018,0.048086447452498966,0.0013068574961183118,0.031380801484702354,0.04446551728737104,0.0015956832388377095,0.028896116268193307,-0.06746575406882818,-0.035994200530454955,-0.02039422788626253,-0.04627273264214993,-0.07561897012373218,-0.02568315254774226,-0.006599447381054122,-0.00423051662732713,-0.051644706489766455,-0.049950210414436945,0.02541108577905754,-0.03212571678129472,-0.08235131609762607,-0.038641374353041935,-0.036708586080210166,-0.006751648898261054,0.009519442506649404,-0.02912411855396772,-0.033072816435716586,-0.05025759593851678,0.007328261965389509,0.043760091035286504,0.04657628987919964,0.029684414689253865],[0.025393604507634483,-0.020513234710621865,-0.004684063687718864,0.014767497440042602,0.0217139774615121,-0.07243263343898369,0.0775478443986247,0.009811444917901029,0.03727902168827943,-0.014646519938085963,-0.01828340758264733,0.00027830096075839725,0.07908526199154584,0.004169698307648649,0.01452975709767637,-0.04118469915307637,-0.00969905129175586,-0.06479758170700074,-0.026986642555309748,0.1089747282828761,0.014849914727107994,-0.015502094072835988,0.05120838123157932,-0.04400976408631371,-0.06280641459765195,-0.016493317556254133,-0.03630738190203265,-0.041509457146061975,0.017626149892846586,-0.003003908623833902,0.058597915969252484,0.008473329078099024,0.04379797194086525,-0.0724521255580617,-0.09079656090058977,-0.07280087263497698,0.03233706968313115,0.058901139041339284,0.09041695539137602,-0.05711221562848777,-0.016796927744358287,0.034217186798801195,0.05040517809725219,-0.049457073589964255,-0.0008623723918522478,0.0011893202556831702,0.03577457279376816,-0.032256716266249874,0.03529502655185613,0.022070854910464056,-0.022334414346723088,0.0405082732033191,-0.04790298717334024,-0.008672969257542991,0.0775614610719463,-0.06485323447123346,0.041236962202899546,-0.07776334686400642,-0.029595152820147994,-0.02708008011901074,-0.04849250336604031,-0.05527411540392862,0.01852156251945073,0.00021664621906960547,-0.033364804508134005,0.044176711769267775,-0.08451530891026338,-0.025805050936832635,0.05073583036546249,-0.04656573184548797,-0.0237957998523134,0.027982932274573134,0.013370552176238316,0.03415522003810533,-0.04793524138228955,0.01645912459698946,0.09429693576360788,0.021540229037588385,-0.031384536094489435,-0.014911097517685353,-0.013233439542505197,0.04295820210599458,0.052975849068458515,-0.043448263456169,0.0036198810893980607,-0.0003435906923400828,0.038817988399383295,-0.09178218474550584,-0.00823873852268988,0.04674110947006093,0.03039546987794183,-0.07142056135058861,-0.015246382004051868,-0.029757216841040438,-0.00873100472384196,0.04387657294002864,0.060987606914944474,-0.08747124527866194,-0.010827060738293053,-0.050241445718119775,-0.05760344567636533,0.024946304129003852,0.027976171342581735,0.033673261262973875,-0.04135099052838288,-0.04644915215460641,-0.019923996314176178,0.05723224863038297,0.11539444380135197,0.038680944041185994,0.018902838213225564,0.025083894422537726,-0.0559450161932946,0.024916817936502692,-0.025272759229095262,0.05079827879913294,-0.007998880343899614,-0.02090771052493726,0.005308397689059938,-0.0338338264652511,0.009370495897312293,0.04259361192008868,0.0029120367277311087,-0.08036027634470941,-0.01267927018237924,-0.07020561723982868,-0.005192618224375469,-0.028804112061856443,0.0525048721372047,-0.07386026325221769,-0.012225608755030908,-0.03926602692071395,-0.03592611900397379,-0.03528644326353581,-0.08044069963142142,0.08137950534509962,0.06924817361940576,0.014760786625336846,-0.011539725595215468,-0.027283304135300075,-0.07551183308695011,0.029287266878503852,-0.029121350646234324,-0.07966800968011532,-0.014892592235485976,-0.047105252375997754,-0.06472636695420886,-0.059139216388960775,0.0010171491821123675,0.03129756479248584,0.0026363591926976643,-0.07820543661703644,-0.0665047969397165,-0.039009319574693765,-0.0046639863024500175,0.02486440422859627,-0.040584732656227994,-0.02909334812137046,0.06117148554787721,-0.048098288787551347,-0.07522049792207396,0.02839463258351641,-0.07398026266030568,0.007613859181034338,0.03417751493899345,-0.0035547937406592593,-0.006894065921303317,-0.04736570982838246,-0.01705565141695912,-0.0129386309675452,0.000668512522013935,-0.023062318212905834,-0.05935942905318842,-0.04632904218360487,0.06534240529218276,0.0727528600160299,-0.018719021180906913,-0.043843945399081444,-0.04888586815605249,-0.010073747820916159,0.06315863387175405,0.03902263463719924,0.0641371395602738,0.049301542212677574,0.038338195573249544,-0.007626699915118653,-0.019310591829074783,-0.02866550465898976,-0.04549324906768738,0.04557628049547962,0.052996680459566306,0.0334857299404339,0.038320542098381156,0.00784231511793896,-0.027124421699979133,0.023669849371873917,0.04870080512887257,0.0034203252282259495,0.011211484657060672,-0.03999380849886061,-0.08317659710827231,-0.03305952358249516,0.05189152041805313,0.10547497532901216,-0.013249065423356264,-0.025347757760212305,-0.014303209017794213,0.021796412113525496,0.04453986948038856,-0.02750752205574127,0.05782635203618214,0.03738034755097928,-0.07302437771244528,0.099298306973312,-0.0407673040671392,-0.0256851795367093,0.05539395624630937,-0.017696478726254822,0.00021155577021868233,-0.003438057769028281,0.019216050133660467,0.019121210937385006,-0.009799653892229108,-0.05430613099239351,0.10210594266874432,0.027643816225189587,0.039484763212229615,-0.05504268060928701,-0.023208519009811017,-0.0020777475766321734,-0.08092480941612162,-0.08531153069652277,0.009706420477940621,-0.0535747978476985,0.026311894349065654,-0.028527166563055883,-0.04839819031103461,-0.004501331118248222,-0.08502977418235534,0.04183047374532056,-0.03724402418445954,0.006190711110675025,0.046979750635951834,0.06368445308210467,0.03504267649230133,0.06016235172386299,0.16351517284266537,-0.013740659684742196,-0.015677590566360942,0.0264018651870141,-0.0037448424622806386,-0.01130979473791824,-0.012891002633990302,-0.03738998144319432,0.07232169553345413,-0.03372944198817808,0.03509678695080774,-0.028716620302990176,-0.05095163957399408,-0.005840045614773993,-0.013983305758289072,0.05146958484782791,-0.007730110873080702,0.04281823136064755,0.08219603218753946,0.012679908582694816,0.04019970285538148,-0.019108741656889475,-0.05443944067040268,-0.13762101201964058,-0.008030514572946658,0.04030701822922516,0.010210920709594458,0.03216438088534587,-0.00998041000450148,-0.009263429220178638,-0.03860964863193642,-0.10496503396604205,-0.045287680616333745,-0.05455254507254002,0.010691051539853648,-0.022970078180218262,-0.03904383998778177,0.025498579686281254,-0.04307261760587245,0.08482359022632584,0.06935412781360445,0.019524522797098997,0.021243303071355073,0.03986171835404754,0.004050391388869908,0.018011939673451747,-0.025356652897779934,0.04295732529969013,0.029117024072848986,-0.008969804194588949,0.077444250654068,0.03209690917546551,-0.00930280640369578,-0.04743496849230684,-0.030444907174262795,0.03992402449465485,-0.08588019365418184,-0.03168497180176043,-0.06710392774514824,0.012407537960762762,-0.039147887351952126,-0.050315305714817,-0.07915397428445335,0.08792695435008713,0.013392028462452684,0.031541038136478884,0.020863191825589225,0.03423385594035651,0.024755557704826965,0.009546262705903221,-0.05302632102128933,0.06210413810477391,0.056266194094542726,-0.005101724131373984,-0.07552566820509385,-0.08089760846384525,-0.0260041917653296,-0.031277512374987826,0.04900768118456677,-0.12734511644528262,-0.01603496501247989,0.036045454921166925,0.008157348303214004,-0.0680586765968108,0.011055173179484875,-0.020424814315300344,0.0036012743678907905,0.02565465110946023,0.09950474986016704,-0.008775812953329288,0.004737151689768466,-0.07124192696820175,0.029119298553335306,-0.045335851442443106,-0.020806797016042166,0.004821465079558158,-0.018157051405365644,0.10065060943801599,0.0868600622416939,-0.0920511375659902,-0.009654973457530688,-0.018232679975179418,0.02894732102690984,0.08000477229728852,-0.08778958153703738,-0.024800880042794345,-0.029702107729386976,-0.029500881588358285,-0.035724185159758226,-0.09388118130157479,-0.0156922803618915,0.038026591544237175,-0.05325401216283138,-0.09171020686516351,-0.033914604180858406,0.00890634342556948,-0.007480445927798797,0.007815844156276104,-0.03708530535790206,-0.024574672851225183,0.046251159687689045,0.001999544156700081,0.01670996020895504,0.00914474153228621,0.09676271292676365,0.020136163045961844,-0.04098541673904192,0.0416696771367256,0.03526587836827099,0.05032094754425275,0.04927055688472766,0.04978734223032964,0.05481104780385825,0.0013958492603228796,0.060006955017626734,0.1382461313399593,-0.13266740469522878,-0.00781422972595484,-0.03815980903978795,-0.05855069697718025,0.045868465792881806,-0.0461164763424096,-0.070055672824159,0.0028065279734482036,0.026322010896294473,-0.004302857597285745,-0.023306297252367724,-0.040005068464323355,0.07855553019720825,-0.023674529704152104,-0.0029629467607712864,0.02158889141687271,-0.0980625007446435,0.02913728664912737,-0.0034943763897986035,0.02008736223985684,-0.021181165975770196,0.061830456439010896,0.10692450256408724,0.03259009716729668,0.026058812517717703,0.07725278751301683,0.027069542297544484,0.14164612065473473,-0.001181963430006033,0.03615946146930193,0.035919819078510884,-0.010373475592917372,-0.10999565465567986,-0.019631357124153467,0.04688474333635957,-0.033274532887051,-0.0004767806515369564,0.025592164793099528,-0.008398241663761274,-0.0004693830317789746,0.010620663123431753,-0.02899288219519142,0.09270677397901328,-0.02359023645761447,0.09945344701741303,-0.02371991365991895,0.08497056324721156,0.06313385062006376,0.10237467964765494,0.017244246209854205,0.024961201398249217,0.09994873743184152,0.018252325618533394,0.04626639678376898,0.02918382586611792,0.12301180178323586,-0.000010152246601598557,-0.03237029473427196,0.007313106477586028,0.004231060603864547,0.05232041709219974,-0.023828243106661595,-0.04074485467531606,0.008591362488939675,-0.02104816830533549,0.013934685716854545,0.05593247839816341,0.06270889314486738,0.11582736084172107,0.034953566494547214,0.0016064099281642686,0.04867886401997678,-0.02734683056342846,0.025260646149902675,-0.009587412983354176,-0.023020900738723576,-0.009743861022161638,0.019701214273337184,0.006909008004270533,0.018176276756490476,-0.005489181490845981,0.08420988590732686,0.057455399110141234,0.01626942697763668,0.07076943579022925,0.0420311192105669,-0.04434279639497377,0.00044790485940375346,-0.08269684922323083,0.052662580793413044,-0.009988036353463134,-0.010755533510452627,0.08472834350478443,-0.08144814225138597,0.06884814551428291,-0.11803134795690316,-0.13093671442489113,-0.07605947758398662,0.020182966360177784,-0.02724578257575852,-0.016950883877166603,-0.03713359874533406,0.0006606158690779516,0.04438765184364775,0.022310210324471568,-0.02501507657814392,-0.061990478805715815,-0.04024552837068276,0.08140942642568315,0.08115627136933411,0.06400264327266517,0.013556138698862269,0.01974704474077203,-0.001861474008220556,0.05873526868021171,-0.05338091887250988,-0.012334472848265915,-0.016035632449532905,-0.07373759083956315,-0.04203065451692004,0.16981484248684084,0.02632848640519482,0.007801419178888332,-0.054293769730773836,-0.0084903893836776,-0.05099129410186633,0.03436615924423179,0.010761087262481364,-0.021955317180412312,-0.06261826608681167,0.0066579599838937405,-0.03759806407903304,0.11294678179561202,0.037482810887078784,0.02186860807715132,0.011954363776867774,0.009723876735603352,0.026875964248797995,0.07764102133436569,0.031934909564906445,0.07174856891459265,0.10710876249752743,-0.006689381018623772,-0.026669830242729568,-0.08517123465732353,0.005648052570051981,-0.01842891408614302,-0.13535172241797533,-0.11196922989259761,-0.03019186237236431,-0.06068178776660477,0.025440665039389385,-0.008973203848357217,-0.0022624150117479406,0.00953438234015274,-0.040116670524808655,0.00974975919764647,-0.02111264165881028,-0.06580299657454591,-0.08976254609058544,-0.1060158647586767,-0.018489456544981908,0.08204317544361975,-0.09540588224708149,0.02677193381030216,-0.010331723578209384,0.03553843239584967,-0.07359562359833112,0.02444838118274484,0.008880885309965364,0.08144718452136457,0.009658119056803159,0.12400339960430574,-0.023777656222172993,-0.020266757750704058,0.05546599544817276,0.042905174991207586,0.022544629746543213,0.016360515798027473,-0.08515820067337569,-0.07016469436880096,0.07567828080444731,0.07602719275728542,0.01163422397440739,-0.05398511892542316,-0.09309209961685766,-0.17242065094273373,-0.02558023099491807,-0.20160861105978325,-0.13366123200192354,-0.02098980255175969,-0.07171126473104099,-0.05629458619021949,-0.055883852014981895,-0.07195939942128445,0.04537155662855975,0.08726095981222778,-0.034686834279062884,0.12418333543525766,-0.05082117078145826,-0.016588611390355012,0.03450010838765947,-0.04846410708375443,0.11181565431138595,0.01594750965234867,0.03550685780338685,0.016891730877785952,-0.03588964206379934,0.039045450555961286,-0.012000296664413754,-0.08440402332992826,-0.023351819778742868,-0.09349342189621085,-0.0704385645196792,-0.03428249145818701,0.020965720360485454,0.021269936107130377,0.07036817282357291,-0.035952030698076475,-0.024735850703748775,-0.04553145976945679,-0.026396918397729823,-0.000632219745454675,-0.08536733103790826,-0.057592589325736916,-0.028163333248639028,-0.04669787415620398,-0.000906457978465207,-0.1115621244532063,0.07166222225450113,0.051044442880117294,-0.050301046161573465,-0.03601417676041254,0.015128739095958004,0.04094884273340358,0.06289319101556637,-0.0226426983198542,0.045474969877109875,-0.015112661160581412,0.015231864279474283,-0.02082975085204753,0.025871598869684733,-0.00982682638406399,-0.007405354108897479,-0.010258867499808273,-0.005834421069332756,-0.07425055720874794,-0.06638806070924573,-0.068504598724773,-0.13619610545865898,0.006712729410622419,0.03468304605425826,-0.12022360636947822,0.09939537861666306,-0.1558825068995342,0.012075832529156857,0.010776901418783073,0.04248675097487037,-0.05617577805550137,-0.027616617930143375,0.040874797316986816,0.07899371310787189,0.015735956116393945,-0.03853836455477239,-0.07060356118118156,0.08653346848988092,-0.030789897221354653,0.07287367526016497,0.07194792715849586,-0.04478515057893135,0.03917009748365726,-0.04597241943565786,-0.03998707589400548,0.0530244110143059,-0.032554433720378445,-0.040799065172465454,-0.05561090244091653,-0.028009366038910116,-0.10255219200548121,-0.10260924207659469,-0.009568084912351938,-0.1438366901093393,-0.000028398944663430486,-0.01640112703106789,-0.012522390139589995,0.05688746642141883,0.03352864069330077,0.018348519287569982,-0.023258103918884557,-0.07872473661146459,-0.03263312536787203,-0.011510307666009871,-0.007914061357881447,-0.004452984458436167,0.001196046873555671,-0.08582363677059862,0.044575708044107064,0.05687790520378717,0.08839446799040439,0.021623711611235212,-0.015637046445989105,0.03652121786708956,-0.02827204866202128,-0.06590733156082437,-0.01679514302616554,0.03478645688530728,-0.06704599636089148,0.023991876529385236,0.009697131025283329,-0.08869632306096409,-0.0924621490474352,0.10210752421604487,0.058966173265512865,0.023852928540549417,-0.02896592330944359,-0.03237660930414846,-0.08557013800866668,0.028100294589380605,-0.01294228255894272,-0.001220303128229913,0.05657449800411693,0.10055531460854449,0.006916513887887091,-0.03244928682749128,0.03932966816807344,0.021404220056503023,0.03846975244852236,0.083644523908076,0.03118631329422918,-0.08649155412485637,0.014719867636381442,0.03685771073379311,0.10136750718996411,0.07241423379865146,0.07820317448470648,-0.07519433990675348,0.03291646605709704,0.09010798283157129,0.04019126270875409,0.07950808431987481,0.008793764796080438,-0.046275590983569606,-0.047582234641968875,0.08879048769120819,0.025217230338730842,0.03903377516044216,-0.050303043987411235,0.048258688124413245,0.009430994517875548,-0.04722521720829735,-0.025695419293385455,-0.022489474873449062,0.0012674365073039812,0.009080560386457676,0.06700303115647517,0.013406724976957244,0.001913532501198217,0.0388890588698013,-0.12582136782224482,-0.009849344488605546,0.01038210103535645,0.0329438338711282,-0.03481822736510958,0.01763240095419165,-0.062034996093970673,0.01998278116541325,-0.0657570979774177,-0.017911877111494695,-0.0796323766279495,-0.001894198383805293,0.05282654820385368,0.00635523725331414,0.0039952479057709985,-0.1367282150830002,-0.0011211860013895752,-0.03418455027015142,-0.0022209926444624797,-0.006959062717933143,-0.008929082914105158,-0.02861149793396686,-0.013649876548944909,0.1194149945971914,0.04803828579374923,0.008595556451953713,0.011768455626436022,0.07692545008671431,0.07208428704541404,-0.02340552584901838,0.003451344449139834,-0.005614577896278699,0.019324640760844516,-0.03964832469286249,0.08619630117756188,0.05937445415286054,0.04286644065907077,0.04830262290230703,0.0162043299227341,0.00825544102165673,-0.049495786299818864,0.0312729375074369,0.04795058213309118,0.021454783957791924],[0.05822374072591078,-0.031249088618749688,0.09989558216697274,0.009727038301230602,0.023096332350410243,-0.025262659585303656,0.08728992246929333,0.057404576474444344,-0.10495497416589024,-0.033129635962553305,-0.0010862176089902853,0.015969818004764727,-0.001844507757839085,0.0052988715827681455,-0.07165186803104895,0.016525208689691297,-0.05470773904437405,-0.07748932113808399,0.008711684175830308,-0.023124762054037778,-0.012188812915142469,0.09932787833315865,0.08318296699885375,0.046113719673139375,-0.038771425962774074,0.0029210593658201,0.009568977859565935,-0.0001894331737018294,0.00015771268068956242,0.04299331788731983,0.018943536151129734,0.04529890061029679,0.03825303806389092,-0.02220881631546161,0.07860137375617224,0.04609222757224958,-0.04054111853938315,-0.09972436834689119,0.04220871394229913,0.0463103512139651,0.004944861708031376,0.02948807766059126,0.010565804356943426,0.010924452148060078,0.03671828977273541,0.0375846388352458,-0.007671935090772583,-0.01349965615646389,-0.012670269230296557,-0.014092483144039547,0.04826621220112187,0.005368532974734572,0.04093637138606603,0.04428195044964175,0.04621138654680244,0.045196912547016445,0.05764495623650276,-0.044426873523145144,-0.05012762799337349,0.007814317204424865,0.03777727949270919,0.042963645171049517,0.030913755049787828,0.06469997124229143,-0.0036580167878489675,0.020933115506257097,0.05503579191305167,0.04051904729801053,-0.018724590819811815,-0.023678938071400545,0.05545741372364995,-0.02953507545729127,0.06556346065600137,0.010743774629004733,-0.023664556427792714,-0.05286017372017315,0.02341810345024649,0.01610695461727672,0.09211712993822564,-0.01739757352964786,-0.032321266538410325,0.01408755138906166,0.03501614795610483,-0.003919639695396435,0.031161676627753754,0.009042045105336774,-0.03459473018143047,0.021852057416409616,-0.055141692438406255,-0.0033452147994537476,0.019178603304273158,-0.007188493133962454,-0.036154398571352934,-0.018409373225210107,-0.04619343640121717,-0.07498970893671549,0.020995520769399114,0.1032449764230782,0.05515095866833272,0.015801182643601457,0.055703336786298914,-0.027359805913161256,0.03735144530576864,0.0018453256158776075,0.07063993000709053,-0.024818001385413093,0.025034214219915578,0.031561278502391044,-0.0008086724690276545,-0.021775182917567696,0.046808830087260306,0.05768934850639781,-0.0365961653178738,0.0040943169800077926,0.011074788180654533,-0.013248204160287404,-0.005863986692069863,0.005689484048346602,-0.015604036282224816,-0.015098260118663814,-0.0005001141358836446,0.06606031760305794,-0.04098957447320322,0.06475896743999533,-0.06050693676241139,0.039656384251712085,0.0028942691628759416,0.047953842968505606,0.05494943457348058,0.12856051762971332,-0.040437745139894975,0.014317801958030249,-0.09630999762143237,0.057306337586377085,-0.03473685017106047,0.056981028003737354,0.039001270105226075,0.03849108371634748,0.0334305493230916,-0.10671804415128981,-0.0233450018052032,-0.06721230549055407,-0.043198075161941955,-0.057197226165273285,-0.08004141048803756,0.06473195651925014,0.006225355825069989,-0.0405855252494282,-0.005394059941710448,-0.059326710125362746,-0.09208628602132997,0.08938732808400753,-0.0813475543798899,-0.08044303324470167,-0.02865420547736959,-0.009848716064965164,0.039767960620834195,0.07789974872447528,0.1458295729058431,0.08391291032107123,0.009170555964391085,0.06747363589757756,-0.043054205512643634,0.06812490098153373,0.04018536879795276,0.014536877255360596,0.05304572193920861,0.014579274966447477,-0.010097700192538575,0.010762367222359742,-0.008750282109324634,-0.029451568169959298,0.05178993304251455,0.04803352405867036,0.025467075297265877,0.07761333927678385,-0.12882494698717756,-0.06563596446315474,0.07660989848306392,-0.033459263956590886,0.06546438060544262,-0.00028106245050732903,0.013167650853465763,-0.0658656411610894,0.03074425520036175,0.05528350207032247,-0.04366849138598974,0.04348200860319177,-0.01746853360984076,-0.00520453632420438,-0.005878906404423342,0.02747980629608775,-0.03079497286539714,0.008057589525546763,0.024441104427609026,0.027155808910306004,0.011765230426116574,0.02498337487359324,0.017348158226050965,-0.021025996162102226,-0.002055414125792899,-0.0902720915304844,-0.031180779618850255,-0.032960444330161154,0.01879071646413284,0.01667186973138328,0.021606496645551133,0.11140260446540978,0.047390668902516156,-0.013295162566716149,-0.04264777720173464,0.05723100786936362,-0.05200424825999398,0.011632781293338909,0.019121209082002516,0.056497418198335425,0.014500772775916292,0.004021597543814864,0.02407870215012806,0.06515323996058375,0.036225746517467156,0.036243019058001306,-0.0863025101027095,-0.07204805253965496,-0.06793078878424962,0.0847754386135202,0.023946737454604017,0.010918871474479157,0.04732179183566048,0.018292983756659113,0.06478442915469322,0.07554126637082487,0.03912972593022901,-0.013356618213290927,-0.035519472922360164,0.05090754701352509,0.07928162724247924,0.048836186715951885,0.025760823244855593,0.05157613818328878,-0.08933559520422019,-0.021099473010434685,0.0639292404096568,0.006611764565345117,0.01114522473889102,0.010216711902245672,-0.0073735705890276265,0.012797258461750017,0.08267394105939467,0.08788079822743083,0.01339227027872799,-0.05870697508571594,-0.015765576732855904,-0.05189092931629057,-0.042715330888125784,0.00841342647988613,0.004711955849025891,-0.0033959709330862392,0.08406599913900663,0.03162799776347094,0.008298178615005241,0.02910305185813069,-0.02141123649155968,0.0014698798769069825,0.08786685285063454,0.05600628428369074,-0.027586639078396834,0.008484283347344372,0.004774688583815777,-0.0871907896373534,0.03803731019929445,0.01659119497390272,0.010704524136165917,0.02221241260859059,-0.019558491470021793,0.12138487058051142,0.11809784922461433,-0.06129141226729381,0.05290813827723048,-0.01786980491601238,-0.005350593394568668,-0.00611949907795233,-0.03909142938989817,0.02397154618820248,0.0266407418653478,-0.007828471734441442,-0.02811099086512763,0.03280807372351768,0.0024900709532808605,0.03848717504950125,-0.01860126346159131,0.009791647034379396,0.08555045013916596,0.06815159143217692,0.009927344026023946,-0.06700944694876973,0.008875779210075754,0.005776532019049054,-0.05526182593780441,-0.022730888455035483,-0.019040641521075277,0.09163268511527703,0.03148217122923892,0.13426767550500326,0.07773902733664277,0.025684939427467076,-0.02174764361355673,-0.061250569517642676,0.0756885414827442,0.007229351370945523,0.025887296968796648,-0.07095895267080385,0.031147309092870806,-0.010570354428092415,0.0793259881631148,0.03616109389744372,0.016384783002509354,-0.006840053268788671,0.043750705567696536,-0.004881773511516181,-0.07994104996110157,0.07314315765715905,-0.016700144251276583,-0.005069125030693736,-0.009893994806429116,-0.010219750981196672,0.06530371413055233,-0.05156460630375634,-0.01604495915022473,-0.0007408648425900486,-0.03806560216972628,0.000810436575657034,0.04686936423706131,0.09728100397496992,0.020034749367888162,-0.01552260348444402,0.039914670845555514,-0.038474267076854515,0.07990385346655654,0.022334054752923757,-0.15068156238421507,0.011162391755322541,0.015272967254749081,0.0361020799944631,0.04927910384981148,0.07854643444589769,0.028455286652947453,-0.07336672461097837,0.08917449683066088,0.035130707261868045,-0.0240919507040007,0.023394738402033727,-0.03780718566164342,-0.0766211644595783,0.05696990181140144,0.03380162154231605,-0.03004619025313808,0.09006666907656827,0.0022501211977388738,0.020682915842394838,0.08079158197142741,-0.009359947755416435,0.00873551793873294,0.08228094888085857,-0.00554939686727117,-0.007355913803753732,0.08204603034064213,0.020529781419159166,0.006921205070456579,-0.040065469046514667,0.06803248815839494,-0.05864729379445574,-0.015843757283625002,-0.03986004331352283,0.008579197098974409,0.019789425565672085,0.03749412372423871,-0.02216229202184875,0.07301765649409159,-0.00297317096967339,-0.05665400124783249,-0.0010684382033644129,0.011926931522125664,0.06030501320793621,0.04900751550333086,0.02367142667733475,0.09279168723809854,0.03445958281437412,-0.01352741011302916,-0.03362802169953776,0.08152548361907865,0.06867350581980261,0.06816485208546488,-0.055293492615278106,-0.04753705040539557,-0.026380789257718376,-0.007947809370874345,0.009716499773831176,0.03810395967053209,0.05105904301289214,0.022462554632514523,-0.026437950552966126,0.046267710925255626,0.06229934058542018,0.09680301318023991,0.10818791519186051,-0.016443259159520836,0.09604722957351876,0.03627111467462482,-0.06383439008234357,0.006131448135235902,0.0064697275520734605,0.041607772192353495,0.0036479067612326796,0.09159258871758513,0.07653303646353181,-0.03113078820522262,-0.01719589096260352,-0.06960570220892397,0.015874258310218523,0.08026433142240078,-0.0077747526862843985,-0.04025956008128729,-0.056870948105077,-0.03209195089405638,-0.05071297815821386,0.08180390728531654,0.012622248453414921,-0.11725922262111044,0.049877934928842814,-0.02478329296590231,0.10445398781496619,0.10517872155039522,0.0548439869753105,0.028957644336298077,-0.023868467989493988,-0.048675425647195826,-0.03783225586012455,0.02963308826713165,-0.0835201790446294,-0.03600498943878006,-0.0059305421605309605,-0.059322542352278684,0.04268761075890785,0.0641987714440171,0.024576202507669655,-0.0203765565774192,-0.001820809122782203,0.0537050495922191,0.020989812401325764,0.06036073744416274,-0.024420134339676273,-0.03104798831951702,0.00042264991155535386,-0.007003608119307081,0.07448859968725804,-0.007247112383892974,-0.009848110069510365,0.00320246279781263,0.05900107487056261,-0.04603940198573468,0.04743389317610275,0.04759722473562388,0.015224701087562471,0.04557235816796088,0.04145811511330898,0.019251329625229376,-0.06880809225962255,-0.07540247000410114,0.01719371163809051,0.01734989489864578,-0.015203818214497088,-0.043297107146951876,0.019079649652966248,-0.04591040300190264,-0.019253383620837828,-0.004307978273925603,0.02335316650081384,-0.0005299145637584142,0.04564931815977521,-0.07248040297108319,-0.02271470476482104,0.05684037845159893,0.01258656366341234,0.03702978785712071,0.014011832536753912,0.1359427013188726,0.04137171439239248,0.032421434266869255,-0.0019384225130849864,0.0109127511343143,0.015445210078984823,0.018702850838121638,0.06249717131016939,0.01887098234387898,0.05672449492717045,-0.08964239973297924,0.05636415235247799,-0.008852190776669627,0.0477279943372639,0.010469078839842093,-0.05165633504033167,0.11604173917061404,0.013371985997950846,-0.08779370902651908,-0.038631532852877966,0.07118811216500245,0.016130751587497865,0.049687935042971164,-0.002209753983310047,-0.042526590070245056,0.02451339795627858,0.05590628517504752,0.025905560100077097,0.051043723179388205,0.07509375354927225,-0.006170508381300074,0.02858724129566018,0.03475120282949942,0.043120716638207525,0.01557487383332067,-0.07756016685462608,-0.06626182139551447,-0.010520624568771158,-0.03607984120598077,0.009521297446505959,-0.06796165581902988,0.07729496191699392,0.0242284071712809,0.00021324348892253536,-0.037922181634456736,-0.016956430474550654,0.012341534009748427,-0.027470255711015117,-0.023021951733574002,-0.006824123846023172,0.023717112951510234,0.024699276224224544,0.014587304847322251,0.014764076120111977,0.036048818459302856,0.007258281160356952,0.09114593347173874,0.04809355562462591,0.05690804279217979,0.0020883323783433836,-0.09318313183268098,0.00020881303658821325,0.005581674195651176,-0.003827995307652602,0.016937578198394344,-0.03390637301821567,-0.043104864182747164,0.011617972040247272,-0.08515721484986798,0.012110836383082683,0.008056985281985523,-0.057092353171141204,0.004477961833903988,0.04137060847317258,0.019094775483077385,-0.04565010959186817,-0.03886638871168563,0.05349627662598305,0.030058447334770165,-0.06139214476808033,0.052392465832088835,0.06095942768072444,0.10208086839118694,-0.10019547536724062,0.06723348501834803,-0.0037555666606395636,0.053084984450984564,0.01493355826091766,0.06262583367888874,0.005314576663606155,0.06902643281893307,0.04689649756423184,0.053231140506608245,0.03001004585001854,0.03481421659541637,0.017475701764609212,0.08506661190138633,0.11701067457655838,-0.06823209516455973,0.07276476377527785,-0.05487733121065155,0.03011949417149233,0.04125134927300432,0.08592923173196673,-0.0644545674809958,0.05304006708647549,0.07982769082793023,0.00958250408186547,0.004189034272844824,0.015312665257363432,0.12396783994169816,0.06797630606164502,0.08104684347822039,0.06951964902714751,-0.01742351364760725,0.07135771908895105,0.013739220704071952,0.01566100517349829,-0.010104907889859668,0.0938465451810859,-0.016635928047492327,-0.027945339569988764,-0.03156128424807607,-0.01881605374519715,-0.03415712046579902,0.06187334738434794,-0.04768596698927731,0.015421487226405416,0.0500031393087876,-0.07099739214249409,0.09094868584990994,0.018769529561155282,-0.016499645146104847,-0.03977293234548179,-0.016408382118618173,0.0024830853841929187,0.10946087654609236,-0.0331435103826665,0.032219493274945374,0.09013094464423521,0.006584756826149134,0.014958279670858183,0.015356682872763346,0.006794489518653337,0.01960455898618677,0.0872133262444817,0.08002239385566377,0.0001917903767740478,-0.12187056469253439,0.0070587093990423,0.001369334122628474,0.04162921590600889,-0.07126465529838552,0.03927454122472524,-0.08615760323287155,-0.024384884962008108,0.02865401010841482,-0.010087432666897926,0.010897329164004032,0.022127467775279134,0.05216149658957486,-0.02510018848953166,-0.020954985952894696,0.015353696036834794,-0.060953797389837326,0.011322853810249967,-0.08750197617154905,-0.027750116351750884,-0.05575150617598472,0.09933144020293332,-0.007317803638086984,0.12496518304203706,0.03982006698179598,0.13178518806213527,-0.00014106036530228794,-0.057599844566653215,0.035196845485844126,0.00031088571511386824,-0.00972904507064166,0.0698108448260465,-0.05514301076238416,-0.04244097524684013,-0.03541869267674469,-0.011623280459296031,0.08485151492768285,0.002399325476464852,-0.06709440206647332,0.06487475085998896,0.00007603054533156944,-0.0812975452008463,-0.045756090471293843,-0.04202097852214758,-0.010874706383157351,-0.005615555591263862,0.05617520156754615,0.016957418036109027,0.020279244134446907,0.027497102803392723,-0.019903344761581017,0.009201036388218477,-0.013055221941229675,0.01359607648540676,0.05385941202569737,0.0147331047367721,0.025927461827588313,-0.061428203869395424,0.00843377345797529,-0.009901259850013942,-0.036961908894899836,0.019307831786492292,-0.026270996287501038,-0.05704265833219983,0.009329895879920167,0.011878498107396534,-0.008243896476230495,0.0006781003243968962,0.022958747475362546,0.012310143808140588,0.020516946104972133,0.0015182526779267385,0.05791603963335676,-0.03295228043503104,-0.07725745606193651,0.08966093325763681,-0.014639422764834042,-0.027745090205348676,-0.03046236496655646,-0.01160960374118657,0.04340432541364926,0.14014563228597454,-0.03965807740855834,0.016157417819767296,-0.034126470666799566,-0.04448661616427714,0.009442184454055196,0.05203254304115774,-0.09885657627104494,-0.0232858062425455,-0.012522990411979237,-0.02629135972939662,-0.002249964424750633,0.0013658473751556415,-0.08437179122018995,-0.03981126670288301,0.03837851781499438,0.010675244709313175,0.005787710037966056,-0.06560478644094485,-0.056026226064237857,-0.08203536089221135,-0.004300683644201164,-0.03578951250491049,-0.025372030095904562,0.029945054027605517,-0.02446902328467225,-0.03057669671597583,-0.00466735337956337,0.016788154637274105,0.02846474456157069,0.029591548414477396,0.029951741132138766,-0.06871710958366399,-0.0831452672213156,-0.031054889449348973,-0.03661448330035946,-0.019585452672878152,-0.010073415998663111,0.006682074744069819,-0.04983514825174772,-0.04111127479884164,-0.015686249695053528,0.03305754380836018,-0.019979254640800626,0.05097198185880229,-0.009108021779278637,-0.04778752933975224,-0.03644158755614477,-0.012324499559079802,0.05784364928932164,-0.03917221826090881,-0.01969011632373083,-0.03065653492284899,0.0465903219659928,-0.07697010472366612,0.04139811487045953,-0.040704234518765744,0.052951070741002436,0.04527963655162909,-0.0183766758494789,0.03857156007489897,-0.040209735355035074,0.008798765522007139,-0.024254957869692253,-0.039403312526044995,0.028860465539527744,0.057849419268303275,0.06426063746066331,-0.04909601396741879],[0.04551963108081149,-0.0028119819005832714,-0.10027980892279051,0.03930343271279947,-0.014209418248321948,0.03743324863560459,0.028007363286677467,0.02480586125907909,-0.030660507319074,-0.020672945116898815,0.031092983544736594,0.12672793732822307,0.026552108530766422,-0.002156640669025485,-0.061147420951244535,0.01635844509643023,-0.016931524283581904,0.009352257205702404,0.019338966329443378,-0.020443392737107845,-0.01679020004749717,-0.047801545627230345,-0.09446705467477141,-0.09149648174839446,-0.0018175180795597509,0.040759620831938986,-0.050150852675635814,0.06485016542723154,0.0361614839548935,0.04403754752464156,0.10107958463749159,0.059697095982167055,0.028376220138187497,-0.04125110274658839,-0.02571225711516071,-0.060154462342123606,0.08071444846217954,-0.1180632715257891,0.03718775607231153,-0.018928364826693148,0.06840228029863483,0.0488664106628577,-0.07874066539196856,0.03287386366938115,0.05570540510841479,-0.06190128691011891,-0.018876489927689945,0.019411579082238454,-0.035300389379141026,-0.015985757937426258,0.0532534054590476,0.06792160771919854,0.061946300015263744,-0.014373614059912672,-0.04948933832367764,0.01350653970245688,0.0368419369482255,-0.030121534612301177,0.02618843509228986,-0.020352139043705007,0.06941581076090934,0.06958846840765859,0.016360553406270132,0.013987321794791747,-0.015110666494635936,-0.07378802947702079,-0.008458456142215446,0.006821078296705996,0.014397341606445334,-0.04190557347666581,-0.002999924184624404,0.08138330938113152,-0.02275146473769036,-0.0004731621219531146,-0.038581676673059534,-0.008265595244490196,-0.04323973352561914,-0.10253084246240943,0.00007286617261499172,0.07106960443013795,0.007038535916122593,-0.04677373507004077,0.07359041196004178,0.09418850636574583,-0.0543588688029368,-0.0513448915608401,0.0860471504704681,-0.03749703681120183,0.0607502787789656,-0.027491194276663626,0.015625227489320298,0.03762338075851367,0.0009402871874704008,0.06282699504125158,-0.13242910966646368,0.010853740587143095,-0.005875496642795765,-0.025584228230914427,-0.07549888405188664,0.017151184800954643,-0.04470447343790997,-0.07584475616688376,0.06679827881309693,-0.029651504973668134,0.025767509427049605,-0.042577789581814546,0.004810407880004443,0.007036212890336884,-0.07273291982406463,-0.015874488738204472,-0.007160407016952646,-0.004609990569603122,-0.04548835790194939,-0.012360897200552086,-0.06384774331944412,0.014399083915996855,0.03640854738351079,-0.0017241529783484945,0.014932255769670218,-0.04171525080075935,-0.0053909454862856,-0.06330896948192404,-0.00952702319145393,-0.10972355657483959,-0.025929788505222776,-0.11663837520217354,-0.07438096448986205,0.005677573565462441,-0.09357157714400997,-0.03373725959869811,0.024082381263537737,0.0028736297630226177,0.010450795334008016,-0.05206644239608458,0.07816852989310558,-0.033066701163066724,-0.03965525092502184,0.0018056715433086286,-0.02677372464450017,-0.12231000973006946,-0.046002591918730566,-0.021563501535852344,0.07776688017411328,-0.036802112241433656,0.029120498793468758,0.07060679386865668,-0.006974887266339273,-0.01631934319534399,0.0069401110956001984,-0.12123008420212157,0.026129394284402453,-0.09022788668881024,0.044276030095207995,-0.06784426280498307,-0.048453981682039356,-0.04127696384854315,0.057463266613145304,0.007756884461472366,-0.058989420807184986,-0.043593981362644835,-0.07312154511022335,0.0012116749333759174,-0.03916882445808051,0.06822042111414078,-0.011203386132460308,0.025441190890145512,-0.004201250920119927,-0.0011844149845546801,0.04336969220668926,0.043158401186916204,0.027048760815275203,0.05504016267282733,0.002290823554358863,0.005437161282971609,-0.00009274548705798483,0.02979631343084252,0.006803531293569276,0.047593280627265505,0.06352279750757998,-0.015307850877482512,-0.10800855777364121,0.0052360178418663535,-0.0007941122785703729,-0.06296921106414964,-0.08173545622747119,0.023775428635137624,0.011606815756914779,-0.058659666679926545,-0.03191912454499075,0.025645122705340136,0.017714377149230773,-0.08663052728756991,0.015508456779339855,-0.015678682155013383,-0.0638071696459118,0.05791960403896962,0.05606874407758561,-0.003073000720286394,0.0847946482293331,0.015426496676062433,0.060545207877693394,-0.059071444070677305,0.011388194418697763,0.021988189001413187,0.04862179579951863,0.05086488740209293,0.10607327986683447,0.04146486429403826,0.14785814225769972,0.08875428555833605,0.110976197591886,-0.004364807066616216,0.07804621402833184,0.04854710902126652,0.1192327263629651,0.03579622369048206,0.04721001941017168,0.0018960361863964129,-0.017104730273535727,0.03694379707187853,-0.09309227521199248,-0.003068300761978628,0.083370074226601,0.007069350648446542,-0.018948251346615215,0.06599921770162483,0.046012999791453645,-0.024668278859135046,0.06186312695487478,0.049203608389489846,0.05680542700919181,0.032050587479584475,0.12150065957415436,-0.05140218290957259,0.11986063343549351,0.0038540086240358164,0.07722066735993201,0.047512324135410434,0.030851353329386266,0.0016803183674024547,0.02619235612516171,-0.023076770678234507,-0.006771189160578824,0.071968611018999,-0.0033751463428136935,-0.02077245164981278,0.01814026221880498,-0.049422539551531336,0.09564032389148498,-0.0027136318540424945,-0.078468873368988,-0.07866844752491292,-0.010760469377695432,-0.019559418399892475,0.12330307500362488,-0.01897862266774273,0.06922987130105455,-0.0435786621362281,0.05943700495517022,0.024532489852930137,-0.020398243741884464,0.13288076482455477,0.06739830511645903,0.10956452118438682,0.13735301142637113,0.09909851675154385,0.09521276329111525,0.07200347139501483,0.06994057170013573,0.10298259922147271,0.024686591910080827,0.00101378040026226,0.005764557904320081,0.03151938135122424,-0.021940945344495706,0.05099464398431968,-0.039423935975772165,-0.05015015697758113,-0.021433922215653503,-0.008339639489051235,-0.01914179424449277,-0.053524003451854374,0.06777988932224971,0.035715453717279216,0.03079907157280519,0.16774575299808428,-0.058362775647072866,0.03718985394653266,0.03408497447902942,0.04213401133658423,0.08583017032536278,0.07464014499933172,0.16495509512814918,0.06617995214071279,0.04989755262372014,0.09790822392295831,-0.004710181857170278,0.023870345598196233,0.03770388679915591,-0.0007720293603034259,-0.06017999753252583,-0.0645790104153656,0.03543076745761828,-0.022512046763172592,-0.04059114775188852,0.05302680392288695,-0.044760643959143934,-0.02888943735638104,0.09485928908192376,0.007398525149702783,0.001647744570075207,-0.007677329806950457,-0.01690005245216773,0.06790106075234661,0.006988887678752145,-0.04762280343930972,0.034311981830645065,-0.07124081894848348,0.0599655989946158,-0.0020999583695137116,-0.05034405654806463,0.01293630463103181,0.012476331254195384,-0.03880312537593886,0.01846003463816555,0.1093944866194769,0.013368992958442686,-0.06747225015659063,-0.03155982645284955,-0.04733414119280307,0.016989819931011743,0.008668698998287818,-0.04908709204441144,-0.01057206619931066,-0.012336632679638871,-0.025423637739170193,-0.07939848941127343,0.10677394230287286,0.03633477573314262,0.020235946736973775,0.06683009489259657,0.008669551637450335,-0.027393732242711636,-0.04768938458604897,-0.03932557545265892,-0.010660647147707439,-0.08863114936621776,-0.15949434616047672,-0.12980532287844404,-0.23001046632647834,-0.06691076437072434,0.06325649723541983,0.046549704849029004,0.07239252104203672,0.04149524218551393,-0.09129425872031137,-0.05881442941271096,-0.08129580724186798,-0.05419519220193596,-0.09238073277760075,-0.014452641839090485,0.00805224681052559,0.04960262079830363,-0.0071889800220215,0.010532970716407035,0.029518224131543074,-0.058449609920119605,0.011682150891266532,-0.04181242141572024,-0.10891978977604015,-0.01862148233784242,0.008615416865576661,-0.04378015753730936,-0.10909166732616438,-0.04254566485147779,-0.20852654887305538,-0.24595744309109022,-0.1295533662386951,-0.061309679846936235,0.0018074365661734583,0.06802108935279759,0.12230526012930087,-0.011627837673041092,-0.025661740729615443,0.08758260225358803,0.0019718579261686353,-0.07599159576689674,-0.04599609987220446,0.049715556845045396,0.022727314817881823,0.0383839980334628,-0.012634126772296203,-0.022672642614638524,-0.0034836612380994333,0.0052244413509311,0.045589154842014895,-0.019007188836975008,-0.05159354367136736,-0.1348585650525544,-0.19504305704235766,-0.06511760358121738,-0.10799142862318908,-0.13028155594747004,-0.10440237285333015,-0.05610828025482752,-0.08351185925646432,-0.01665338553277955,0.0856997850057794,0.09567698125843824,0.11767536104341163,0.028014730055214716,0.15446174443665145,0.054991255004931024,0.015882049229360484,-0.01798383502603596,-0.02258890156799209,-0.03341300787405389,0.08558315427614388,0.06673048008445241,0.01337672772254288,-0.010988168962622757,-0.011075302785545468,-0.0013572938075619156,-0.0001128401698151112,-0.007684308921933627,-0.021594555201359448,-0.02458813871649876,-0.033687806212727024,-0.10381601999239207,-0.10543743843908394,-0.025748586043634867,-0.11818729380644508,0.017113103495980327,0.09985785682363128,0.051283256554952625,0.10668421705788429,0.035958882272282944,0.08440065829538075,-0.08052473580276774,-0.03727377484100655,-0.05722623474324004,-0.04743252884535773,-0.0011731822247164462,-0.012375823477586898,-0.004418217504526102,-0.041195452875128505,-0.01929146758533002,0.05556103834289351,0.020378192897649642,-0.05259405069447326,-0.07039821635782238,0.00303808285209337,-0.0541573654825141,-0.09446187381720558,-0.07074617822384204,-0.013314368659517305,-0.08000203592847346,-0.024638377784554393,-0.05029197943212229,-0.08148929081071662,-0.0528543507095589,0.13969874834784,0.07560691063682709,0.09169135540259872,0.05651798554541583,0.023994134426273926,0.06326823110176309,-0.01194054881466943,-0.03306911200452466,0.010216175694585562,0.053207718133432794,-0.03844177754863153,0.050039197789654405,0.08997171890528212,-0.016189785288692447,-0.036480945578845334,-0.13360670545500825,0.0526293537124461,-0.009368436982650831,0.01985378183378173,0.0014868282241309965,0.029030602046288496,-0.018926534700220866,0.03998754495174901,-0.11444272874462537,-0.05043318933512245,-0.009395601517311215,0.08281903230638632,0.03481417122195376,0.11007395167954409,0.18926206796213907,0.05329500848220624,-0.014799614359632398,-0.1252123255667765,0.007486369486667977,-0.15434988496856714,-0.044644886772697,-0.10714804068802565,-0.0038806300416584396,0.01769169780769782,-0.005775495507225765,0.004825949907884855,0.0755324841689589,-0.03901077062513254,-0.05004544339585394,0.04405110892662313,0.0583001942609223,-0.016397677522266955,0.03375586317112949,0.008197501761153263,-0.021894813646913192,0.016838752398752682,-0.05083139881734458,0.030722992443559534,0.030545673322915447,0.02038088626994698,0.1487448331782564,0.07315072780699752,0.03535760137058006,-0.05613209040040934,-0.13545507138435633,0.03654312774044209,-0.12113811113922976,-0.09772222345133554,0.023986096859142304,-0.061173450003525885,0.007137995823608199,0.047438548173669055,-0.0848713321345475,-0.017943968232075728,0.02993152578996197,-0.0004268838706510319,-0.025628364363303752,-0.0185333889911768,-0.049547222589753394,0.09562305184709596,-0.0552383351287034,-0.085616722056472,-0.052095976447674205,-0.038043554529777895,-0.03949921890044103,-0.08580799504121439,-0.04056219767615547,0.0007084719431889863,0.07590854629898174,0.0429651664388267,0.0745807848152503,0.04708074617116698,-0.0712195113276485,-0.030772923463476022,-0.09026604555412196,-0.030366353002140797,-0.14505629999030098,-0.11821824087773973,-0.05680147808305649,0.10095912598072834,0.0005877084709145756,0.010485854998689878,0.0671711550185396,0.0751678024171726,0.039848543976375723,0.020849838426028878,0.05396953630438143,-0.01797059662896231,0.09011387293847278,0.0034559323453425593,-0.11030740005820251,-0.08667538464555234,-0.05856788207267229,-0.030492538026315196,-0.036228244349447776,0.01786758888253621,0.0014519034255831586,0.0041812610028061975,-0.06808709095948688,0.03438522346129028,-0.016561862825805844,-0.01902709526551252,-0.04802283533940708,-0.014957890733135467,-0.041317042103809994,0.04345249401282083,-0.06731463021338445,-0.0037468453433895685,0.05327309839619754,-0.11707148588898755,0.03543237983482045,-0.003280840416097762,-0.020275304832666975,0.017656941286637723,0.05642114980916655,0.18117270037644334,0.03389811469815627,0.08811879663274616,0.004673475286168119,-0.03679685341939216,0.020816467962948143,-0.034354844775028974,-0.01705332368917364,0.1401987916093749,-0.03673957657666724,-0.01952085270347258,0.010217862751270105,-0.07424776416139385,0.01909496476702981,0.048650175953633495,0.0030052776029061362,-0.045000630716743234,0.053242957622878964,0.004722794353653828,0.008928991391068987,0.025705350408662352,0.03926998031133862,-0.04051272419361142,-0.013717917879315271,0.020838083334324006,-0.04205506215735644,-0.11636668064750534,0.036958408420957,-0.0120762263533931,-0.03921045256506193,0.03940091087175378,0.10375797404761546,-0.02542666581346996,0.024290343451112237,0.02774116586009013,-0.017996209294746997,-0.09536202206350199,-0.0015879494439014613,-0.02676803881740599,-0.029979883976782067,0.039046548228997856,0.055405281631919295,0.05606363950955826,-0.014313229214283435,-0.003967708622580554,-0.04748773280320643,0.1675889338815385,0.010841892090304032,-0.04003429879951279,0.02685681958466036,0.03132061039501019,0.02143952579378904,0.09078787235424879,-0.051351122601517064,0.06725886445349062,0.02146786075789374,-0.0297748192687303,-0.033994586490759975,-0.028665743208394014,-0.026683226662023496,0.06719474814877233,0.12096061523294745,-0.07572967659690379,-0.01625623164339937,0.0015319000939346703,-0.08498964041166253,-0.041182920471323145,-0.0036348386406375313,0.05524123381208663,-0.05695567538114568,-0.022794979770506516,0.006810616173630506,0.043367000934617816,0.04004156711185304,0.001528641096422432,-0.025664296518822256,0.027017701264274694,0.007908507451037251,-0.0018468436817561196,-0.06565438485566054,-0.09156138028004608,0.06320101932381778,0.033275981150088896,0.005637854761387256,-0.07754414276191007,-0.027521245752570617,-0.016261850572015485,-0.004552526154515656,-0.012522615810419779,0.0054921230484754335,-0.00662462220795821,-0.07628736958941011,-0.0029958402894088485,-0.06953344193155864,0.024035277929673374,-0.02544674703988116,-0.04411879881894886,0.014369655710097297,0.03031973321734657,-0.06659202616660828,0.05788067421401078,-0.007591085856529192,-0.0005568070450157577,-0.05332704738259835,-0.015469030800595461,0.12486451578781867,-0.012391107740939709,0.16161404641272012,-0.0270344948195365,-0.07858302963518074,-0.05488614256358527,-0.008410216042469085,0.028782013217280043,-0.026115568521405837,0.00027227833642786,0.06748716446652595,-0.024791907556461372,0.01602568517116801,-0.00541611347543789,-0.0297311727503966,0.13228632192216505,0.04370077679652078,0.015093867137532364,0.04074954053870618,0.11205565839040864,-0.032353896505905984,0.1120043234827847,-0.0314027384359915,-0.027043976723286848,0.027820972551054833,-0.039245704133663004,0.043809343457564376,0.03422694662971975,0.0231544868250928,0.0556951607881866,0.11738016212561364,0.02238021553273977,-0.08127797693919411,0.00006333966158429562,-0.019681813047100177,0.002597323002157364,-0.0007721298764338581,0.09269913827419253,0.009014676096077706,-0.029353307059023913,0.025713559440406944,-0.05603966995507042,-0.040531232038793774,0.02274749031569494,-0.0560054082928362,0.16915570126557863,0.008423888047279534,0.12363723866586056,0.032801889818529974,-0.030445011838116178,-0.03358409645121372,0.04475895699063391,0.05476814332888409,-0.0859482680181773,-0.03993769919405243,-0.022768961224642188,-0.0021792327342621187,0.013592860883079037,-0.062080098812367895,0.012740901052961275,0.05343529444939724,0.10484478142071461,-0.0416182828792059,-0.00376751633624092,0.007146300401814391,-0.04155362390965516,-0.0017408819766840105,-0.007038745046594088,-0.06886774880754272,0.02505641285899587,0.03859204791748638,-0.04112120631599482,-0.023007234111834987,0.016689500383850597,-0.058250294722716076,-0.0014981324062627666,0.046149437206625704,-0.01002304498823454,0.007413463199958269,-0.1390509453948798,0.019944122266418556,-0.03300766492166865,0.06018357028200406,0.004145763572909158,-0.07309747241044104,-0.013751872599378783,0.08028844460728607,0.015479030211368905],[-0.05465777951047106,-0.06541665098182327,0.05500048585888888,-0.0580683363625845,0.0039799479429261705,0.03989342499244354,0.07245618497634423,0.020789391394441296,0.1630105088993849,-0.003031200430133447,0.11987768991537406,0.03415357378043502,-0.048364198614732616,0.05886268524286904,0.06321526061470308,0.02182791413463241,0.06184694276094073,0.010453169225678134,-0.06747966793595749,0.030611436429473195,-0.015989978195562908,-0.11130782447711134,-0.025018995140677854,0.053221202081039795,0.002352980959127044,0.04946058532252481,-0.05062474222940083,-0.013336656492864985,-0.04479282459146625,0.03514642945985345,0.04640732875909473,0.064320416859822,0.02580830261866886,-0.04561612476268287,0.0084696264717025,-0.06121593142076507,0.0738890915826741,-0.01274978813032907,-0.08303322758307605,0.020213365393204858,-0.06270277791154781,-0.10165445960631561,-0.06911165800466447,0.08041129607184637,-0.04879974886937377,0.04604427932181234,0.016507010792764256,-0.015023984148533088,-0.05766512315342793,0.03689349354446886,0.04254481021720738,-0.016324476853717584,0.02918864425782835,0.06686309087674286,-0.06534556505119318,-0.02535110525917461,0.08459485555566182,-0.045816249568067145,-0.02231335749992814,0.020910407050652266,0.057215174543594725,0.027765555611693343,-0.02406323561140333,0.0016966774652605486,0.028195561359784675,0.06119491891064445,0.06062284369451477,-0.09178964108954872,0.020738587052335923,0.10305666023448892,-0.011660389631411722,-0.006389543868363181,0.07412434228341878,0.02466491867878137,-0.07179943362625366,0.14048642625931398,-0.05418667307608686,0.06673585554189876,0.08784722585976142,-0.03257415596108508,-0.10547918404740637,-0.028514685291107095,0.027435399495536757,-0.0033306047582784197,0.0001436551309920294,-0.0008339874183636331,-0.06569798344668161,-0.011752158264426993,0.033993109372483475,0.030657705677971617,-0.011931968162825867,-0.09194001738425416,-0.0004626642150556451,0.0661182197028281,0.011692679653398019,-0.0018640693383915918,-0.02287620183855023,0.08798376217121276,0.06845273622707311,-0.07019763037202878,-0.04932071128848447,-0.0372858408915108,0.04034310283481301,0.05341095551036182,0.02656751230467471,0.062190817954806944,-0.02736697734280733,0.04038774638515062,0.02172734925045859,0.04068125783771338,0.027773590361574958,-0.02119421819851073,0.01683679412658339,0.06926236678032661,0.015630975038392586,-0.0033973942874616758,0.12945876122462088,-0.013313860541826223,0.029081386482181407,0.083797472396724,-0.02820248954438523,-0.033234862162486445,-0.04039788542620617,-0.03848464525991023,0.013338176965318563,-0.07574345932377023,0.0179572166596788,-0.04937953296530847,0.053504831377455785,-0.11413226344384104,-0.010510536015663045,-0.08396061235955521,-0.019654903952673823,0.04276746197010304,0.0832580616437443,0.034032786556553146,0.05924274237242285,0.002124696122709797,0.12207738814313591,0.0308418927459955,0.07593922037853187,0.061917395422038106,-0.04988921998966569,-0.0733156939342957,0.0031798089905651426,0.05686283534543725,0.017320501071655704,-0.030567264983033315,-0.0037285806988009216,-0.0008768408389499416,0.04704234073205597,-0.024149760379659973,0.04849947431795787,-0.09104272611060556,-0.07206913681600825,-0.07787329919355732,-0.06685526901814838,0.0064923082264384145,0.02258067400216749,0.003777601845782508,0.02087677584571366,0.05562498105217553,0.0010634536611164556,0.09914888082206158,0.020787985667485853,0.08146242648210096,0.008692277673629796,-0.007140202618919511,0.0016213549627268904,-0.037387221794159854,-0.04632527172218422,0.022812666514277942,-0.034359423587406,-0.024882611972380186,0.08817786192738802,0.007706799104821243,0.010979867539560843,0.1531395849268657,-0.01976934131175742,-0.04428602851407658,-0.026505302663538524,0.010955534054553163,-0.021228677254873485,-0.027884246731022855,-0.10907988129827487,-0.05980976511060559,0.010626253259509605,0.0023622416809485065,-0.008141866774837435,0.030320350628069207,0.044330470639922924,0.09308141063295615,-0.06251940291941677,-0.0008510410669213518,0.03126445074187133,0.04572521022015248,0.05863266743044535,0.07468841766341505,0.03865255792048357,-0.00028359542811416807,0.02543591510075752,0.0430718056105657,0.014967332829828116,0.040087079988950045,-0.029796610464311195,0.05226647322493303,0.036093081251856916,0.05570702682594047,0.032466381144339626,-0.03291692517157342,0.00277508839658391,-0.06086626354567101,-0.050583559244402526,-0.04960513905057341,-0.04251080144742655,-0.016294441535054476,0.03649828710773717,-0.03446210848237488,-0.023628778102171948,0.08031354874240394,0.029173593088435878,-0.0875686299556588,-0.022762119103906107,-0.013229879233195088,0.09524621911682842,-0.017918158761661626,-0.048205418207997335,-0.03453848642104644,-0.03803022775722067,0.034950800207174136,-0.061150209049439096,-0.08996858928671762,-0.08282132784007862,-0.09853130962694108,0.029847431406274903,0.008705667643025218,-0.0715575759238666,-0.06066383750160051,-0.07035260414195306,0.009317451452044987,-0.0475482923811922,0.06850860266977624,-0.05206326418438559,0.018223668060597928,0.05005653107337085,-0.025167434914143135,0.10112286368099227,-0.025076697332924086,-0.027354138074164702,0.0679095085301069,-0.03750034163257101,-0.006532790998055838,-0.034442931909126534,-0.04778150346877158,0.007356398332914167,0.014200603787925217,-0.004880377378601975,-0.07143577210759136,-0.029053962125512898,-0.04583141903695441,0.04837933671885919,-0.0455875685154756,0.0535344482317231,0.03711644025306332,0.09189980891801863,0.03713823059248895,-0.016715857808156796,0.08049336645295123,-0.029144725051372136,0.041342417129100056,0.02522271958554501,0.00023933152029436325,-0.10716934746483099,0.0014874804255494954,0.005541628182316727,-0.0234825222700502,-0.0037422563197031153,-0.06592442329988951,0.0000469284218379726,-0.017616367804994155,-0.03200053180273556,0.034089567691146766,0.017674510556998292,-0.02072938573198656,-0.059447004980306244,-0.0009733862307085929,-0.05501216963661698,0.007929976192323671,0.006937498490111637,-0.014386394625828742,0.10770981148536005,0.05016702655686479,-0.0026806860380100953,0.03412850476448935,-0.04645804018342224,0.01199774334033328,0.07063541665448048,0.03714260555392913,0.015145238278563069,-0.016704005567012622,-0.03218416963378595,-0.0323159136476153,-0.04057183896673973,0.022535836219942363,-0.02860735237004338,-0.0476890172060269,-0.005344112457459196,0.035896377848066666,-0.010644721894662089,-0.05925232549056011,0.015923114140668125,0.04253042063887857,-0.03253660966628169,-0.04123734453169006,-0.0661682748611259,0.06677627342323385,0.08122514896102113,0.06740055252146995,0.1587944965393199,0.0746138451296381,0.07455538820961387,-0.03828301609838126,0.02728505136123036,0.03018137671870511,0.1170331411639487,0.08733289061282502,-0.02207868235154744,0.08791866769926249,-0.03090075929381093,-0.05657312960404088,-0.09768593080401813,-0.0686563315022781,-0.03395802099259298,0.012327075567051732,-0.03845563207419294,-0.12104307757743679,0.009190905220822321,0.04082614224524295,-0.08390260894597085,0.02530727475848975,-0.001830794059486348,-0.09122856083628315,0.08077366693008094,0.14006528709814975,0.05117082105463971,-0.009147622612624893,0.10285736349450257,0.1065102691673678,-0.010331002878975294,-0.006829706768457389,0.032166968854297165,0.007281817829121533,0.1006386881170918,0.09007135364069734,0.05973038906223816,0.0358407180456777,0.1242941889413497,-0.0951899148791574,0.06751872735726705,-0.006925982460267837,0.008410236470928976,0.017151856545244263,-0.020266917697983413,-0.023873929044163942,-0.02724430946396849,0.033207873681319076,0.09990141847373471,0.017390273331956405,0.06785862678791925,0.014983400042636107,0.04606498153203118,0.08613691836706956,0.0964531557046081,0.030173276467601956,0.05654362683424767,0.0394429199339535,-0.004586134474519134,0.004378640423945518,-0.020506281339146417,-0.028039632516162545,0.08431292659497072,0.0477997887302406,0.18431479973694082,-0.02712384068626167,-0.026788876061053263,0.020053315038287407,0.07054835815724446,0.0587443377210662,-0.021675055472928455,0.05469067202994816,0.09900364292981338,-0.041889446695854066,0.03789963380489581,-0.00891688705133143,-0.0441669711984917,0.023982330514101157,0.05546916395671529,0.07383920478154671,0.06179440211832292,-0.006280061079745058,0.08288185215363722,0.18648377863006438,0.055973311949922853,0.14172769999514104,-0.08342406240517086,-0.0467874297595821,-0.014469379999734081,0.08463585159524971,0.0016700556788754135,0.11093448385532408,0.04836151667687167,-0.06312928839537518,-0.0677202862039954,0.017362957395515407,0.13567565026642758,0.009800641054429144,-0.018255209055855922,0.04473402017671181,0.062422334383056395,-0.09155391586841781,-0.0720897515680562,-0.030923368044553395,0.03681212592501907,0.018475368028595947,0.019934454333069847,0.027737095841936853,-0.06788785438173606,0.047219010921193565,-0.03313336328655336,0.14253372176390783,0.04093352023464891,0.01094787713771295,-0.011877385832799597,0.029236258209263146,-0.07680751795446712,0.023552416210356118,0.08967865045013983,0.045307054550971636,0.09361565001748785,0.013188993085528926,0.09649691484255074,-0.0354466681945012,0.07397579101793536,-0.032211712277496654,-0.0022635841012185157,-0.03988381055669045,-0.08363475439663998,-0.04631336843764139,-0.05582686611407519,-0.024774712091064625,0.03723369925779134,-0.04729873958967765,0.06789592790767902,0.017727189723035764,-0.0037141456224639847,0.1135406253111912,0.09248252028497082,0.002503105906165252,0.10668538407050246,-0.06852981010605888,-0.03455035692381601,-0.013862315998125443,0.006869481056168883,0.046493237475851705,0.1164720747394754,0.04884416297693548,0.01656523153117521,0.04169045414363112,0.008823224421519428,0.08311156816038037,-0.05176207687170038,0.07077913754234101,-0.041905872412223405,-0.04748655369404544,-0.08814186678492533,-0.07342205103304118,-0.04557558126848882,-0.012652516609332419,0.012985655961494697,0.012011519216573665,-0.012444762581574524,-0.06227379061034449,0.0018336639092854114,0.05602341184797453,0.010579653258177944,-0.013595473710796727,0.03683068737682987,-0.018518746495690012,-0.040824754810363,-0.023713656423715146,0.04564066502592186,0.11443837258435909,0.14799589516214506,0.11494217747950031,-0.004741986362753601,-0.08380265642486118,0.1545934399131073,0.01026587372862729,0.04194072971201674,-0.06785429561964954,-0.006243441517850059,0.006647392002952623,0.0014633753043002326,-0.0832515312256445,-0.03131403687002398,-0.036252979774609013,-0.13180557867865234,0.03831810677262253,-0.052173346098545056,0.025259085129541572,-0.054334136212794135,0.009086443441685509,-0.04267386857851605,-0.07921371039571524,0.031002381371505818,0.05091141728481468,-0.09553834256099968,-0.022681458206623064,0.055293124590821925,0.059234752307889826,0.07407149512047026,0.06839582839768572,-0.013345315525866352,0.008502358339670085,0.02638749778322512,0.03742708407347583,-0.07212301599890014,-0.02345455536995036,-0.11807692876681677,-0.10572933266722938,-0.0037257947540592653,-0.04489081491662201,-0.045827459285658,-0.020120619752590708,-0.026935845455601487,-0.022139886052599506,0.0278519883452017,-0.09420699373027444,-0.013521523754932431,-0.160839190624424,-0.027593970577080445,0.04074459588907276,0.004040800582176797,-0.00834561679291302,0.020393609426086014,0.03414727986126893,0.02085748579427772,0.12893919234227028,0.06608193300208837,-0.029265594446579526,-0.00953396157124604,0.03497690926722705,-0.02313752120407972,0.027421492517673143,-0.05659022291083448,0.03411536761210808,-0.009256847591465498,-0.021277557919531013,-0.0064617501660163505,0.005340031559314418,0.01781900040846586,0.022311936152765784,-0.07974471491557637,0.031172867868837748,-0.06054862007144173,0.01410177984895133,-0.10770869028964025,0.06822258560981578,-0.05052534924700747,0.02651862862251839,-0.04669492327838953,-0.07249116869039833,0.058103506321877885,0.0013168929411067527,0.049099401332261754,-0.03839960025917594,0.0037369431373438975,-0.030181316032267234,-0.0042022253138517,-0.08570655945058192,-0.016227122633994003,-0.001382425217493259,-0.028563553176469542,-0.06357557179680888,0.026231265120329028,-0.026904427368711972,-0.08723734055917963,0.0034791831723307316,0.02299207203208784,-0.020996886638770227,0.12253251862971308,0.056046699737287584,0.012799326627967407,-0.009003394967493155,-0.07058525663953472,0.033677941942493086,-0.06546674956078247,-0.04029327830015593,-0.07804162775586129,0.021641450710430332,0.11845642713263467,-0.02393889192484416,0.0932592956672037,0.007026601133677701,0.008212262132851185,0.01632939667477942,0.0023454364495989577,-0.09070163335570267,-0.0268130431820759,0.004897703806671595,0.08160811454205473,-0.030077127087985468,-0.009301984338547693,-0.017188148424506635,0.07344655079085334,0.028827387102377196,0.061703677687486636,0.006760220430603891,0.023108222579433166,0.005312793822094091,0.04253960476332384,-0.0029162951978385803,-0.024912726087415415,-0.0733957096099074,0.04009993943965025,0.009842215161781792,-0.0004899459177589034,-0.025884810221905575,-0.008811390700939335,0.005294495028026994,-0.040664932041072493,0.03695609199491482,0.024533485760348733,-0.07077149706212596,-0.02009145389216219,-0.09680283512971771,-0.0024500208909131243,-0.0036673815846160474,-0.04075219152828464,-0.02553427991111315,0.010951943605600794,0.05828899026211871,-0.07729080456951234,0.08856472103283274,0.0251626261052408,-0.04731808726103241,-0.009234803344392986,-0.0733100447202187,0.045383871072357286,-0.023934799561334555,0.10507633075732731,-0.021203358739359645,-0.07284734598389675,-0.007935367872923716,0.011733335949212732,-0.04454725783618569,-0.028411384519312556,-0.01627912670530645,-0.015375777101695288,-0.019698276086559618,0.006160749482614513,-0.0016304644067912297,-0.04829444429269835,-0.03665324158415483,-0.00017744517360092452,-0.05280321618200033,0.008011240125982373,-0.056172688465912196,0.01489583956131585,-0.05112069185241265,-0.052899684087705186,0.04025397210613147,0.03072428907996047,0.0985231616333786,0.00872961062817407,-0.05288440143389189,-0.019036518156286663,0.01687411776611695,0.12471818388480256,0.01329417760030232,0.03615646964757484,0.0969914475828971,-0.026052263303062536,0.06991013695449619,-0.010420260044771831,-0.06307846026610078,-0.078116342850866,-0.006296360320978503,-0.026065119930629637,-0.020644639649858038,0.009875377302542551,-0.025130220034335127,-0.053691536351183025,0.05576584026085773,-0.03800426636074823,-0.013803966374177806,-0.057985885016530105,0.1233044521000393,0.08306514425731155,0.036205170238373545,0.05173002596639022,-0.0442673194263699,0.03961875748073752,-0.0636298694267249,-0.007152367692540818,-0.0014303989959346484,0.043252166137524466,-0.023891588959679376,0.11438067234827136,-0.03966090986250946,-0.03674072346681583,0.06999964529238974,-0.01928836686643575,0.06556855874765834,-0.012968046339504585,0.03168614978136711,0.005744795175556324,-0.00993270691816919,-0.06355323579010318,-0.006496404778857667,0.015077225253234513,-0.013724429468980809,-0.024742519482519928,0.021055903956615368,0.03558042881471187,0.06225854776775943,0.07356353894325118,0.015630857188917546,0.07567098622559336,0.0047288225778371745,0.051128603089288106,0.09292160335410858,0.014762289634890366,0.016868680181496114,-0.053480128826427616,0.02900600625506363,0.02261894838184827,0.07734473907398788,-0.011207483135087676,-0.034881283723478394,-0.003431510518746169,0.025752499929418537,0.06155569934649586,0.016438943542551484,-0.046647493145622124,0.07506491119703582,0.026648598430548006,-0.045995388515746305,0.04522987403915301,0.04879906758415637,-0.017742447224874166,0.014437052123975714,-0.06580006503409531,0.01282777144346188,0.021007851595961708,0.010184733059838693,0.11859338365915219,0.09419519982492759,-0.025606531631170486,0.021658423516366102,-0.011253364826603772,-0.06446495403831784,-0.047910159275198275,0.003175358030697621,0.058950448648888175,-0.013697257799227345,0.09711666220097159,0.043004916833679394,0.0033624562197878535,0.025335141428291696,0.06029092107608313,-0.04500847107736156,0.022280653218996634,0.04580541748148518,-0.041115466035761696,-0.005758653278974001,-0.03350648425559501,-0.004746734954119259,-0.03625899097057734,-0.021148020222376204,-0.07134343341437882,-0.007178817371316706,0.004952172358093175,-0.020489566909373067],[-0.05110752270118117,0.058073934372398175,-0.06387176504617281,0.0824149897701105,0.04972453245330281,0.005021643429507971,-0.032285649763498896,0.002049490000240029,-0.029857010537579384,-0.05568417106869714,0.02818122127552231,-0.0067936338337811234,-0.050987209699653,-0.005581513283413783,0.03752424474211028,0.1299502717461414,0.013608169982817064,0.05603712118133111,-0.01833099119821934,0.05289785712952883,-0.026622389155368832,-0.05766209715484549,0.04817244991782339,0.0270178028216178,0.010990683876118394,0.08531352728252553,-0.03400790774794139,-0.005103463189268351,0.05608066231821204,-0.06943203125127838,0.005142173707501541,-0.039713087420619755,-0.07524283249192305,0.012113082523154994,-0.007536404768168297,0.041184827000046775,0.00179037351039304,0.07147599245331096,0.060822386466682615,0.003107539570989598,-0.04020216394325127,0.0022481104812944034,-0.0517773636560203,-0.009055460525591174,-0.034061113757455304,-0.06064273684630181,-0.06047260331700728,-0.021596038711927272,-0.09767325049832189,0.02905292349274434,0.04716763288749592,-0.06761628375591795,0.038572263829981926,0.039902530475908984,0.03468315005079158,0.07388996269527541,0.020177610542277496,-0.005269178538870266,-0.050244800633326446,-0.0012094406609759756,-0.03159732158287839,0.06697637307413636,0.04203189820952868,-0.005301668469345819,0.01638210451041724,0.008655439163833973,-0.027769701983650703,0.031077456247885084,0.12080011893285585,-0.06368249788852999,-0.032003064823219574,0.015567161027755847,-0.008340048821399017,-0.04580784595967655,-0.0037654052971433155,0.037508905338350836,0.03752980096173991,-0.01887097415280512,0.02280485107200774,0.012033054004512572,0.0016464964542992895,-0.042998488639456496,-0.04185210716727258,0.04915668878855923,0.056329631953977846,0.038624478431925624,-0.044971180350674086,-0.004010464746335495,-0.08226639143517342,0.025190477170715143,-0.026497770308647896,0.051494244223531646,0.003059356841761161,-0.023868377857422154,-0.018485019083767876,0.03206555945460303,-0.001506924065959737,-0.04827762413329777,0.036832779120668034,0.04428220695719132,-0.07141492479344733,-0.06367261198489003,0.033461598220370856,-0.008336476561433923,-0.010012368985686094,0.032694345153041704,0.08087733122782524,-0.018740314034487594,0.010265593087223466,-0.10117264858150986,-0.048995067053616725,-0.018511484198435412,-0.02906896914842086,-0.025573185832887185,0.09623645687067904,0.06326093633228884,-0.010236261056624365,-0.017417094454849957,-0.012176203157895102,-0.0768626186040062,0.018025395055027996,-0.017424832069625782,-0.017887650347787932,-0.018773123351464215,-0.02129003932568126,0.03153534358811774,-0.008186074978332458,0.016318818859431806,0.031499845766775114,-0.008145255078960047,0.10686435889102386,-0.005238977913402878,0.030193438577315615,0.07357641048953188,-0.052448145916548464,-0.012168289065793087,-0.06850932948048094,0.015679337292892708,0.012403588688191362,-0.019307821033628034,-0.00006862674424068432,0.11613093938927267,-0.00026567355865605714,0.10173545351689499,-0.021523409232166158,-0.038831591665698106,-0.08363248418488464,0.0790580270383748,0.04247474229135026,0.08408071079171947,-0.010416880320800893,0.0018692952684583137,-0.020595230943579308,0.05169080983958182,-0.009324067174193517,0.06954371470012254,0.07837117682909701,-0.028057059233844307,0.03316227312931147,-0.03267481283329993,-0.0049457718483238025,0.015015360473635516,-0.03988397535982899,-0.06335338405264984,0.06316020367894692,0.09352257219385321,0.050429561451848626,0.12488153916877556,-0.054280821876373016,-0.017398014848775793,0.03034838990839774,0.039442235177470204,0.0304466071561893,-0.039929461475949383,-0.11162301790921253,-0.04500878306136986,-0.03816410656822138,-0.02388525397690249,-0.02305335735864903,-0.14337997058273205,-0.030254969449779266,-0.0006422056169806129,-0.04977808750060857,0.0403989202534206,0.04261416559822208,-0.0735025712481615,0.013735434855503704,-0.14254917557608343,-0.057960371254374775,0.08302642306845331,-0.07937363755257157,-0.06713161135092786,0.015798139543431174,-0.007048841430468036,-0.016374393473349205,0.026449773034199535,0.07798899642889347,-0.002750276475702426,0.08224785529670803,0.0411275000643165,-0.08693892944655043,0.005654075003972668,0.00741987416882833,-0.04169301471648044,-0.02412746852390178,0.04843338626426108,-0.06932338575964618,0.029931834723005115,-0.06004425314412557,-0.050480686683310995,-0.010206525663059348,-0.10012119544994609,0.01775639208843331,-0.014583724197696995,0.0567147436578969,0.011788810563445308,0.07404064392352208,-0.014116930669313316,0.005920808173568187,-0.054582296358931116,0.0786237141718383,0.014600460246475253,-0.02779428277352037,-0.011945223212704926,0.01268381265046977,-0.01681871622170164,-0.0036198596728506246,0.0874478767768625,0.026458480984319147,-0.07933039195705362,-0.050960251393577585,-0.058345584750332545,0.09314769055166762,0.10581249766159583,-0.06602552872026568,0.00031449140025532863,0.03053203659616901,-0.033739883522804846,-0.0460834065068749,-0.0470648088813532,0.006104838587582222,0.01638574823418969,0.009087060339354565,-0.0049107920549296856,0.03430892927559371,-0.052389640543961745,-0.00998370058953252,-0.0396205077939166,-0.046564956238381985,-0.02984907192504858,-0.08367477549458342,-0.06323594217712035,0.032183847098966475,0.0633546123033565,-0.01242069898833421,0.0884036323498171,-0.003935268604353183,0.03305996074579118,0.049670854478279736,0.020541988812124354,0.014048799430927067,0.03051228337319459,0.016619002409525786,0.04264707329627306,0.016003520997333043,0.055728495541930614,-0.011260435865732594,0.06921642249151613,-0.012560227355760727,-0.032177282255322695,-0.032751405861451234,-0.07574157564009322,0.03239683513846034,-0.03986889344071629,0.022769759452483985,-0.004278718892678856,0.017070017192505924,0.01017066091895464,-0.04602809645059742,0.018019600034214468,-0.05619756087907985,-0.06448538788708497,0.03970991969387342,0.046172441597515664,0.021137744452358047,0.05791986082553221,-0.012503405056309041,-0.07856004015879181,0.05198008704358723,-0.030408822158344583,-0.024355685334067064,-0.005687793472526658,-0.09859822213789009,-0.04228302514626043,-0.0775312361782037,-0.03137002932881107,0.08296899390595577,0.00963955580469214,0.0933079528046499,-0.024886295834012473,-0.03490928211662921,0.05520516868332443,0.01134199644355482,-0.025781954217232284,0.003543537490235915,-0.006099566337721148,-0.007051634019698052,-0.016082133923861052,0.05714905862134777,0.024978987934339832,0.07157064720119521,0.02144301724858428,-0.03092291761261268,0.006614556270331393,-0.020151362738018156,-0.032942253504280004,-0.03138094279349415,0.016838806467425565,0.011506794942478462,-0.019662246282730767,-0.01932169547298335,0.02940815491871969,0.041169653180962544,0.03728898573189032,0.05547403226564346,-0.0016096400569498217,0.0974831187441137,0.09826798766374287,0.014056793882823417,0.06397232724092071,-0.011452333570846084,0.04532626798370487,0.0788373408627902,0.029396837826466817,-0.061879284853374524,0.018896389084942043,0.010454151954345969,0.01991060673006741,-0.06939953382713168,-0.06469509089343183,0.05295550510331587,0.0331404708800765,-0.0045771135396850725,-0.04790336520428844,-0.007154210711373749,-0.04092554393089739,-0.01304740594199841,0.019332418486256102,-0.02583871472011092,-0.03393169757835773,-0.13987919135749444,0.00024797918248161067,-0.007720200543018749,-0.09147099630811019,-0.055450001750651505,-0.04085107334458785,0.009967809605270796,0.027904220804174,-0.0836947594544233,0.03517664750809335,0.006988826361014808,0.10321065252886227,0.010822384788469776,0.06280559287452143,-0.020205930391691166,0.02405952064138529,-0.0037983254754903246,-0.07788883174468789,-0.060507150436008766,-0.022591536994181132,0.00943019487347746,-0.05010558428907194,-0.020911530816592545,-0.04019214167263225,0.013704126209645603,0.008240649375216935,-0.04546232014253695,0.020118226844416474,-0.0444746984164178,-0.0051942446062312585,-0.027044476099449197,0.005045890232352273,-0.03633568057688366,0.02214275675296668,-0.012921898590693703,0.023922102042530594,0.0319833846566725,0.05699176074248366,0.025591264688542115,0.03054420496540975,0.0986926218149262,0.02915545851297125,0.016981661846119326,-0.04436302688664611,-0.034798994141524715,0.023244997428084096,0.009786322440675281,-0.001127455398545014,-0.023894233237940408,-0.011795190262028075,-0.0010647071349699033,0.013174050972558676,0.010840927988068103,0.02913531997647458,-0.02896587324650663,0.09132192314522813,0.05379590968287599,0.04672743001800298,0.04397833298043164,-0.017227944479180284,0.14784983210322358,0.047333270513958796,0.007670614575746864,0.00024722364669344985,-0.002605301510359979,-0.04550833808227476,-0.10852263215584008,0.0779153435535512,-0.028182715221282573,-0.005085641215848918,0.09601942430779231,-0.01101716404651677,0.04233480759845634,0.024773278561971448,0.003119455549910507,-0.1079988005429817,0.021868313787919695,0.033714002021300475,-0.015515045401902797,0.014934728693959343,0.06761399867656227,-0.04033063814360809,0.04779057170483246,0.0060142399438998856,0.0691834379268918,0.007268161078421031,-0.028690598744871527,0.0392767122780585,0.009871431472939084,-0.024608679813519607,0.005937374262611572,0.009089274514914083,-0.033274064014296646,0.006325064078661431,-0.017706601938143846,0.08813430661225741,-0.011656162911681516,0.058119198135156404,0.10055902591580804,0.05763644803877771,-0.03434967125147252,-0.0588766257547417,0.03506890095910723,0.09000519045393963,-0.12866657119462466,-0.04369807992196834,0.03881357973790243,0.036206841176678814,-0.059992641290631296,0.011545374391277695,0.016252684916842813,0.005601704275575534,0.010104492690328322,-0.06992661641490261,-0.020452709299164033,0.01529427654125862,-0.01067977469130375,0.05320621084848083,-0.004297822662314101,0.061082316216029074,-0.08921070565695305,0.012624078587907182,-0.08445601601438305,0.023865738358855616,-0.026215770413785065,-0.09297316562588588,-0.05309314608172614,-0.02993066715536193,0.04574345900297396,0.025469474487917827,-0.00028937357287823833,0.003670252508523547,0.013729988091246889,-0.061901008157524647,0.07298692488420941,-0.010628252073779751,0.06498174277759423,-0.0200602952722129,-0.151807894940768,-0.018450553312497918,0.07671247295239733,0.05226697829659326,-0.09724718776504498,0.0354138116365231,-0.041484566615939925,-0.03278227619436216,-0.02468722802052683,0.06538873390202728,0.03155491162804692,-0.05404928552632174,-0.0646624592401759,0.019790670854509817,0.043410182303912415,-0.012333992397164251,-0.04579053248667658,0.002302861714864273,0.006279854279046338,0.051271762040715485,0.018974255952064874,-0.03704432199608351,0.035631698905020756,-0.06423507406237719,-0.029627026412347456,-0.005733545740326263,-0.07565814441187536,-0.03350596556475341,-0.008784926581725683,0.030544704957608845,0.017321533516160427,-0.020142547216800887,-0.004122202422048233,-0.021463774533074985,-0.05638155667168351,-0.07728270322462451,0.10538652573392053,0.02252931657923314,0.005116331310349765,-0.034238293572686866,-0.006559640909247887,-0.03292028193070645,-0.021070652391662403,0.010028002527257641,-0.01280970505646501,0.006898631824615695,0.06824080555196581,0.04599329810316497,-0.06512740101761016,0.006287395407488824,0.07068478362004871,-0.04130611737631252,0.002815780315444566,0.05052440405964582,-0.09573462289479234,-0.028941467821705816,0.008440164035359347,0.03335517115660091,0.055222555605052216,0.054846662985936157,-0.012043603067292916,-0.025262087563537237,0.0637252029764473,-0.033977481356940994,0.077572981829898,0.09328370868989821,-0.04872823124385665,0.15297098782657143,-0.034798116937877946,0.009508452484122005,-0.018865772477099012,-0.026137517894600462,0.014111383105819412,0.0563494601877971,-0.06099275602990664,0.038971795772992625,0.05090859560739382,-0.009940812520203905,-0.07806955230303343,-0.05794599305690906,0.0591793835573815,0.02403121478832873,-0.007587788696415472,0.08147622507927064,-0.06721682665495582,-0.09898012911105851,-0.07357603471460772,0.019145398116325773,-0.008335559130195513,0.07458829187534295,0.0032368228192196204,-0.07264193531704012,-0.04488105586733902,0.006177201866818157,-0.04740472801161288,0.043683865027378345,0.07176441164573323,-0.07452974909593163,-0.017322075600313944,-0.013860900168558357,-0.036112881730955816,0.013841860241387088,-0.08169939878536403,0.046749192992081155,0.01298093184631449,0.00564140593867588,0.008072913281377837,-0.02436474600964387,0.04155775425139589,0.023017055126734444,-0.0008526561134993035,-0.014437144923976505,0.00010971514438298387,-0.053938756993106754,-0.01579706428879025,0.04553715603681043,-0.041626254078515536,-0.006098473891649392,-0.014604398427563298,-0.04754601718212983,-0.0305121012008431,-0.03358298186917909,0.043206753687885874,-0.0024750431251031545,0.06163313413364771,0.04367973794524113,-0.0683203211478631,0.03153101231024375,0.03439636320462309,-0.06381318843971265,0.05059307834910699,-0.017057502533594664,-0.048605969032686124,0.01278041568475814,0.07775815189580744,-0.04405287667214265,0.09725741907281527,-0.04442509979212383,-0.042985394031581796,-0.15802809670121862,-0.053147187336598546,0.002403536923302623,-0.004831536021112158,-0.05445019661098472,0.04874810299518232,-0.06807510421038622,0.01121330450002221,0.029801460567141645,-0.045231894739083324,-0.002337427357791261,-0.05219513090059361,-0.01496108305821023,-0.04355994073150942,0.04565691447587787,0.037757871472672094,-0.09551559150894663,-0.04511894997459505,-0.021647681288436107,0.015543735078403557,0.07896564276593505,0.005311124174248421,0.0751304365119597,0.0027980012130646276,0.0002563930436183155,0.006249262746441253,-0.0368885936395436,-0.010465417227000624,-0.06719729034532154,-0.06896183215918615,0.038888937612302964,-0.03846587870574992,0.028716165915520998,0.0886397587777198,-0.06727302159555536,-0.05623064918684316,-0.04315275803141536,0.01676669567775518,-0.05515728947358684,-0.02750469481819451,0.03514989818285082,-0.026880926380406785,-0.04137077211240067,0.003713061718728368,0.039673520990196505,0.03099551081571317,0.09117975597857568,0.05944922434476901,-0.03729704074727177,-0.09291621688053969,-0.038976737154383344,-0.04390167419312192,-0.05588577110331272,0.004034754382138543,-0.016577102388200825,-0.01982399070526494,0.018752898434632733,-0.035454808797009914,-0.011795196646523662,-0.0560640178503853,0.02279965018467626,0.010615859008219533,-0.0072743114048022545,0.04486959826426515,-0.0798090943144606,0.035030239207455634,0.055197250810345745,0.05066413704409002,0.06515386160992671,-0.019207708371043623,-0.007710308496340414,0.04553640277385622,0.0002953754202018012,-0.05091294562829793,0.07055271826556002,0.02019317383295557,0.031838975239618914,-0.10491593339622475,0.008298399533777099,0.06501658066854621,-0.029050990890621003,0.03058592550591568,-0.10800037579649463,0.017006959712336216,0.017715676975743687,0.04747366141096658,-0.005181180569304607,0.03373539032989664,0.004123399199486961,0.0412469025302307,0.02574545465567089,-0.05748508793625479,-0.04069206815329319,0.060065759811371834,-0.017080473618938722,0.03466135540153323,0.00466555528521983,-0.01893580136255031,-0.06228866652182936,0.014124099239290972,0.07987862111587775,-0.08487698669329502,-0.027369377598328932,0.03126108170363896,0.03898124621841688,0.01650277764462101,0.01446541068456851,0.02724976128936415,0.025068269984403913,-0.007620830794310881,-0.048557985915005854,0.04539158954277561,0.015692212892172545,0.029076736517930215,0.0033642363010649256,-0.0347842542548184,0.004339887821779779,-0.01118274996606634,0.005363124682576617,0.05748628069185363,0.031660058535641744,0.06584714561935973,-0.14399633961568284,0.00460909897753282,0.04036179366661283,0.02816167101230131,-0.10446262462128822,-0.06737312928704167,0.06449394962343996,-0.016553692387667057,0.044461521990578776,-0.0010461756642142252,0.034052199171692096,0.010476378129235636,-0.018859919107232163,0.005626636902517348,0.0030407360178807486,-0.021236019901399054,-0.05903713693125731,0.03515815649080558,0.02876943935104587,0.0050260741648050465,-0.00759886287458829,0.02524842288971117,0.0019566576792455354,-0.0331218739900899,0.014025944643366291,-0.03110217817579574,-0.05069287133937362,0.016002222846271393,0.07558193715737119,-0.03599281192002683,-0.06324234848678524,0.11593739662811274,-0.0008284853231069537,-0.10638362983766879,0.018063430176719783],[0.09280453576086291,0.099556551827858,-0.08582159887626946,0.007951114507897133,-0.0608371082370726,0.04684602667047319,0.025147186045434533,0.09610930317151464,-0.07781906508848352,0.03037633474130777,-0.052732438544875346,0.021568025818517318,0.028381376072641965,0.027354398059058,0.07267225481698322,0.01990067679544529,0.09630711464675205,-0.045096423326869396,0.0006482780777972036,0.06259830050925795,0.04100647359219363,-0.07990241484909519,-0.02116457355822874,0.10648990509937607,-0.01905673154231704,0.09612424810996761,0.09333605741165374,-0.08731194147896199,0.10874431742586174,0.017382462678482064,0.05224532832947152,-0.05979723070490649,0.02670249997175014,-0.0026826514517249603,0.03369147209712924,-0.02467675868508505,0.001071866515543876,0.008904556910136153,-0.01346078155183972,0.02947143100308364,-0.020570095829650345,-0.04621952697602458,0.005038494613901755,-0.03421650606201532,0.06313868108818203,-0.002620592274585189,0.02508973962965075,0.038376518659105116,-0.06442185612748977,-0.07346401249152651,0.08836567060748585,-0.01554780427720638,-0.0068446395357457165,-0.02191238624275398,0.07142499191383984,0.014472876358264889,-0.04142327810973195,0.06061063523863278,0.08704290018544131,0.024337993615235025,-0.06615599188259604,-0.031718447120337695,-0.1016440317057076,-0.008101943645172145,-0.0678530750745647,-0.055941772952068564,-0.05151484228336292,0.027766535020871213,0.06113571692934416,-0.027896657456385643,0.024465998852677317,0.07179622861591319,0.05748374103020146,0.006466657097706922,0.006507888087959785,0.06390075116989273,-0.04300650083826438,-0.035640177251620005,0.056769427344776274,-0.07015253208901905,0.043175959954530566,0.0621245543848402,-0.062279618885182526,-0.0426336378943755,-0.013730086232457476,0.023478916859899696,0.02793967285469316,0.0003515900698458518,0.02224254371622821,-0.01969634857817145,-0.0004002816422860967,-0.023019711257575248,-0.04397074258436994,0.057487801700537675,-0.09306702559072058,0.028326388225405626,-0.04119791615144976,0.015169260263693174,-0.0902834559037662,0.07250808725326262,0.03956651864259774,-0.06158558037593729,0.03978606131650701,-0.09242390447795068,-0.08157340865905457,-0.030748195330006074,-0.014691220438128254,0.0248337448331017,-0.005841913855694939,-0.02687798226442612,0.049793978516827826,0.03718558203262512,-0.033521709028850044,-0.012641843790724604,-0.043738421824651756,0.027368665314510945,-0.0044666652750364605,0.0537880654133895,-0.016252289852796198,-0.030582508875001205,0.025314230568560664,-0.0234023195349114,-0.005340402369430511,0.05363621931275951,0.04675637018492255,0.01882856649884472,0.01199173412836042,0.02994292439818702,-0.0004444525115478278,-0.0480541035662521,-0.022826106275805103,0.04216189981826969,0.009450789657500342,0.10750963975280992,-0.035423841072459654,-0.09378758833551487,0.037494881355536226,-0.10038413202142336,0.037815200153387754,0.02699769569952498,0.00854148705994971,0.044844915582979865,0.05461011445791089,0.006234507374064077,-0.018559163913383806,0.040203008152471686,0.02106281951495544,0.053158280484882754,0.010018981709345245,-0.06098556682620266,0.09440731021436798,0.040982778409465764,0.04840801797159115,-0.010624551831133042,-0.08322478202231504,0.12159873919816318,-0.047877669302047614,-0.031707917116717846,0.06875391845561628,-0.03693118084209414,0.050763279635968564,0.06229766852356509,0.013230921174215532,-0.015424643593383702,0.001258863634204777,-0.003532800482195241,-0.05725555152519234,0.02180768853499052,-0.04212660479891227,0.041849072000137925,-0.057558607390251176,0.04945221367233371,0.04500933266583272,-0.008259593415883,0.018166802077277496,0.04845591182694055,0.0037314634956271842,0.0056367801572473055,-0.003677979458309853,0.015001078907433745,-0.017317118043254955,-0.006536029197837676,-0.015527424942859818,0.0009080882368934363,0.020889375516110385,-0.0018853677402441208,0.048001486904513065,-0.046729356699862466,-0.08629504377296043,0.022459092332531114,-0.023849134454011964,-0.045006907145632165,-0.01777344882124279,0.07926462516826868,0.023284927811592238,0.040916465533078185,-0.08031856253570527,0.032938639261584586,0.022589436875499757,-0.06736682836896199,-0.06886187276683708,-0.06899139809032555,0.02494901006159531,-0.0538927507377988,0.0017344610207301523,-0.03525130881941582,0.009274293557272863,-0.02736767931144589,-0.057229954493492545,-0.03464201300139143,-0.00047598800559257073,-0.05762707796282006,0.027814822884203914,-0.056022073994524794,-0.008256439631474207,0.04324496293961835,0.04043921739677087,-0.08321712741386501,0.012519908683283221,-0.06942117372873555,-0.06267787283468683,0.01784090587055016,0.0733006337042495,0.023919878078029283,-0.044255501551628815,-0.0844323337880444,-0.005206451160148615,-0.05708874098610811,0.003423724820126138,-0.010318783566476726,-0.010792260496095909,-0.037329416888493075,-0.09432943853414388,-0.008766156809370257,-0.02455949930465599,0.04434044510417795,-0.04855824283607706,-0.03820473772235363,-0.06837262889659226,-0.019815672227238085,0.010525578304228185,0.061795228506629746,-0.036906162777169634,0.043804910048827674,-0.07802754488466984,-0.05775337821097578,-0.027786325039689176,-0.03458302907543418,-0.05337170053758957,-0.11361674617494961,-0.050799206374448055,0.06387652474005509,0.05479154556092139,0.04068351365625417,0.025002934713271863,0.002677726942867566,0.009324523027483898,0.025951505647837644,-0.008554418139227903,-0.13022542955093158,-0.01019932479175546,0.01183528802013482,-0.06950918388393071,-0.048677665883332624,-0.08074110936614863,-0.05100532000886625,-0.019038288074417112,-0.019836595242894106,0.0033242606807462353,0.10539072723003882,-0.0675721837810977,-0.021162734513347423,-0.07050055663998775,-0.05045025309791464,-0.018516626016088097,-0.0727907143886177,-0.07823901138841666,-0.006437830144169683,-0.0182862132022341,0.12066788846801096,-0.0025999935607692163,0.005340918013010152,0.002726862703918043,-0.008664124826017737,0.025370090142394136,-0.06299174997907991,-0.02951775407741216,-0.007218689176002,-0.10654388074445345,-0.140626279119951,-0.0848088439968515,-0.13212454321151754,-0.0730418968592132,-0.1374840033571175,-0.0540254793465469,0.03611551904485942,0.015648466055185148,-0.03608086725285639,-0.04156333566699634,-0.06972083650219578,-0.017174473153549967,0.022013024866836577,-0.06939674933992873,-0.0579916242520198,0.05446714992904342,-0.030144897527695794,0.06777406160997973,-0.06870733621484364,-0.06423049088764139,-0.023062373685991216,-0.011383756897797156,-0.08551250555694932,-0.08376460431990716,0.0503512760507033,-0.11364389387506625,-0.13257371027019782,-0.018833354745125142,-0.11893753680114813,-0.13192978432007638,-0.15601701177463922,-0.16991176123660623,-0.016119328485266437,0.007925001358602968,0.07541139092079696,-0.01633694245039166,-0.06059855863490291,-0.07594226306224053,-0.11539769509170215,0.027402694698830103,-0.05053350721044365,0.033759442060893284,-0.05716942720468378,-0.12900387515127626,-0.06020835669850875,-0.026405225492418544,0.018886216445482853,-0.046076694602269944,0.06408834446903396,-0.0011536479347831353,0.10490013189612174,-0.05097642515572288,-0.09712481560323735,-0.11789018804677145,-0.05063581814682753,-0.09079307319851664,-0.014838506644962071,-0.09314526839525494,-0.026444519795391638,-0.028209741395313993,0.0724581670261838,0.07243076684788695,0.12789928958629124,0.005923538906918969,-0.10566998027953384,-0.011599609986123178,-0.03761406505398926,-0.0474791120293792,-0.04806492752281548,-0.020974657851466356,0.04047681084095192,0.004426434009870741,0.05405629385338484,-0.020449786899688183,0.01715288385082461,0.06221833122778461,0.0027415295655296218,-0.028282751439894862,-0.06683058805011204,-0.036592063858348164,-0.023534164238125856,-0.10933292149172319,0.006695161455985178,-0.11280466078181349,-0.07751194490248554,-0.06327397398055344,0.027159123457220647,0.11667627315731906,0.04404335426354879,0.07721385702032746,-0.02803744658864496,0.015371401561521135,-0.02166363616757928,-0.012976104185632342,0.015624862737576716,0.02865846418266396,0.08920753748008182,-0.03712806067895694,0.08160921755156533,0.04569850300340413,-0.007398330072243933,0.050859775236319724,0.05077152519297582,-0.08794647612947923,-0.04964810115025892,-0.04811465581686012,0.1193111234455332,-0.07428187453072652,0.03748587153295969,0.013991394200156845,0.04888456190680651,0.021489917621819416,0.013691228567572997,0.10649139367832969,0.07804402926170154,0.21320536867976592,0.23570236217358242,0.2147030397426203,0.06406815554535893,-0.029796320437688917,-0.04957991993830997,-0.002970790780148061,0.007792071836771373,0.06562620701875434,0.010433788672425904,0.0022436176227940544,0.11836684496042713,0.12610421563142468,-0.007254034102159653,-0.06033114208876183,-0.00016982935113320327,-0.035325000054260265,0.014729669206396913,-0.06296041330936439,-0.03927266799140258,0.0425754335539939,0.026461915134774694,0.024546641257552255,-0.02926162410312128,0.06465942746486061,0.01499815896987964,0.12684718036947554,0.12417793327046503,0.11404040978858679,0.1298601541451973,0.0419412028441347,0.09057726793195482,0.08236289523468354,-0.020375643896948827,0.09579948996952668,0.12030870979684445,-0.019570552101562517,0.010568092869722599,0.08142794511578762,0.018782406261954675,0.07725078383133537,0.045590118452380514,0.07761274713921608,0.006008801030263966,0.014681389078012124,0.0722309371858382,-0.0833196372312419,-0.008466816595680757,0.04068500053615759,-0.0028230185609678707,0.06867280688515198,0.0470167649993196,0.05217934576124768,0.12901736441723,0.09150087446374368,0.1038785744288779,0.11958757289166017,0.18736110501741254,0.12943216470277702,0.05254596996905444,-0.04308979494757714,0.09434618495869633,0.057062655439605856,0.05000697902634423,0.07070586951428783,0.010075970989710832,0.06256366069955298,0.08310508705149997,0.1226811433133699,0.05396958911683857,-0.0542339292118513,0.03817050339634337,-0.05097935986850461,-0.022108084574611324,-0.03724090363614169,0.0037318904490702257,0.06363796495223392,-0.02026047267165423,0.033013302941267315,0.13552250712165848,0.10685696142581513,0.1321220689324229,0.03179136738273111,-0.015159759377124531,-0.0014625419766091847,0.060192686445039806,0.004398114077590549,0.013205238793764564,0.03839865900686085,0.011885418449951926,0.07547401200551469,0.045329190687162894,0.06198547463838784,0.02542334088920738,0.032481791544745495,0.11102631086916526,0.14571601473777437,-0.001015610299299732,-0.04034534428140709,-0.04648923626510481,0.04113896484388924,-0.0328796842431362,-0.12342588123306586,0.03376428678326295,0.08199943590666642,0.030201890073382098,0.1112520600557482,0.12635171606520645,-0.012759575991078659,0.01331123832184645,-0.025299193100222113,-0.05515173841954246,0.10550771012517313,0.09410173635396858,-0.051843916144397026,-0.028532649092905885,-0.019826706670382797,-0.036489266954916805,-0.03848284628819384,-0.05003672267685193,-0.023489470178831934,0.04160248894540124,0.02341913812085233,0.02233496430161944,0.09195158651097773,-0.03933130637091001,-0.020531569389350888,0.07491304706603462,0.039541863601377854,0.02409138718474002,-0.10422554735959035,0.047993366094526396,0.04000161340678195,-0.01607650373608473,-0.05716332822647732,-0.06733024952217302,-0.08323935904071722,-0.04939520242735802,0.115326437024603,-0.0057647368648043274,-0.004071572227444147,0.00042458322967489355,-0.03504094284870276,0.03726865026448156,0.048260512360397245,0.049861534621544606,-0.03356470838800025,-0.005707856449226785,-0.020158680121437275,0.08519784611141348,-0.017809880051359982,-0.048563954416483555,0.012938807136810847,0.030116775364051617,0.06808398053567397,0.040248452089010935,-0.024466053018796362,-0.03928488953543674,-0.05864194989282673,-0.0580317578663516,-0.026214308790063104,-0.021758792479262313,0.058192855572153986,-0.0211576422688275,-0.04439484075997169,0.012421870253966634,-0.04007416015477185,-0.004102200437452421,-0.009260594705643853,-0.015336356951652958,0.05514321579362967,0.002765368755256481,0.07350808889993371,0.025115120219948762,-0.03431767091965868,0.04208032263714452,-0.060279117221862764,-0.05522234441964259,-0.0629130589199006,0.05482260192240595,0.05252114932494239,0.055568721213483906,-0.07193416468898299,-0.020707503985952377,0.037245927864611436,-0.005722585604157837,-0.07778025505707253,0.0014991556281560706,0.040906029961767856,0.019026986869147,0.008917794922265762,-0.016918931535430348,0.01834048501486207,-0.011338725207404504,-0.034619084694986646,-0.03351761911363109,0.014815077845158706,-0.033873969568696316,-0.016762484836175432,-0.02142165829411283,0.01323235754975121,0.04064600860187807,-0.012861729788474177,-0.00547483367513516,0.013382402663009899,0.00013747436528780102,-0.10558961671889028,-0.026658034195865,0.026952464056832184,-0.028309715634245565,-0.0022812283183891967,-0.036808631423375864,0.020850230434767386,0.03128806294843193,-0.042947890939428426,-0.025367042794890667,0.07255600935246453,-0.014390773881486414,-0.011096237589642897,-0.05264731997899454,-0.010959755879915262,-0.07917450076529266,-0.046527134767949695,-0.06769952790590454,-0.0740178485197128,-0.044855194124651124,-0.005612125516665994,0.011877136531967905,-0.09993616875998268,-0.10989836736717862,0.010162633224560267,-0.018954549349759642,-0.04950838314074779,-0.06155624420267339,0.0765901464720554,-0.010896384240113988,-0.05313609670674682,-0.0232871298434666,-0.018667035055970973,-0.011468440981227002,-0.010235377396773276,-0.031058685165409262,-0.016752445457536538,0.0514800879546652,0.02118549182404231,-0.007915474126239625,0.04452317588482923,-0.022359195047713443,-0.08288762785654066,-0.0838085567592795,-0.02360883283770124,-0.15973043167741405,0.05087817797396872,0.014618693195304877,-0.039264062091193985,0.032670481162941654,0.036397887660350445,0.037024721966105845,-0.058288881178570444,0.02885965631724535,-0.07277373923781698,0.012933070892089496,-0.05549355425509395,0.003818103829445862,0.02756344117949655,0.08173267333582135,0.050760312689893124,-0.06049466362795242,0.02882593690386408,0.052054061273408815,0.017753918588754167,-0.010977376578754246,-0.02979780712811116,-0.007786268360120506,0.07272936127532993,-0.1637217132600952,0.005352007054082796,-0.007934848737820273,0.0757030022550989,0.012393490339689301,-0.011153877095956607,-0.029548921309475295,-0.03928113386406128,-0.02348372868507661,-0.0535024562059663,-0.03706270354713747,0.025597774282645487,-0.023935252525879254,-0.008599856812215645,-0.07090797656914269,-0.05022056766877806,-0.09109687108321256,0.0009505877770553759,0.0043962878866231235,0.014603710207483519,0.04840930615538682,-0.03664529475312212,0.047982198056730554,0.047128622122041205,-0.07657306658817208,-0.015087684751090194,0.052720983593462264,0.02895572139674161,-0.05062229010688429,0.0021522637116847044,-0.007939583580739264,-0.09290464627706227,0.022288869443489137,0.041741632576551405,-0.07059658891507117,-0.005765236038775224,-0.0468032083587737,-0.018409418393216977,-0.11906178262756666,-0.05600425245553433,-0.0018380795989393838,-0.11050938287111657,0.013310275553343943,0.01155750131926219,-0.03148235223971238,-0.005250434358040675,0.03582764077429982,0.005831929140889821,-0.04968078426130276,0.03520984877981861,0.11729076018291662,0.033667823188624865,0.10301872894513542,-0.01767931547296507,0.007481469497571288,0.03875171551487145,0.0044216192580781195,-0.02639751802544934,0.01729724189723491,0.013364395299401493,-0.0928110711157502,0.014729624627469344,0.0031743990563135515,-0.09457774585015938,0.009170188858372756,-0.049537454800831625,0.022964258400499208,-0.08370856369434895,-0.01074931448227768,-0.05244237061863828,0.1056948027282522,-0.1028988217675655,0.01963199041942139,0.06933959205483799,0.0005988753869158713,0.09449925670450746,0.02490761992677944,0.005803781419818213,0.031225828337688985,0.01151698020481435,-0.00889211076159618,-0.020890496559175867,-0.11552671132812938,0.027605248827864748,-0.005827756285605755,0.011792810902516387,0.1823864803172892,-0.016071002873126607,0.036019348523625296,0.07079294080338358,0.0441437674324475,0.03214766551154934,-0.016662028046530237,0.048612679765921984,-0.004125396387466482,-0.058549169279118664,0.03676684415657753,-0.02639289798975093,0.07598300568309767,-0.02909821074614364,0.03613250588612148,0.10290531753003211,0.037544373234215146,0.004520628414522783,-0.031382642341918836],[-0.0032893836140789967,-0.01690249235205508,0.03391272119820371,0.03206631957378796,-0.012847831562861236,0.08492938962756796,0.03594099947638583,0.017259316575972433,0.01939588811460507,0.022389704928563976,0.0068889598359497106,-0.044353989577585407,0.12763170448472372,0.001086268542183808,0.06499131042023212,0.02716777567180455,-0.008124760208682887,0.07029198705277462,-0.01237781910767103,0.01792755299483045,-0.007108697742762936,-0.0594604682052587,-0.05588048124000519,0.06586846646988598,-0.05185355815681413,0.04208196772088721,-0.010434641788422475,-0.06310214659544187,-0.029735440960531278,-0.04803302716545496,0.0581581690913146,0.07375444922933926,0.005820580152273312,-0.07936372954187529,-0.014636556540478926,0.022283885157655482,0.052614156737211336,0.021255533340661218,-0.03346888971401116,-0.06511383640842072,0.016761976532604184,-0.06786218326759623,-0.0317072051256332,0.09221043577786134,0.011027919064762389,0.02995924110355864,0.08592716082715483,-0.041277543872235305,-0.06349282857279674,-0.02711235361116764,-0.007045885957086311,-0.009170955138609308,-0.07267343243541131,-0.0006754412710627943,-0.013295768765363246,-0.021278826901347806,0.010131303533115938,-0.017971943268694047,-0.016018089265513437,-0.01755912336993104,0.0713189472510252,-0.04801621903461643,-0.017083491378992097,0.024288561609004673,-0.017047355262664033,0.05910136058393206,0.10593989888430805,0.08279333402111745,-0.16984238584357222,0.05900603574308161,-0.0024767751907960297,0.08565669597687506,0.013647591735977833,0.03547675097621337,-0.0032205038798235057,-0.009777760827599857,0.021613759211553927,-0.017380726415307097,-0.02720893541924552,0.04435217503979508,-0.008211735762282978,-0.026058467988064826,0.12305823406333244,0.05655708997446116,-0.04543214012762654,0.014850040992950547,0.024764001999234446,-0.05763426778630566,-0.008302757836091903,-0.09002962519225441,-0.047637959795280634,0.01470320202790387,-0.05377568715355114,0.014598394627856335,0.05150722608690344,0.02459497113908491,-0.03652179846254078,-0.035939002561682,0.02617147217030306,-0.047093304574864554,-0.03750881303451556,-0.050308108825308236,-0.030709329040929493,-0.024012113937776136,-0.04168517843153921,-0.03558590125126183,-0.00822388378614831,-0.07262251255478124,-0.07534699393942355,0.020071424302403666,0.011456096877129384,0.012996094286597086,0.025755903650951,-0.05263531670683952,-0.036642248454814515,0.05614203070291412,-0.03038363063496126,0.024964104097295745,-0.005414452819636553,-0.03774348753864476,-0.02368849180967454,-0.014331996157900371,-0.009301909665024092,-0.04531077524301984,-0.04476173463365588,-0.06955815950306002,0.0605085906434841,-0.023664767220553447,-0.011699965800565119,-0.0467941088631431,-0.11634149333395595,0.03310252419109472,0.024825095196588588,0.004251377549736163,0.017425711164415308,0.000060316161309346506,0.058143147262641776,0.05861151081743696,-0.031909880982509534,-0.06844377644882013,0.03740025578664441,0.05053595047356506,-0.05633370855794016,0.008151625199058017,-0.026393228753835405,0.03179823540068994,-0.08192999588954072,0.004713144853393055,-0.04897577874117292,-0.00991330622414098,0.014426768199992059,-0.024310635309613103,-0.0049650609488750145,0.006334422222992497,-0.0936851493262329,-0.017169974917727725,-0.04888613146359904,-0.02016507395176673,0.010330988986162727,0.042001411943694465,0.07017192962394743,-0.016184285756262323,0.035330824236360886,0.05216882305047054,0.06430840540912543,0.03347487860195898,-0.020773692309102337,0.026914883383591173,-0.07562948605077506,0.007932023878182069,0.0019408092972636355,0.08479739654993165,-0.1311719002050611,-0.03418531410379881,0.023993473022354012,-0.0229822830480586,0.032852383022296115,0.025780949831111868,-0.008749426121830274,-0.07287828013313799,0.0014522824633390488,0.0005933526418619204,0.03638454198051791,-0.06670518719146872,-0.09492401399569073,0.04826143562490543,-0.023789334291872726,0.009737785551621383,0.02827933134442992,0.03777463953739183,0.06237428166322751,0.06575733959480216,0.13645593122478702,-0.018765676736548175,-0.10364193557372088,-0.06860998547017305,-0.022157487213674273,-0.046476432863877086,0.01583675990413252,0.06537138447268247,-0.03872604404732367,0.024708258676785548,0.016602494385573974,-0.07826864081783079,0.12244335147980183,0.002241246542425312,-0.0504737961802902,0.028895878438752038,-0.06572679900396994,-0.05476341847357051,0.02292038739916057,-0.028068358871077705,-0.0055626947132839475,-0.014205541615317225,0.03557117663227369,-0.09545090903946594,0.02981228737872099,0.03843029611226055,0.006036491893850808,0.014881827726703725,0.050085917317356905,0.09072623710380298,0.057830633220704426,0.019330578563494037,0.04549988430454471,0.13219346007509497,0.036662063703800866,0.009131535282880222,0.020038092194528328,0.03654836596691349,-0.000685120418036538,0.022098062236431272,0.05421517782962915,-0.010857691792956077,0.052082245132525684,-0.09242163910238402,0.06098979226378539,-0.06181660713549171,-0.03659976401969648,-0.01394432595676285,0.0004435992750579018,-0.03464355898650191,0.038195279258831726,0.02980206921030569,-0.05327054798690251,-0.016691271243101408,0.012960327968589237,-0.018890650049409503,0.036141896278723704,-0.013453515746317922,-0.004041035951982181,-0.08809046316686256,0.04141855282049204,0.08547017151323826,-0.011024754009491149,-0.006685157411900071,0.06677299863585708,-0.07353594382046609,-0.00967259173762109,-0.09095231637030113,0.025153901506921338,0.07169068572991094,0.05319041966833971,0.05410199525920463,-0.03469982175821726,-0.06768670808917357,-0.07155034585875893,-0.09415126018727893,0.00853845322435797,-0.0002317826508260192,-0.006016358805594257,-0.052519944619525465,-0.04688720677566812,-0.17554662217080358,0.04747500513100573,0.04642706958032765,0.024495663150473912,-0.0006034254055234097,0.0645541716318776,0.017298512985083316,0.02332948387974754,0.10259344768605377,-0.018530657470416757,0.032086327331865,-0.040817564169222165,-0.03279105873103622,-0.08722231599050999,0.03392250753392714,0.02387856918688729,0.0015962240013784334,-0.0004041738082369532,0.07345401239192566,0.017396403902624487,0.033849082962133265,-0.098684710834875,0.02196415818295809,-0.03759518018623633,-0.04212773191946595,0.03360285105002323,-0.09464126870116582,-0.1074305830079912,-0.019076102339378405,-0.03161812375363832,0.060852457709062974,0.03372656170775894,-0.06125387748002699,-0.07789535435807007,-0.08629978664617093,-0.015253449944452454,-0.022247483889159606,0.03872553112903637,0.016113084275753864,0.011379847338541506,0.06198536545412745,0.034748427933396615,-0.005102118903819726,0.06836405682189849,0.012506827433200751,0.15034326877447193,0.016412512927192216,-0.010429562974809625,0.0743203353653793,0.04927659694081942,-0.0477434937494114,-0.06531128952104208,-0.06955501957314347,-0.08842600721394514,0.004520482646385809,-0.16992624210823723,0.05248639688719922,0.05318714108393205,-0.030930389404700706,0.05786624020651151,-0.12622882579914782,-0.01171512068752611,-0.023156980554789354,0.01632148685088284,-0.0031017303700391218,0.00527699915456585,-0.13012919219989216,0.00538813804178909,-0.007130571197552832,-0.08122866831013482,0.037493186721967824,-0.030064826307667068,0.07577885862333636,-0.03089832085997757,0.024373583821670673,0.0629655180049943,0.032770170381184835,-0.10682966620786229,0.005031491317885857,0.0761268977720489,0.01014131416399263,-0.058961872043117584,0.000023279609179846526,-0.03039292683456723,0.007121364716311486,-0.027124414112931063,-0.012756880287302735,0.09241558770489956,0.067747643874916,-0.018846075156733488,-0.037913240385762055,0.016903969104055745,0.037893647573544444,0.0387954409158315,-0.027681183322887888,-0.05796046144148964,0.06975474096976174,-0.01196038884262729,0.02084016044306269,0.0256239953258439,-0.025924289060655137,0.05979545520601593,-0.06538833540215022,0.05350728941448356,-0.019816585939823734,0.001742366933261202,0.03843544946328893,0.06472984670508829,-0.023338277443870615,0.013607115281326212,0.09272395069526314,-0.08450901171997954,0.06974059585462306,0.01873144728685015,0.015879280214690695,-0.05927943991064779,-0.031565374846244755,-0.03889799447720712,0.05515720528749379,-0.05018828877117387,0.0024321566936723158,-0.04379961150182611,0.0587440412050442,-0.007967095695336008,0.021305254839089648,-0.011128624999078738,-0.031083803571907927,-0.05038974826758693,-0.08522915875556486,-0.015256231677782386,0.1322679253428477,0.012946057805212324,0.07440725440927919,0.09299410231287805,0.07263111559919166,0.03995568522741862,0.006549189110995884,-0.030699486739023247,-0.009552503233985203,0.06611798915079428,0.02808156565585901,0.024725158243323192,0.0016547067068808767,0.009965668936130531,-0.03232635494344817,-0.025444822716948947,0.06580561510273565,-0.01688698628135008,0.037150376106463254,-0.0698394376588924,-0.02042337497623741,-0.10262317402945598,0.005493533165264462,0.032974269065270755,-0.03322019253581542,-0.07210819258730716,0.0014092029309443887,0.006059396149999963,-0.07148473883030576,-0.026950764684283392,0.0873151967366755,0.12568730677617476,-0.011865742045803792,-0.05549704440332325,0.08814426078042893,0.03396131232009487,-0.0655100601108503,-0.132973020884368,-0.030956591395389754,0.08073165578523658,0.005699462979269129,-0.01759462456838743,-0.054006918896608094,0.0043323376989333655,0.06445929656261187,-0.06682465605729053,0.07192290674595465,0.08331434644902844,0.004467697924248503,-0.12472488290294237,-0.02621316624343782,-0.0714949258183767,-0.12211461168337022,-0.040119946059094795,-0.03768725613734024,0.016840320204001526,0.09482168393486369,0.054748421905672015,0.04776991146449947,0.0625417058534568,0.045788738942276454,0.11301126833695072,-0.05873260718822115,-0.10915010976921322,-0.02782339059333721,-0.051554908899915174,-0.0078497790702662,0.00604377932736213,-0.022982976307933722,-0.019142395400398908,-0.04653970538576329,0.11567383025211396,-0.026841510994115296,0.03059491474243582,0.01576061764205161,-0.0029420347347407067,0.08215319163006209,-0.07466887178860498,-0.012223568439398072,-0.06524261645359261,-0.04835495478452995,-0.11072095927430776,0.062176239595341576,-0.0038779907353984244,-0.013949989228582331,0.16684592263435125,0.17331175158612774,0.06848538832463785,0.05262088082957093,0.07363917141649876,-0.05861561811294278,-0.07991615118093606,-0.04151932907637683,-0.04230968377553069,-0.024902716496489327,-0.06312766289824163,-0.030881796486926252,-0.15305218284403982,0.09400244762539034,-0.007683540135699254,0.0141376971878706,0.03296658921725042,-0.013234736919152529,-0.028018989142494337,-0.002674274396094144,0.012763203010920588,-0.09265225229695054,-0.08929125689875793,-0.053978241474116256,-0.07531138225026059,0.053825228978453266,0.13805600098772297,0.06046072021935003,0.15451070522345461,0.19831554046803404,0.0907701759381614,-0.012757088508328277,-0.03441992711820115,-0.11203128569980038,0.08993566333103695,-0.05442837966336833,-0.06373954312246115,-0.06346921156219162,-0.0521093607628944,-0.0407368219210526,0.02817487699761931,-0.11961669510499011,0.01161149711049258,-0.028626173158885607,-0.01567835828477218,0.033730318143581545,-0.015503777318021985,-0.07475327281011293,-0.09106314299819404,0.01950863315249588,-0.015016607384867374,-0.02346589705435547,0.02282032562217365,0.023674381910667106,0.15740060268041567,0.05286789890025941,0.08604036919080241,0.09271074408653654,0.05665678546038516,-0.05984548102278867,-0.06649424818458753,-0.12436699989502953,-0.01548721546824059,-0.05117603325277305,-0.007665817485700361,-0.09599893895282043,0.012752782783036222,-0.07573315254586203,0.023417288483084706,0.0332892393822923,0.1029749507455719,-0.09053378738984567,-0.026297494394510797,0.09519714659149026,-0.04812339951258463,-0.007652549508618348,-0.0888239661240723,-0.08289190662184437,-0.01718159129623506,-0.05238272976514824,0.05114905384023441,0.011804897914269584,0.07020648272006562,0.03449219913644046,0.04294346999048869,0.011482226795180999,0.0445613281083419,-0.031722692366798116,-0.1502615289879814,0.021020951631496903,0.03558885137888939,0.011650676849424054,-0.0071219036487350056,-0.10769617001545569,-0.05753045935173223,0.06124790805687943,0.07650533787368956,0.027343031313929893,0.07840702995249942,-0.1202038201435601,0.050252477993648355,-0.058211112423364936,0.09982906648024434,-0.018224362807988916,0.0024118671355270295,-0.05726228483945972,-0.07311596218123785,-0.07123362166912474,0.0068963231340482805,-0.01568039688578326,0.06409563310998674,0.04790327134146212,0.041057425447257,0.07054830430434623,0.015207240995832707,0.03193514997850408,-0.09845842428326557,0.03001474139387082,0.028474701919678366,-0.055459171540934646,0.07124004353732756,0.08380553826307345,-0.0840629762005449,0.02719520660687615,0.03022519517744448,-0.031315728678042117,-0.011742809546361003,0.01740690651235705,0.10378026270494035,0.014526119045095133,-0.07626651448889035,-0.028066510119536828,-0.040777099547571444,0.03492640294762953,-0.041439197190244206,0.018259843530248104,0.0023192659873658844,0.022800158887406764,0.09561145870276111,-0.04382906338577265,0.0372801241284456,0.11690390687170883,0.007413407752796059,-0.024782896761327496,0.009851499340411084,-0.05166111489241031,-0.01633576581578789,0.011312847230041527,-0.015977786320071522,0.022951642026479396,-0.01142837562848783,-0.02789620400653822,0.08683112884556057,-0.05592900005535853,0.05075308081160622,-0.030052611770814107,0.033867336903071685,0.013424201982015242,0.02875405122132306,0.018734686847626532,-0.08620129909564234,-0.018031036888934204,-0.06943766276209605,0.032744301727401656,-0.04434361735615943,0.11050487224266364,-0.02827382273337114,0.08943555068891751,0.11267869208472742,0.08955596376576277,-0.026574624809131274,0.06957571791734254,-0.12709994974351055,-0.06817642450678314,-0.0004606496805184508,-0.020239575645822506,-0.01123046249578743,-0.06336883005651202,0.03423385493506827,-0.09319413449496781,-0.016203768234728695,-0.04748118718838258,0.054044250290049986,-0.03261676784997202,-0.024485176672118133,-0.05241204305565495,-0.055482626941648586,-0.0447575282925997,0.0852532816097987,0.07129077130644462,-0.09860757864128429,-0.1021345817163995,-0.09829017774551031,-0.008641418544655298,0.052701688860486304,-0.01859612019722633,-0.019552236465133425,0.048197033729356624,-0.0012691462391565805,0.08081489401319249,0.037447564387646265,-0.004138271014242865,-0.09288652997234419,0.058261326192367305,-0.028464126640437157,-0.03903275256594322,-0.06025006850293698,-0.08632554821956848,0.06681885269777382,0.030813463384602665,-0.0652822900389789,0.007138082578994734,-0.03988667307202827,0.031766797051251267,-0.06018300496848909,-0.004526485089762389,-0.05412957091999847,-0.019887979285081948,-0.006416804828441884,0.01627980490709514,0.012142842931547538,0.03250367589999051,-0.031841978535771864,-0.07549815163181729,-0.05634648258710874,-0.0025347838032910813,-0.07500269804722616,-0.03128196859264045,-0.14194057180799213,-0.0010932417498999768,-0.02862980606255291,-0.11746666295100845,-0.019906302463093238,-0.019367359452061274,0.03568332557630824,0.0155832128716111,0.12313631321587167,-0.0028167381236918116,0.01097868442912135,-0.015333368083154107,0.009334292970855595,0.012417248527056628,0.062176241642730674,-0.06805125557793779,0.06429576361294471,-0.040849412276391224,-0.06584201460428603,0.012848205581542862,-0.02740248961190464,0.05544472585969156,0.023475842702951607,0.02968675824600658,0.0184844916889126,-0.060440882897406796,-0.04410069176805554,-0.0703889015764086,-0.013338510322373563,-0.014983504172690378,-0.011970592334430215,0.005830035174434075,-0.014575345111228356,0.02750694561057417,-0.019803208300870123,-0.008992119772972068,0.03698307026996472,0.03821072225857763,-0.014906655818928341,-0.02792820021891366,-0.010073903198970897,-0.07821336469845064,0.11699139642420475,0.05099871472725536,0.061628943433327844,0.05538363902232854,0.007878518312894716,-0.0655637841519949,0.04730896180698893,-0.033297698460181664,0.02254248016331832,-0.11874527169872856,0.040626051402000485,0.07167845619215207,0.0027143037200819775,-0.04340647394484292,-0.023040711737836825,-0.02426007213735237,0.03612050423148566,0.0009424487682792218,0.0049377495065012714,0.022391596140540208,0.0003276291219132067,0.021808053148187713,0.04656480996369381,0.014486554256913758,0.018587444706357675,-0.004095060633478655],[0.030806058762127237,0.02310875657444685,-0.05877458012667259,-0.05091983213412733,-0.049696589456970884,-0.05186518874526417,-0.08607941844819166,-0.012862325425424022,0.10930950723579007,-0.052496262880332996,0.010222301919895892,0.034904862448169184,0.11290889756967201,0.04900428621333246,-0.07429718155045534,-0.03300694241328412,-0.07038182051288462,-0.008023599573172545,0.04325782912369253,0.127752167647251,-0.005468176870945527,-0.0010978356942524074,-0.002198255013630988,0.04600835364352857,0.08409665057499154,-0.029646923051298794,0.059492823778086894,0.01757099678620185,-0.03567843581167055,0.006950254839761835,-0.011320099763350007,-0.004481146187963682,-0.022352141177184568,0.005728207764830431,-0.015450049204174546,0.0024875358269060717,0.015102187667469744,-0.10682088261774508,-0.062118718104351,-0.0030945711784188716,0.04896827108025637,-0.09413324882863582,0.014571911665736039,-0.1072123288673807,-0.059907214995882904,0.025051316972450128,-0.06056062034321147,-0.07517002747182622,0.04044857704327685,-0.014040192351185301,0.02935579694915548,0.009346212345440523,-0.01679450184773781,-0.023605276233981044,0.13125049925487572,-0.08496935851907662,0.023494328987797533,-0.03867498450186668,-0.07458301790339332,0.02136370349259449,-0.024736634459697707,-0.10218242547304822,0.023154091977837687,0.02666817217643167,-0.03700918807670397,0.0050254759072274075,-0.08569296933912009,0.003106249125473476,0.06406212950456834,-0.037981411149530006,-0.0015826145975789275,-0.02250488594130382,0.01958985255994377,0.02873530001604968,0.0027211658191889274,0.0512788896054416,0.033472369594906945,-0.006185608519936531,-0.02390173319062248,-0.10205695475997913,0.04294583700158063,-0.0073812681307278295,0.05219766479132697,-0.04138578020336698,-0.038242655249047776,0.052861747331269096,0.03494885415256513,-0.06470911132181786,0.0352688744728805,-0.04011896528503135,0.023147471781844484,-0.042353560131217854,-0.039003105219359034,0.09846547259231168,0.005686259542620876,0.045844503564965396,-0.016318645161863477,-0.07346772360296558,-0.05713808868506708,0.06583628814219067,-0.033795656760891364,-0.028487083716991518,0.0671172314942799,0.07048532989957085,0.05294746658553739,0.09430907005901784,-0.01536184365634297,-0.05657763112771666,-0.05020166699628172,-0.07359739551760303,-0.1416983035382299,0.03667460442419897,0.034388297897347805,-0.09119164063715968,-0.05994773649992843,0.02699817785958176,-0.02400583372888769,0.00623590075976049,0.02736562447712805,0.06895731776665998,-0.013737482971130716,0.14685952947000835,-0.05479436009338844,0.005556762861040941,0.0018960850407875925,-0.0024011200301645432,-0.08815768827978962,0.05508589827453166,-0.07410459769527089,0.042819720040192584,0.02070223740791014,-0.0037825018553825887,0.0037278281494847413,-0.03382215485908873,-0.0738551136064734,-0.014619054297046543,-0.011729600923426295,-0.002899052021330716,0.0060950359048237875,0.06653062452572434,0.00984536951035619,-0.0848579487082228,0.01715193867091976,0.022935911735536878,0.029771624120358376,0.009449230138797688,-0.08129274989508,0.003908873767157305,0.022884191427725024,0.011205289071433127,0.07004991034479056,0.016131412992509427,0.0040496605827531435,0.028055088774745256,-0.049485455926778825,0.04855947065343303,0.03549732622336566,0.03389652120158289,0.11118997106316483,0.03460074562418586,0.0014477444848661149,0.08896887053561456,-0.04243813401775034,-0.1089549636697801,-0.0016667412101395143,0.054683906751496154,0.051486991060895514,0.047552204200915396,-0.017248147503550366,0.08202495970931185,-0.037355176752235916,0.011064668588331009,-0.1172893860803781,-0.032770536674548205,0.05519072241357794,0.048142234886686126,0.04795041947720384,0.018321496844326667,0.05137493460990384,-0.02198928765671531,-0.12665175002604892,0.03149943222076434,0.05131437823444435,-0.0862135046476992,0.11628798734965146,0.07368089743765933,0.027403630860359508,-0.04428478737890809,-0.01438653732854506,0.03158476781783664,-0.059456730271071706,-0.006911610188462488,0.027028616981581908,0.035956935101916096,0.001685369043845274,-0.08565188006320212,0.013377816933325255,0.055963453778673865,-0.019991396853795012,0.04535964209961875,-0.002175652179976944,0.007818519901234715,0.0638612111804632,-0.03319368217232692,-0.09329296450139422,-0.06316703584484469,-0.07114306081292178,0.08830401506841391,0.05841374608214367,0.0676532474620035,-0.06791667804685124,0.044508130253378235,0.026190356303082925,0.046549246105458165,0.10618804641837105,-0.06547286325030022,0.06559363492429172,0.0524653077937247,-0.0168332085376002,-0.021360754924380197,0.008755430517157046,0.02038509520700052,0.04582234987094823,0.026706925015988283,-0.04612851024643158,-0.011403236220467634,0.013248852964265218,0.05896651507137695,0.0811241842334981,0.01607376810042661,0.0748354947548331,0.03071589453752751,-0.042530888646478505,0.005553686560552755,0.09807784603773562,-0.020264391091786068,-0.007893570837680906,-0.0070198611211191465,-0.03392604954459059,-0.09183342011557623,0.0061485705246221555,-0.13360236723132377,-0.06024940527324565,-0.0185000464969196,-0.030416249789180266,-0.017613980809472674,-0.03180716371372769,-0.03344820033471128,-0.06209266249118276,0.029502570644908556,-0.051019006794693275,0.030136969230380062,0.08964728302218727,0.08695522322254728,0.021968029285837545,0.007061859934213189,0.02297891551346362,0.008867942900290823,-0.02911061185542444,-0.009803285095721653,-0.007752648374906642,-0.02385611953215123,-0.025873693096175057,-0.06398645938928309,-0.006573802630519308,0.01643664988781669,-0.0513879290863409,-0.04934496375390815,-0.11696480387142777,-0.04296328933104806,-0.05926449086015414,-0.07272033836977879,-0.0362253640060237,-0.15374854871928315,-0.015836426145501133,-0.0279812335451505,-0.1614571442787725,-0.043342322930556294,-0.040659331537118676,-0.0899493507650053,-0.007899163483631724,0.014387249282507958,0.01872737298025001,0.0674693882421265,-0.014628868594579118,0.0886409323027541,0.018714359540747245,0.16016890829174052,0.08574928670553994,-0.10104583367668091,-0.0014238781712851286,0.0406907719718327,0.04122490634877352,0.0721543659850502,-0.1304116698495469,0.05008966451230419,-0.06439232641892634,-0.12175765604530538,-0.04194817724214142,-0.1224456537414122,-0.04981291775135371,-0.06968199606657312,0.0122728358998527,-0.03593133847169183,-0.05867659420578035,0.0003634318081150077,0.08795110454521418,-0.0037231423276761666,0.002974665227304395,-0.12872306833781824,0.0006805407657118266,0.035888562397822905,0.0019299949985855966,-0.04474019821200308,0.0067227270095952816,-0.009235414895226326,0.05889515108568148,-0.04143447596467055,0.020834635964716818,-0.00032160972603362904,-0.04362257860009616,-0.05115588592949371,0.09234285150891777,0.15428550119646706,0.013273987248967301,0.0982184667933479,0.1083756912544249,0.01543847134361953,-0.07537811734660085,0.08902038070228724,-0.030374849823840505,-0.03323519170689785,0.0706415392996855,0.028772459479167928,0.06277117325108693,-0.009036698945806998,0.010422737485907546,-0.00632852505826007,0.04264700540206665,0.07197405863667176,0.0259673107535042,0.05446263899791674,0.0020667668003167194,0.03227500572118355,0.06321853189903309,-0.016324846716389323,0.008381735226269671,-0.0037756515139660903,0.076479531917065,0.07359164591236139,-0.024547892008283764,0.050816556139294665,0.047579230872876827,0.0744083946727511,-0.026738517397892365,0.06351300324618879,-0.009100549708105582,0.029367539522975942,0.007520915379327685,-0.022502051540322403,-0.07181627247329293,-0.010617150908464105,-0.01052994625248581,-0.04028017993701922,0.00022103964129117085,-0.057644472148308395,0.009876258697161657,-0.01238679266202724,-0.017857724213377058,0.04416592749807236,0.052501315859591884,-0.0026539561283559407,0.050403972733905206,-0.08508447168550393,0.018313327069416796,0.032656631527094734,0.06831478978385191,0.09987526576562734,0.03624126474882276,0.004876020918711124,0.09522868500459987,-0.0014447523196952745,0.08109616602344237,0.0009625518868316043,-0.01309381101555542,0.01742883012340336,0.025873952466008356,-0.026783273202910334,-0.09053984031541534,0.07536564882821552,0.040027427278686446,-0.038155286118761476,0.00383644576934747,-0.06560228344443166,-0.023394326854067313,-0.05306909570304194,0.003921578077115779,0.008284442673515328,0.09338906556992789,0.05164905344456921,-0.0657375785578349,0.06699733286662397,-0.04173723597492472,-0.020211340659216117,-0.034879492107014395,-0.0375800308042048,0.011250174332466584,-0.03220244644835077,0.0601065437231501,-0.04731556096554768,0.1158769894031337,-0.01620892784270042,0.11110778894748498,0.05937580434445019,0.031121794630806093,0.011361051005453409,-0.015897937019930232,-0.027849231135092106,-0.05780548687302221,0.04000970321260844,-0.019462450575224815,-0.0077460250362347835,0.02576393708325151,-0.0687280880192862,0.06479851539171601,-0.02969593204908632,0.05137085102541839,-0.01950024035107342,0.003268976247338347,-0.079569552665672,-0.03978066191032236,-0.004285197945556024,0.00368795518626499,0.003177748724256602,-0.021212975730662213,-0.004038228240174668,-0.0369289883367978,0.019866848050907344,0.06376597209731104,0.060984842499459624,0.10700081647388467,-0.004601127752449114,0.05521261831719732,0.007597404955822037,0.026597746664855603,-0.08555575992359814,-0.031165225865776067,0.04532983634031488,0.013844847216610097,0.06426232543720663,-0.039180591857004794,0.005682324339495664,-0.14834108930954787,-0.04155902760292766,-0.08770236573595315,0.037156328672076334,-0.11262734577964824,-0.030274107043599563,-0.04183767670480295,-0.130796548862788,-0.0012682827040394842,-0.030341578144162527,-0.05601354205130703,0.004368384175500744,-0.03488113748265079,-0.03875262703938614,0.024062532618583408,0.04441110751684493,-0.012300558561131415,0.03830133337339646,0.11359970655288579,0.12294254326951878,-0.007742518268946164,0.009457050374954108,-0.037104414810871,-0.08660397271890789,-0.008249835154852538,0.14931170327170848,0.07658908973240197,0.09475327333577087,0.02653161406199187,-0.015483530733838605,-0.02630908086991471,0.027056851673632924,-0.017234161276603745,-0.04356883730656274,-0.05133230009872018,-0.11567281470550146,-0.07849533840278819,-0.149918378462242,-0.11585469410053954,-0.044991094583197305,-0.0767434016363734,0.02349210512723981,0.07083873186168238,0.08115978430122357,0.04649351750080669,0.1068800990361953,0.005383790164476097,0.02691796264664509,0.06755794489118067,0.09335098698962181,0.03666063654410419,0.027126143806946935,-0.019996251793941842,0.121607806888623,-0.024138503770110262,-0.028848334609785878,0.02318330654262865,0.04212271795367478,0.1210306225606998,0.01649423869071149,-0.0469195416777581,0.032632402210463665,-0.09922874661929154,0.004520194262083382,-0.0492132259213169,-0.12483962328596342,-0.006180533408500937,-0.09502065892427469,-0.08152261448681135,-0.06960758873088771,0.11310016104609553,-0.009793772271099106,0.013091180941321532,0.08896767680307091,0.06057903418507557,-0.025220842385055318,0.045169684702346974,-0.01994718047101481,-0.04165863936038164,-0.05034441880674851,-0.0005247542703665589,0.07162717536964,-0.000314458711255035,0.019991591949834995,0.07111540398362176,0.02259018888699096,0.000061010174785640436,-0.00839925388770716,0.031047861210845788,0.084464971510407,-0.006044585604902053,0.01759970564112334,0.0019702711968150443,0.01901043963215448,-0.04778575602178931,0.018607955238592336,-0.012641626334969729,-0.052894343227757455,0.028796551089006958,0.0069692409955794815,0.09687309485175778,-0.009078936633884094,0.03492039184553435,-0.02591894745587678,-0.017509026656416023,0.04633727342848612,0.05213669515204581,0.0028408603480295875,-0.09908658516906928,0.012379188784959295,0.05659035014593902,0.07827768523597649,0.13635555595598084,0.04880439688382914,-0.0075892514331766395,0.0109524350716448,-0.06539050579227178,0.02270089497710582,-0.013132755830230047,0.025000654474504076,-0.021189153741711902,-0.059556473868575356,-0.007266267806878367,0.0367642269634485,0.023676456725588334,0.060854840708102445,0.09711235826991316,0.01821244009911768,-0.03450695641270774,-0.004551060409766361,0.0631259639507304,0.07398604099181098,-0.07021324779581482,0.0004775161525250222,0.0005775254319627487,0.02183045344777861,0.05708619409357953,-0.004602935311930752,-0.025355270869792185,0.055675752039345994,-0.002732737190424611,0.10179623439889703,0.0553635803330417,0.05862935996379898,-0.09697903982937288,0.051264561637787094,-0.027456030175411074,0.04012305558524724,0.008815955470966237,0.008209385552519743,0.030887722094771825,-0.02907866486319428,0.036963880003330056,-0.016577311938173956,-0.007205001549735441,-0.06656797756082239,-0.03296103451918825,0.04492119036478445,-0.02298202729400141,-0.018424434825175556,-0.0037793416485072243,0.057052291157726774,0.018344809056904495,0.0043397364746327214,-0.013871414887303408,0.0469558374098793,-0.0764651638534295,0.04714300692986233,0.023467562764810747,-0.09327131961113069,0.02888612458994763,0.06672589919483721,-0.04359388528023161,0.00041202414833517036,-0.005439094265350124,0.014253199880080662,0.11264682701665134,0.09239975838520956,0.11019808406471666,0.13229289012787962,0.09431988797444453,0.04931164639676466,-0.006332585437002958,-0.08501242011672502,-0.04570283086318192,-0.07829651058554013,0.004870689259799963,-0.00862147546692882,-0.07056082113961705,-0.06270402654258277,0.046401263214184904,0.10363299394784654,0.058757031587891445,-0.05706443088838343,0.02859151489191725,-0.03669119355878139,-0.02934801916900215,-0.04023186589702682,-0.05826684991973155,-0.014654620530654904,0.0034891712747711417,0.02505745329876027,-0.006373324359093597,0.04094905315465567,0.06636122592409682,0.10897420830672885,0.03059214904418004,0.00801254000012927,-0.036429380075541855,-0.06120410522849856,-0.06852655908923717,0.0050865322490130545,-0.0164059574883971,0.0011719248616260838,-0.02844911266779016,0.12070566353303909,0.00009715317408063617,0.020804484540830177,-0.00046255445810927453,0.052377709506251126,0.02769008654771015,0.12716628590514006,0.04461066677128755,-0.0016161932361191628,-0.019779624211272138,-0.07629594240904738,0.030511521086820162,0.014654877698764123,0.04682071747940925,0.05313142682061707,0.07808197943026605,0.06503883684665018,-0.03164735736572388,-0.03510409925815386,0.05594441622872614,-0.025121065114401684,0.0026421181826319627,0.035920971674370854,-0.01002874357141819,-0.1007556893009648,-0.04100295222972717,-0.07138253293478304,-0.015497528284659053,-0.004994789283137595,0.05746778454795271,-0.009170608649776982,0.036136201819423994,-0.004608494808628493,0.03781041705803491,-0.07792782768038183,0.09785092186323041,0.002896528882694102,0.09059134792004492,0.029054003041094914,-0.022237377048013093,0.004201657411942494,0.03149339706664832,0.058659726344506974,0.02516777545707137,-0.03888717044102024,0.030415148665944115,-0.08248010185656453,-0.06321305818940544,0.014330100129534324,-0.06824628457729941,0.07342161366106104,0.024029874189669766,-0.0026417191226320107,0.05508433726890337,-0.027380514631283583,-0.04034126581783286,-0.036367395823723225,-0.003762084680365488,0.06331472693968226,0.09747625435640474,0.05301154059463566,0.06312575541937955,0.032990690957630214,-0.009066291008843905,0.016048341277776126,0.04059178560383702,-0.013122195045739814,-0.028079845514142217,0.06129185284870744,0.01474122142950038,-0.02137745211215245,-0.000343818084388075,0.07521612360948388,-0.05774537764298331,-0.007825772627976032,-0.006569115505992136,0.06359172829058181,0.05484200109313958,0.0618129659251547,-0.044778071628587636,-0.014624431632403704,0.022628526865786036,0.14496513503483693,-0.00879425204040858,-0.07609263378411305,0.051000628065690605,-0.06562208361196117,0.004911339493759016,-0.03086676675806223,-0.051930334826550524,-0.006451678407943529,0.038356427262305925,-0.04689646637056959,-0.05456841596176634,-0.10306833116268119,0.006776704930100579,-0.029710874787858537,-0.05740567645282654,-0.009436399032002461,-0.036498158147684055,0.010806288537975677,-0.05662833512881352,0.03466427453573231,0.015892459233430425,0.057349664506319384,-0.09268262166632264,-0.03712027090246884,0.056191740698767846,0.023514706345927068,-0.013538307257257689,-0.003117116038025444,-0.018515607574684526,0.06032865633087702,0.009497675876451324,-0.0004116072782559887,0.0066882504770105575,-0.019783980894934515],[0.07317222161635854,0.005866863658476123,-0.11782226381517315,-0.02768316647386817,-0.06419478400053157,0.05596543372508487,0.01797466992930556,0.04474504917450164,0.037115084724026706,0.07449434131023776,-0.04477903936877531,0.06620529281742024,0.07530128355805886,-0.04163324070652229,-0.031118051885035393,0.021414494791033665,-0.03641310024021188,-0.004006378182254204,0.03773945965316695,0.05926468340073193,-0.10155323154319428,0.040966990980194205,0.05171649838817863,0.012062829871249845,0.052465253230996205,-0.014479252519290692,0.036287614232546804,0.004862518337962757,0.009401133210354273,-0.008290221282358448,-0.017710841347680962,0.019368812683463816,0.07790220537893497,-0.11142037212701031,0.008767035670901861,0.05703559987239848,0.09199525052091545,0.02259935884773027,0.1435461038881523,0.001686101295819196,-0.017088869373956834,-0.1351295760653538,-0.027587746273343813,-0.019632151066304244,-0.024610677022337397,0.11104629146555299,0.033931895206839945,-0.024868623030818538,0.10550164597049835,-0.04077577444359669,-0.019989319269845165,0.024516735204433378,0.045471847875205196,-0.00869886882112931,0.00010742723848311989,-0.07371822869619668,0.05026609135655309,0.07205006175947075,-0.09043530831393494,0.023359105597187263,0.0595317541149514,0.05573961389279024,0.023993754466689974,0.011613483877785623,0.023280556430160967,-0.027674096897321695,-0.03915287943632637,0.021351898224577653,0.010048606804505405,0.04386021730544646,-0.009162288101144694,-0.0317983131276603,-0.06852441953229635,0.052098297158247014,0.07038490860876911,-0.029937352109319124,0.024858038838629682,0.06772671094228364,-0.04792536456133468,0.004644314056461415,0.07923280593787906,-0.04506304935077635,-0.017130307596419637,0.03352379581781377,-0.08397886874212276,0.018649595412137867,-0.038565866560544525,-0.05519751103074445,-0.008791816802329823,0.00562343383994955,-0.023727465642205476,0.023246319548742993,0.016394409431988978,0.03148946565598567,0.030891897327735115,0.078822200731657,-0.00431724469192462,0.016205680262556216,-0.07405990894649588,-0.01139712483905119,-0.005789491213943448,0.04831378437149547,-0.025317489465340404,0.041327585551289826,-0.1132021536361722,0.00022291182833415244,0.03505350097466203,-0.03154728380712419,-0.03671061699239237,0.05501308385720914,-0.019179906543155493,-0.003154036394474919,-0.01914965918245305,-0.012783587860148188,0.09117297174457767,0.011260035020082366,0.010656755738162155,-0.04302248556160624,-0.10901634434147385,-0.01555595897314843,-0.01174695900025555,0.01771123398925454,0.03137486360867131,0.039856637410639516,0.07279868330806144,0.09246740559535878,0.029940435134296305,0.053619467816535024,0.015564021583588682,-0.025789248821029263,-0.0636120489137733,0.10224401979345672,-0.0964867518432933,-0.06148422937959363,-0.051415009081891165,0.052655966643657764,0.022892637942073423,-0.01726126285972489,0.05718735026390991,0.07230115951063668,-0.04952423790513982,-0.02614641895912916,0.003578404478004994,0.1598653349069226,-0.015422729047237961,-0.10803137746746443,-0.04974239187612047,-0.01740933230692392,-0.0725340741512892,0.0013929374347853346,0.017590115235100814,0.05887262114354379,0.030870637743860077,-0.018133708308425377,0.03194235177309696,0.022054179084401555,0.054336247001408,0.03455945053009945,0.03424475808463089,-0.056020052109325376,-0.017512442599358195,0.04238962039413841,-0.0863986232132448,-0.053139441819252085,0.05772434553977995,-0.008246293711588535,0.048603758913504935,-0.021830204469057878,-0.014380927018792579,0.08591610074205654,-0.09329752452013619,-0.039537755250723935,-0.03347997914167141,-0.05906897948013093,-0.046828753926714435,-0.12215572987327401,-0.009655369949427119,0.027715695812273896,-0.03200912904219431,-0.04251110154288031,0.002833751108377461,0.10092795732706976,-0.054213291588853525,-0.0030891094376111878,-0.01113394284923821,0.04730465412692192,0.06230376840138074,0.014640575171645307,0.10050328985960072,-0.012447650508570478,0.024392992093837124,0.021993277732040597,0.02390509057487174,0.14480418494930197,-0.038553837152258,-0.017895469070503746,0.03501314917350055,0.03981611539896483,-0.0106876553751093,0.021290832981861737,0.14666825621871743,-0.020608799839641583,0.004201369735975811,-0.09114093730098839,0.02970599402842687,-0.008870715612948523,-0.01959661233063871,0.06332340390643669,0.094604687000288,0.05223161547217035,0.020895904952236883,0.018020179134289566,0.035958242791585236,0.04023352692675303,0.06876995239454653,-0.1233276122915402,0.05699713511653105,0.029175224275563478,0.009417472910608142,0.03709750754968399,0.010587832363319265,-0.0610434043439803,0.07676131062882134,0.0289979968775713,0.015645353176968923,-0.030328871192974508,0.032685197811326214,-0.026574449246906308,-0.01774619786713061,0.011929302045669245,-0.004378971246616219,0.056172502940418416,0.023912174400738156,-0.029242838328189018,-0.08652855002951217,-0.10598005073106365,-0.004582125619840099,0.04074154876695453,0.03736968559908378,-0.017272240548600853,0.06604387229849491,0.01443290692396576,0.0714165419896071,0.06132682984872154,0.05985496235454979,0.047496788152010624,0.0861986886520043,-0.07665736352299532,0.004444729347119582,0.08955867825198373,-0.07307624453969225,-0.06030616328833277,0.03980817126048701,0.0608311653746937,-0.004435691045188747,0.03102404293248698,-0.006143150312921386,0.014574797850994189,0.0206832511510617,-0.04408115838427081,0.060757213605788264,-0.027476589353570696,0.05078720267718633,0.009854206224224095,0.05168747109288158,-0.013911697450104763,0.003148085062095201,0.022856720681430565,-0.001591649286026934,-0.04766620616561515,0.04844875977297157,0.014388572882666326,-0.01967170409766199,0.015370231615073738,0.02892072535710951,-0.028581328606145047,0.13130682978469616,0.06035438585862689,0.0762834893063269,0.0023027832421099147,-0.02093476991771631,0.061996579355139705,-0.002469205356688363,0.07696050052611995,-0.03243241408038647,-0.025625368063247687,0.012586472344844214,-0.07079387757994328,0.05856533718070135,-0.03997359152531729,-0.014666251602750455,0.032198840691471615,-0.06904069703446496,-0.003091250813117621,-0.029378556586973192,0.04119849990196671,0.004349435651112213,0.10402561316874363,0.034445143015846356,-0.08606358796187079,0.06510167585972071,-0.10720819039975751,-0.01858708429890495,0.006415524321497117,-0.01984492791966275,0.052618444357884965,-0.007617779680031315,-0.03357889257524207,0.0025071519941469392,-0.022461856682875682,-0.16621949925109264,0.0660148429558472,0.037120756561365265,-0.013667845390061184,-0.036046410602510126,-0.019357028681243997,-0.03161579168241108,-0.029564960868596665,-0.06879073525402266,-0.05334705607474082,-0.17722603384757532,-0.0004578106975603434,0.04718218777075532,0.025914835680288444,0.02650056022176698,-0.009680304907047188,0.015053696484494741,0.06273742057064456,0.012154898771264942,0.043353536850179744,0.057782473356483496,-0.06914964702762402,-0.15552918446302838,0.016216639140671042,0.009565454561160707,0.011365411954356624,0.054392281755782736,0.09143559607657174,-0.012658968342309397,0.016073717376978196,-0.06111046580045991,-0.10028451863333154,-0.04284144403636513,-0.061240660374286646,0.008224497380934916,-0.013272665926075093,-0.019888277871988807,-0.13401487516058397,-0.020443486099677725,-0.06715388286324843,-0.005623236242792779,0.013833540776158495,0.0057744958422866685,-0.014234985209341293,0.019864554976831938,-0.016709696810239955,-0.034809619781537966,-0.07513267156813308,0.009734587350808944,-0.03276418001790428,-0.06423989511089256,0.04454955296609302,0.0175030005195601,0.016894246082259905,0.05525524794179198,0.03852052508588599,0.002353480867005009,-0.054027139751630565,0.003074838278153424,-0.07474041605092904,-0.06860568297072915,-0.03020526506227075,-0.17910292977648268,-0.1409076143004203,-0.012502298145644691,-0.11121525453763755,-0.1655813311913243,-0.002001608181729322,-0.03786374238118902,0.01723795304254092,0.046486773003206215,-0.04518825357355744,-0.06031089220681879,0.03218766060095311,-0.026880450033125683,-0.015454167636873496,-0.014769478079521508,0.011753197481511301,-0.015933043371526463,0.0329320186973119,-0.02188897739463602,-0.004387321142010453,-0.028066032324378883,-0.04655456758555819,0.004310258760000283,-0.005483993791481393,0.016790319115763962,0.027089013194693052,-0.07863209177833327,-0.0717117946438546,-0.0869100913776382,-0.09147529170143431,-0.019881938840394322,-0.020468753235739982,-0.0030704327160985,0.11757545301333854,0.010380497621394523,0.06073412829353174,0.029511605004730202,-0.018389456333394876,0.02796662936461748,-0.04229830648576648,0.024871701150997298,-0.0760172774529407,0.016610742107478826,0.04279764919416153,0.012140295469278327,-0.004775196157713809,-0.06698535558857557,-0.043568676050205646,-0.013981206570681935,-0.030531755295438622,-0.014571697788419779,-0.06135065167095645,-0.02667464965192913,-0.013514106490496046,-0.03757223994572911,0.009724708736216572,-0.041531842615157806,-0.0002847811291130997,-0.03405820837024916,0.06806872262903295,0.007839577317413733,0.024307817130945368,0.03718047660337721,-0.08951106562745519,0.031310446300150056,-0.08176790266720059,0.011164139491300861,-0.14806202065132168,-0.022556044438133055,-0.05560507762080072,0.010652956637791597,0.002477713351792074,-0.014469993383938414,0.017943407607146706,0.00713756725271326,0.05648176775822341,-0.0005245364797276673,-0.048888511259633935,0.012707346103633665,0.04578543720952019,0.04328394994984988,0.031980643504254246,-0.034825849593041525,0.0476853910951592,-0.02096032955395701,0.04608339287588503,-0.030850744397594033,0.05390120137588483,0.06918969769462788,0.14588738329269665,-0.007223846080690762,0.043247610791742566,-0.053995543090519495,-0.0012758573243795666,0.04034252972206498,-0.047935867337040826,0.006042057172279747,-0.04522963204808587,-0.05908251143995399,0.001223008448715318,-0.00391838633894923,-0.03404990396599325,0.00020337446098737984,0.004750316558489357,-0.004974784460885827,0.06441392920790491,-0.0635133641517193,-0.048058231977671846,-0.051095154914373275,-0.03645768449895159,0.11024719560580608,-0.003030684984167753,0.06335581873683419,0.022530208864501435,-0.05013592812237399,0.06686275014621472,0.09359539203203183,0.047321740148544206,0.14243380948966244,0.012776505301848746,-0.03284579425846777,0.03339209049348216,-0.006500599639415955,-0.03634534573954683,0.011848785914558178,-0.04681218803213817,-0.0731090467284121,0.071972131605249,0.004562019854198194,0.07751624665726921,0.06396275570306095,0.112540509703962,-0.04467811636230627,-0.04246493412454241,0.014092079624831373,0.09399311325298766,0.013216212489938461,0.0385935282598361,0.027450328320549677,0.004530653623180955,0.026957115540553127,0.08822104298525248,-0.0048720300054123375,-0.011483931233333333,-0.006164531117052503,0.05076984282133322,0.023833438584851284,-0.012513961085827262,0.06546183864312669,0.0945888600226307,0.00407449791204415,0.07101686829052221,0.03669403520293901,0.004437349452292556,-0.007260721171380954,-0.022252680259065686,-0.0980085133345532,0.13633712227777514,0.006713168200993381,-0.03135533984693679,0.06353064664502221,0.059832368566322014,-0.021060132717560093,-0.009538680889559472,0.03228739151001649,-0.034272135933415215,0.07199696740543121,0.005848984198347837,0.0011547993439156817,-0.011857605171540804,0.0036759780087616827,-0.0232079223862181,-0.03676403486547087,0.040343037937442094,-0.015452542437262028,0.023114915736738552,0.06870492929255158,0.03519931664082395,-0.004762207525510096,0.04277068960573111,-0.007830851817809013,0.032245936534189355,-0.012135333146969572,0.07566976846158321,0.013973159755270153,-0.08100580224638923,-0.07090250820543322,-0.04559409131036771,-0.015237263491037654,-0.003977926152267428,0.011684494883348332,0.010530118149175096,-0.04850389534707129,-0.012943760875167994,-0.008966530937277345,0.02515147695990534,0.024142109579419823,0.05053451855479278,0.09300246030790739,0.038561650716694144,0.05760380940239807,-0.08445226676410215,-0.02227696637502035,-0.008308824408274856,0.062223200020101614,0.03547772652477862,0.10555509127563269,0.0020589558718232008,0.02564979298996748,-0.06352141642504883,0.11879916890683345,-0.025556041456705047,0.07964865896576939,0.0642868522907503,-0.0023667236665129623,0.009222454530414892,-0.00780510552259996,-0.007988077021922821,-0.039936130533741246,0.05735165067068815,-0.07536779834832368,0.07768178990571134,-0.004840104968517332,0.03301325311839237,0.10376942068697,0.011410260489157054,0.04050552668463184,-0.07590847201345356,-0.04287119432267836,0.045875728333019915,0.09494874105579254,-0.03323469312857223,-0.028301755341664025,-0.012230762755200693,0.0553501631037628,-0.023515173875805085,0.11328716494453427,0.013669634628649783,0.016143387145379273,0.057180921271246944,0.09357284165201447,-0.05164419744961767,0.003775134443216077,-0.02177728940346224,0.06864438973782322,0.08017005840758937,0.006467730436520399,0.0809688329742549,0.027072726964765006,0.003910550822547124,0.05094524043791273,0.06712026923884973,0.07811621979501976,-0.003839936720988765,-0.019259309551741294,-0.0576633690005679,0.07230654337134393,-0.02167004900285146,-0.020376779927548768,0.029589145389706566,-0.00918368685035801,0.018645702134824586,-0.04357020551882243,-0.016627068017753682,-0.03558693486472379,-0.03686452444286,0.07701246777002398,-0.006457271098811484,0.0030370815139942192,-0.030269145855557778,0.052363564308362205,0.10922613573267781,0.018299308489447236,0.00317541931476748,0.03974414588172519,-0.002954606352716516,0.010448310830235279,0.05060970341156106,0.04079547610094846,-0.024741291970487862,-0.05550760492078479,0.035177679779496256,-0.0996754789627855,-0.1052743122492501,-0.045553040876447355,-0.06291481319691358,-0.0543202245095939,-0.04694114345970157,-0.02034185526568315,0.053535471436854505,-0.025651177031593666,-0.13002542095312625,0.03261863616814295,-0.036493742376670774,0.010904213223229061,-0.04661378343565946,0.032839418777298714,-0.05724933029135731,-0.03696622424465255,0.04982159301946746,0.049098289523397357,-0.007534595576969016,-0.06582345529290652,0.10806533902301535,-0.009744608555003009,0.09968021210312844,-0.060913350607719914,0.016980837802836816,-0.054413713936011,-0.032112978202360795,-0.012810508940942314,0.02318056964260313,-0.024937654807782397,0.026317360553381942,0.01093696088339467,-0.07979622412050281,0.000531121154877479,-0.030303822638380305,0.010203820835829932,0.02350701851489749,0.014827011929576927,-0.009447924585255398,-0.018305184202640528,-0.0735468044822321,-0.03809289571706882,-0.033151932084839984,0.024006769340806165,0.0313762316817037,-0.010799780712042892,0.005181142878274098,0.07518593087760882,-0.039483617040148064,-0.005583645294887313,0.034205716068134724,-0.07760440809171877,0.057948808732468986,-0.018269360001160716,0.005854814297654242,0.01518326674107293,-0.03648874496147698,-0.12688436895784524,-0.019514098236182366,-0.05232088482837141,-0.029130629961412885,0.04440057272977445,0.06188332288655218,-0.03307186820849282,-0.0015415310922950907,-0.02510795179390569,0.01149495451879113,-0.008228918716533518,0.0007010185228011398,-0.04712840423308075,-0.08549819080075159,-0.060011390122103256,0.008752653280446639,-0.054331170361238794,-0.14965639336627887,0.06820851125213176,-0.048433336672027795,0.003938192942181412,-0.0477263260492087,-0.08238068885042422,-0.024421408012082344,-0.118630729504712,0.023730416560914912,0.015587983343547341,0.03884861748726511,-0.06997058801781278,0.0019656931463783024,-0.007914179015248445,0.0041157670872305095,0.0043620879770585085,-0.0037781740905498706,-0.07391857992854067,0.04137333552051386,-0.0055955754189357205,0.05569213185895438,0.03295213470378928,0.019440268143173196,-0.036266712337524765,0.040789101182675834,0.026510962375755537,-0.010078241910770759,-0.007264183879350984,0.12235528678268197,0.045067302668019206,0.03542054455735509,-0.02174188744383369,0.01835610513808179,0.022250391331028328,-0.04282881701825207,-0.04084062607932601,-0.06222305281135825,0.010130965083867809,0.11120344282722829,-0.024957232221997312,-0.044069891928325784,-0.04799384829349621,-0.030301267643482344,-0.15203277270704568,0.0228638499540698,-0.060516362603320495,0.1349523726105471,0.05019172833663578,-0.012348191183286006,-0.01714752137460395,-0.00825079547757359,-0.07660640869035543,-0.003611535379740423,-0.12090176482034697,-0.003939871038539941],[0.02260908690239946,-0.00857459627504737,-0.018586996317290553,0.07056759590642472,-0.08703852609081651,0.007840383027095558,-0.04701734436923437,-0.06827607814156743,0.0564834882600903,0.08371026373345779,-0.07563247952421201,-0.001666395820627517,-0.0408212998703564,-0.09086631746006561,0.06843402537800225,-0.008767690910314114,0.05066170518807014,0.012951892661494914,-0.02231002212167797,0.04617097584752983,0.03230295650059942,-0.025213108864808674,-0.030668702739057543,0.019519056883672337,-0.027920720057041343,-0.03706956340341709,-0.011795283871483616,0.006929178273442881,0.021444016081262646,-0.006694248452532707,-0.04888673963658863,-0.048935620812906415,-0.09047817027529383,0.0060923558832641595,-0.05625418212458588,0.0014778039705565225,-0.018492772755864445,-0.010082229932709661,0.028115155214754526,0.0176256200030772,-0.02143135551679694,0.09870910396609889,-0.08011717457225477,-0.024323008973951316,-0.03173059009560686,0.00033420268569649874,-0.03625727108119054,-0.03918920587019671,0.020234432285450864,0.0033734683927710203,-0.024932549497187692,-0.022958391070834364,0.04746074503186535,0.07287984735502541,-0.08615328824220624,0.014146569978695353,-0.07160721056565224,-0.01942680048182172,0.03560268902180497,0.03785358520538428,0.056030104577047456,0.14211051639423955,-0.06329814471409527,-0.01435629106911278,0.02808606774347305,0.028264242537298256,0.031792643730510356,0.03044347072636984,0.028595583837456834,-0.034425059168129456,-0.023325078612654742,0.019607647552157225,-0.061855595982701295,0.0960041513539521,-0.04793319921256373,-0.040850554886987196,-0.1013596330328368,0.017639569855323937,-0.01121983286809131,-0.12415447991483254,-0.06468443369419061,-0.0038288267572709873,-0.01796487450711401,0.026340887118714667,-0.048563659256799514,0.03724046466416933,-0.019538376548628108,-0.01864347204471624,0.09458279369466059,-0.038237526507550246,-0.014230124837603577,-0.028796434244299767,0.024138793478015196,-0.07911992523913708,0.007023223513187633,-0.002511373035862224,-0.05967633090030365,-0.04292672403323394,0.020302524982095477,-0.08288340491613337,0.019596175855873647,-0.10398467492544584,0.032674810295922854,-0.02822439884439603,-0.10337847355194318,0.0998687398834938,0.02117187564293338,0.054824762823954015,-0.08312665948399303,0.026796137083269594,-0.07101251649496607,0.12134002546192059,-0.008615406868134931,0.021826969469868732,-0.020254766445791605,-0.06297974394288032,-0.007656389432293558,0.03967081089550792,-0.0008760898773433323,-0.04145349184309658,-0.003482186662907269,0.005936062840629893,-0.002805339873974554,0.013929945653618655,0.05822665374995159,0.09824168334237592,0.012596499821021928,-0.00026013171711108957,0.045370780470184634,-0.06074695072867832,-0.03669434453709439,0.12176726721432699,0.06779658507417562,0.058479020313455886,-0.014103632084154851,0.06228589757352469,-0.03672266380600917,0.0018705707370782353,0.07139740314331493,0.02279008101461054,-0.03846854713047042,0.0496980341646786,0.009852120133611298,0.03448830364214374,0.0904287382175399,0.07529318441266876,-0.05185973032878404,-0.10088664387159013,0.018318639760720633,0.04036933644904662,0.05840092279575462,0.013855723690809167,-0.020837092826223185,0.008989303456973904,0.021964494556655962,0.020810601048173973,0.061414760482509545,-0.01645099034245083,-0.006239821179337557,-0.0068009130057452285,-0.012633714084312235,0.06253512333485214,-0.02669572577608152,0.009721226450763992,-0.051156479013393916,0.016926388037293245,0.06426414386947756,0.003977495590415679,0.03188039331802944,0.031040198573672458,0.03400274630453178,-0.060238178018823876,0.03181581014707864,0.011432642488216025,-0.06487270651129111,0.03393218194297219,-0.08322481745618011,-0.003227936837306974,0.004576175620836323,0.04830936821928564,-0.0392470353519878,0.018558201918736857,0.04664787219451478,0.07686334390209484,0.0503089787629102,-0.05413096649115704,0.06052342762684976,-0.03552461280837937,0.024787584001448027,0.05781955241169027,-0.009467339200796437,0.08358880432404875,-0.03968080605865732,-0.039713846898769375,0.11882351035158784,-0.05014513545659438,-0.037389730808415955,0.029262132504201534,0.040160546063961404,0.005428292764270205,-0.06971907351239261,-0.04575557123517586,-0.019184287384774568,0.06729946010627591,-0.021897867109648687,-0.029590091622260745,-0.049250136312782807,0.03987965947428307,0.0706208824822135,-0.047439730225018795,0.03274271313325679,0.0732651298571075,0.08009814189636184,-0.010379101347871894,0.04623815927044847,0.023301282211432878,0.011740879163557186,0.0031916776014260955,-0.02426229472705579,-0.06076535645687171,-0.04057225899593093,-0.08480452492889382,-0.04720094256524959,-0.010639796912306718,0.012515810266341939,0.009133634412060793,-0.08495988129446133,-0.0515245094520016,0.003333212987293962,-0.005118936351503488,-0.058006964853606596,0.005414375665984308,0.026768125398582473,0.0363426264522468,-0.006621437837164376,-0.043842822566357444,-0.0737469095209004,-0.014576597344767394,-0.04464283626817441,0.0022245496218412453,0.03274501670428645,-0.06571201047643535,-0.010370480133164507,0.0015948640584702418,0.059810015123344426,-0.03524707324756937,-0.015873929465776943,0.05570234638091005,-0.020472809988529767,-0.027881955504732974,-0.05892425792340723,0.08281938737539928,0.056629132545649434,-0.06779105551712815,-0.03523522019988134,-0.028410595721133247,-0.0410631311815455,-0.011708472583025578,0.03546125796276246,0.043060098493759,-0.04169205178160774,-0.02800781725597467,-0.004910182511329717,-0.12615490474052776,0.00035177978346495365,-0.0922884970033663,-0.04800031823836993,-0.05990220287909586,-0.0012253299119937406,-0.08481805764753345,-0.15581801674418036,-0.06357395499107021,-0.02796475908258899,-0.0364417756616809,0.03125963799802257,0.0842800519375588,0.003397741431042885,0.008961417961858838,-0.0263370242068883,0.005590752542913773,0.0016156708200993181,-0.005306284735151431,-0.019900262452059926,-0.08053492620749177,0.07872040897505074,-0.015982635986328975,0.037661259802354984,0.005329217639533156,0.005882589909532202,0.044018669471209027,0.0613042571653069,-0.011413823908319057,0.078205389502676,0.027768360532953704,-0.0983110818570506,-0.026617663428423165,-0.02468449174910763,-0.06002321511194594,-0.011102213129580036,-0.08147866421917811,-0.0394304595908468,-0.01686470609212517,-0.001258972595617033,-0.04259063351783635,0.0230632260743808,0.055597074309474824,0.030924534579077245,-0.03830852672605369,0.00017034668112982053,-0.03688800244065237,-0.010965901848473916,-0.050399796604874765,-0.02559936809399395,0.008056769623640152,0.021329422894184397,-0.09302129594575718,0.0008766972556650995,-0.007781209543600813,-0.04244313286666774,-0.02186632999990586,0.06412194713457547,-0.03582114006423952,-0.022221759652480973,-0.037668727527728166,0.02538004107066488,0.008076247519274,0.005295515828258246,-0.10406543111115996,-0.08546643775697339,-0.014896823361710988,-0.10419479754811137,0.10014585193478248,-0.06168892883202851,0.032826687787722846,-0.028397022952684123,-0.020403645321511208,-0.05636424190936894,-0.03582058855915071,0.00017243232580256562,0.03346316617863052,-0.05116345699879808,-0.016691458547819,-0.0021105587227880605,-0.016131023695111258,-0.006465262561448399,-0.01375376467538151,-0.08918058748775626,-0.06785018268962228,0.031032740105449295,0.0731136376566215,0.08363270646637154,0.04761681833154098,0.02284403460680493,0.046254592535199056,-0.01881547633833552,0.019287801760503803,-0.007123482037628614,-0.036009157358378195,-0.06303983884733518,-0.04948453593852252,0.009594265711700347,0.019312705607757528,0.05925305673504559,0.054372519934541584,0.08345400131861348,-0.027159687115245135,-0.09010399420422742,-0.007648933445242731,0.06489221385158213,-0.020919636464633344,0.006676026476489014,-0.02769139557718948,0.010205929283382265,0.010554768042774281,0.08299929375875366,0.08630072969090184,0.053682032280268056,0.009224335528167966,0.014874935097674952,0.028256726154452246,0.06894846770548556,0.01959730468780109,-0.009125312714698719,-0.09443294780964326,0.008649640733105325,-0.0654827240183467,0.05450412688144431,-0.015531476688956295,0.12596620410136822,-0.05896348133281921,0.07109410323812115,-0.13251600121557836,-0.06862787027230004,0.0294936555206754,0.01631866796716221,-0.027440244747300464,0.01893329879678237,-0.09360282173261274,0.036433673294751785,0.01997500701598727,-0.04368637247455216,-0.04642761465602954,0.020462927741059515,-0.07551216786957152,0.0010910953638708627,-0.07108118946351745,-0.006641780060196872,-0.029364632163096042,-0.026615613045080557,0.075720386851936,0.0685911032512808,-0.009468604871158762,0.012014582246786042,-0.019459359985675537,-0.001310522968969106,-0.035553146972182356,0.04385067517936621,-0.02687009231510896,-0.029788360205397497,0.06867046394470988,0.05517016062311011,0.03799310065325448,-0.11063361544415849,0.037617782410776256,-0.06529594465385165,0.010461105370942438,-0.08675423822713389,-0.03312106287690244,-0.10453179134177494,-0.03530718649655703,-0.05694548976401682,0.08141221452361776,-0.04439051872607213,-0.024988625470626427,-0.02826024854777482,-0.08444370973107217,-0.022643351673943383,-0.04165714497551017,0.011908817445002898,-0.09610306540714444,-0.012850558491257512,-0.03213291113715669,0.04251868139160626,-0.09456466655372801,0.08233592346689377,0.013109154447891352,-0.056367038009064535,-0.010124612605836369,0.008862901022228638,-0.09083732821497545,0.022856213145728867,-0.06894563625180443,0.008228967607926635,-0.049810614371861066,0.06330373297526246,-0.07539774124329604,0.0075086113737873736,0.005515238975441716,-0.03393813769318078,-0.024288514221248773,-0.03152491689148037,-0.12948749511873478,-0.003672828669039618,-0.09413525139484477,0.008004229837893291,0.06503378717361948,0.05019551306437009,-0.04856290655310976,-0.004793806191670218,0.002159820868728932,-0.0683589978076375,0.07389188676308803,0.02826104993269576,0.11249190522681057,-0.12549624484979072,0.02568180103290602,-0.13103260762135582,-0.0037862739641394577,0.025608767800070056,0.061029227749213245,0.037386772383901444,0.026449776532445925,-0.09384386261786896,-0.04458401958054911,0.06776100818185296,-0.1180289717312045,-0.0012537350369369062,-0.003998220938873619,-0.01777746229979213,0.11062614162188078,-0.022181834770956966,-0.036302940923874275,-0.02519455477266304,0.011601147846785903,-0.11653787687373324,0.05737438110972083,0.004001975052688241,-0.007467350841155317,-0.06565085280175925,-0.015521206491338506,-0.011435949405234153,0.11276350537966966,-0.017381898453166834,-0.012349321103066172,0.0066978457202355865,-0.03988196142966832,-0.02760322820847398,0.020132823159610024,0.05608570231109827,-0.11713477034019734,-0.0977841892776325,0.01027026552283552,-0.0195407177184829,0.005778690490010751,0.007179780994526224,-0.010636921626088714,-0.037115199765861494,-0.016482024091335444,0.036701182404224875,0.11068852315766176,0.013579518756632778,-0.05211914482458735,-0.042364719253612244,-0.06765622536717843,-0.040649927234811534,0.055478177083895686,0.09932208618598369,0.025396196796380412,0.04707646403169861,-0.021069479743520594,0.04207224693380731,0.05618307192793656,0.10509690957360594,0.049345324228374544,-0.021709634227917638,0.07872043427169281,-0.0053225971057851915,-0.04997869403414364,-0.07360579634000239,-0.03925427258555029,-0.04310301698478986,-0.021356068329430742,0.004549197316256574,0.019777733446839696,0.09304447683235757,0.0034412155969527443,-0.07679046665398752,0.11645980947792696,0.049467048302752524,-0.06585989533767231,0.07126987541023277,-0.024824764808126402,-0.05348150480167148,-0.09395629969097759,0.041768325542853015,0.021002277968623775,0.02126079133232289,-0.007904983335276089,-0.017739456921347072,-0.03416591802517338,-0.045530286378398586,0.07142585509868504,-0.022408663898042656,0.0036707847817302386,-0.0505177085581907,0.035888619170241685,0.069227088179694,0.0563060909327734,0.0179556041296091,-0.007329318637844474,0.09503117632960731,0.1023531130458136,0.060366682819926375,0.04077591290413594,-0.02579375923746884,-0.055625555815327604,-0.02879936862268405,0.016984050930330754,0.0033113540154324937,0.047041919719697234,-0.026786965732736995,-0.027951988782641036,0.00745761925477522,0.016197380440466765,-0.03041575264589553,-0.055144560144716186,0.11257255790542005,0.08263418675011179,-0.06941699613845295,-0.03115449808087258,0.019888253803095154,0.049460182588232975,-0.04467046432166495,-0.010690076065163218,0.07012464198152475,0.07341806115278154,0.0009101311872363029,0.029657522586536107,-0.021697121368920526,0.09094479597667543,0.003920752987064436,0.049326500927520514,0.0701151814394237,-0.02996321334337658,0.0724327239561944,-0.038401864148361435,-0.01577255758008063,-0.09431615164495065,0.008380682001334515,0.0433755341936314,0.03318435062706717,0.0036070507956665557,0.03521759891785334,0.04767446959721753,-0.004058023873656554,0.040811514239313784,-0.044471995883745924,-0.03277985696006333,-0.03566189467635829,0.04608690677839711,-0.009642722138286486,-0.059403429788482474,0.0499032116919493,0.02503938710027007,-0.012155365154109036,0.10599421465305166,0.06574863810488173,0.013568054770955162,0.0021043442058548364,0.06886942403045472,0.06779770940827481,0.02481682784228773,-0.045418151742835554,-0.042705858277720596,0.05130583641625073,0.04185947196816714,-0.01773069277241198,0.041806840381141096,-0.0217270447175144,-0.018787540101762208,0.03495171213881369,-0.01892300936567391,0.011986273846900347,0.03112552343294239,0.026265998741458674,0.020177842744868234,-0.005291189545012413,-0.03408512148634007,-0.03113835686742013,-0.021687460406443523,0.0326109163789981,0.04804423727276778,0.07471940920621727,0.03344697352472112,0.04019164010114864,-0.014147539046208267,-0.03583328351064971,-0.028384355564608693,0.00018924191820186698,-0.06388241203608483,0.08467637391352732,-0.0032500573321877055,0.03570332373771283,-0.030730487178440985,0.038870219921060566,0.08874893042805722,0.004845631540611548,0.07219111316570444,0.03374480597793316,-0.02625466131727422,0.0123560172958799,0.018089577192612633,0.008901123624506478,0.013556337596858824,-0.01251572188168075,-0.004104456841212024,0.025865458509359233,-0.0061550248061580295,0.054733812485311985,-0.003953128258819201,0.00413287029856571,0.015897919751415877,-0.039075870664223314,-0.02802197544017396,0.061781740187408986,-0.04019128068531525,-0.03564023470764703,0.033768776812662105,0.04638609672626515,-0.015054466895099405,0.030468505803876937,-0.0042693193341940576,-0.016343909783525075,0.01637909729986036,0.0014242352544349308,0.02479211445866818,0.0209590510950237,0.053421194836880494,-0.007819034003743662,-0.022939068939414265,-0.015750114942179396,0.043836792632139715,0.1293202749239191,0.050415855139788725,-0.032534052058536767,-0.026463675231376844,-0.0061797898049846655,0.004400041717049087,0.05608505754803064,0.00023456699607091766,0.004493059857193575,0.003409145100236805,0.05651642269738791,-0.0017002846528685557,0.02235212010240971,-0.03526175084750959,0.05677487479654662,0.054111805180183006,-0.036450700574697494,-0.021999499719861593,0.034136762334947265,-0.01860283138357844,-0.026306653556328653,0.032114253426246096,-0.015060177035980683,-0.0326223430234652,-0.07294037593630365,-0.03956601999365343,0.013136689339354976,-0.03360785821610764,-0.071518746201755,-0.008741961771065966,-0.023963657038471243,0.04932993412277796,-0.03810531279381276,-0.011009197568343397,0.019138668772814307,-0.012628983930833315,-0.04128705370460376,0.07106051907927748,0.03157539728614628,-0.06601163341436662,0.00009530158505448759,0.026516809639926142,0.10466715457573979,-0.014910119283927777,-0.019372476086277894,0.0018071756249769034,0.061561438863948915,0.012249622454219964,0.03544145001713441,-0.04309718355911721,0.06925235554371519,-0.040020293016004745,0.0866478302558524,0.03215759501879023,-0.09662503894282319,0.041442102289173006,-0.06947956250609481,0.0007919070027421445,0.04040919440309651,0.04268371050166051,0.04826360336185146,0.04449344679246726,-0.0137097950107667,-0.04052757794631796,-0.05469051784427962,-0.07192554979882979,0.058907328698414245,0.05292397122796158,-0.003601726449660339,0.00406586468888438,0.0015730512281691674,0.07818021461308738,0.051740706470034405,0.06848884876839338,-0.048891404530215864,0.01828002673317534,0.030634347278627867,0.0370031558918539,-0.0516540951592626,0.07241636030865285,0.02493804069095163,0.06293198114194933],[-0.03615763568265807,0.032437954774126566,0.043417745119500945,0.00325470423582319,-0.035368003996159525,0.009666421657983282,-0.0994844796455536,-0.060190032030411775,0.02809294863488898,0.027307227332638392,-0.04080858179090157,0.03979084782618033,0.05008621860681989,0.09411212476625536,-0.019356487539526523,-0.11375815044483517,0.06802412173249146,-0.0470692210436348,0.004529115435399451,0.01360539598428306,-0.003610216408848036,-0.0516856736526984,0.0034488734224015012,-0.061722941507543816,-0.09127869456665791,-0.004866479736235445,-0.09187043080277067,-0.022236923757844144,-0.0068782959879085,0.017919276353826178,0.041477209301095094,-0.04089167066823653,-0.024375264588242095,0.0025163707157770466,0.03222170790808954,0.053243821147433514,-0.014368989478046799,0.015419638039300458,0.02751852557848893,0.016860176192982926,0.03968438773486634,-0.007140992512261189,0.09625274232576954,0.08693624077362297,0.05547556449950313,-0.0026138407293988266,-0.05575440413821635,-0.009398556867155315,-0.03776394610612485,0.017690419746284672,0.0761140847054795,-0.04184527389183398,0.058974501398997514,-0.11139150514191577,0.09345800121076436,-0.04341371319990793,-0.04775967417482219,0.08177867316790502,-0.01749597317177991,-0.033156922240810224,0.0076334379790589536,-0.06748041067872625,-0.020070587042088348,0.04008708461777336,0.00021949455785977425,-0.07375299027291868,0.026081873913862155,-0.07318166019417699,0.07115704530715403,-0.08003874975983191,0.0036259668076758077,0.02968585129591836,0.03147310996719633,-0.03381491766672415,-0.119511142406342,0.04238850164525526,-0.04729222036000613,0.008126443680310824,-0.026994335648824447,-0.07311289103383342,0.026373788370070258,-0.007020881233324718,0.061201311498658,-0.07219474262925482,-0.06061819524081787,0.02263671847210595,-0.03905521150704471,-0.10642190563702188,-0.08425729606707229,0.0023787941071040978,0.01337297435706797,-0.005833249351821477,-0.08165017170489189,0.08147497994612166,0.04737158252465225,-0.008017281051090586,0.021344097993682393,-0.04262743783321671,-0.04424066964829131,0.006185395108634245,0.00454733617914971,-0.04798919969806447,-0.012005555942831302,0.03610616062373719,0.013275932432081276,-0.05701676847557623,0.025395781987901312,0.013038063106003112,-0.09929633408933322,-0.007661339506405344,-0.05184133959151251,0.01390567293154032,-0.047540832923247456,0.06995158812839124,0.01921972791149432,0.06661114137754381,-0.04023545480580493,-0.006528886891503668,-0.040954445594981945,-0.044358797616846045,-0.005187378782777282,-0.004256492789109692,0.020862094927006383,0.0923327750767122,-0.08925982936871231,0.05776105869120259,0.00888954165227684,-0.05568220474821266,-0.0001512138336860609,-0.039779765916485764,0.010219776254851865,-0.060506983856404725,-0.09499096716455203,-0.10990556589007947,-0.031819484016999175,0.13339430579898875,0.009651824151678264,-0.0241151784245371,0.06128418016287386,0.04756504430200584,0.020142451382745185,0.0809836281314832,0.033452652995179535,0.017968320874971633,0.003404822847090212,-0.1007976021837026,-0.01805364902439435,0.06044482537832993,0.0033112248383177145,-0.0222110980204189,0.0008324646362800995,-0.03398635394795728,0.00568867867522631,0.06586511122928489,0.014291877422900112,0.08870996661976485,0.0015616901057824608,-0.016026250361300766,0.07788708997518927,-0.013867085888539764,-0.03367919271039543,0.08096422416303198,-0.046978372807105206,-0.033061929512691116,-0.08612569834577283,0.03346328622911405,-0.021930946103973233,-0.03746552230556029,-0.016238047972517877,-0.001546926648516143,-0.0772659400050337,-0.03390125218536303,-0.008942045571388262,0.00032945521787975155,-0.0872696875772881,-0.0033782036703029704,-0.012469017149203378,-0.00737192185696335,0.08001356253927207,-0.06766238387122618,0.09450284295885414,0.0802315146414943,0.13119350932021487,0.04860298718532365,0.08669775203075611,0.08234022598679601,-0.0010577992769126342,0.08705611688987369,-0.04092556086395724,-0.023121876460486784,0.036594692545367916,-0.020490072587894245,0.043306492660112654,0.0952373101743394,0.14373564002275574,-0.0236062327127852,0.0890055443796193,0.04001422100794719,-0.04050957529535087,0.10620424636001204,-0.007925580781655856,0.00012126912834734072,0.06157809151137128,-0.028942149547217418,0.024967224486474163,0.009081718078549553,0.025297833916757773,0.09858931178961362,0.02783863832919205,0.12074330656317575,0.05225700699461553,0.06540605279605938,0.05810041145394366,0.07996576895325466,0.027437611686268182,0.06868758500701373,-0.025717743925672228,-0.036484327005728644,-0.01778119096746718,0.15787109687822726,-0.1153832500264586,0.015543313467679709,0.03363689536182399,-0.04502894057293795,0.030119816187014484,0.06991726339125913,0.04221987816823982,-0.06822177771505641,0.0009700829513567559,-0.05801940253220581,-0.049210325503023594,-0.008949139127431062,-0.05298880760911748,0.003142029925066898,0.018709220914062342,0.07273855350534779,0.1313101738386563,0.000757173107966728,0.025687728746385644,0.12774625186371688,0.00009535427340388667,-0.02496923762498168,0.013101720260558383,-0.07608265772241793,0.03032689795924873,0.01170724995446294,-0.049477109621108115,0.04700952672017837,-0.03278237352717577,0.08615433713134384,-0.07614957899090206,-0.02596663490106533,0.026764777876049552,-0.04642305353258172,-0.01898471185560873,0.030559456710927274,-0.028778297612155408,-0.0098813677967268,0.011554150890107164,0.05029250869241531,0.10657089487918042,-0.029220300098620165,0.05777772665856199,0.055995671464877474,0.06412457753413156,0.03678601774880282,0.09154145464591358,0.012825787259521205,0.06883367221483605,-0.0023807887249116394,-0.00966682129426265,-0.07841444391256176,-0.013079175265454034,-0.04077070115780957,-0.11775868826587897,0.0028505171759808023,0.081452244732815,0.03569955935018511,-0.03987368355295366,0.013847405185964619,-0.016816476368662344,-0.014741419791543963,-0.06963317783389959,-0.011487558752575443,0.03054029633469917,-0.009955177211606672,-0.0346520277579784,0.015038811434699371,0.03679546342489706,0.07223266326466563,0.0065516935094816296,-0.02036305349790424,-0.01819331109477611,0.048447785997069774,-0.03188191557409884,0.022230223037291365,-0.1167725801119789,0.019034030873974803,0.06236191702848488,0.06114881180124386,-0.08492056621340725,-0.09234908063437494,-0.02832534150968453,-0.00799278231933701,0.04095380406756173,0.00614357973144787,-0.08697728743070979,-0.0579952979169131,-0.08281457099143531,-0.016709874136569585,-0.06939191513700015,0.009527473192753745,0.009916673082033195,0.02188867672148395,-0.07786950730451164,0.03943211167644756,0.08200324987546607,0.07021965210430617,0.012958532305820282,0.033636810763155785,-0.01748278981623088,0.051797944115918856,-0.062075744016151256,-0.08712670271028626,0.054805028215828014,-0.06425648162201476,0.026243858536889965,0.0687554409916599,0.05590984122769395,0.003184405387172304,0.023424580771570704,-0.0009181243210359032,0.057561535029624966,0.045505354789802256,0.05147131435626248,-0.037818490977760674,0.043822054371612074,-0.009277701181123789,0.08896870245689094,0.05001137136371661,0.0025602342752899855,-0.023018731648956164,0.0724783174668171,0.016221789711413092,-0.02019705443321353,0.01703189996791789,-0.036102556804300016,-0.04797468955644994,-0.011104518844466088,0.004623002240274548,0.04927294163854679,-0.040956142553265386,-0.017884969433412033,0.005109333669040511,-0.01464276334028521,0.06030677867530513,0.0015215627458319942,-0.030883748711079368,-0.02633238444626304,-0.07238597288639796,-0.001084510498404257,-0.06725325147077112,-0.05042629316020053,-0.020892963524402477,-0.014340956051827879,0.03312044601316304,0.0019116073686295915,-0.05750135497494977,0.007565291668165947,0.03981999333159465,0.011463883805798297,-0.011708708316814337,0.011812231580640657,-0.09994634423538888,0.006488907512803966,-0.0984386750421899,-0.08364254480006987,-0.10026208561933438,0.10452109413488549,-0.053542932573001606,-0.14980939424818016,-0.024152386075839336,-0.0808038074337848,0.004382838089599165,0.07677170273327161,-0.016980992028381457,-0.026534434219418694,-0.014766420948569314,-0.006652498138086412,-0.037236928844752805,-0.021902070053815146,-0.003418093849788396,0.07138392406511873,-0.023238940422188444,0.037054392836201586,0.04903918122642959,0.017719778101703748,-0.0931878234056334,-0.05549209540962422,0.06520642179135391,0.07542541366614426,0.07092556829985346,-0.018506706862481907,-0.042812555117794956,-0.06652539660285342,0.12231335541938677,0.022591934857963694,-0.016766105489198484,0.04856131528950682,-0.07180874403636936,-0.057551369811845034,-0.1474099421956139,-0.09202123653835859,-0.033452014967306085,-0.1192755062828252,-0.0021764010094607756,0.037680628223294814,-0.019615593768547712,0.017207019033318272,0.07163676842252721,-0.03494366678069804,0.005189112683980319,0.08501377950039675,0.086902346601103,-0.009337089705275114,0.04586521828466066,0.025626298234626782,-0.07767479418719944,0.020795886831104282,0.05605382838322564,0.02387360368082093,0.009866869973158537,-0.01623058606427975,0.02629475020340226,-0.0023908320186134895,-0.035265656779202355,-0.00563741623172214,-0.04422401783609783,0.004660601905704046,-0.04684212784690292,-0.027708366935903915,-0.051458184536345083,-0.04402178001208258,-0.01588646901701722,-0.046719546712175486,0.028190489925960814,0.034846340485103065,0.024034344008504783,0.02399339347751066,-0.13374985462314773,-0.046693546272570684,-0.02057049783964916,-0.05775980756771832,-0.013639869364899368,-0.14288162986536898,0.012122150540563821,-0.04930720636224554,0.01620334019505121,0.013812704434216054,0.022044056424170694,0.017146336406535,-0.11105118753831054,0.013141270469410368,0.023242913513482986,-0.06497228171290349,-0.11517067347491411,-0.11256156553825464,-0.0667234048130734,-0.07424175258687178,0.04927334449814101,-0.00597172569100645,0.01591075442787844,0.024199988471319277,0.03707996662328602,-0.004269024453851901,-0.07222990102567454,-0.03937170957495533,-0.0006941829028418456,-0.10103518056473688,-0.08767636990176805,0.012155846769024878,-0.06625865237294974,0.00634143164251473,0.0015317682253599841,-0.08368606149330443,-0.07569501010197265,-0.0007023173170135794,0.10933071433554899,-0.04733029258632844,0.01776434518903375,-0.009598235050763796,-0.047409299884970564,-0.038900019812397615,-0.02880393000748097,-0.07693635488583862,-0.025866260285935267,-0.07249143661873182,-0.053517755243212124,0.0008268983035034362,0.033767684328599674,-0.0009501558127066808,-0.0787008367756483,-0.010263639784679427,0.0466618943997103,-0.06406901429664663,0.001777505526938123,-0.03554733628442376,-0.008733021413154482,-0.060581905772910546,0.052733326533214914,-0.08432996987387412,-0.0020978128145221838,-0.07110463739501978,-0.05906251134919315,-0.03308312867455858,-0.01562823135710137,0.019904195913445544,0.015561731626165446,-0.03789895698325777,-0.10088631398089729,-0.005600275937686223,-0.05843449359289004,0.02086549486748309,0.05385180027338799,0.05404655162882343,-0.08186059071904572,0.055943696886401086,0.07053602348004032,-0.00024226159505038594,0.031079640912154764,0.02160068961733431,0.043817244778042025,0.06489984037495727,-0.012243569392873124,-0.006205331930773271,-0.036851180226495764,0.010524210979924465,-0.0031688491927872996,0.010002782859663559,-0.06167688205424318,-0.1384186345912912,-0.017991633348507403,-0.15525870366643446,-0.02676574512866759,-0.06577092983491638,-0.04699358323800769,-0.04511606666199957,-0.02010375984303666,-0.07579951259095395,0.08749722573051626,0.047719866475802786,0.03316159190208033,0.09898367064373807,0.012517445204481501,0.07323329971069877,0.00546318417247374,0.05267708616532342,-0.022506281460691047,-0.037518921087830934,-0.018654887709017028,-0.1265552144564183,0.016351848002897205,0.03199100350722883,-0.0316816297768143,0.034236383192985366,-0.013370256229602364,0.051724466781825844,-0.057838297303325334,-0.03969658101732949,-0.0500093449065832,-0.22509135816118217,0.005790076332676599,-0.01725267948619911,0.12741445332501514,0.005553415325335762,0.06693663758873325,0.060277406967921526,0.08325070861295442,0.05669678457269647,0.12347277300946694,0.02423176123631649,0.04512498283428325,-0.01548564009034588,-0.0335247984255949,0.07235831182824701,-0.10057266715039231,0.06295265916373861,0.0742819004618251,-0.09505870802381523,0.06245855949692762,0.0025494602128121177,-0.01643043162424503,0.03817865349203194,0.10459690971113304,-0.011509957499014881,0.023930884114786173,0.042606875656144544,-0.011223341915019369,0.006762466095705157,0.01475095418571495,0.008023536026671284,0.018764775534074418,-0.009332117638302218,-0.023538900530320362,0.012695395854008572,0.04051769455356498,-0.04667779292065963,0.0939325750115798,0.10712257449756127,0.08256557205519924,0.00668466029634274,0.024284077249155583,0.023163801616512544,-0.058307891236320124,0.044203840869365504,0.016094150351472495,-0.03680407475420997,0.010995915187648104,0.048201711500437956,-0.035457249907237594,0.10521399254882303,0.0810003812346391,-0.006934319414100135,-0.0929177797889963,0.06854282557287934,0.04654491827560934,0.12085024861117916,-0.03462226924455636,0.046085361496430846,0.03748309302904589,0.027844687331602357,0.027798829064447698,0.1574094320421225,0.014135031077416663,0.05055433268153836,-0.01682240058159976,-0.023669352973560064,0.08114435686860585,-0.020361999061806826,0.11016246671893272,-0.026624963489742918,0.0012873898949293725,0.030300554184639724,-0.048028498688784,0.07575612042890446,-0.019019005503492437,-0.04012218143192086,-0.015204034025902693,-0.04558771012264364,0.02980158030960982,-0.05121511589328081,-0.014478093272788695,0.029642382314177897,-0.018460840998221074,-0.01344703454965667,0.06275737056448315,-0.013026056228764736,0.030082610821397487,0.029250517804472527,0.0848770938354693,-0.059626600605924646,0.03667033445170582,0.05483744455757408,-0.025781322927173937,0.040075873109077384,-0.02781150309350718,0.03760308228325334,-0.0065796792843004805,0.06236117752509822,0.07211655465974,-0.0037299131531001507,0.06511549242949514,0.03674546088738876,-0.025834531008905915,0.022336856888684427,0.016561828691601395,-0.025574571368805758,0.017609717352947325,0.06262914063211032,0.06499682035815656,-0.13128356912993613,0.04059292377390534,-0.05316578946067102,0.1049332506962461,0.042139381546154,0.11694416926438769,0.02144474006141967,0.03201587566877929,0.08306967916987051,0.023209768952797517,0.05627502181033467,0.03492746328761926,0.0163716444854883,0.03755374892392922,0.014175222532856335,-0.013328397052499183,0.006606976972169509,-0.029307883243329547,-0.041796482153377904,-0.054335346901152576,-0.06012742033489937,0.02132762213507298,0.07645338928852896,-0.03024385392304289,-0.13303738708199633,-0.04307405277455039,-0.024704295535880993,-0.14484794873543297,0.025719256114004774,-0.032348522784464234,-0.009296950797909972,-0.022767134358914764,-0.00893429012205959,0.006956499649491755,-0.041965287918059875,0.07018453355416986,0.031310943573916644,-0.050914147849983826,0.1015426682823158,-0.03171268214423387,0.03658736993389042,-0.0410759981454132,-0.0027499327169976206,0.02078635826098313,-0.027569894480416128,-0.03368085345665715,-0.06053691100898459,0.024150799509422907,0.0072789944576705954,0.07361886074372805,0.035666047062869924,-0.06717291650188002,-0.0717397506899779,0.025072624196080702,0.029444606950954577,-0.09442012401024452,-0.02019090098519167,0.08170432161441765,0.04721717305886839,0.0841333078334758,0.018656762265842616,0.03425765307323186,0.010941622474627058,0.04681926804802273,0.08733787425611127,-0.00990636984323102,0.04240926475994935,0.01507334002277027,0.018775779174446436,-0.009832308191607074,-0.014051325267340577,0.03271318915986538,-0.01801402518501951,0.10113755450093088,0.012244211174698356,0.08472033096769696,-0.03820761974819853,-0.06989497104219293,0.03044271729262431,-0.016572741417576788,0.06336028867624473,0.05878783955945373,-0.028322094880930907,-0.033030953155586934,0.01023983707707327,-0.08927501451692003,-0.04401611573590686,0.037024598409623743,-0.07041532471959161,-0.02579086346634454,-0.004930743611887757,-0.0061913019280741164,-0.05005903793945147,0.026792254692513586,-0.0008248331573628184,-0.016970198799035375,0.0733646303844176,-0.006537221237277951,0.005784160176659656,0.1058097810676251,0.06534946953589611,0.045133190112425774,-0.028711508227668082,0.04395857763115796],[-0.036929708582887515,0.009284463016936364,-0.011108744057016555,0.009720772270412872,-0.06252624753400006,0.025692252144634,-0.017744592452366797,-0.07065358342539386,0.013994188820949462,-0.072899311099587,-0.033396777702368464,0.02486684877519654,0.005562207434896913,0.08687611262158451,-0.0860796339935695,-0.0075606880531757376,0.020898393675721345,0.08028344805215908,0.020318533267640545,0.06717451054914646,-0.0016103354253882193,0.05341776222578666,0.037703714170435,-0.10850064634483558,0.09417827704644735,0.01831018786977184,-0.10466917579783092,0.0004954462890134493,-0.06508529899686535,-0.03750529618597695,0.06607566612419999,-0.03187209799301785,-0.06986039733877454,-0.08809388498300555,0.026051380607768192,-0.009352841810400199,-0.010018108274965425,-0.038422365497235204,0.054546282322808906,0.004927143362166384,-0.016717138982612772,0.10534614724486688,0.09163985764509716,-0.12619053900632737,-0.06441815498780473,-0.08958862249795715,0.04721713856729461,-0.04298855589148495,0.09751268640063293,0.013411119570905338,0.028720008217309266,-0.046612983570844674,-0.00026884094142079316,0.007257252615707458,-0.043190182926969176,0.006516679487495611,-0.03782951408129582,-0.0000744690305113042,-0.06415886634828247,-0.030196029903671553,0.020861885377406027,-0.0006963648354909633,0.0010262235060814295,-0.05269195277986012,0.11770762632458949,-0.10550166840193746,0.037763345458234884,-0.046331144229074264,0.02244482234112914,0.03723685731143177,-0.07483553918860966,0.08500661278509578,-0.04605131291414206,0.05394733686174805,0.04221911873516774,0.052311828756890534,0.09250708472383097,-0.051052356494778316,-0.09139031721902803,0.03425449682850886,-0.06494870238647357,0.017628554812078204,-0.0012828754196394915,0.0024748191729152564,0.05429527429420191,-0.04103118363246602,0.010753092337070414,0.07306986003323046,0.02975867310372269,0.04436199818519197,-0.10138136163959874,-0.012646392592363205,-0.10654329046398633,0.02816245295714083,-0.003974774826650522,0.07022352244620708,-0.015569052714670278,0.08638115164795626,0.006218083379188194,0.042166314257022976,-0.0203668760588034,0.05786603220255701,0.031539518358065975,0.06517252003159849,0.06874361111219082,-0.023183757389164724,-0.024250595636653566,0.0649926592567655,0.049753877549173195,0.01506778483170478,-0.062210693039415704,0.018251319806985255,-0.02492496077645482,0.018541863895492942,0.001856590043564239,-0.06073811799744366,-0.07169922787201241,0.024514553792656914,0.11874755991075155,-0.032946601194769935,-0.029690159005163412,0.01837273600849145,-0.028039913156783603,-0.017346918764416023,0.036696106069675424,-0.04576131488049668,-0.052573554357382875,-0.008273927514161054,0.10727367181960487,0.03522463145567686,0.034489482487979305,0.04304375735541394,0.06149184774897962,0.07124306374049703,0.062056834372595744,0.0060678704466507714,-0.05773992285699615,-0.09765004730553452,0.04499317701293657,-0.018150701689151484,0.07896060771206194,-0.09788618223405947,-0.07019372415518517,0.02934777039844121,0.02023560252854465,-0.026699860732093166,-0.12364261403226241,-0.12950645111523124,0.04524973041334317,-0.002501763359790874,-0.04009180147333497,-0.05690427644675104,0.013425965277617156,-0.04737129745630923,0.01996298748801381,0.04044502800591834,-0.0028975472427334916,0.003660789513212458,0.037080291135711964,0.022228452735696035,0.02989731574958047,-0.013074538682449555,0.08028613269563561,0.10080050676560681,0.09390257169808411,0.00005672251646074828,0.01218337758093818,-0.006258652582938624,0.04893417261917865,-0.009892368372751948,-0.05196259314496472,-0.018618273956349872,0.040426219229311854,-0.017201558209212334,-0.022245562624245065,0.00849248269894676,-0.003204965876927029,-0.06537629540357402,-0.004450490862945598,0.0091990302254803,-0.06516663421449614,-0.05037075424223758,-0.00497271820627996,-0.003931105609368937,-0.0011413016605500235,0.025916583405357633,-0.050205868233025766,-0.04287112699356931,-0.02968644564048647,-0.0072437121328921905,-0.11118344340408345,0.032026708158347815,-0.017611683328005223,0.01868183047234651,0.023564093825036582,-0.013938598397485433,-0.02978177647004107,-0.017278120058863238,-0.06597429133775981,0.08034263813936217,0.015463356265164903,-0.06756351601931494,-0.006147238755113483,-0.008620634958891116,0.04474980084625914,0.016074082288094323,-0.04404417705915164,-0.10573205752931059,-0.041683368180155646,-0.02153146608039663,0.034654976298240714,-0.00643504433258722,0.015379215142652327,0.044695118201868674,0.03476399491081333,-0.08448849231378243,-0.014625190757907976,-0.12900948721577904,0.005392824570530879,0.006867273035653826,-0.026563257395361885,0.15023668473040483,-0.03216684900719447,0.0024851650833347242,0.05375321266774604,-0.03465819995771255,-0.017961187901903333,0.04871607403329357,-0.01889222724782565,-0.012850554197842682,0.02861806023231802,0.022112992130827402,0.003201139655895621,0.13308604373789715,-0.10908122520098429,0.04795610622702463,-0.001022353894223421,0.05157470538996582,0.020840374289557734,0.06906277061965409,-0.057379177473979075,-0.01614911188721667,-0.13124068679877404,-0.05805434425098464,-0.06265474267494814,0.013147512900041188,-0.021740319422837547,0.06731736768964822,-0.055629951244483285,0.05414185363390873,-0.03640722402301865,-0.040093929928743284,-0.07209394690133757,-0.05250026219057859,0.07216763516829407,0.026025713039172345,0.01934429851868179,0.018705527363995826,-0.0023997985699460225,0.012880921807293421,-0.0054911979539865536,-0.0005618511638535888,0.03863986163057845,0.018828534387468877,0.07538343423588473,0.03308221596405538,0.05856264771629975,0.025176273385296714,0.016153768066560315,-0.11765508295991586,-0.029021071569236345,-0.04967477329223931,-0.09764872379820903,-0.020633686717945753,-0.12748182657518214,-0.03349178240231058,0.03474468810865624,0.002664487944983888,-0.010456942134355654,0.016887170450601806,-0.03022240946698128,0.0367255933472075,-0.06283518199586026,0.01588981280678916,0.012159863784179058,0.007412362561653376,0.032740130513517055,-0.03192568319139777,-0.04024133212830359,-0.015508082856047115,0.040070232019820795,0.10368335142967643,0.031942596589122144,0.07243268468343578,0.07647033213621979,0.11453552729445762,0.010277048905973507,0.0052040146930607,-0.10292193461921868,-0.06299362038776289,-0.0243540446191118,-0.043877861512860473,-0.047405343087849335,0.10618516180586507,-0.03555518175038776,0.016824183386871017,0.01864449303727511,0.015370711563514869,-0.013059267257814105,-0.05892371127537109,-0.03288285326527494,-0.027981289392418767,-0.015246118691627588,-0.046191710423967434,0.02208984248164914,-0.004683765570423468,0.004316812510576853,0.008911781234869397,0.004829047222890552,0.0493160793813203,0.08268744038816082,0.13827045459423,0.006280104824519664,-0.0473171391793497,-0.023842502759751413,-0.07811249683001939,-0.026149841020065623,-0.07898900654726354,-0.027167214147529123,0.00562560410681303,-0.054811621079182866,-0.02845714167935812,-0.0648196156471709,-0.005954130214958805,0.0164326092770716,-0.013816048706724286,0.044852062825133474,-0.0063819292240420164,0.041686469023931964,-0.03069011683365183,0.028765395228373878,0.04227618245644918,0.051853673694814556,0.029720284111091323,0.015666129549172767,0.062210264371003035,0.10380877885906781,0.0957403657991057,0.1059248271808673,0.04840116439097274,0.0746097954810441,-0.054892209145340945,-0.005143930740568096,-0.012189252379976744,-0.013914819419645397,-0.010501815268310519,-0.09905189763709096,0.03589482064669158,-0.06375860783173538,-0.0835126946507205,-0.08495659383484878,-0.06631526384120669,0.08473644568439007,-0.03692960357840649,-0.014894362274451655,0.026560845897803085,-0.03324619578435393,0.005099148304988603,-0.028580579046313805,0.04393221201905948,0.06493070517747718,-0.019774474056291114,0.09889574689174889,0.11972579911277384,0.07756769082497911,0.05941671202285337,0.09507292784443258,0.035869241703825876,0.007328882732930328,-0.06910029621271957,-0.07120709060359001,0.05364156660994441,0.015835506489783546,-0.04636935386777001,0.0697468159989183,-0.032937071171711726,0.000364065191692414,0.058493219886408925,0.04343880274034012,-0.052120317033385315,0.02894656804167196,-0.02447820606537587,-0.02586068870643727,0.024615978938179645,-0.11156067572962616,-0.007092879392723526,-0.018517330266542138,0.06730668400427814,0.038188122246901234,-0.07383351028439858,0.03653688474424436,0.12452903567385137,0.013456754339927084,-0.009292355984778249,-0.09520597474310351,-0.03642141469038158,-0.04805387415836398,-0.06052349764371961,-0.027438151212075313,-0.06381260447470405,0.0051504403515072435,0.031214766491471608,0.15602250601837211,0.05119414299710909,0.0790971610349531,0.06376914080304565,0.021145179990022304,-0.0305518498774651,0.028560326443954388,-0.0068282596642151834,-0.03832415425818423,0.006887950011294456,-0.04030538412397968,-0.009505080039507405,-0.006893142993098599,0.030952920540291008,0.052755039681634516,0.045937525697524004,-0.048761555674730624,0.020422626935224644,0.029741972303131248,0.033824757784556576,0.006088967493378325,-0.026747485627952393,-0.026588159312460443,-0.048062631054861575,-0.03051828241411117,0.0001745953456774564,-0.05404838948792104,0.0628199072558441,0.008006417542980012,0.09750253539130381,0.0545650162169097,0.073951149712294,0.08255341525067664,-0.07321134137952083,-0.03928291931593503,-0.006713024385047302,-0.05089786754932486,0.0016763763712617135,-0.055589286215707294,0.03524677708710539,0.03860529571762012,-0.09568400067892426,-0.05861819229164268,0.06422050454640633,0.008800647835295187,0.026930353475568318,-0.04819341093040992,0.04193230861089784,-0.0837836441694867,-0.06073148781149096,-0.028535350653161044,-0.052560056178796534,-0.11048189934411344,-0.01613183950178238,0.031553491551158414,0.029103646577083777,0.09344643521907374,0.08114429242106311,0.04054735942965265,-0.02714326810692869,0.04583001393029054,-0.00027526922005595504,0.00847299031976909,-0.00525813795571388,0.015586453962404673,-0.05455343498305351,-0.03036712118369978,-0.04397477524785951,-0.05873572807160744,0.04949898031771892,-0.12570299609218252,-0.038468863716975187,0.002912213885754,-0.09646298686668178,0.0059263613707384805,0.055188077134326545,-0.14633382844363882,-0.037998859973092845,0.021516340195203362,-0.009082778303824672,-0.09502721855839341,-0.02885994697160223,0.10651032251849063,-0.01022091161278289,-0.031805787327757976,0.06654630147398731,-0.054528245476216326,-0.033251798355122694,-0.028747876123063166,0.0022290001041189874,0.05257634939182228,-0.04235751738952442,-0.05903320001673102,-0.042592481396738324,-0.03672712329926232,-0.024548461376430422,0.10292227151527088,-0.03208345218796557,-0.036144724502269285,-0.04764948962348975,-0.1015560307378791,-0.04651243171364104,-0.13641415268857318,-0.07364284808241515,-0.1251738437593365,-0.02957757065234179,-0.005771550112217079,-0.0428913204974112,0.02733053290855087,0.07837463141485163,0.1201858745734943,0.038687494053488744,0.01446983733194124,-0.06086086223529177,0.024725474426837663,0.14590512659707844,-0.047549837810208294,-0.1441938207718922,0.015935534557841042,0.053826644090056365,-0.07832292542752985,-0.016351404361609857,0.037361395246176994,0.031767979465487664,-0.07997047204272778,-0.14046624119820775,0.007454618645150279,0.09466386574323073,0.00151878524609263,-0.002330522130181545,-0.07043209504442853,0.014415501198097126,0.04768006777723592,0.047074327856178426,0.006785890067662041,-0.014414673158113341,0.0738463097335678,0.07719914328971703,0.0205175221788855,0.06828319059021443,-0.05188639699140976,-0.005706708671664357,-0.008287466321769636,-0.13714589641120425,0.0234089922024738,0.0007786288966676724,0.04524319012212904,-0.02052821391782212,0.04079693377729437,-0.0003601108510762292,0.04854610847476826,-0.014069433221110548,-0.01426616578590848,-0.019237514521496076,-0.08705463876725104,-0.10082764617022623,-0.018842269405904204,0.026128363781560783,0.02996594152319187,0.09496862278230081,0.10451467361672694,0.15177214866482971,0.06659831986207364,0.08775047624609975,0.061691835868185774,0.05661237804487251,0.02255783528521843,0.016123130936878335,0.04074942995465116,0.07898637594725112,-0.04264892185755127,-0.07191454312222954,0.04405881788187754,0.022762413968676353,-0.002334975176810711,-0.03171672089352161,0.03326689987834297,0.05468891407240504,-0.04460660641575907,-0.044290558549314955,0.03799503060197668,-0.09391092796389744,-0.024619245740168227,-0.06117296964894286,0.012241490865945198,-0.05402682578503941,-0.024099717450424676,0.1708779736266474,0.08327743177705915,0.09302020162864628,0.16098874680442057,0.09506779872896429,0.055432199771122403,0.056818435289757024,0.04421227347926178,0.0071814187807756075,0.08682561992915917,0.04946495030246813,0.017186687804822402,0.10885407625759305,0.04790600195275382,-0.026234216036493403,-0.02093877296101085,-0.047472979110928425,-0.0657882185494048,0.0644450138863763,-0.04999374279771983,-0.011829624704611135,0.0377513489567609,-0.036525326922042085,0.04309773307531131,-0.0382928188764044,0.030030896466316143,-0.02527261872894276,0.10969039613174109,0.034558034023581076,0.07054019259372891,0.043959541257341576,0.12010647036699178,0.06432637345119102,0.0281787871185385,0.03898010606776444,0.045698168562655746,0.05868937785212555,-0.013200807726351418,-0.08448501178413595,-0.05442413248545943,-0.01342472665679865,-0.05335962455203967,0.04171472753851057,0.042705595527026,0.006124993711879797,0.016661939411710847,0.00547503005375059,-0.04340786231650294,0.07428603075717417,-0.06012963859442245,0.04814667579645666,-0.027154061018345985,-0.010333521306849518,-0.0743396332812966,-0.011558763815881255,0.03918476270458516,0.04652181807170965,0.087033287628716,-0.015165183055759455,0.0716635494974076,0.02190907146029663,0.07285197754878087,0.020471891861762213,-0.03257834557482178,-0.08142046754136623,-0.0014771681454659842,0.028274870173238834,-0.09609824586607514,-0.008548900225601898,-0.017993867036518927,0.03181386036525792,-0.03817802358557266,0.0069903830721170295,0.023586352550607707,0.010900138628299723,0.021962631748946602,-0.010982700214717802,0.014634482544169745,0.02967450556264983,0.013803925061441376,0.015411962045188632,-0.030831118917843365,0.007424910230981289,0.029033877266011723,0.052711463105283234,0.09230677610793121,-0.08546189891968102,-0.019472648924001308,-0.022661290247790036,-0.010990718398054794,0.027949954655667835,0.06818973644203524,-0.05684098090659202,-0.05201073316134154,0.026939184243913047,-0.010244540522066975,-0.09846894202270068,0.0734204438707163,0.020409652456616915,0.06879285098488751,0.023517250888735675,0.0066288475121331035,-0.03808573396910487,0.021873184977073013,0.006076121434438766,0.05633664138848823,0.028435431491946595,0.035354735491375425,-0.026137633300936478,-0.00488548132720241,-0.0023512940428059266,-0.005127064970542462,0.05473444352514415,-0.017365499363062628,-0.00756212849183606,-0.058807717340265804,-0.07991077251010092,0.008551276660072521,-0.027324636591773924,-0.03217172302841501,0.11668035065982649,-0.01370951055356619,-0.009389988708018633,0.11856182077940357,-0.10699981207791084,0.020513108470641812,0.0836291661316342,-0.032115536898617694,-0.02123528306647306,-0.15654145139742254,-0.07469410851596713,-0.008943363306303596,-0.05612085459669427,0.01878437930984837,-0.054105186402094205,-0.009063241989590343,0.0356292893550129,-0.02697089804529048,0.03271743087133557,-0.04512352346338532,-0.07532443334596566,-0.04062773890494303,-0.02725969958079945,0.045036695129343336,0.023318440989282034,-0.01621949516198471,-0.009806835827667438,0.06416957629486819,0.03578612345597765,0.004781161566929186,0.04612845544721242,0.07027616310768325,-0.07321862612041466,-0.0017823961535730893,-0.014937690004564175,-0.10896683000501418,-0.04476970689854831,-0.018281291214489605,-0.029834480835427717,0.020051596765724357,-0.005257039298822438,-0.010840776400219188,-0.04842521977490549,-0.0077431148409705785,0.0005563853439114982,0.026359236470544334,-0.08989176911451992,-0.004377050170739188,0.07109979151338512,0.0017506047977541384,-0.021357446933783355,-0.03206366391328668,0.022077006638745948,0.15325110961702307,-0.02519141654768553,-0.018994019480844556,0.07585495592233149,0.02260879819048638,0.0332323160220444,0.05615611313101043,0.024110498300223323,-0.02320546894634965,0.08865066259188477,-0.04509455803549842,0.13088465231918003],[0.05843737792308966,-0.039054087148909206,-0.046190982195593144,-0.04029269541557923,0.046963394894479156,-0.005054067685080611,-0.020619456462050725,0.08984869870674793,-0.012337001992933982,-0.04537960888556453,-0.009432866939260948,0.016986044259710363,0.064049616460322,0.012202157066832527,-0.004680571119068933,-0.06144921483789115,0.13728125011501685,-0.04329682817808685,0.05957114499001618,-0.02458888758699409,-0.031977658136563857,0.05700660685121617,0.0022137046275461495,0.04352881779477464,0.10488528487922374,-0.04332008790926163,-0.04382264352111998,-0.04227712061573369,0.00044811216258053895,0.0954276211298523,0.035615554839828555,0.027384408961120866,0.05052004387199171,-0.0037473379763458096,-0.0156508387452867,0.05074383282498193,-0.08188800724059525,0.060547488641073864,-0.008574421350567102,0.033149100766611594,0.11115607453522798,0.022730361678604146,-0.12380582483077573,0.026210101988982153,0.005968049345794419,-0.02151268653621864,0.0025287494423686745,-0.012074498725067087,0.053797480638583986,0.055889108474376385,0.0857607283560188,-0.10369179761500093,0.029618397607885722,-0.04235953042306146,0.051243024456278166,0.015382935439147927,0.079520132376538,-0.0234597833761073,0.06055768626876385,-0.03537026004146473,-0.06411115931745887,-0.02060182461822278,0.02325772088699577,-0.04574709520496949,-0.029923861627874294,-0.046666549375297045,-0.07970400849415368,0.10585690152767126,0.01997310402729051,-0.023933935121323566,0.08859930036920916,-0.0032549779185094612,-0.04581108655743073,-0.002159098362631217,-0.038792955270666785,-0.013236390245446854,0.039154100068649764,-0.01485956601268526,0.10461150209120902,0.016812029815750116,-0.03709255723433883,-0.035847328838846636,-0.005254683084713954,0.025055691281322505,0.03312902867766404,0.035709543610828835,-0.10022758525256033,0.041851468332354,0.033601625082652395,-0.02429382251133569,0.03359700832625043,-0.031692183226010945,0.02083437477312198,0.023192929539102188,-0.024324248922795548,-0.04438012653716139,0.06517308417278785,0.06051836040808434,-0.03392951433406887,-0.03402061997299132,0.0031101246563784916,0.016129713975961274,-0.04201553593456947,0.08881088199647016,-0.04911510682744658,-0.02833026975782091,-0.0890707399690325,-0.07308529687414712,0.040584847134550725,-0.0009156341986588282,0.06219148731555681,-0.01875436693180467,0.010533285614417779,0.04828891039080743,0.07151776910743712,0.05392054069449085,-0.017726695006695516,-0.0019677774646943815,0.03414438424599807,0.04272174204163966,0.02617300568482201,-0.047262259230254136,-0.026966677756246372,0.005660193593753192,0.08375708815436524,0.013732387117156434,0.1374673307234888,-0.0037277896442770133,-0.0256833701055861,-0.07022694410553376,-0.03272939368714355,-0.02277169341610238,-0.02710668524260047,-0.023873337925213466,0.053707584555133754,0.015250293396288826,0.016151015520777735,-0.027844137149867807,0.06743045434677765,-0.0850578587397961,0.00679766859381346,0.04580214760126245,0.05455904480624836,-0.02558430994004832,0.025487720004413537,0.049095458272014766,0.044863745354630995,0.027575879097309026,-0.012510521072299404,0.04481512856905616,-0.027120648645545045,-0.015156566782297886,0.025803795850453684,-0.09706717596112678,0.007188698177246445,-0.015667667454775935,0.002114626359495656,-0.004850916280453892,0.0018358584585186973,-0.04404973774147754,0.04910854752548555,0.013126770170097895,-0.013563553143355975,-0.020028390485633363,0.05342816951481228,-0.050112017257522484,0.0406030307566092,0.011160192165408069,-0.03150717441484351,0.06026206604679351,0.001801906277378261,-0.02000882111254326,0.07729651497991916,0.12152497733623996,0.0858703221264583,-0.06898911878968922,-0.02945990515739396,-0.025491342506264954,0.07464709123072648,-0.07492742794286858,-0.06626687820544848,0.013493627319505187,0.022844995217632218,-0.029861139030138314,-0.032022677772408525,-0.01338655713569266,-0.0555806784205839,-0.038886642432430285,-0.04820860158705012,-0.022749589013540537,-0.09051479901033863,0.007756988048635802,0.0014563397010177522,-0.12370503048803216,-0.05654107718457063,0.023999194935202323,0.04539389776817402,0.014336546273032725,0.021481994689143587,0.02894584874690538,-0.015096989029642509,0.05545479224985222,0.07964558784293595,0.1269419447267102,-0.023602289263090454,-0.015214298833485757,0.02709902898493726,0.06324296603127398,-0.039112503449702754,0.0634227190687646,0.002080212872176879,-0.08359015981920676,0.008901137210806232,0.04111230507927908,0.03750280160585995,-0.010419423679906593,-0.06395694927569898,0.014907542471932772,-0.07607071699282811,0.1101430693160969,-0.007888050123922873,0.003269784693757281,0.02252295038791619,0.01937811218014959,-0.0213702977293253,0.013931734862463966,-0.014085132708817252,-0.07605035676296393,0.07161797150293583,0.10868886801867796,0.050209371790699904,0.018740718147698166,0.0991520258415893,-0.011893572740450576,0.02242708011636745,-0.10501012731225992,0.06586038431196459,-0.007144392925750528,0.0811887858229767,0.03711983352698654,0.045615926835987225,0.06061897443402197,-0.006534829812308871,0.01000543620606937,0.009367541998198128,0.06106887496952248,0.007099360079091191,-0.004854528674204519,-0.06523420252448692,0.036869874152583935,0.008440002877644988,0.0539911707611314,-0.007414517115648188,-0.008754718528590083,0.023720396809750122,0.08587634201559102,-0.01628158176766737,0.02019524702842035,-0.06416914583318666,0.049754131306598025,-0.08807980651385489,0.04834597770740899,-0.05343238470516035,-0.017344901886595952,-0.05940605605581264,0.022656672986529413,0.07130011309978802,0.0070325053991092575,0.05328801605848756,0.011651178781661642,0.05076180904404258,-0.04229006426543402,0.05231976282913904,0.05949580821291932,-0.0054724456867647564,0.004145680725870144,-0.036389620187481535,0.025285626323079978,0.025657917580240164,0.08577099871715149,0.00841575153835158,0.06695903054250925,-0.07229924812249285,-0.014017483941727723,0.03968163132708381,0.05301755073054369,-0.14263047711671695,-0.011733035703470718,-0.03492460681331308,0.026494000285193293,-0.1270887381894381,-0.04657584756288403,-0.004670168801972155,0.03976820317591722,0.02959397583027722,0.05532313867814524,0.07900416411481563,0.16058417332092434,0.11320725829052444,0.09633565119011034,0.11080072954329537,0.05443225370808481,0.033276292041188996,-0.08979843585922508,-0.05826612203780155,-0.01568968631540985,-0.04197085703899622,0.09324855975623683,-0.014602652831146323,-0.057517513400239424,-0.015531318389441594,-0.02260928051627874,-0.040436256563051234,-0.1320971325340086,-0.055757849502117665,-0.002457077099893755,-0.22987622569905564,-0.07920460015686233,0.0025526010104374567,-0.01312948611210871,0.064256571598264,-0.004739208521790508,-0.0496237183724428,0.06954963348918372,0.09796671103693358,0.044147602374772346,0.11563479567745576,0.025076058652838486,-0.03555538468863884,-0.031429241346230374,-0.08632309235758802,-0.013885389162114035,-0.032619496708801314,0.05847922129605482,-0.018833275619830298,-0.0960639380328268,0.015226869528100954,-0.053958272915832904,-0.01797547663115848,-0.014634231473711951,-0.011378288637699121,0.01548472585789468,-0.08342357161406322,0.0809881656982088,0.022041582544739317,-0.03125570271381191,0.005950789374589263,0.0373936550904619,0.05451619070422327,0.012972962191404836,0.06479620851535427,-0.003960145218233065,0.07769344044317084,-0.0569732637208091,0.012896174925305693,-0.013388308101875742,-0.07538808762202347,-0.09719682134099511,-0.02420135718368057,-0.05381776888042014,-0.017501564756935324,-0.06031779491570951,-0.005451087390372433,-0.031604763835963515,-0.03194538042432557,-0.06479270830446557,0.014858642638775276,-0.02768600327839741,0.053395268215827484,-0.03422895236218446,-0.0024103679875607338,-0.1555203240094332,-0.015794886699938275,-0.029110708820596385,0.007325812180043795,-0.026973660710954524,0.05553036700330803,-0.07542544386666526,0.043350509425907915,-0.039465910736291576,0.045003767669900656,0.002026244989216584,0.05326997431150888,-0.030666393102950856,-0.059546874358898744,0.011083110343832752,0.005460202333327332,-0.029066469028979885,-0.0900760528755087,-0.014504113803934451,-0.018357257667630113,-0.051303876966825465,0.055715408436642286,0.09225045193748356,-0.060588656258243556,-0.03152791868956798,-0.006459841664505214,0.005485037293753915,0.004085098251810349,-0.013914035605748413,0.07387126724909115,0.0736981877569729,-0.027266018413468783,-0.010890035289646889,0.05815226343992619,0.052210245028517316,-0.044373534730381574,-0.038219838801394644,0.03351341627709381,0.08998737590960192,-0.034277614227989237,0.04192558937644879,0.07191719185539587,-0.0177249902632382,0.014708268646018685,-0.08346266724149329,-0.08442347391313033,-0.031649510278530045,0.017774357757968408,0.03276555339594034,-0.034537159306861485,0.06317308023666783,-0.030776994166104653,-0.009150855230826784,0.018678997949965217,-0.04109030591328575,-0.07020234357706742,0.07154603861514684,-0.07432381734088468,0.10648823399953788,0.05949451898674973,-0.050554921063526825,-0.0035689997955714323,0.021480227294169513,-0.008557362971675189,0.03190928977208671,0.12625524250761155,0.0650192442960051,0.06441150286912126,0.07604351018294432,-0.010234668221403785,0.009552356393996028,-0.0025611960305515612,0.02123371489152912,-0.03471866910845376,-0.03826423990197927,-0.08532140394496716,-0.026253315349947893,-0.0666955914324564,0.036478132222892194,0.07344513104760794,-0.10295911437932238,-0.06529228425457037,-0.08205317635324114,0.019459620245884473,-0.016639555848459723,0.0038993057023932265,-0.1162635839523776,-0.011243923087886368,-0.0568066812499554,-0.00834540462357497,-0.0507080675486726,0.07998609144148364,0.09927296681529775,0.030867019324832976,0.0607175274054896,0.0634910997075595,0.07462850898597043,-0.04118360649468594,0.07015619362718754,0.02298290654923514,0.07181586170542309,0.05592312675118658,-0.024846853594574093,-0.009775734177710703,-0.0237031593904166,-0.007714349574519474,0.014158101830933825,0.02569183257227044,0.06375719974454658,0.057838528928911496,-0.015231915218175473,-0.019477981194302073,0.0057334565151466454,0.01942240122217614,-0.03478177934889468,-0.08257366627679354,-0.1100192329633915,0.022141349035391836,0.04711919902222466,0.07167201365940609,-0.04394685329555898,-0.01297559612453753,0.027880666491719427,0.013403930912814386,0.024590096902715113,-0.025537285014552887,0.03378254880891181,0.0610933143538073,-0.004034444357314517,-0.06773551497474349,0.0424555403842132,-0.020811160371509877,0.07654124840716889,0.05244110616820276,-0.052522615087589514,0.08713753645634886,0.04842162690946326,0.033731930535850156,-0.035532782810214235,0.03795865671123125,-0.018062772374119546,-0.010404303619111195,-0.07035215001405336,-0.04415948582213514,0.048316101179424496,0.0044232725538286615,0.020566014882745228,0.024518409662750203,0.07987389884057738,0.059664523474753935,-0.008515627168859534,0.03884416466328715,-0.01856633397150184,0.008214108667165104,-0.06104165638396168,-0.0165377934143496,0.005899261234533097,0.05882755170236012,0.0341217273527159,-0.027362638055556766,-0.12038182474071574,-0.009545437064275668,-0.03428150646020799,0.03726428860396767,0.04923236846653255,-0.04242904992310754,-0.03197732512340544,0.0914967019137663,-0.0366231123387931,-0.05907826005522759,-0.07393956102106475,-0.03331708953748483,-0.08939781459760357,-0.03189315024682407,0.030667382193611082,0.06502738296177514,0.013955970376195757,-0.05908897242356832,0.006917330133164375,-0.04364655608717489,-0.06834730437910012,0.049225966858695756,-0.043358205344387855,-0.0132071347502759,-0.013507901026751885,0.015828779660559317,0.08526022339478825,-0.011429496971057069,0.026768666394650985,0.06232101791003226,0.01579271689665433,0.028472792215213778,0.07236828911908627,0.04339780179531004,-0.030335293785883267,-0.03272077933920228,-0.0578645705356962,0.014855238767171835,-0.014390464221455783,-0.010204732652940154,0.01186729467472734,-0.09174700414070848,0.04838970063348343,0.05226603528571804,-0.02869767427954521,0.029947358061651715,-0.013462431554312265,0.002937495651560638,-0.04291587180304516,0.038646223114186196,0.033347815842831696,-0.06771065651842738,-0.002583765858360387,0.07956735234090544,0.06889986731876363,-0.010094516073322731,0.039237587328616846,0.08900258647807859,0.07554926776799954,-0.0810918862132895,0.15101451948368777,0.08643982525352831,-0.0523772040540612,0.07308804849339064,0.04706967094861409,-0.06078692862260291,-0.05958943108047049,0.030819021220747072,-0.024269284033056806,0.10230935296787334,0.02876584565092622,-0.0031713149144874525,-0.05843412752791756,0.014566363950546696,0.05193747330271263,-0.08173397091723714,-0.07687267928829541,-0.08388281599840436,-0.04856449377360621,0.05446582117899813,-0.009775547905179793,-0.06833691257319513,-0.06320261288361012,-0.08574120066237216,0.040335646947103995,0.013915885815647122,0.023905997688589788,-0.025962947914209084,0.03192363663918916,0.07866260475382413,0.017968968883087154,0.0018658853065646622,-0.02059064776448268,-0.0442469273968433,0.051619503990056124,-0.0020013733222457295,0.019784820707383282,0.018957927480824782,-0.022722598747874884,0.09719139944486972,0.01924767648882537,0.028917931328150393,0.02629781937404725,0.014125562112486731,0.06311268431970526,-0.01692708260238845,-0.036290460158169176,-0.11927873790060282,0.02193557621475859,0.04039581095686254,0.05216505718546737,-0.011004454153288873,-0.007637967483882266,0.0037857837759079755,-0.07765371220876821,0.0028919788789600162,0.005776230429294531,0.04334856783614996,0.034816681241255046,0.03727589662179951,0.05094249892195949,-0.07175573671496409,-0.005451212130336998,-0.08149410072061215,0.06393709090972066,0.02393737939719592,-0.016307265272932542,0.09204391397346834,-0.029262595353070704,0.03865165221384504,-0.02428842276064786,0.03450970127927507,0.01342320446316925,0.03761941302940114,-0.01087485187885328,-0.12151026444410948,-0.03862048103978588,-0.10792674103264764,0.04120131894934499,-0.021177850878489744,0.028022404767129354,0.008157163059849426,-0.018587196510618076,-0.04342869816303737,0.014996772015198894,0.05515018342333216,0.03023784579481299,-0.06919902780396257,0.08662631909261408,0.027489210298694156,0.07146099725095742,-0.014268617451075358,0.045347915392385967,0.030254573008859812,0.011976097197202185,0.05410546156481385,0.0829087508948603,-0.05106937372813403,0.02585389273062019,-0.05715587647783646,-0.020905867214224532,-0.08721108653058672,-0.04126790897971655,0.007195572383436118,-0.03126308488615083,0.015473083589814215,0.052374607140363245,0.001989221197924502,0.051965121360453705,-0.05463737160909446,0.07726497244592262,-0.03506416413850278,-0.05402342255019901,0.04282407202066765,0.0814317446458126,0.04148173178468803,-0.05470576311634181,0.08657583684940837,0.01907646116555128,-0.05550335986166723,-0.10916617928495939,0.02091393700275181,-0.07058754697685451,-0.052079557885188976,-0.04439973754982592,0.013274540663783896,-0.07878232672821556,-0.027589774764605245,-0.05524553865846188,-0.04407402711675453,0.0017470829305625871,-0.01818972224648459,-0.0768141957740059,0.06099116683691441,0.04925001240373297,0.02399023954842821,-0.03177294470753291,-0.0951564920134287,-0.011373164052809491,-0.03828696607893226,0.046374234333679716,-0.06019483174145668,-0.011812103662082666,-0.05459401507591854,-0.05093186770147071,0.02029012982019154,0.007617873093160398,0.05238658207314262,-0.01693007137072287,0.014914823543923173,0.05733191146743532,-0.05250756684197689,0.03242843366295495,-0.01707371532888082,0.011427523116502986,-0.06798372512978854,0.04291909899366892,0.006139522737715383,0.030498202228337393,-0.060756316450709544,0.06314974218257871,-0.032190344218015234,-0.004227722617028102,-0.017914597317935516,0.04720003426212962,-0.0331018960804268,0.06134799833819729,-0.019692228286917798,0.06867299618999455,0.017902810178543758,-0.06786665470159711,0.057177318150558334,0.023880251330150835,-0.05588477004459882,0.021869414441839388,-0.06303658383011436,-0.006341926216205645,0.00647164610961806,-0.05842653827553525,-0.08326892654871607,-0.009968240544667167,0.005127369240892951,-0.028903872414669903,0.007199606505106395,0.07504370106214543,0.03425908130671942,0.004289381491003298,-0.0471636338597948,0.00035041454678323166,0.010897468745650014,0.0042306323349043185,-0.04020744308592261,-0.022893879148293987],[0.07360656222111954,-0.020159772495605136,-0.04134624420038808,-0.03260878040147374,-0.014455635723515489,0.08081238588963484,0.10904657733826705,0.01630566371551331,0.0066563729801137695,0.031969881596977584,-0.022717835280518295,0.026003490512847616,0.021954752768971828,0.0013629026784278762,-0.001650235615047979,0.05765668954425802,0.10428220788484097,-0.002933758642981992,-0.01292686123901524,-0.06792773113023327,-0.06149102091508621,-0.002306595222044246,-0.005428500298603193,0.027493248306465563,0.03955593754895427,0.06690046178250737,0.047148408290218234,0.07163108952563078,-0.027880431440103583,-0.039256980888149384,-0.0573267108823858,0.01342756229710973,-0.006379663943413126,-0.07808436017218265,-0.0014055525265029487,0.0680983381456788,0.06935467891346042,0.053188981168002955,0.017864119138193805,0.0190418302421934,-0.03160362013567587,0.0012860023647759903,0.07648011841084872,0.040879142330056184,-0.045352376750651305,-0.08215043860715925,0.025987599672740013,-0.07036128449047808,-0.013602731147096949,-0.009634380632998556,0.04045607246921256,-0.016444585572671085,0.025513152297541024,0.0550755559596356,-0.01311756751084351,-0.07938893500199305,-0.11918153569809199,0.02379704683617488,-0.08237591985937846,-0.09162129259425399,-0.018635076552552296,-0.04137344869911924,0.053343549072013725,0.043467947936033806,-0.0727896674022842,0.08838039209054231,0.10098607481875498,-0.07794806837527483,0.0364456940812753,0.015918863852200444,0.04139845980191268,-0.01424299462021362,-0.10531883964170606,0.07304999805907568,0.058233934185454056,-0.04647992506878016,0.030324337422036492,-0.009150639589073386,-0.03818919500240226,0.042749065368787864,-0.051299140133037505,-0.043177676935428136,-0.07913484872221903,-0.077322389461912,-0.03605105003824676,0.028775246987637636,-0.006424801356004248,-0.030235093072523485,-0.037608599690123916,0.01595253439480752,0.04545995207830489,0.04254900133645686,-0.04303023224587074,-0.03038217787275979,-0.06408710951902455,-0.032020699788168315,0.033003509373249036,0.035228537826069474,0.10489029983303069,-0.037819402373072665,0.01143262089954303,-0.03564243966650608,0.025551425754188943,0.04170532798660744,0.0516843912737404,0.05258687360092383,-0.010510340741163249,0.04027488290301682,-0.04392511661554474,-0.08466625970123509,0.01108850644478109,0.005009275754786842,-0.015445934069656154,0.025983840546712912,-0.02701888392540893,0.01272741100785749,0.04843083578728872,-0.03687799614811687,-0.0032709605197583703,-0.0018740976858727773,0.04551164445252942,0.03274778439849504,0.07953469459549467,0.016286246530346712,0.03471747234262991,-0.009535574129687774,-0.02936722211663486,0.023001366007148867,-0.04450085974335273,-0.08033174380287457,0.04583829304077099,0.039768971763728546,0.004767673396127021,-0.08287264917148436,-0.031021401959326796,0.09958644417424897,-0.05254529763879341,-0.013432754499828501,-0.10852821179802594,-0.006678872830089982,0.03425346998834647,0.014044647472486063,-0.0031910318497420744,0.05197383525628437,-0.01525929728411743,-0.050606317186268464,-0.009558211535464125,0.033560634189142194,0.017489309777592624,0.012316432691389913,-0.08478464099398628,0.049125515794921956,0.012605136114683205,0.023578786198095576,0.0659606343394871,0.026926538419495435,-0.030043328808965836,0.011794640730780964,-0.0028127123635207584,-0.05811625269932943,-0.024380152828411203,-0.04555406044560227,-0.07478908516130861,-0.023683741018041913,0.07024370995286873,-0.05393440185574242,-0.057820688041407955,0.054760332533124366,0.02505904898043679,0.059775978015041364,0.08167051485756283,0.014732595397990227,0.014542471229366857,0.03329581910815224,0.01896354081746317,-0.03184696682519559,0.0053615366720320854,0.02196942716357594,0.04783300809392244,0.08270811155150819,0.05279229370219459,0.054528119585790555,-0.005021006564693895,0.09897245058091987,0.06855234184265002,0.08249468910501341,0.003571543962273485,0.03554828042537029,0.026024286214227844,-0.07045859270718204,-0.00751192458664059,0.02383667579944259,-0.12521248688399508,0.08689398698935012,-0.05402440941615573,-0.02698931500787091,0.07381377181227028,0.006588375117558843,-0.019687945717135225,0.025361996630262135,-0.06419625403136935,0.009016386072054515,-0.02289410601405821,-0.005019353799027457,-0.034840953425939875,-0.06382131991423678,0.020790953517062456,0.07958788044005607,0.039094381008947486,0.005571950608287813,0.10846254855982546,0.042502552114190184,0.03928458708735841,0.004199301903433444,0.059723705656619705,0.00890651881376092,-0.01619525115994799,-0.04230119665073629,-0.08544363798798692,0.004591695023085323,0.03340847570767465,0.04813780465662815,0.03515033930585958,0.03619267666835462,0.03368214618907949,-0.025941629401567374,0.01895031846746625,0.06205706108509784,-0.01626735995812022,0.08530873184288329,-0.03765906376942341,-0.016856340667927735,-0.010439030463937744,-0.011094135228329792,-0.004857145742132824,0.05634887736803444,0.033009112426938235,0.15128549989557866,0.03312576394198264,-0.03993103681690039,0.0065816074549069105,-0.020766621026322932,-0.007240032834053589,-0.0059679676685537395,-0.028945540022381547,-0.07577183751115171,-0.07758414043419413,0.045546827070966175,-0.08085594831705775,0.011920418235331747,0.020903299527381927,0.010712766364428509,0.034493994192537465,0.031665376606084365,0.05091768243120606,0.08028868394203514,0.005233222132881876,-0.10749932145959784,-0.03836513123527072,0.05567952478456283,0.05201302504797397,-0.04782810712892374,0.014118146625131793,-0.02168412562836496,-0.012614736312300867,-0.019931860338910437,0.12755117928410145,-0.0515665724160254,-0.004752477350087316,-0.019467515066631254,-0.04253613719050124,-0.019208102776660498,0.019940943729719298,-0.07803350850174252,0.057334381582235396,-0.12909208874073164,-0.06229001577920603,-0.015386576697162526,-0.025375430829688156,0.07695450757701261,-0.03127509868377512,-0.029148176865942,0.03827865073149257,0.04176899481994553,-0.04204294686993332,0.046273565363185144,0.02503706686887263,-0.01757565113139034,-0.00037662668451170206,0.07547647334732639,-0.045992131760579875,0.0582072323940169,0.045805971779857096,-0.030916990514536863,0.02742168955373936,-0.06628477446205984,-0.017326394210917587,0.05026963520688471,-0.009359151659908936,0.043918343551410124,0.0012518519708525585,-0.0036018509454599787,-0.035976103261972016,0.043252495414390184,0.08786822828522409,-0.0396171959832837,0.002617920992360512,0.014386107354333143,-0.05234333515078903,0.09079322577699755,0.023218675904072845,0.06240607700425168,-0.0025659099401177184,0.0239135597542201,-0.06189285924671361,0.062117664264997645,-0.10010844916690435,-0.002572328056838124,-0.06103227204759409,-0.019885969918778758,0.10780375767212741,0.08521279593112156,0.01763741812059772,-0.01842910010223635,-0.03059077311687554,0.0207779239564071,0.047739679671422196,0.042596851078798924,-0.020093570324067462,0.06788354933447276,-0.02382034640755352,-0.02029098989055117,0.02243803723094288,-0.07895164026536772,-0.016345941937763356,-0.09005413952121699,-0.05830739118426718,0.020064334137028756,-0.024864007832844492,-0.07589701982927054,0.13708199951488845,0.025032551759370632,0.005446568913345247,0.003034782930155175,-0.00428310832772559,-0.12479163567499581,0.020460985310900973,0.04868335716142555,-0.03370501338727538,0.043481523256619845,-0.0013599936719791291,-0.04494713195751281,0.005134391933905398,0.039593694460609015,-0.00841696475035803,0.05477374608794875,0.04283568288432969,0.027355588268419925,0.08451196674067975,0.06242072766319909,-0.07606201938672094,0.03200603374835996,-0.02534029105685754,-0.031372854419403635,0.06139832225265802,-0.03384282595862022,-0.05178199948498059,-0.05897531130664624,0.0031967721008192874,0.028206906285506088,-0.04941310743112216,-0.022463768664808124,0.04285296710440025,-0.040175160068660204,0.019649761106907807,-0.05283371544402545,0.06938948870724013,0.032623596321004505,0.020588851371916538,0.025843153958763222,-0.013886607764056574,0.02165411557534656,0.10269870033009582,0.052158656531258826,0.0667411740537599,-0.021246471671907192,-0.08999777494664758,0.005975196873767718,-0.05394731076820567,0.04405444081663861,0.056811687672385265,0.06038824444399332,-0.03879117514033833,-0.008965800822282701,0.039250251167881084,-0.024030293821913812,0.03316821228424573,-0.09472849115092165,0.00805039215971938,0.009948491511319301,-0.0770706317784899,0.041228586463450484,-0.023333439214860842,0.0642438541660888,0.09841825312570497,0.025287580401293683,-0.01810675851544446,0.002974537016426132,0.0462700213413998,-0.03596399073760555,0.06672504380720266,0.08248257781297265,0.0438205326298378,0.029512271183519144,0.08438008194555346,-0.11470378145974534,-0.0014373905761833707,0.022903190136529698,-0.10023355601733078,-0.07360605124278621,0.01958181016306302,0.1233810168845676,-0.05668177167336816,0.022216024212723624,0.022003218806654012,-0.021218618607777864,-0.020416288317511258,0.06337388692098937,0.01343763589056404,-0.09240142302389234,0.024659049369549192,0.08422178696980794,-0.09192858260061026,0.04199690838125759,-0.006596420148377054,0.05016109095999536,0.0895336253104548,0.06911225856459594,0.09211039451490273,0.13033567833762244,0.0035017215362735965,0.0350803670527941,-0.008913378518529313,0.023163319995283975,0.02459460527012723,-0.03316860388912684,0.004513938159247742,-0.0019226160269959485,-0.003196163322909898,0.01677929522546708,0.03988247919847327,0.03328015809198914,0.029683878195331723,0.011964517512507477,0.0034194144580636846,-0.054188847831546504,0.05835298418620727,0.07437485640052569,0.015007272764234232,0.09015840668027696,0.009878410915005761,0.013879823109394058,0.11505267137672297,0.11549365308074691,-0.08659886998048869,0.045759099394994326,0.002699071694800686,0.06580029918533536,0.10332996535453688,0.017657305433541857,0.05750088168838903,-0.031763821892825686,-0.001114701778486269,-0.001592936737863914,0.03730264647403693,-0.039889252451778365,0.01975129410787615,-0.03719169411142735,-0.05619739207625013,0.023076842732062664,0.04709809882311186,-0.0011803906161863506,0.11776370406376059,0.008476872331873898,0.0829334214309846,-0.06359099996906617,-0.00424788564276879,0.06035483837409186,0.10528555164857663,-0.042874405120373424,0.07222842253066256,0.0433875040151823,0.0753171593350172,0.08704154249918841,-0.05153390692224092,0.08553055063828208,-0.015315443265360216,0.004781863127832696,0.0227919124351546,-0.04766718325421184,-0.017610754848656863,0.06225707353462362,0.06567841995665892,0.026579586679498134,0.0002909319077182062,-0.04894182727365405,0.05986507361512824,0.04258501469587195,-0.014849451403189162,-0.008411565917438834,0.041877653734863525,0.025118776264913687,-0.0004134794938440024,0.05899092623528541,0.023537581362847237,-0.0026626385725025273,0.005452398742315315,0.12366315136401977,0.1049767494398174,0.11466914153764486,0.0015981957898518059,0.05392806661491395,0.17566607411414709,0.013961613664876738,0.07272686719025112,-0.027977222095203706,-0.013885657500470664,-0.13082985651469842,0.04662044436498798,0.06675945375145866,-0.02182368492768093,0.05603162362341044,0.02102116027875979,-0.09071708978457292,-0.08209759117586464,-0.013462936627530933,-0.06951396478194408,-0.08126363826695851,-0.0665939120949104,-0.07753973302167236,-0.05201889028010052,-0.07434868186215096,0.060289486840956974,0.0890750224380242,0.004874269538606391,0.06831225856849392,0.015289968385914617,-0.020893629815961347,0.04754293878120655,0.0579625602936147,0.007401638211547685,-0.05979225808523809,-0.018337062514033543,-0.030814043867427223,-0.06884312553204401,0.034703476945036046,0.07286177077835577,-0.03397470865816264,-0.002984166437108684,0.044720282198270865,0.04135181903114385,0.009988629118078598,-0.022894735342586923,-0.07377031977310981,-0.011648358867823595,0.0741322009391259,0.03824204679403385,0.05766980287796728,0.02690621230132847,0.03111351884944357,0.014924004854164627,-0.009722303203511196,0.014856341750838376,0.058273382464829694,0.055482492426909495,0.0408315707293924,-0.03035859147576492,-0.017348601110334615,0.054613762722912504,0.022636702961057364,0.01863600481886846,-0.07678348937237986,-0.04040118496954324,-0.0399308992554867,-0.004779139516970229,0.04281822219017186,0.004054793610768588,0.04338302139992736,-0.005910958019985498,-0.033203725013544336,-0.05804785473925004,-0.061191627820939884,-0.05377724566437224,-0.10175053114281517,-0.04868506366562088,0.09056547791805362,-0.0272934239832653,0.038780017715674416,-0.003225382111874569,0.08137409714713888,0.12361905745627211,0.06137511374505558,0.03936526566762968,-0.043910964489859955,-0.006006042428389325,-0.05115927641879454,-0.02233520769416932,-0.032812933236382076,0.025721146731470076,0.02909683142531849,-0.02417902220817008,-0.058187861467500684,-0.05308685207656514,0.08953293372898853,-0.02030063429862105,-0.06512639668907665,-0.04167911684249967,0.04874971344298292,-0.009444070504968581,0.11279327855039094,-0.005190246748611838,-0.026461503730138978,-0.03655194713535051,-0.011878293529812047,0.025465209173427372,0.011726516665947416,0.06935508354804439,-0.03365799585453844,-0.04128444749964356,0.005527253507726284,-0.032673730156641295,0.025488848662461566,0.030413747411120323,-0.04179856527450517,0.0438028368747268,-0.05050482813763883,0.05411036792852791,0.010945495317120345,-0.05694998513166409,0.054682179833914615,0.020209420369426953,-0.12735487859938682,-0.0007054678714180793,-0.004381247366224153,0.10616173606760577,0.007350188314888467,-0.04998040447569756,-0.05254454046563003,-0.05141910026218717,-0.0599001159211301,0.05034234887846136,-0.06842680035288654,0.017809953432006295,-0.028318863097847792,0.019238895719097582,-0.004113410013590899,-0.0035531123109713925,-0.039493909982227814,0.059702361331867244,-0.012939266689877117,-0.017182978062330618,-0.06054946819521024,-0.018600301590822602,-0.06453406808406212,-0.034968239739887864,-0.05061382839846767,-0.12290765364002547,0.013611606757278872,-0.08112807004277202,-0.047354757625660375,-0.00012694611857543204,-0.04720030817883709,-0.024176367919975614,0.04798720538417976,0.061521865907319076,0.05952733572202496,-0.1213159926190138,-0.004425133981730457,-0.01273332824663755,-0.05750128662027543,0.08382641347439077,-0.061155230081824004,0.04229546700525086,0.052582383830535914,-0.027240410464553937,-0.023092227956568488,0.004272821146124358,0.04984286783386039,-0.05274472977419334,-0.09469609121154998,0.045690767995907655,0.13784996939946687,0.05939280421406923,0.1297465474418958,-0.007675460632839793,0.0016786375329275547,0.07871274454536148,0.010955785969828675,0.015904304083927463,-0.08569485138531503,-0.02425689622691479,0.018567787905681456,0.027480286707615775,0.03878162754818845,0.02156917131329805,-0.020476111749640345,-0.08273571309014419,0.03144295982537746,-0.016041133638364152,-0.007403829084491132,-0.015436622711390464,0.050068081877305104,0.08412302761251815,0.05622041910912723,0.008824126567341536,0.13174065486732242,0.03468671414214013,0.05851104311091076,-0.034103669107742096,0.11813529702920483,0.07793294179904488,0.038034417575753654,0.008688464456608584,0.03881462764812411,-0.020456802676752102,0.029265475106688976,-0.011918602022294325,0.04306769042961826,-0.008338252205435945,0.011157682939048914,-0.02884488611652143,0.09142520239470096,0.03378434624239231,0.051291241272094945,-0.006770844508203246,0.03787491056452415,0.05853277726449735,0.03249225019185451,-0.002536579944636403,-0.05871553181191218,0.06718577315701522,-0.0197294264009189,-0.032190644063849166,0.12568602010741464,0.03916659252021089,0.03342263003513483,0.02573887797708543,0.036178450079666906,-0.11235567753385112,-0.010537758218226662,0.010812974739108066,-0.08884628906850142,0.15452003120205804,-0.02614544487645783,-0.029443499993174013,0.008274645430832553,0.010952119532834556,-0.01183397419652298,-0.0975928483181848,-0.06741833573212344,-0.032956336611535963,0.08418294586771687,0.05608723189662999,0.025149571960071233,-0.02530652728418792,-0.010927807133194448,-0.03274489592256266,0.03659881733262935,0.053050023205679545,0.09818917882458959,0.03171894679024808,-0.013454225944876599,0.016720368226881385,-0.041351715658709196,0.03289545993413449,-0.06182924462467454,0.017017341302938013,0.12102668336344741,-0.042261061188989875,-0.05012226013576646,0.10971159790475925,0.005698763018611354,-0.0429767929739452,0.002933332617676795],[0.11935294073413658,-0.0030595089513871646,0.08960314544362658,-0.06189563180629465,-0.06545146560991026,0.07539046870848275,-0.0034611326178310836,0.06728721117784064,0.04905343108126081,-0.04974024278481998,0.0018905945486940338,0.11534450294915459,-0.04839696947405669,0.01691064137211722,-0.07034039669134377,0.017813164103145852,-0.06048313763233591,0.004353253292353914,0.0010849089265268209,0.010494919848397411,0.04741649419287753,-0.0641950871734177,-0.04272681929493374,-0.07596212162035618,-0.060095099733348735,-0.0030468175323827337,-0.05908996245507367,-0.08981949707376587,0.06147162580949867,-0.021796343778616077,-0.022029482337159362,0.09183833334049855,-0.008519315810493575,-0.13968276032164695,0.06100209229449906,-0.004365639990548472,-0.09748726191811459,0.11243000331415888,0.03291871481197192,0.10530417944296909,0.05181261402429046,0.006303015616477339,0.028486934622620502,0.02769755109182742,-0.03276746850080954,0.04710102692410114,0.05420009074518357,-0.030020244822997245,0.01613678355189337,0.0065282966760313345,0.051094124822244014,-0.04038434550721585,-0.062576611832855,0.008923869277870944,-0.013938341678119281,0.02070630119607392,0.01183166400758252,-0.022649997312963136,-0.07351305368658993,0.10914022692098224,-0.004863615906839751,0.004848130302606668,0.006441693567489211,-0.012282986917459928,0.03696279059478516,0.028317296245696674,-0.03350003195150097,-0.02116415645902459,-0.00941182514566286,0.024058795798595094,0.024892549744960746,0.022766658549142872,0.08751390367573246,0.008084768391173246,-0.03538421885455261,-0.07228488718729373,-0.009995823951682413,-0.06862117847583966,-0.09298631162492038,0.007967002470382532,0.02065445104792708,-0.03653695978385528,0.08612556712362207,-0.0023856722360683035,0.005956452235318258,0.19169574004570578,-0.06492671984828248,-0.0016063358271350384,-0.03282567206535529,0.013384093743918172,-0.08289045018342947,0.06924363662269202,-0.007741468338575837,0.0290716960348082,0.041112674214005586,0.022223467230757594,-0.04374169645428416,0.014935449810886948,-0.009039042537254726,0.0002835452175742636,-0.042539539507987716,0.09040448583510174,-0.07815518063111691,-0.05272475627074595,0.017954395984846685,0.03352664143239099,-0.036361673549198205,-0.05989337905420485,0.08844378785524748,0.010432340220949594,0.021829105921606865,-0.035481626697306125,0.012219176243974264,0.020698119205787815,-0.014480101058769703,0.0778704908031878,-0.054938751269167085,0.02504875930599824,-0.028666260834528525,0.025811588664947132,0.051214308927018524,0.028148467313252285,-0.054892635788013865,-0.04201187065923616,-0.015560331264867,-0.03246746622408527,-0.031157328664256446,-0.07552123244001709,-0.002565488388738327,-0.0014061997806848086,0.06337498451139553,-0.03573145525005082,-0.10374278357587195,-0.016619958840676255,-0.07273218234155475,0.008443128610849771,-0.0911240674452982,0.038885000922689664,-0.07132955574309247,0.03058320465049143,0.03957333927552269,0.017078792085794145,-0.00408605046977017,-0.029417011391566977,0.026659034047823636,-0.01000839753251662,0.06208144261964791,-0.028914894879034713,-0.004017163008648324,0.021180698199569165,0.02242953950696586,-0.044493629226269336,-0.017726680968711585,0.06413943056570563,-0.0842357335606727,0.010561166543795832,-0.04268743538563565,-0.06198992873518541,-0.09196497550141947,-0.05964640694866525,0.08217898517750935,-0.05552868752187758,0.039043180706661476,0.006356600649383852,-0.027162841994684966,0.013506008985529753,0.08386488460028332,0.07278544761774042,0.02086536341864936,0.015280844260836902,-0.010072289095488692,0.10689069047416905,-0.01852118465672489,-0.0022124875358678765,0.0262927186407414,0.012400572825195397,0.017919614510225935,-0.015336844544454801,0.11384915581644871,-0.007512674598849636,-0.01551932692156704,-0.010910739713968338,0.02858394835638056,-0.020617862427985315,0.075618843795164,-0.005421975041542019,0.01612426029749986,0.046597226743844,0.03497804125424432,-0.0035388566979343344,-0.027034977928053105,-0.06927512319555681,-0.015263868477095948,0.009734782249675264,0.021994986950379835,0.05196382005850305,0.011161057041516043,-0.03745119675639175,-0.07005974841332499,-0.017365532479180372,-0.006860655322289718,0.008908587599395805,0.03549135764770393,0.003576553792052075,0.051129606938863724,0.1197278126214136,-0.02025045841199733,0.08108123835307277,0.11824496211680302,0.0934264142279653,0.05348794564475509,0.02854021681842898,0.010144797954371098,0.10256979774571945,-0.015695854687669753,0.019165985692263278,0.025162148519124523,0.00314791872797486,-0.058266278127344986,-0.13272527132400633,-0.02458378930585007,-0.08767749155937256,-0.07072455840635142,-0.006168323257113959,-0.04039035563409062,-0.04721967729664755,0.014335001590370286,-0.017044880191856918,0.07646550651046391,0.0055427125109506255,-0.07327936367264806,0.012899600435437152,0.035785847697323646,0.029117992144081287,0.05697508867410041,-0.029151094782247356,0.04962697170312294,0.03710997648026671,0.024834589095121557,0.01945716175907105,-0.015830206232956362,-0.017324200269781702,0.001902756441454459,0.047335902260417825,-0.021863092501706417,-0.09767748175404599,-0.001122268410634518,-0.0961764780745987,-0.01135707647006022,-0.0057471483608249945,0.04651714117675526,0.055025500426325494,-0.025200249947862047,-0.0556817060663151,0.01872154105893742,-0.0656286795339512,0.0254083064618049,-0.0023887934484380854,-0.061360869900789254,-0.022423926982260978,-0.02182277048486163,-0.03502297091455063,-0.03024670386539518,-0.02072090467016061,-0.12244770797585944,-0.13321636715129603,-0.08653824169565258,-0.14459086629512283,-0.07778699162257624,-0.0506923050723632,-0.15000819157814174,-0.08123357367173539,-0.0023824967558280603,0.04880020435033245,-0.04086540199917316,0.029947349824217158,0.07325763066572051,-0.02883251560969843,-0.08334630890885121,-0.0008269508946658089,-0.05101107464099946,0.10524739665438285,-0.011833021342033762,-0.106841836218619,-0.007479689775564128,-0.04197733137903275,-0.0917097683173428,-0.10884530429567947,-0.13683900310456817,-0.022718351682915496,-0.04827729304416323,-0.03211513844495016,-0.0891012715333949,-0.05740470044707466,-0.09267151072226065,0.0017352630544529887,0.047366275553470075,0.0434489012767746,0.010207316754560007,0.020019197699460582,0.05533612471633632,0.07723968348745244,0.021144951224649346,0.13379712873416325,0.11477379036386592,0.12237225876338098,0.08993697288671164,-0.005268523293355894,0.1361997255217232,0.015809883235536684,0.04183311523879452,0.045086936430060016,-0.06359321926824595,0.011591149954491344,0.049235893647188354,-0.14995790186892813,-0.06335220300115356,-0.16569425437028376,-0.07058641668927702,-0.06960091231786168,-0.08834955138352522,-0.13271437613213075,-0.0253735927375787,0.006643318592275697,0.03024849247063278,0.015855191332911314,0.0574407794799329,0.025014015068498742,-0.013020904651350636,-0.011818446310004286,0.12381547774473486,0.01857541876932463,0.029574596459111462,0.0001371236879767796,0.0037305918277211795,0.0094995611655761,0.05368494942987125,0.025089248108240494,-0.10646854584362253,-0.016590414372144327,0.07518055596750695,-0.09971803015244779,-0.06798343960194213,-0.07817799587845013,0.0007743342909344773,-0.12850364886293775,-0.06529688147360913,-0.07708837552133353,0.043177851391128126,-0.0037115767187910704,-0.031628271776824896,0.046440223006954405,-0.041607052802598576,-0.02858876620465308,0.03152672798044944,-0.06757148397124417,0.06601138157886832,0.010335420955004468,-0.10088901001358042,-0.10130818348142653,0.07272229808962653,0.011590980477299397,0.02701908464075287,0.040976195915459555,-0.009849945120812673,0.05053774352277889,-0.014570504123786963,-0.06354512688848506,-0.006681526776159858,-0.11776994368144304,-0.10701836756662018,-0.020328014556061234,-0.010243362782952157,-0.002461017915682406,-0.0011193537630654082,0.09672695030214008,0.06370046938857499,0.17316161878585687,0.050139843324026566,0.025237135731473334,0.03693502062115123,-0.023954346607589605,-0.037031588518994935,-0.04065109885597477,-0.046318590235859,0.02411239488257936,0.0267656442545266,0.008370171268920402,-0.009586290195077944,0.024290300604147205,0.057482652087604655,-0.002731506904410842,-0.014279909777293398,-0.05365009892654195,-0.0060502310675455105,-0.03210070768146062,-0.021969335469054146,-0.050613327323733526,-0.03266005202941446,0.012402702974998635,0.07848030043767591,0.12350444417045885,0.04616807892480906,0.10791073916854269,0.0774464683918996,0.08921484174472875,-0.012395637427166994,0.0018324028460460244,-0.010509862830837925,-0.03985875337896269,0.0046588076089320255,-0.0265776524677548,-0.09227780029441064,-0.018285601287381718,0.07451462933728618,-0.0029736252713220557,0.0007518668374746049,-0.029343341729171416,-0.01122546649195549,0.10304790774579098,-0.007557440511471532,0.006179390532797892,0.019032576735344173,0.025633579689843235,0.020002829962747017,-0.04417329260919871,0.11195501578381419,0.10273058658941836,0.0701403585173206,0.08314385053766711,0.12345082619851061,0.040052128444082166,0.17497386692877714,0.04812729195620363,0.0758917474934357,0.015462586682945699,-0.011071076471868604,-0.004009803131872441,-0.04093889838140141,0.02270340006849993,0.03130168753614479,-0.025877654881308696,0.05077639334425126,-0.040570428246159244,0.009377563323520246,0.005193565413964998,0.0791353102898627,-0.020817783475828987,-0.014069628721704332,-0.021726611346643398,0.010249530709737713,-0.04123416677580626,0.033810250997689376,0.10015405308553244,0.07118135064359804,0.07691402881843191,-0.0029840429647232155,0.14715598547919298,0.0775012460709976,0.032808058908835674,0.08547112565887735,0.08732813485723272,0.01154064911107399,-0.015035623791337596,-0.0031347590490580306,0.004318952668319768,-0.032291009315161705,-0.06378329629672966,-0.03262718906972929,0.08740838663853824,0.02798659126424261,-0.056900285050427005,-0.03972430389986066,0.01580436164859791,-0.0016923703944913505,0.024682885303895275,0.003547209105826737,0.031372062425802996,0.012885773189761281,0.06858251967285006,-0.018357859724496904,0.04639193539091495,-0.06455907504511758,-0.0133093519534484,-0.06296811049864831,-0.026525250941583464,0.09940315837205392,-0.01866787029319121,0.13202208613653277,0.03684597508022072,0.016743500491809594,0.05817503171956003,0.021884866791249086,0.005634040981436674,0.008087627224451903,0.012235926443146352,-0.05042202156551615,0.02888125568255082,0.09670773225420659,-0.029929446220335283,0.018962077243457148,-0.07376034320193936,0.0693440152946306,0.0229226843652272,-0.023352272705517884,0.10716444318691423,-0.04177165206118468,-0.019519770759371138,0.1046696438097657,-0.06911165700215866,0.06078298214326876,0.021813346928280727,0.08878128942902641,-0.04179296406854061,0.06363621529691493,0.014013382100595847,0.04137561061503457,-0.016448865888644384,0.008137127668585134,-0.0028949871681975626,-0.09299453035003256,0.021069047450588144,0.04800044733414326,-0.053538773695832764,-0.08868840592047639,-0.07219791715102374,-0.05918231901691213,-0.026228680172652685,0.047503102415265286,0.01969340205414844,-0.03926035751285909,0.054717061678782514,0.03892195067485926,-0.038612742896133555,0.027466228170330845,-0.0005427512957899047,-0.01635999775055292,-0.058169774483967714,0.025345620882891776,-0.022614883511175916,0.015169675927773112,-0.09276264352516826,0.032449557990860245,0.08402201218328782,0.021619896704764826,0.009030288354914888,-0.08532624576892875,-0.06359263711380926,-0.006307635366176578,-0.0268690237427031,0.13069538590897856,0.03127678390051694,-0.042986305591774646,-0.06736131842022437,0.055916485626277414,0.04060936646351848,0.026568460994427598,-0.050653866760503964,-0.11714735353324758,0.06825205782906946,-0.001009447501957582,0.03933942323506549,-0.0058745742854466486,-0.06811503015548395,-0.03575378627487069,-0.023515831605277527,-0.06337792147831689,-0.024300443899768986,-0.07680755556966896,0.05540882215754745,-0.08326501688371948,-0.14545547098022457,-0.11725142137808794,-0.055683966234814586,-0.06424737441358984,-0.14895608292097423,0.03287931222487551,-0.19464207919294868,0.008141278465543042,0.06866718150077536,0.02439052370046442,-0.01799509042446072,-0.05298053404299609,0.04664835507118147,-0.04514551228528488,-0.04196494422886235,0.02013236884334664,-0.04896938502688274,0.015149917210464648,0.045786015702500016,0.03766692601705912,0.0291950418214065,0.004188955867660447,-0.10592765446479781,0.02588151619676988,-0.01251560891071064,-0.07536818867239747,-0.05154906334777945,-0.004300100580711917,0.009230149169059109,-0.010928180678703592,-0.12548945304637873,-0.052588294907766196,-0.07708737842025391,0.0014656937674517275,-0.00008650327518047942,0.009864691246358045,-0.004292441141435791,0.08209766026265267,0.0539404993281759,0.04286571798112073,0.032743399577280896,0.019351566969432164,0.1178628255724407,-0.0700523574362519,-0.03692687610875984,-0.07924476245742335,0.021528375032927746,-0.0384230686826688,-0.028054936711716487,0.04511322055716431,0.04638138126794715,0.09636987480553116,-0.01933445539536093,-0.04040139404694857,0.060880124742403244,-0.0030843636790867214,0.05017112960149168,0.043238175897370314,-0.041316441193625465,-0.05394139860408352,-0.05934043389562143,-0.016935413845607813,-0.0534209362429921,-0.063187073464832,0.00934195354199388,-0.010053713949247065,0.08143368724611987,-0.03646355933382379,0.027009990541733416,-0.021460003955642026,0.000737169918600119,-0.08326182916374618,0.047228574504677594,-0.06830782966800476,0.041608509859650346,0.05799701310280395,-0.009809998065061989,-0.05341885394770743,-0.030015747664451305,0.02326162371873677,0.027841179218314895,-0.05184020510817917,0.013883557268784503,-0.06888301435190967,-0.03401638748890664,0.03937058508170101,-0.0020590748245806023,-0.037700679972715145,0.021032584615681138,-0.051470467847663334,0.0715333661843953,-0.07505136119226515,0.026837665917139857,-0.0017992796092269935,0.04946422796086938,0.06079297088809193,0.007562489222689527,-0.040290807859130855,-0.0805150413790548,0.015372463738562443,0.034873105716414554,0.011639102110306759,0.07249783136011523,-0.07810912647944775,-0.09359132476340984,-0.030221614779692325,0.05218225838202934,-0.06922227467253755,-0.08471578578714932,0.006898779979917334,-0.004146122257496956,0.03055442272813072,0.007756676482005427,-0.043232565232489376,0.05997015390261424,-0.06949131812689366,0.07103474309455415,-0.04317964246071052,-0.009433144772453356,0.042873373895866214,-0.07593090915081369,0.01284478511797863,-0.01092058892794018,0.010682881832622124,-0.025926406462213513,0.05957842051829277,-0.006808773271909345,-0.1020988364642312,0.017588741663183936,0.012310013933015066,-0.02237884613994626,0.048291866913273654,0.010684761903751654,-0.17813812620030553,0.064272233076994,0.06656231657798203,0.03582894343602822,-0.03880475532616675,0.06662894939837434,0.10311495396014043,0.04809755967695905,0.033723405886181786,0.0080320547032736,-0.042453783445436405,0.06063324393012809,0.014035410444071488,0.018928773591285007,0.03797500858997426,-0.07940918060358038,0.09681305016456755,0.04156697595684079,0.021165780106190284,0.04754815555710527,0.037428375606697005,0.010781192638204888,0.08996959669774661,-0.04498204425645381,-0.1285298606221636,-0.0549995073895685,0.010683169509263707,-0.0023554602436528017,0.09124456783789182,0.06235244727138499,-0.02833797097412972,0.05300601255592436,0.010456600127316976,-0.012564682130797079,0.05715962715620652,-0.017873531663161,-0.043797610069712535,0.05505772829288081,0.031198620965514342,0.09285857953720716,0.016472613527133556,-0.03191441727727645,0.03793010724027281,0.01989632245476636,-0.006077459797574918,0.03138082119702437,0.016077415556016373,-0.02315498402351255,-0.06105406181110474,-0.04594932124770694,0.03287845758126984,-0.08645612616341572,-0.08839034843356706,0.0242418911680275,0.021323670325696834,-0.07105126441686861,0.09348398445990225,-0.024508014729991614,-0.02821852474922079,-0.06621144467699837,-0.027368413319911036,-0.038576690792546435,0.03538315602254767,0.02645061053274745,0.014649673276009564,-0.05013518159931473,-0.04085870822845144,-0.09794847250928389,0.005631207666738623,-0.04133135483616263,-0.030595512377072018,-0.06151229838607127,0.048314781768174685,-0.08708198536562155,0.11070127267555607,-0.0034961488134607564,0.022805603762742634,0.03908861557120209,0.05152748206662049,-0.0018682324368318069],[-0.04781451711743826,0.05073296487562252,-0.08997530599578658,0.014414811479911853,0.04132041889955813,0.0025262752494808827,0.06540798390323911,-0.03517312556252891,-0.15992990813597735,-0.022781698473179218,-0.15155413756563135,-0.13969888364408117,-0.06092621707725338,0.07648024016971393,-0.00460413423306569,-0.041863240492419816,0.011302280633808255,0.004704941598394009,-0.008705063725780919,-0.03491754662244516,-0.04662917315684724,0.003889732326534506,-0.05220449793335506,-0.016595827169933654,0.03187203182128731,0.03625214296785744,0.007638906271386829,-0.05403406594681448,-0.022845570785895213,0.11800129058614645,-0.028881300607966308,-0.03483329946341163,-0.03619266267309997,-0.012668946027688045,-0.062166986903702,0.09053387940279607,-0.051977258670011905,0.05873917893990009,0.02108873588587759,0.01853363414300455,-0.031055830534013965,-0.04317267671875376,0.08942685473240385,0.053559807227571636,0.03628536207295033,0.0027405669116156487,0.07193149317423807,0.066835656058434,0.05752734663026539,-0.07354348172004876,-0.04162794349312844,0.026117064351506205,0.08984313850051476,-0.055312434820249355,0.023248221001249993,-0.011399887086691141,-0.022760280972204172,0.037714126979021684,0.010082406422262805,0.010020712796248521,0.026311714497004802,-0.05737528467985044,0.04008425608457565,-0.0107082974975426,0.001036846617456467,0.03144276797720405,-0.044398101941882914,-0.035486502450832846,-0.06567418664133735,-0.010344134410814278,0.010029472697236813,0.04214493131771534,0.005984232686229985,0.05539061831901842,0.039903897499053036,-0.024937928387228015,-0.04681138448716754,-0.0002488784441580497,-0.09918077474779576,0.015534841842383082,-0.008454544343406407,0.006561239839065633,-0.013090969038621112,-0.09797190502022882,0.0236336490529089,-0.017047007700453014,0.013725571173224272,-0.05311610969224004,-0.036174253311359296,0.0488210941397699,-0.04956234391755398,0.018896761175611412,-0.036271158015853254,-0.005045590461766457,-0.020634275756848272,0.023995222484383304,-0.0368710512705664,-0.09430781315531712,-0.014534431583626724,-0.007092112263721808,-0.015946765857541127,0.1378942396773343,0.03191749873500821,-0.018787384743694308,0.00022089213706047743,-0.009568610241407772,0.07181846192884173,0.007751184291493302,-0.032828649784582616,-0.03335715066824277,0.0696677331790141,0.06783742874544575,0.06542535037299693,0.06838973620657372,-0.062319509705215784,0.10513432821427453,-0.07027505810255538,0.0004075389873981855,-0.03369474535376631,-0.07660000993054902,-0.060387676582075084,-0.009345431399835227,0.0308464276421207,-0.07768119372242485,-0.04578709801073917,-0.030710500231217963,-0.0532216566660266,0.07860687152768757,0.009247635124168204,0.08397918007356006,0.04731375213494403,0.09922251531190408,0.007841539472256074,0.07045465755898132,-0.014471291277808655,-0.003021417320032263,-0.013805568650918323,0.06625503430413374,-0.019194049956516482,-0.081021517307957,-0.006307253343433457,-0.029555420051463666,-0.046821237744674706,0.035618428115432074,-0.017332676524502964,0.04050892156332764,-0.014874842344639745,0.009594194960734876,-0.03103527278142034,-0.06450675018659983,-0.010661707490249776,-0.0736433833141274,-0.09007796445821574,-0.07042137611616399,0.02126224445128872,0.018812585335355517,0.004798351155723044,0.031030690970535183,0.10206849658836327,-0.04190869020873043,0.05894633467853037,0.023445646258743683,0.1106367418835537,-0.014536952785849891,-0.001970610496582248,-0.01400877023834526,0.04314520188709854,0.015203938548914067,-0.03273056396527319,0.0184267662593525,-0.01683191630450462,0.06912744291946007,0.009302303201063946,0.025999984178986635,0.0009649137220623382,-0.1756559383013677,-0.012545915029165484,-0.020717926311702058,0.1109187892190455,0.04087569772046673,-0.19067438434296646,-0.007170807560937825,0.004872862378577268,0.04410337507007491,0.07102926359537552,0.008973909855703654,0.04628547586277963,0.09049758252724344,0.0930908224746938,0.038594670200746764,0.0662584795234224,0.07532919348386853,-0.01540876774167844,-0.02830320432134752,-0.04224987253039772,0.017513209085277016,-0.028661955687260016,-0.010113614905469264,0.05341053714055871,0.021883439661732822,-0.03907553878393671,0.05709428246915226,-0.06272842008260515,-0.030843437923990226,-0.06369728139322296,-0.015339156160823998,0.0999816375620144,-0.00327037847861071,0.01107671507322134,-0.013987665126869685,0.07644084640504845,0.07017885140478632,0.09095825122137167,0.08946585097952063,0.03785646299966679,0.08633401687537612,0.07239345763459394,-0.00829711266870371,0.01915784808323353,0.017549539140221056,0.04519753275666667,-0.04798353900265947,0.04777876441888621,0.025348682372240028,-0.03133897561147242,-0.027636310420991145,-0.008548871546614021,-0.0008867260493716366,0.034867092682463297,-0.09032867768414236,-0.004259342900829313,-0.010911685272494667,-0.05392306088444396,0.017983736799061106,0.03412298280524587,-0.005465877160345633,0.07178002034394591,0.08563495761063789,0.09807982300761872,-0.021666907276344825,0.16359490958012232,0.010711621943840162,0.06738279824777064,0.010304367246567138,-0.021283933545823412,-0.013374921031977112,-0.043595481187740856,0.03191374614041433,0.011860806446772384,0.04814122083713122,-0.05745383599392583,0.06952107551940638,0.012650835876283677,0.05032793471856603,-0.048902507088075434,-0.060843915619829804,-0.009042338633434191,-0.10747898719585021,-0.01904912330655897,0.015567896385637759,-0.020335143068341232,0.019135777800788546,0.11868906807005251,0.07078548859403148,-0.033905037194976166,0.05442699889277028,0.03422576926763188,0.040915027908507665,-0.08407583134892146,-0.034342721864668656,-0.020088779407332773,-0.0613073879136878,-0.022527111904037764,-0.02042989530981806,-0.1338921278809179,-0.002617877531570783,-0.024590724065093033,0.03313871796988476,0.0018956711335537729,-0.023765468218657316,-0.050425007434208274,-0.04161563720955869,0.0411463863754038,0.006299036212743214,-0.040493357746008714,-0.009108501743472112,0.05271385782690678,-0.00694663074932524,0.1274360187335888,0.051834719948338076,0.0344238563163131,0.03913171494303092,-0.019257373465572238,-0.010036339733641247,-0.029188927937852927,-0.1535677959596801,-0.031168956207870895,-0.11056213219101617,-0.06776635561128552,-0.14220282807044407,-0.06136047040297825,-0.10980704256450015,-0.09636579989500571,-0.031353283316264594,0.05007918430342361,0.05138725683925872,0.0634638978607836,0.029278788049960393,0.004502646658957877,-0.02357816564310866,-0.024648599428749723,-0.07643300134340493,-0.043417078921472424,-0.05636507844098362,-0.007740776381800199,0.06231729502197009,-0.04761846027417707,-0.0044549314448609585,-0.16584711481865558,-0.0038851972789439465,0.011719209897358357,-0.027938457643663334,-0.006412276117377963,-0.15624427546027075,0.0028429669028222308,-0.10726560952373955,-0.11273294219739294,-0.08899250601610295,-0.07956414783642285,-0.10722309522593111,-0.16062602884285568,0.028053860203947557,-0.05689956831517505,0.006056592384450143,0.0042402665540468626,-0.032739620778985346,-0.03420977179126965,-0.011755720494562109,0.03842698764097692,0.007435524843901647,0.09225542338155011,-0.04153356730231012,-0.027774590333399976,0.029343777254052367,0.008784811523974572,-0.03656925888027329,0.0644267757908796,0.002324801654003906,-0.040796229417494057,0.021276244095689116,-0.1301016122230162,-0.024691460453942493,-0.0650172861965551,-0.06361658446990673,-0.053034393430052174,-0.05246025809380273,-0.09783724544350204,-0.16964848326815699,-0.12122028372316154,-0.07911111667235197,-0.03786261064121499,0.03710447395359543,0.008707656705756135,0.038052529526762545,0.009044974540721114,0.08193493353561238,0.09010458042762781,0.022582810722031558,0.025510540663252014,-0.09565332702447273,-0.015043143217191036,-0.016861134567539855,0.013554569950034664,0.01645521066157873,0.004875749167009888,0.04501434217359,0.11271091921984554,-0.004068959693952043,-0.13246326275376188,-0.02737099448955074,-0.03675866343908171,0.002826950679709174,-0.022823070208686104,-0.01246308964781261,0.045750416680321135,-0.06769415848583223,-0.09853196985123579,-0.013727715684966377,-0.01564465234206058,0.017479029686255775,0.02370936323467354,-0.031473866693481456,0.04693041128255234,0.06942968415555544,-0.012398040376719896,-0.05583156450233486,0.016454629449472406,0.061065385286831315,-0.0812433002336011,-0.025030554569751253,0.015532573898820122,-0.03350842093803892,0.003391021777930308,-0.04588570393922133,0.02174696224907716,0.025312553130404654,-0.08338988808648956,-0.019928883726694827,0.011931915953538813,-0.02304513737245441,-0.003559416189726411,-0.025854112782822663,0.08250884725403154,-0.034478682674449604,-0.05561280703308726,-0.10461948809877307,-0.07530945871907374,0.007971293061261087,-0.05722962207493245,0.004750378691859495,0.06711506315708654,0.03696242799523091,0.034757422205341906,0.05798428787461771,0.03369745417044119,0.03434853959879365,-0.04021494341666683,-0.001409471309559601,0.002977033812556554,-0.023483420039392394,0.06726218956017796,0.005229693870189792,0.0036725354406040096,0.02192590339784322,-0.0451103111719003,0.044976194969894016,0.009416497246533392,0.020659019276004605,0.14015349192549398,0.0715585967529182,0.002953205130966317,-0.030384421449253005,0.006486705394541832,0.0027126087741922464,-0.0581042322195213,-0.07626364137047326,0.031053904366197753,0.05528350994744537,-0.010438815438977678,-0.041008460716756734,-0.0005051987797066528,-0.016352756084542754,-0.06134017748381669,-0.09093907936505481,0.0053117473267258655,0.06012727536800477,-0.03634312736965946,-0.05091168957443889,0.012629559070744645,-0.06669028984835328,0.06629846220927613,-0.016221863370552474,-0.011062491137341266,0.05477478921866988,0.024839594582295066,-0.05774309740390502,0.016892882497469536,0.015742530401605927,-0.05085966146119852,0.05085918427874573,-0.02924397799215511,-0.12736954280591137,0.13921172632211798,-0.12070815594341226,-0.037813236152766,0.029987697918787807,0.05318083753209264,0.05703555232548237,-0.02758039347915005,-0.06948702220719434,-0.051720206740977666,0.057416543091898385,-0.010784381479518233,0.0024983726374263066,-0.005467269661044858,-0.01181947364648186,0.013417270703802019,0.0097405647712627,-0.04821728977292296,-0.0536147303196489,-0.04114020428127698,0.028697587763473816,0.024090714946349488,-0.022240518026071625,-0.07243298477972167,0.064234061312734,0.1763443771904172,-0.028973960339180687,-0.043186037359922345,0.06207538144951283,-0.004505223443347225,-0.006183939860309294,0.07039159278212988,0.03310751784032644,-0.02980169978738084,-0.09944302513615232,-0.0496728468039032,0.03372898435646908,0.038934051558727055,0.006717003612941684,0.014073138472375063,0.007476040777721851,0.009855524942023823,0.05702104589805057,-0.010344776771876858,-0.08246634434317489,0.053649891236652404,-0.002720024864254573,-0.013206633341045838,-0.04149116140032083,-0.004371304222036059,0.03977311694034496,-0.08289810455565295,-0.016748751525173012,0.014350665421425494,0.060484376053548096,0.003753498230377888,-0.028990288073958096,0.04524265224891284,0.023566137803233828,0.03301665934260871,0.024452396748853883,0.029613539692360677,-0.12544663332355044,0.08117573220137461,-0.10057741152646518,0.1760390722071973,0.007421829983925126,-0.03453611593725116,-0.140748784238999,0.007430364325883885,-0.12282081999346117,0.028195718200436874,0.024987356953674652,-0.007399856471872863,-0.013525834277689032,-0.030050516328113886,0.020569667771610952,-0.09574535856474363,0.0206744072381206,-0.003689118723376699,-0.09952647182671452,0.05891546977948033,-0.016388211971268704,-0.021352616694597582,0.020878862957993096,-0.0446012938280095,-0.047707970569506764,0.012542077680079911,0.042361483607096094,0.053577977998550935,-0.041355497634494726,0.07704200524615475,0.04616246536850864,0.07570684966692286,0.004101306715578369,-0.026621122232006012,0.019794917093129763,0.029969614730607434,0.1081403143033732,0.12355799033497507,0.06550875322746914,-0.008957406323262243,0.03779362061792866,-0.016992315827215526,-0.07546152213100216,0.1185652256635834,0.0007316998128761319,-0.003465658587070786,0.02632527488658248,0.05380685559904274,-0.11352515109956929,0.008099005401545933,-0.009036326290997484,0.0010245947778871876,0.0656237881518351,0.06499208343946188,0.035330446645625097,0.051445069047605284,0.04194806423280669,-0.01987593540962194,0.015469079271059658,0.03178631968146713,0.021889288823016915,-0.007851720924725199,0.01318252702319834,0.031197065535504654,0.03062265591212493,0.0020808491918409655,0.06578972916228869,0.04510004407246778,0.0018477033752379516,-0.02088705730731404,0.0006042676642110992,-0.06939888686109595,0.09314717363414264,0.03661674143923642,-0.008194693105367284,-0.03769987221918891,-0.03190347569843041,0.09027256237842307,-0.0006215773939451105,0.07175789774996996,-0.010478428511701152,0.07709549886859872,-0.0861555909351312,-0.04331675903279892,0.028448536924210156,-0.09513701894421903,-0.0607667497817505,0.014482627085652554,0.0728285571231119,0.037867072756309385,0.0641893961375486,-0.041671238077168056,-0.10261465735565525,0.07198708466237716,0.04061714045639709,0.0591481756970701,0.07949707023056161,0.014355929288698175,0.10315978144208444,0.052315681302874416,0.042923030106349305,0.013758256452375706,0.03904814993781834,-0.019061211216465736,0.040706406494122334,0.06503815356524689,-0.017453053045868958,-0.007985921949971794,-0.03694862424744415,-0.0429848247120451,-0.07437899695149026,-0.04786430133297408,0.009309560460406163,0.0658139958846527,-0.008466608571320314,-0.0984453140668204,0.025367923134847658,0.04163432055307866,-0.06471782733702441,0.14725542866322647,0.03656191633598369,-0.05455374368831971,0.03297900106518511,-0.06743894793042451,0.07696922084723053,0.0003724167546045838,0.08794518618420237,-0.030122782272002296,0.06655097690497543,-0.027966807108973337,0.032700411550406025,-0.019191964320070237,-0.0002209059567182564,0.00023746563899809957,0.0072237107613617475,0.004603245596239136,-0.0011334997273459964,-0.07618118562390896,-0.003561672275081083,-0.011045442847004296,-0.005664368192538939,0.03710916209945423,-0.018229610759052352,-0.04419732414334791,-0.0058048022538542176,-0.04390805945471361,-0.08410637427697266,0.06542365246928353,0.03175121025481898,0.04107220700788272,0.012823458023166905,0.031710795425980744,-0.005844329598601717,0.06949333000404916,0.03776627765555503,-0.08767653961881841,-0.025139304567950046,-0.025409348973669376,-0.04685757109201474,-0.0022973167253357196,-0.00402550303138586,-0.040188460854212286,0.0290178485435359,-0.01654620751171174,-0.04931380915800695,0.07856190703791473,0.014707255582375615,0.04552518982123242,-0.0070538536612362295,0.03786268760795085,0.005737780804533398,-0.06582737361698006,0.0408298969635745,-0.04804267715848838,-0.08790285944162565,-0.04216799369276435,-0.026199325251139802,-0.014420777115336743,0.08332079005832306,-0.062255300272391796,-0.0445640638902582,0.015046644758949018,0.09327043969997915,0.03192935740455739,-0.024844335735397634,0.04880752181545082,-0.030416437985532212,-0.008326127617079572,0.0026868767505889993,0.03180956674108689,0.0600940828888548,0.03997413194071567,-0.06974598861113711,0.06110722814584341,0.05104202382197592,0.08728854964740076,0.06708795199176663,0.044631197141623044,-0.06023233367840585,-0.12061545904825363,0.05384872024046032,0.04686802723223885,0.022548010718423637,-0.05496697960763572,0.09789117882584446,-0.014677389534944964,0.03453324841217443,-0.05177923287922322,0.00752674222397283,0.038757038882430817,0.032950667697772856,-0.00878211813549438,0.03546608163713283,0.012119538226992346,-0.010286036974411272,0.010210311748206649,-0.022484563762002502,0.006753918421615248,-0.05299975510937138,0.09696532648611289,-0.024607276638894737,0.010885926893873637,-0.020141039338406972,-0.040026277326623165,-0.05816694882704868,-0.014012583337869922,-0.03944961643812538,-0.033313920389079314,0.03925210226238189,-0.08408422450842479,-0.03046909454570622,-0.007930004637690053,0.07912364378629318,-0.03209210763161012,-0.02284192331008652,0.003970840319000932,0.055784410153152726,-0.011648729223589302,0.02763206413465666,-0.07414989926598968,-0.026336564276926544,0.024543264372891976,0.053037867521154296,0.014455308625939212,0.03587810917949147,0.047176647549264955,-0.03473713013506157,0.08855307071560858,0.07003493337083802,0.18126177355202558,0.05558203396644294],[0.03697118201380994,0.026951899273173582,0.020486280936845278,0.059958409321282574,-0.02151185257473549,0.08993579148204994,-0.09744298602903961,0.06237727178766531,-0.05169803005559989,-0.018860439354648272,-0.07197153679981312,-0.04299859845994716,0.0003782000050602786,0.05072937018480454,0.012645578426600914,0.017478242631996075,-0.04084894127325083,-0.02042420356453831,-0.03627665275980626,-0.044568585120227,0.036417642182525245,-0.022700844350605796,-0.006351392636980581,-0.00745125910448367,0.019162361124730663,-0.03228842002105148,0.03642735195820233,-0.06135080560561717,-0.06726117088191369,-0.009723193505700995,0.05961474662686879,-0.011110342865435132,-0.04499973027857494,-0.05846763110981591,0.001802630059185842,0.10142967906457871,-0.07692080101022378,-0.03923602132490134,-0.013758469859266244,-0.0479565112059301,0.1301419068415712,-0.046913110691662145,-0.016649915641662703,-0.0037374711366205066,-0.0002708252209576883,0.008241256021054626,0.04016303168477562,-0.03264072091406188,0.005605992816841779,-0.08284818297525716,0.03528648572735878,-0.020986247028097996,0.026624766729109402,0.028545914676924185,-0.02563214112566758,-0.05155945775409434,-0.008253479722309056,-0.06616223216663965,0.05956424897288138,-0.06036558225889783,-0.024278774095994247,-0.05561662506524612,-0.026051671991306695,-0.03131707256010375,-0.02735403355278086,0.02066815292013886,-0.07731987944677703,-0.02077371078091849,-0.041567044779454096,-0.017869736444594626,0.01745683594239863,0.025070447518899648,0.022122605043822425,0.04473967665075886,0.022996937285698946,-0.09633636594669646,-0.03376187739681762,-0.00045560137886239505,-0.0084964744952571,0.050927508989385445,0.012192516107188786,-0.016124616696453282,-0.0475455159901323,-0.036421559930930755,-0.01669270037045705,0.05267774900335199,-0.05900535853310115,-0.03805449340889363,0.03343291126988101,-0.07147891235786312,0.01625127465047254,-0.0016159933465694867,-0.005911451187908804,-0.004020923118085104,0.010419166813961385,-0.01327036050279736,0.001051536612971841,-0.06593643639426613,-0.07654898133803083,-0.033035196398545366,0.037743116130146095,-0.027264158202351826,-0.09078898888627047,0.0357523422232684,0.09712429031124264,0.04007842955269235,0.03219573161096284,-0.023493004973103103,-0.040890126799080516,0.05503756560398728,0.01666072767666186,0.00877233600871354,-0.03877020322184242,-0.015736099071535087,0.020585527006422577,-0.03761650407152451,-0.05057980533335492,0.0585004706120712,-0.036329280971440774,-0.07795311607344506,0.009414139887113539,-0.04364607582931855,-0.13189072479370179,0.11069397587127897,-0.05209693761632414,0.0394499267333517,-0.00587888645493346,-0.008076360580729813,-0.10869070046089012,0.041541784461365236,0.01400240141353912,0.012768395274694045,0.06703506049465549,0.05720046690006842,-0.027039690635935053,-0.04285747517751541,-0.06951229521171642,-0.05820648775506914,0.0037067897055027992,-0.04318415183681916,-0.01534508715103037,0.06357488270936829,-0.02249522975710668,-0.032529774668120084,0.03392423004328343,-0.13700584752019734,-0.014125667720347483,0.0011520631762132701,-0.11487502315494304,-0.001783727663858388,0.04086910491721273,0.05395552380721197,0.0457096265892871,-0.03177812193099114,0.015907334746339142,-0.014980156165490472,-0.057720270562324184,-0.08058215343894838,-0.06266494172839886,-0.0013453385961050529,0.009628042295642894,-0.036460748952708184,0.0626505401131204,0.08727629390674596,0.028868562598442473,0.05440991284191354,0.021012736480406975,0.1140026059486542,0.05480268193234822,0.0008167497925977376,-0.05165618086729697,-0.02558518868596505,0.07150237427664745,-0.053250924983547956,0.027551111118080132,0.09299705211980468,0.04412919553060093,0.049329207597727805,0.020701948305615274,0.011945880205783237,-0.014782566071047788,0.00727210588433853,-0.07193980816305343,-0.02615435006779101,-0.040275902189368405,0.051686425256757755,-0.07351952748904816,0.06973524219771401,-0.0002856377138804265,0.025460119870936625,-0.012997090377959885,0.12486657506513177,0.1436343617873002,-0.099855383941707,-0.044290836059720715,-0.04997103965169567,-0.06519311388880696,0.03139511759266523,-0.02684645479120117,0.04251144533008838,-0.07439211122325791,0.04097744023979138,0.04223377383703693,-0.0059192938914220125,0.025617940068075124,-0.011810301264945535,0.002923992016341099,0.035767990993951324,0.006940609416189031,-0.008321916014506265,-0.06933591315205068,-0.03937176266183862,0.002872636454120462,-0.025753153577547837,-0.04008413698572548,0.04173936692884884,0.07336734574790098,0.03975501676343064,0.03686743593610366,0.023973105781786838,0.06370244744651458,0.09677491164795159,0.0234419186347044,-0.05193440512748332,0.03748317110442229,0.07385687191456626,0.03817414768265983,0.018255216657803563,-0.10471440168398972,0.03857042837503247,0.00570922541660474,0.025827447301729197,0.03702798268556634,0.12158971184328464,-0.08563620028051801,0.04208979694537339,-0.026615670211410036,0.01486773353649541,0.04780837252140424,-0.046850349903339354,-0.04759019546044351,-0.027437514050578874,0.03914672131261369,-0.05345703603728448,-0.06710980133328394,-0.051676573412075766,0.010287253161053974,0.004943704808345895,0.02439615545077433,-0.03131542545673995,0.043773375331881186,-0.0675985557440134,0.005824190861016394,-0.04905836647931826,-0.01267879614660639,-0.044320546281537816,0.0076091917806600925,-0.09112358427191751,0.07729840675815819,0.03939973806327005,0.003200774551854616,-0.009497043819657639,0.061617309293061764,0.03491803276232985,-0.0012402173399181959,-0.13257256617205615,-0.09752488264810402,-0.07345534445051391,0.006889146521792296,-0.01353884970322963,-0.0044686429208138445,-0.012203044053560734,0.06623423336502839,-0.034628889894196234,0.045713131494127104,0.040480213978874906,0.10568408877315555,-0.0006547081515864315,0.06772307385222567,0.03531228801472561,0.04944935714078867,-0.10237282775743749,0.025763597111501953,-0.017063255203985574,-0.03671940500351603,0.009197613359062898,-0.05751838450128479,0.017404448130594417,0.03212981646651432,0.09396235283037446,0.08745833417132048,0.06179708452300582,-0.01792320844152116,-0.12228682260171965,-0.1873993964045091,-0.18237276531636085,-0.01769577743986696,0.04518563872768552,-0.09960020095751672,0.0352612912168873,0.02839227786135697,-0.00492631898851385,-0.011414337436335973,0.10756846946173367,0.04138695620990244,0.02059781055802793,-0.015331340016355695,0.07605376958636992,0.008078791308214622,0.010413343223744213,0.025772150556096527,-0.062351882966844824,-0.010422418548038149,0.008484530269392424,0.008802116037065754,-0.1044941955224503,0.065038732619392,0.0334116334539176,0.004440698671471856,-0.013681613595381123,0.09826629054108767,-0.01392939951510911,-0.12778254080641643,-0.07399805512310219,0.007509546335926471,0.033447659810222345,-0.11327927581130899,-0.039160782419008666,0.0498339115106243,0.0017291126360073049,-0.00435648762022676,0.03554088075158976,0.029461303246900314,-0.014493993396399764,-0.038651278313368585,-0.06271854668177616,0.03801287414029918,0.02268594987477823,0.03869902323637314,-0.10212880105424285,0.010152864783497676,-0.007126043704714984,-0.008133496700866457,0.026416235262343823,0.019518943931695037,0.021295545260657234,0.06591999669809893,0.053713662048070814,0.1685150923978123,0.10295537855630742,0.021068417448172918,0.04581130747736395,0.03964005547169954,-0.035691886121975686,0.013319552994352966,-0.030670834214845052,0.0019490232507034916,0.030130646552814493,0.06814492498274533,0.03170973218285716,0.06266453398500088,0.013382751022887142,0.025803849365814674,0.02778834105321698,-0.0925246259811504,0.027998825414317054,-0.008463228741145048,-0.04505660714233064,0.008745903881630915,-0.06921856864039647,0.1079779312274208,-0.025511208312909785,0.05742896601735069,0.048262027810414734,0.12994983157248377,0.14429593820540582,0.18561675055672225,0.11039249209132107,0.053364315927933,0.12915016009582345,0.029470794999023303,0.01983244938566349,0.008195505803123417,0.006024165495861683,0.036404070759678823,0.06413530339440195,-0.019928857361689322,-0.07754931382601309,-0.006650267918473176,0.07506998925713482,0.03867894036678137,0.08570724577211698,0.04307670485530836,-0.02391338755818164,-0.06443045444443982,-0.037017177938799654,0.04554967101398502,0.10518829678663802,0.011385592222854062,0.05111496101645601,-0.025650655204087554,-0.004058654786280519,0.06078701469611519,0.1180199079189512,0.13128969057758447,0.15041152976604216,0.09344455517541445,0.0837535736497517,0.05302366013053899,0.16309975218238482,-0.05913668185393892,0.0020276999938553418,-0.022859595787575276,0.0017277428013248155,-0.03820730451715836,-0.07512063038474168,-0.04155600501120317,-0.10147079205562508,0.035982572371678775,0.03676104472621548,0.02865744734366603,-0.014097670718788837,-0.018648839207464844,0.04611542782499505,-0.014504361248701718,-0.06634026040597601,-0.12409921215151191,-0.11066871931827246,-0.00948620330414507,0.04212839127217097,0.1774824089801374,0.05852968778637338,0.1603992026150666,0.14139347562414326,0.1713755411574203,0.09405205199364643,0.10224310348923542,0.06804098832275161,-0.024111673618263475,-0.024180572991882206,-0.1030774514961965,-0.11461153960972112,-0.033793086054010796,-0.03208593757773957,-0.0027574786870513492,-0.0136457129102849,-0.008018176081858536,0.06866980188993965,0.019725588703466933,-0.015929367977594054,0.02239697532637107,-0.06422619036332522,-0.047804639459188496,0.001825486310909687,-0.07871552306687125,-0.06227763304376011,-0.10548155909120312,-0.03380345932055549,-0.03216463301574032,0.08855994740245854,0.14469523476972013,0.12346722384819887,0.11375964819100746,0.10122852524296043,0.06567263365068278,-0.009417917333275346,-0.05010444662231577,0.004195638778358754,-0.0459318481100931,0.033179644204184865,-0.0623916643978147,0.01860038610516253,-0.00054905775014613,0.004221590965637372,-0.0015206128048181665,-0.02868460202217205,-0.07335395596873687,0.007899720966861581,0.040749791121646305,-0.03746054020782134,-0.028504433259707144,-0.07919777547137144,-0.1162615301025182,-0.04148946895598909,-0.12101858206955951,-0.15842201193415928,-0.1137873173453732,-0.05785940478306073,0.0594221066669648,0.07579060008064448,0.10386954506801183,-0.057485275041546546,0.12942513268685507,-0.09827192510961835,-0.080186508724815,-0.07279841871971446,-0.047164299895249936,-0.06304485740701267,-0.00450055673979534,-0.007507798228513218,-0.10000649143359398,0.020920420202880857,0.005222589483310718,-0.042286429339701365,-0.05130731278721007,0.08470890358419236,-0.026755148673380764,-0.02533969215437446,-0.054186036413765175,0.03753656588323029,-0.05868124697136881,-0.09992882784842659,-0.15168794665474866,-0.05325848660699361,-0.1963721319740852,-0.17354859223306263,-0.13240351646307094,-0.11699704392215221,-0.074546303703327,0.045360663368459335,-0.009380974200327132,-0.0022183720553273206,-0.06034500547603217,0.009864543059475256,-0.09151194546811452,-0.06035183280964,-0.029646171530031788,0.01800534085133409,-0.029358549577405513,0.04671414629634414,-0.022952218475223895,-0.03239604049135521,-0.01973166729300715,0.003483947657549676,0.05522869580378035,0.016492788262101755,-0.04580243932651951,0.09208623340329206,-0.028892806582896974,-0.04348953793809242,-0.11857790778342679,-0.08202160459189055,-0.1498764719043332,-0.20640968833664264,-0.10507939904944792,-0.10906339363365568,-0.14100755946136515,-0.031072683656166535,0.032478149521391796,0.03728297672203205,-0.10169337966182063,0.06699287457809669,0.029207839303666973,0.09870323663449382,0.09796007650729043,-0.04828734241972521,-0.05545529176976894,0.01637379160387353,-0.09231249618921608,-0.08404746815204579,0.04790921496261344,0.03540241127042381,0.00963490505017245,0.0462997655249336,0.05461908232846177,0.01615897908180948,-0.018234314534962343,-0.0501203959263892,0.02634095361926168,-0.024362846752976584,-0.019942381852780973,-0.13254906049867926,-0.09185402394720431,-0.06331179771069749,-0.037713670301723255,0.08617527853287851,0.01296589075451445,0.05097612215719823,-0.048858938762823836,-0.014534241349252363,-0.01879347302501178,-0.024398474048261096,-0.027675295897582122,-0.015833663777011137,0.010349676684761434,-0.05867224418375926,0.022122282021017327,0.059079160663293794,-0.016700163055472325,0.1293482254315237,0.006078552126631762,0.009893720930189198,-0.007008832283508769,-0.03558293788383755,-0.03900239053468217,0.06327666959088935,0.05738555789897256,0.09336192440504633,0.029657185720016927,-0.024241602311096806,0.005194554042420822,-0.04300366595849217,-0.02906866387778273,-0.0195023421416079,0.04161051220791879,0.031368222709501396,0.06062025998559202,0.026318769325784936,0.03473536118553467,0.01411156258778949,0.11599764669632247,0.04832827984395635,0.008752842887355568,0.06546908896510127,-0.02832556263088467,0.05034952041137888,0.01268207677050829,-0.06943316521962972,-0.010526885336095849,-0.01947377543241787,-0.10393598329423982,-0.02437937545874857,-0.029936877154125695,-0.0058856713450834,0.030448507776373493,-0.02958147340040485,-0.006075799370532516,0.11203108683016585,0.03906447302369868,0.02037270372507521,-0.015965104363098725,0.05202859666949461,0.04881965779046482,-0.06044946629294529,-0.04858621246615203,0.0134049297480725,0.07817981360887762,-0.05157706548148492,-0.043944125216076955,-0.0891259869541965,-0.0474678829079033,-0.012515168836086873,0.032274592645073055,0.0653580030612088,-0.08388828598310784,0.07117290004698278,-0.013114919144891695,0.006846515763326422,0.12206505683620636,0.0673155478184607,0.05347306651013636,0.0827707595632438,0.027648779066153987,0.04139085950138244,-0.021985725645471643,0.02703695480758804,-0.019332427650503275,0.041530492996488935,-0.016094092336234038,0.021124698154043293,0.04240296718386704,0.05983270995676194,0.0007491697637505189,0.02336697461143758,-0.04445560120458035,-0.024222319397410937,-0.028332284235075698,0.061907173262775526,0.028750555113785544,0.013860825568914948,-0.019549041256785502,-0.04278402300162069,-0.029643935322729385,-0.04094217890001381,0.03490622875693727,-0.1243459838025826,-0.02456943975905094,-0.020400161543666313,-0.06089357636605488,0.0264588430056786,0.0741916466142054,0.06935682988947725,0.14808708342297325,0.03573856708067632,0.05180433068860752,0.16869017761148639,0.06543994859338359,-0.00354617231812795,0.015042245260888187,0.043543969199799484,0.010827198148397854,0.011359108250468842,0.055608649976990054,-0.023895757780940757,-0.02011438682040118,0.0725046789344361,0.03328705714130385,0.030769913198141333,0.04595658565423403,-0.038967949408919046,-0.0005184653947848934,0.0016568677706762932,-0.1565734905047187,0.022500885959366137,-0.034673167049546844,-0.035769259204765404,-0.04123080901335478,0.0408913434723378,0.048111296428559415,-0.053015183058194304,0.04143885497682546,-0.04197233373074038,-0.04809753521155523,-0.03274437914569607,0.05178397834741727,0.06268350188884907,-0.003132608775625364,0.05762254145795034,0.024695870755024954,-0.037847932779814755,-0.0005556097992606195,-0.09788899433309295,-0.07313984002062182,0.06661546613441494,-0.05165132663128353,0.09472305841092347,0.06326861508974364,-0.05604228225935557,0.024622780662509367,-0.06530229368829175,0.012339728980124608,-0.005221069824117236,0.003085874954686842,-0.051810924384193914,-0.00875466761814385,0.030815509585557052,0.03300393841350394,-0.10124242042965205,-0.011177470570142812,-0.0681717844620747,-0.014869742351466831,0.01742262101288729,0.08094250550553374,-0.02752731923658831,-0.054055227563955525,0.0020612582721254986,0.07043236115497999,-0.037634409559798854,-0.01529457608917807,-0.050725895528192434,0.035079216005791905,0.04769152930417807,0.05720681446331331,-0.024232729199672166,0.03611422839632246,-0.011599854379023018,0.06646502127693585,0.019092042373061086,-0.015546836652915869,-0.009938492391381077,-0.04308825630775162,0.15080291179545344,0.06236051761866209,-0.027497029102905097,0.048289457121377,-0.0595575208074689,0.03331849551957111,0.02593809462601253,0.021200117391728786,0.07006897577975454,-0.009751546449621682,-0.04879069740824146,-0.009361599419254487,-0.011546920698419599,0.015438948227968296,0.008109733845328653,0.1222811327893345,0.048629685214905016,-0.05024846892410053,-0.054320521116974475,0.08380313508223373,-0.05454438388223708,0.02720702499012117,-0.04397901525467989],[-0.04635395206445957,0.003676978866334461,-0.0193309374352775,0.03954998072790533,-0.10578538061364708,0.047027970872845715,-0.050392385542731545,0.04444665262800652,0.002505669562024406,0.00947361287392582,-0.015165702618287123,0.013382634892984479,-0.017709692191819348,0.008315108633953707,-0.04758979163553835,-0.10036662266697738,-0.05152403675085815,-0.07979249131425997,-0.00028054900318764747,0.004476070381780778,0.026314535998046618,-0.08536765859146882,-0.025804724885198624,-0.14106011041012798,0.04675170844934491,-0.06923907687501395,0.0543750422369904,-0.031121193988491343,-0.07871194786281076,-0.057090718905726305,0.004954778113157443,-0.051207433499818204,0.05697098455875965,0.09481140148845595,0.021312202399224652,-0.06928551195783472,-0.0646312343361047,-0.038443574135637204,-0.0015976597575673628,0.037516866091454854,0.008759495791336554,0.10655626402207675,0.09217940966135153,0.021904554304929318,0.03395854725892934,-0.03080588953475282,0.009382907317815487,-0.008821565621742598,0.023850198718497615,-0.0210508170952683,-0.013652245984720864,-0.06128150962112959,0.057022558673221466,0.0860408336558456,0.04411279454414563,0.024629625453474725,-0.05809104721680525,0.007902810110462632,-0.015125717548226053,0.00911045549213103,-0.014884189783806569,0.024840929281670244,-0.031440790829423325,-0.06820491245711653,0.0072331743434474105,-0.01501777080387171,-0.014530618679884241,-0.06066744668813884,0.03788105926906133,-0.04416927982871951,0.009331239385764302,-0.052625734627263956,0.07931390828633667,0.01823607801670585,0.000010648293004950486,0.025135208201059224,0.06085816173704631,0.03310633796912309,0.056669725299909365,0.025324540236058405,0.027635236054832923,-0.003396646638328101,0.08749941792008342,-0.07142068595994269,-0.0241267458478087,-0.007221780791125322,0.001545280521506167,-0.005052714297081235,0.012830116125757917,0.00914828179190881,0.009269339753704904,0.02652163630676585,0.006427769853419226,0.01661407848854746,0.008864891353528734,-0.04591434949704666,0.05263748818909439,-0.00531481388945593,0.06192847218311659,-1.2683591641416539e-7,0.1316336415234081,-0.007715140317830578,0.056385317200099525,0.014965842497265845,0.003052125410197666,-0.03188445432094682,0.08278944870951511,-0.011347462456196349,-0.02436391650710715,0.03989048081226173,0.04128066531063691,-0.012875606027406818,0.03596857986194776,-0.14323439659923146,0.07942376229860942,-0.026916006158655907,-0.10736935576285539,0.11382236777097895,0.050514958207527605,0.054728237514821296,0.020435173586925787,-0.06923211599023436,0.0051679047391764285,0.09769225161895811,-0.0051043077974486884,0.05405415821903211,0.09685107781750628,0.05635791351658842,0.07003683576996234,-0.003997828060551064,0.04341585543911767,0.15488761969917947,0.13240634921296462,0.040203333336057676,0.01729268303732915,0.03114827553160585,0.004618520087410727,0.014677140773273156,0.026232105388852296,-0.02528628459841234,-0.012174268014340245,-0.00024128813848480146,-0.08380918978445782,-0.023806485728148363,0.0777064853031437,0.061888861878489444,0.037952421382314014,0.04942982138608407,0.0956621233685733,0.012679328691240114,0.06277026700065029,0.0037060509930681336,-0.029317227183248314,-0.012475306754615938,0.030581164094472507,0.017872888954724248,-0.0028972947882677054,-0.03353834395776099,0.02423555444102499,-0.040970681433025465,0.044312398719937876,-0.028868281665207076,-0.00931450741399607,0.06282202632115577,0.00546370239959147,-0.03312068670028465,0.020017515976533753,-0.046883645806854966,0.012523602284152974,-0.11028179143922565,-0.01976215667362175,-0.021795274763626464,-0.050905295624066094,0.10797970004345495,-0.054030759497235466,0.04193771964066475,0.07618332919929466,-0.03608282185470198,-0.06490860284588809,-0.003721321266080161,0.04631182617165631,-0.026455596803075812,-0.08608619122029837,0.0057877876651074986,0.010774016501512631,0.007777640561741216,0.016561112836068183,-0.04019736318406825,-0.03507194246237913,-0.01898507286783804,0.02773816667720609,0.025539095915328193,-0.045706961359956215,-0.007988758927639231,-0.03658653837186513,-0.056821902051665686,-0.04428885525902766,-0.06708455943763292,-0.04819377406834251,-0.006668790611762539,0.032900730640581494,-0.07487409860984458,-0.09546098891908313,-0.023994083632409038,-0.012281902241412346,-0.043386740554694866,0.015389200540958504,-0.12716074660411691,0.05461538573565416,-0.029610097205785692,-0.0654409416963379,-0.03933459940628325,-0.12795924532831296,-0.10638614392470051,-0.1368352456499267,-0.16451725748010831,0.14694939183548508,-0.09048664756016711,-0.053885578668484,-0.07351436017799615,-0.019055342131535515,-0.022008848423842136,-0.05073605705740203,-0.035898700425230044,0.08390479948425399,-0.009005428378654874,0.0255941246318022,-0.0916716208643084,-0.019437341810857878,0.06534190121968367,0.049814940731461185,0.04200286798829639,0.0005443878156253807,-0.06869326664257173,-0.013416407239138829,-0.06977508751981426,-0.12580778885445923,0.01850118344120761,-0.051764578201879234,-0.07976873577693876,-0.04461438546153651,-0.11417337705092044,-0.13969671937327371,0.004261041363801554,-0.027002419061325802,-0.09467685593546593,-0.11802360133227904,-0.047922588851645305,0.03647131602192314,0.04519903501573741,-0.005849833989578398,-0.007547978797958681,-0.0006354396033094268,0.019324394530380828,-0.06442788986558998,-0.0313331903146962,0.01206167948855727,-0.10865173644098372,-0.08255538593766719,-0.014727940592148065,0.09487886652804975,0.030518009676992225,-0.0032455862377391916,0.02253748981668263,0.01964614125682674,-0.023122595924613566,-0.11442242336617953,0.01955592791277685,-0.13390045052061117,-0.00798390057782533,-0.08619626950920434,-0.01620054814461431,-0.06160703925074295,-0.08444714351328644,-0.02417473950352883,0.03580681217460361,0.061390829466232755,0.0656831669383659,-0.01262991013327296,-0.04351806209639679,0.016646904530243464,-0.03000565755772273,-0.0021810274790547766,-0.011470513813245476,-0.0032334355715700268,0.0883096426367963,-0.022960988854598567,0.034738474955108775,-0.04547749052416366,0.028597154955582776,0.01108456458899166,-0.06011187299954116,-0.06427450975538015,0.011499341873696707,0.034961798723197005,0.0032546120796358635,0.024842836680313368,0.03146102476831036,0.033465665874944255,0.07903635101722793,-0.021268279480996348,0.02176515296562849,0.1343560236529633,0.10136690906640838,0.1299746758256967,0.03364201388955124,-0.01528360078199179,-0.017269904098231578,-0.030615165819802732,0.023264095255584236,-0.054065238100250115,0.03974547876290387,0.025041186186182444,-0.030942922134632293,-0.05182499475575626,-0.024544536972274305,-0.06750186796999393,-0.1186754340894223,-0.015154347726761117,0.006310817670011275,0.0034771198078118017,-0.02410230482033332,0.03586216068238557,0.001462031284456368,-0.048248001265326294,0.08461435501842714,0.0040666882023470685,0.03353216646003096,0.13665642233868325,-0.020810049976462724,-0.019723367371735665,-0.003087900824265074,0.02647678100867993,-0.01344000179661228,-0.05933708424998618,-0.0001352582038443529,0.004429114221125455,-0.01343853120898789,-0.04913293256317669,0.07564014806636875,0.019137697046784478,-0.022411869436200584,-0.036700793437481935,0.019515212128638017,0.01493308790671496,-0.07709955746740119,0.06067976322126217,0.027939404996462316,0.028940561335073643,0.01683353710639373,-0.02429656565873024,0.09340370395656161,-0.05023909240243285,-0.059137653750482105,0.016144451538628025,-0.0790144642161517,0.013922587358296164,-0.044181517809202375,0.06808928493106804,0.028513575648134292,0.03138828415768933,0.13034648795248616,-0.09132239362508757,-0.1252670809847702,-0.0632730500502046,-0.06282766259893886,-0.028036875816883577,0.03906273900448011,-0.04220883344508367,-0.03498690711631914,-0.036491355033902335,0.02274145824682482,0.07857927420965488,0.07705868639751708,0.024270708414192488,0.0440679830014205,0.01642350737898471,0.04703424911905995,-0.06474854137115443,0.09620374721734117,0.14006264901130588,0.031758817435465304,0.006366409906592544,0.05620897765917296,0.05827391014366073,0.04039135662510857,-0.05291841382513431,0.04486599564501423,0.014019562330923194,0.003987175291593618,-0.13978186435500936,-0.001067933046445151,-0.03186150004591248,0.0832668923964141,0.03763733366478714,-0.09294181058596557,0.030833445747673775,0.03902439523251257,0.01853222577643656,-0.005272835617927907,-0.04006475346893483,0.04273616112910929,-0.09971716052442962,0.0926070199129941,0.003598468616877274,0.03525676328981963,0.0356471622000883,-0.01521713698019525,-0.059612471439340814,-0.010083921239700897,-0.03824437199992339,0.07376370561707934,0.027959422902342636,0.04145279987657901,0.007707509989591444,-0.046787583468267814,-0.040843628765499525,0.05941603942533613,-0.014662981512515667,-0.05724233060711856,-0.030544711753242738,-0.09481992918491348,0.039066944539285116,0.021764496867155432,0.09236073259657407,-0.06792019900282649,-0.057697875190309715,0.012800308791291085,-0.0875941504342794,-0.0849037620532106,-0.10808044103422587,-0.05471736780353876,0.014898261682942747,0.0709574291603043,-0.022498592969722318,-0.007984048382580364,-0.016042103226471337,0.024646265901763876,0.05153253413690076,-0.08411615024976585,0.038338465439830945,0.04138026600782443,0.03611600254962908,-0.08199546828364111,0.015550956017142119,0.027854028097225328,-0.022450313891261668,0.14326101442846423,0.06402520125186703,0.0030555165036414314,-0.03811580234472465,-0.05132490812606505,0.034264964945547774,-0.031484899322886846,0.04478191281402843,-0.0358234145746238,-0.10661701301842959,-0.017956943746164567,0.01296525390898554,-0.023658719310215712,-0.019038412049425364,-0.0030505629717007383,0.05987726573556619,0.07145400168677746,-0.04866463532218358,-0.04863811737771741,0.04149477488593554,-0.042617368097860334,-0.008868282513270456,-0.045380307885679184,-0.034692943092054285,-0.04090070973093088,-0.027839707358901702,-0.06705131100729635,-0.015278605643720099,-0.08080458658232541,0.06816125169732253,0.06635216557637555,0.0077526363615062046,-0.0020211159383804753,0.045748795785491514,0.051226464615383986,-0.0061888195307382605,-0.0318654259396801,-0.04197542619289476,0.02279914080157801,-0.003859849793402492,0.04511541061340795,0.030686982143189337,0.0204454558048618,0.0752134569935719,-0.0005694802050510863,0.043528517368065685,-0.03928267675773506,0.054825423385516714,-0.02418204064669519,0.035635331698264154,0.059426097764239356,-0.013643395658609739,0.06740878346039368,-0.04038449867525134,0.015943723190182047,0.0052192004807420055,0.051349295813234455,-0.011802281437883767,0.10218247766508182,-0.11742651427675722,0.0937111803243176,-0.005082425925794279,0.06558120590759481,0.03515362405390319,0.07678293466211565,-0.009866541803804987,-0.07293175370432113,0.06565567288798303,-0.019422165002634453,-0.0036188571269290637,-0.008854178516527998,0.08348568842097602,0.09930311334095383,0.05567794416943959,0.14305821164940655,-0.00009401923756399163,-0.006185104922530299,0.06262655697074893,-0.01109080477059166,-0.005296337787074469,0.0120843257779003,-0.010781469422440435,-0.022237691888365767,-0.041997330953738476,0.0030487797144500344,0.015324902400039432,-0.0556300549772871,0.0859140099024141,0.05644438589108559,0.058283126225073555,0.12629191102590875,-0.0256210376390398,0.014776546707452546,0.041258233975980795,0.019134429208394078,0.043162109325786784,0.09288796947201299,0.1635016551089935,0.011376725474303465,0.10305723228251593,0.053783184105943634,0.08243681160451906,0.05843800216649176,-0.009137405840797483,0.06668264099300612,0.02776005066352082,-0.03653388466482252,-0.0703603644978119,-0.034245358357065527,-0.0008881652988166176,0.049344890102883184,-0.019945323049857046,-0.032518002009765505,-0.12099973920247713,-0.028114475867236605,0.07711084331689795,-0.05226278565425062,-0.010437810308462374,-0.06894504201735373,-0.06701023515832485,0.014459096248860088,0.011778221621475946,-0.003426302501489793,0.08947871730411674,0.1626168593119087,0.0893444484442848,0.02077419041947419,0.06594809674726462,-0.029197474273513643,0.02133289840543337,-0.00180362786905216,-0.018936185301673313,-0.06822199098468543,-0.02108638873267474,0.0009880627958757068,-0.10857872216898037,0.09562146876940594,-0.07202226929455041,0.020705265376764988,-0.02791524367549559,0.008570850338335823,0.015247337993584254,-0.09184358069779545,0.0441383597077587,0.05776780870633733,-0.08033904057279528,0.028355929747886408,0.004129473940372122,0.030374973984828205,0.008971999020825534,0.03611166216128377,0.0762853860185643,0.10062068588036568,0.04481896911279066,0.06184340138055166,0.010343812326580947,0.09556330153778346,-0.025436430202910212,0.08619416388753742,-0.02548245797799081,0.05996967996168285,0.0317105762811814,-0.03089150162376004,0.01701768119961176,-0.037064378324282075,-0.004001682511218536,0.04146034834514069,-0.015491116466353753,0.028927556011965644,-0.04747952933552106,0.06241660660177752,-0.0515144335499174,0.07220652283468547,-0.07154468429006897,0.004617439107321449,0.0465642918604219,-0.026970679821529387,0.009044104464724617,0.05612544249135968,-0.04253308830479732,-0.054142378210490706,0.0260224792075943,0.020952992795545182,0.023550138651946252,0.055398584678438195,-0.027245090396509807,-0.03874982587734781,0.04576979925566032,0.027240331874211262,0.05563105737704234,-0.03369060353216549,0.0009667642317703406,-0.026800293030217297,0.017596795567551643,0.1239717093832038,-0.0435590113832601,0.009263556536585721,-0.036099222020475226,-0.002003234443797008,-0.056052066056098866,0.03680317028338767,0.032450171354276316,0.050160305527616286,-0.11016666229312935,0.02887497609206302,-0.0903767206186194,-0.02207045220888796,-0.0418786196506701,-0.026017791275348538,0.05161263099140687,0.028571100131050745,0.012975622109866589,-0.15236433820479586,0.09341947785733198,-0.011036438968975167,0.03349457337117943,-0.009461946291034022,0.01211075955660509,-0.04640464562028829,0.010320901356192447,-0.05357155618634409,-0.030937957770438493,0.0882402935533268,-0.04949790110970265,-0.024217747223531136,-0.07580004340355198,-0.04014886304543604,-0.07363365916326964,0.026971557498710923,0.03502238453798092,-0.07354016181729443,-0.20133056118462325,-0.1293107897092373,-0.034678131435123126,-0.022120784194580946,-0.11370710415938838,-0.06523814537919748,-0.0919647013661484,-0.08850274117834445,-0.04089154889074609,-0.05407172807766612,-0.01743764179526889,0.015249120579927163,-0.06714611270391031,-0.02955833212531351,-0.006697233322858208,0.10217867489082756,0.009922001594249183,0.07100001386160613,0.008188306083076856,0.06004825406302651,0.043465549623856105,-0.028715058383572484,0.011474571854687195,0.04363586695214274,-0.0656224910552943,-0.004284980455381572,-0.08888191071813824,-0.04502536733636048,0.08105712075096143,-0.02132152547222184,0.019820428028095825,-0.07435794791768391,0.014610017835548847,0.023107681060984743,-0.004980387791465732,-0.031717854275369745,0.000774557617277728,0.062202181114411385,-0.02551046403399565,-0.012360982675062956,0.011537152356440365,-0.02938913540678429,0.05521859128401903,0.0431084613199062,-0.016593563720412683,0.038557020386614065,-0.02911298216634376,-0.0345225025066717,-0.05297081625481603,-0.015133725649805382,0.06546209872977324,0.04962881119441388,-0.03055195839019688,0.05000391971716576,0.047103229875562674,0.023451556030273258,0.023688308543906227,-0.03753267177519683,-0.025976498192162502,0.03741074623988327,-0.04157038189048553,0.0009812742523011464,0.03261851801047511,-0.041201471450464204,0.05699656925767191,-0.024920439941270023,-0.0990692018969514,-0.001269549543010996,-0.005599944771985088,-0.01300223955897086,-0.08725055601260548,-0.09654897729752862,0.08024775827462138,0.01821061593716205,0.024940065681812878,-0.06167555887283049,0.02641213207637065,-0.0402861241145461,0.06725976664658379,-0.039754091256514176,0.06199430247275268,-0.037502344293583276,0.00553823705092942,-0.0539397381651373,0.031521707609126266,-0.05244148841090751,-0.04025115007529538,0.08104912172395651,-0.03266429672104155,0.07914039561463199,-0.029787439535462184,0.07330754023145102,0.061963424002678076,-0.0006907301378638776,-0.05125443809343559,-0.030016298553428904,0.032318930118753565,0.008280098006393231,-0.03721886111192851,-0.017638792239679516,-0.05226014747048909,-0.011345569482505754,-0.04276990328742419,0.005252670249385405,-0.02611684914317202,0.06975860369053997],[-0.016099555905072248,0.04998743106502558,-0.017510666246058664,-0.022984126634597493,-0.058966947736098514,0.05184578205012868,-0.06644021035302736,-0.054631442307136624,0.0038817824406008577,-0.0473185133717013,-0.0029771222442342856,-0.026151050440934236,0.06541000854422828,0.0358569176143656,0.03466869477198003,0.09627856510410075,-0.026745677279938172,0.12889770535695239,0.060316778563989946,-0.02051155354184901,-0.0010197619172216063,0.051877316546194166,-0.052374223334372895,0.08413348636721278,-0.02686310086768313,-0.06430218025261869,0.0363569765032618,-0.10431037870056804,-0.022355391093875115,0.00042748360420145144,-0.04262836304173251,-0.08643419984341758,-0.03822068777103808,0.05034150036711288,0.03156894411517029,-0.02216976770143309,-0.11096615133413935,-0.11385938796260843,-0.012381302338742977,0.03903051312813768,-0.019772469925096105,0.061096161945113116,-0.01727735621212985,0.0018379584899140622,0.07458726197771376,0.056778104115762625,-0.031469520600797565,-0.006788151975314826,-0.016534204845325848,0.02241136000581101,0.10468378153902788,0.07768780837496689,-0.0334037357732175,-0.10560900269933268,-0.057294332499130726,-0.007117654526065323,0.013635791503706543,0.014497039201930849,0.012830815961961587,0.031281213089612105,-0.04845350727703037,-0.007791760125788484,-0.0031247347743918762,0.03472647238691573,0.04468633666866566,-0.014316837310381669,-0.018211889453609804,0.06367150235626785,0.033135456015507374,-0.014130966851898756,0.08826477008489964,-0.08559720343756906,-0.007849149836126116,0.04103534862262622,-0.09811655472100053,0.04589549929642709,0.020929263852716946,-0.04807088900549467,0.04242110468161262,-0.003927453388879127,-0.006377832803071336,0.031882368567262634,-0.017607779825495013,-0.023141351360118738,0.027080202179541327,-0.00011055907594627413,-0.08297806026844297,-0.06381113440213379,0.05747078256932791,0.09290224020999782,-0.0700038393072485,-0.07964350337839483,-0.03813077014427259,-0.029792802336185763,0.06527194557285043,-0.0935451642262001,-0.04560191981061663,-0.014489910808407959,-0.009152118984401315,0.037700257336807694,0.03112753459997673,0.004184914495278009,0.1250100699915177,0.012409277909970564,-0.060074484114998716,-0.03643494229395482,0.026732924564835097,-0.06032685713239691,0.04465729312615264,0.006620572830123089,0.04800531078020601,0.02138621461313054,0.05480727686697154,-0.0269981797922001,-0.0022550314528625224,0.09523364850294594,-0.01966150626461698,0.008922777620321825,0.05391341676587861,-0.09799359810215767,-0.024069328216789677,-0.03718135603589286,0.006530530415089209,-0.04677587613084107,-0.004837192256193285,-0.0360525616208411,-0.07413837867716047,-0.03318997792401949,0.038868830401821895,0.011346118422115354,0.06054984794548755,-0.10571462193355272,0.003174246218409635,0.03835315527192435,-0.01995626902498521,0.01979660027906058,0.05619672006536241,0.03341838601603792,0.06668408263543554,0.006822918261864579,-0.08890885388869038,-0.028645837273320318,0.031018147141851377,-0.027787540600902754,0.015668250998316893,-0.045256928237377966,-0.06957944713069233,-0.011383957753462693,-0.08208031941262803,-0.10889845405849263,-0.011640236210570075,0.07308869165239598,0.03351273872486943,0.0405593038436703,-0.04791178627507104,0.06683060101107337,0.03516228498632448,0.023297382940868923,0.01013099842323879,0.027499594789457127,0.05105393248682362,0.01102419198061099,-0.0942686409609725,0.0023440294738521273,-0.010437103428233258,-0.008052404729066662,0.04353361886985132,-0.10958460533705863,0.032043267660085244,0.03403536717926148,-0.008718660119537631,0.009899034717705972,0.04374738952986386,-0.006374167104535609,0.05956798884824867,0.0165537000423137,0.06095928490154167,-0.008476540285166919,0.048668366804728254,-0.0311825971554507,0.16171233601793264,0.07424180544503174,0.042368046248821366,0.05478814742007487,0.06421517155730512,0.04355439996196745,-0.012088542145589569,0.06460991161612266,0.026840571630241172,0.054874571246790016,0.03878222250648545,0.10239228741364638,0.031035190518255498,-0.007484258969985289,0.03461971346184121,-0.009598258947580684,-0.09325978520823319,0.03368480448888382,0.01996999650340655,0.03113321200424964,-0.006125340177084263,-0.023245403097722626,0.047169704664934316,0.05831982311507046,-0.054565708311443854,0.10541297086623916,0.10483440436396757,0.01830902592010695,0.04398146016593972,-0.06498600515250127,0.03755507286784803,-0.018487994743951967,0.09246372158503263,0.050091591704908456,0.059901597909075996,0.013875383332963911,0.08348621376343693,-0.027585294213964905,-0.04130017963972664,0.08916062872876841,0.09903762503540836,0.09699003305962273,-0.011028701653964284,0.009087749144562856,-0.11035734993082899,-0.10427275849115003,-0.030482464147254106,-0.02510786538007577,0.003448068306609012,0.03541680268971471,0.010661425449844856,0.10442526597572455,0.060967354656603925,0.11125681508711417,0.06828283423377697,0.11315477499694784,0.007380209725218602,0.025079783471184485,0.025362007668363027,-0.005676683637397348,0.030143828679932563,0.05111701262873531,0.12201402468656723,0.07983594967873392,0.05745570403775477,0.04632500205537507,0.154755416950761,0.13811797636869771,0.0034348851555864282,-0.016885360595813043,0.012165562903117776,0.021492410706617265,-0.07229553395623468,0.02965365417294996,-0.09123684212363553,0.20616919185715463,0.08416522723519002,-0.03547030052778129,0.06917582009036534,0.04354758568212618,-0.03346958666891281,-0.0016687411628019666,0.09846419117438034,0.09172487253532914,-0.027824278814496953,-0.03316498317318754,-0.008536465364360807,0.025130855999318972,0.04661481729376837,0.15496874242184286,0.03993972418501345,0.1809492181350308,0.07047472235251709,0.06995968010150953,0.07584042082762074,0.09297651421437685,0.12186585954150372,-0.012632291459021667,-0.037417740957024166,-0.012961167065990731,0.06171712838708382,-0.01659839612795266,0.009911246209813426,-0.025980051487096707,0.020771337922203422,0.09304597003406939,0.09821434331391653,-0.002854578957440275,0.010289671139930585,0.04090220405047086,0.06931681615277786,-0.04736887198507855,0.050892265082688216,-0.006210338627597321,-0.001654645657634427,-0.13612508475178922,0.05638818989951253,0.05132152881763812,0.07160523304292893,0.09397415976001898,0.0813586085759393,0.20891155247609844,0.22305500606536363,0.0849364261749108,0.13575722923078637,0.06922020694843939,-0.010140932827253956,0.05135976582331478,-0.04380954114806132,-0.02369126850892435,0.08280094338654628,0.10578768521177169,-0.06574355038276784,-0.009188382686727885,0.11001255898906692,0.05449678972490651,0.04849411300470603,0.0571535472601156,0.03479529827068132,0.032540337997859506,-0.04279391764460159,0.0199913128388583,-0.02783394697145677,-0.15576753811048652,-0.11992866843296492,0.04972360049679765,0.058189104352822624,0.0843694321023292,0.05807463953683057,0.05950782911079686,0.09252354260152022,0.11658337710428084,-0.006010010459059408,0.09031608006173711,-0.040932315419946776,0.060642884347639744,0.04547077208821685,0.0011160267973771845,-0.01101836656734179,0.009884336628566786,-0.06471326853107817,0.00535792063001024,0.1446825412388861,0.005672473326611119,-0.0055163165931524346,0.02669923121065373,-0.01857911347725623,0.027003957214085588,0.07961595927443016,-0.07748308066196895,-0.12715084958594974,-0.18538599324781158,-0.08274220613378101,-0.09843406996770988,-0.009705388221556917,-0.030638542705993747,0.07054163386521523,-0.08331793502734963,0.12405640111770228,0.08379576260725244,0.03761572977119331,0.05661519114837011,0.06064839755577051,0.09435381924275292,-0.04271252385847998,0.05096938573204094,-0.09665160550199116,-0.0723138071555887,0.05267719733695229,-0.05759345465992381,0.19407974596989017,0.02268855667145548,0.020387690514731736,-0.02342914389451382,0.017548947472128866,0.05223996206737384,-0.0661558513438848,-0.1058996562083882,-0.04901829991964053,-0.052605068714358355,-0.1427192361570031,-0.1333917865319848,0.009602061707916429,0.10031586907427023,0.006310721743973497,0.062173127694371506,0.10584910060205417,-0.04423178884816059,0.04937720302342913,0.040938804869901105,0.01772642235765237,-0.031686963477646754,-0.03581517760331494,-0.05256324753565638,0.026345359423457844,0.001351895086082161,-0.07416543142418296,0.01507661482832865,0.052171439764076566,0.007569649306057252,0.041536291179492174,0.06288358351616384,0.09796468276652015,0.02491216422091749,-0.02417724640585562,-0.08781798653558114,-0.17558720300738218,-0.055367187824193975,-0.21456922667994266,0.0032447361476642543,0.007087025767466956,-0.022434151588669286,0.02889099904409925,0.052968646222462834,0.042614774152510984,0.04469791205604228,-0.0973039967736361,-0.0017755587579274194,-0.04020385097773975,0.016718157354015863,-0.0039825601654588805,-0.0035218333985063974,0.0529398778412005,0.05022850885297103,-0.08196164663450774,0.04357927500159106,0.05481958964903974,0.10441146314292107,0.12026368919947132,-0.019572591321866856,0.016173099146657318,0.0289073189724997,-0.034566427813709256,0.019332444642807978,-0.13505100606919768,-0.04162762632812982,-0.053883570778848214,-0.01081517760818334,-0.0398966497919539,0.07350548731321405,0.11942873889297269,0.1514062158197882,-0.01604321185962382,0.03781117767048777,-0.06890212373859093,0.041134808736012565,-0.11431837610344327,-0.010031181871076567,0.03327500849770205,-0.04694050720208514,0.029481326718795126,-0.019459942940186468,0.06588597625596308,0.04881402182831279,0.02570153294877682,0.02596285234569127,-0.029377082762365715,-0.010577771279980294,-0.051737605041033634,-0.0657864849582464,-0.022765512053080257,-0.07420763462258673,-0.019594496999552315,-0.07021447571444413,0.016937483892155034,-0.0061499564356167664,0.082937180923189,0.11614173420791614,0.13866332756505056,0.08984095303500413,0.059404517037965544,0.0009761904680263086,0.10686221406826685,-0.0004120640085705241,-0.036839266074399545,-0.06636993852705309,-0.05585477201542879,-0.03617156943167933,0.016101171419502718,-0.06969536358225012,-0.009800304828951657,0.13025372567475116,0.04974608580716079,0.080625219962933,-0.04746445722264145,-0.06250399174447702,-0.0970438425905324,-0.07005917005593543,-0.029000658510842426,-0.08126658429465941,0.013079749531638053,-0.10937160214066376,0.04247725959767198,0.05567268727842118,0.09997891315877812,0.08028510890394613,0.015057357707328516,0.09091102081653211,-0.031389332495772575,0.04522262367918198,0.037481353117008495,0.03002106312637611,-0.029885676910214296,0.03399708043136237,-0.014609995159671284,0.06458492653922134,0.03064615343769659,-0.04706641168632097,0.06599664530542979,0.12587627326518844,0.1373796539180725,0.04541124640140372,0.09187758376846569,-0.017963727466415023,-0.07770871402215983,0.06686018143829368,0.01046896394218491,0.004847395746831481,-0.030478399929814753,0.006931741558479226,0.1413156814210236,0.1579963313182528,0.05781387619457405,-0.0037622264945340054,-0.011036605178992156,0.16570775677114036,-0.0038222831955710725,0.17657698196046823,-0.03748522558251175,-0.05844275498317476,0.039055708036367424,0.014878412144179771,0.0036859162645975292,-0.029407533941406314,-0.047276530817651784,-0.05473264646420684,-0.051701005528632146,0.053452381947150546,0.057915248098626845,0.0694948543998863,0.07563576046352688,0.06263261657572165,0.02797619488331403,-0.02137342952260558,0.05853023259161336,0.02679378727455397,0.13317003088637228,0.07487091947737133,-0.07495015322866026,0.08575887024296816,0.007107487330223759,0.03480552401988597,-0.06155034508038708,0.007960458739204548,-0.03582641517339517,0.07692956607117729,0.012849407738678415,0.023268666104868434,0.14063999253173196,0.05031010229188479,0.02821638705213325,0.020071405691457517,-0.05371679704870118,-0.05888904845688624,-0.006950621071328665,0.1452104919150315,0.1229158088559206,0.06803162144330338,0.1102810507794009,-0.02814519540501394,0.04861358792831695,-0.025185373047205497,0.1512634947477187,0.050227944458778394,0.06179161466120681,0.015002330281502772,-0.014300239746227156,0.05048154586195032,-0.028831486436787533,-0.006436750651284756,-0.03494171396057368,0.05073314680038976,-0.11054027332849299,0.036214511072623926,-0.04850312796310845,-0.017156638372951356,0.06686106211061944,-0.009385802776717677,0.003195361216739842,-0.0026800815607624442,-0.0395596059281574,-0.08505330336172355,0.00013189859087923904,0.02837743152774199,0.02807675250559437,0.08487207359162725,0.05275542392002562,0.02967417383767801,0.11258686574464888,0.018284676516045505,0.11188992673026818,0.13728757483053586,0.07555791877638941,0.027652908930311696,0.10460986716456391,-0.007738034544070221,-0.009587177443805774,-0.001955393675969155,-0.024522945623540123,-0.05203648475319709,0.07516259785688328,0.057625619420397615,0.058200570709260095,0.04847940429445876,0.012535397317103259,0.05667371881579697,-0.015851259984297983,0.017762846660890848,-0.01800961097070392,-0.024800664239966543,0.049098673712371636,-0.08971742634493345,0.07674488011190263,-0.023376804237507987,0.04223796232675052,0.1335337805053218,0.03647571384925714,0.11258851064837817,0.06686434678391631,0.09259368763908801,-0.01299401984012776,0.12049266687749126,0.0957622044175713,0.02574295183003094,0.06912660189695709,0.06543191719290059,-0.09795381382351308,-0.03587307705069964,-0.017279164410100713,-0.025370770137554465,-0.0397536646751623,0.056031965555788196,0.004398371924459427,0.014917271186265409,0.04028389684631439,0.00400764831988254,0.03621157573881007,0.06796034843949965,-0.01855366825780356,0.041415863479471265,0.03767348390958094,0.039133083711021484,0.08208880546772726,0.1275104813845117,0.07250559067513493,0.0878373552343556,0.08928192581468,0.011614786647947583,0.126510110119088,0.06517275158293442,0.052168548728367604,-0.03699268891214838,0.013813062964782467,-0.05797984937069936,0.03695260134079634,0.03391380010293556,0.011703138633260208,0.010892499874759229,-0.08139965341279377,-0.025089692515200105,-0.026529553902835606,-0.05429541476300087,0.028228079080446295,-0.023111901383268123,0.06412098863775365,0.003295409285800851,-0.04063324226154734,-0.05011962161721103,0.0059431927137883036,0.017753562978044295,-0.10456031565841936,-0.06424888782568516,0.040587788732646055,0.002999218759449435,0.1571822014573594,0.15743425378366904,0.07432896168370447,0.1573371350839184,0.0055729374828042185,0.09231676166718378,0.048039646712085396,-0.07697442625714923,-0.04926226347623476,-0.07818911090127109,-0.06825033610872028,-0.12123916458560151,-0.07260534862702545,-0.0927658234822571,0.02214792613459138,0.05079608109007791,0.007482563343622122,0.07778275971537421,-0.04924463417083004,0.008402666686751504,0.007150610723067145,0.0006993876470756599,-0.06603026852523662,-0.036479812456599474,0.025317772224746647,0.07147728500878917,-0.004295709249074045,-0.05491269522045516,0.11185828180844665,0.03222708201268996,0.08132413387885311,0.05274789166905991,0.09109324128192277,-0.017884782138637135,-0.0012844981851687738,0.06268990648242277,-0.041987301857097314,-0.12620692161541322,-0.08595333935983103,0.025977838165974706,0.009231115355519121,-0.01653191638081772,0.048987251580923694,0.058319453322096836,-0.008989213791772432,0.04847147577676991,-0.017481239390887325,-0.05503721810248042,-0.04376178569373798,-0.09380937043434687,0.04259097275564509,-0.06959066126170753,-0.011129939574064267,0.019994261821106103,-0.0533908835243044,-0.07964278768369387,-0.006147259958989386,-0.020580012414967947,0.016499069884460583,-0.02056450577051421,-0.06188624338290305,-0.03282634513187577,0.04924967320183997,0.011042898834965299,0.055214722128456364,-0.05349665899239189,-0.05482142174890659,0.0250433959394367,0.0463308795495802,0.024239139224536903,0.020230576462842178,0.0098868555987722,-0.0359023346081281,-0.07790128343649702,-0.015264504384074928,-0.03254194025249659,0.01281782233777845,0.007063763862044651,-0.06308762702330137,-0.021011972488525866,0.06877078328674126,-0.003256416794522648,0.04548070860253767,-0.02806965834047448,-0.03923790070210597,-0.031169201807105914,0.04848025739101632,-0.039133667870811635,0.031893303735244086,-0.04690790908674247,0.047320373943278426,-0.024904678946507615,-0.04360252892435549,-0.0185141277463146,-0.045212371151715544,-0.06779728253868049,-0.02981936656074615,0.021728312753775698,0.06588692364090218,-0.02219194513330561],[0.03799517962331472,0.10543300033691598,0.007461221181323019,0.05420804370916929,-0.009162430708239168,-0.04662866218642727,0.008047214953325067,0.0011457142476710921,0.02876868545973346,-0.013692350698358084,0.05878373986896526,0.02916283044804413,-0.0015460368565526502,-0.019238154471040842,-0.014753416198748742,-0.022884695828676818,0.06816042059657602,0.04138087890771104,-0.0699349294958253,-0.03770016318399983,-0.0234262494307184,0.06763915156346659,-0.008313794453605998,0.06034860790598104,0.08709445703579734,0.03077066524464813,-0.0778851323480125,-0.017806285401297486,0.02347188221794508,0.014630966737520687,0.017348339782572685,0.0019512630627789673,0.03608323437581991,-0.1479255716576283,0.005326529327657986,0.05416230497058247,0.042866516473987266,0.07833592234236189,-0.0265779913618521,0.06418901893287032,-0.06622736558504871,0.06509540028263147,-0.00213830170899602,-0.01471684372447839,-0.02679950882119423,-0.03172500761231694,0.05956860460314164,-0.09143067796010867,-0.004355329652337309,-0.011930863036376726,0.05191215010726147,-0.12697942571169685,-0.0073066029503308086,0.04219367537749194,-0.039221180631684324,-0.05146868101322931,0.019035043394890035,0.05350057382464928,-0.02953777427553682,-0.12846656835391612,0.001832038489529972,0.005451029836034819,-0.01976547097610856,-0.02481536171067582,0.10518962003855724,0.010232428719999614,0.04711112155506339,0.006559169662198069,0.059000626352952557,-0.017915039364762193,0.04475261683013969,-0.0044129004184327095,0.038551250876522974,0.035217225179113645,0.10208112818069426,-0.003079471153767913,-0.004785585404203871,-0.043171516037561405,-0.06013963423135093,0.03898089658090355,-0.01810651986861835,-0.0356744729481279,-0.019914061138874294,0.06421985993636714,0.046294078909326374,0.058573594384595536,-0.017350368858612217,0.02261986546195056,0.06606671206886122,0.017540424879170333,0.012433167767609362,0.0035907606210248007,0.03302621276134643,-0.03369892271533342,-0.02389692125838828,-0.030384287642720192,0.010183291805507734,0.005171956055573936,-0.02563651035793635,0.019737150165063576,-0.08149368491920843,-0.0019435822261271464,-0.044173888987268865,0.05085863799002452,-0.015135699661594166,-0.06707235653061105,-0.030848542868293354,-0.007211010389550347,-0.014771354878574878,-0.09275891676632123,-0.01470094942967068,-0.025257274661197534,-0.017260569640575745,0.057941981139360645,0.004799934395317671,0.06829112362289656,0.13539378014965486,0.062162973034764445,-0.051510299764064994,0.04736630568469065,-0.07162389822099288,-0.02182737523779239,0.01631143115882405,0.0062522659672671985,0.06494613306488958,0.03009659656031363,0.030227202206985264,-0.02002009749520638,-0.07213837979852991,-0.02134225351234082,-0.0110624366580276,-0.034181637022816555,0.04763934827076197,-0.01846253705780501,-0.018719610788897945,0.0483749040677371,-0.016805185433024696,0.13476518050466868,-0.03417726443881985,-0.008808389351100973,-0.03775676454028095,0.09744038790088287,-0.022143087594764792,-0.002892251811545876,-0.043422873496387654,0.033878340567657386,0.014637216047560403,-0.10639982825483656,-0.02938796960820912,-0.05308003081715483,-0.006508556556305307,-0.1411795353191094,-0.014777037540624746,0.061068568571423135,-0.03383762080593363,0.007418723587825481,0.03127839092924374,0.048689200103713,0.05134281975249042,0.04040111536299151,0.020874149347357717,0.0704890351550172,-0.06262338149470177,-0.09581270493931283,-0.01892651243602814,-0.06786267711188673,0.015701353673098804,0.06254447241989504,0.04303315958406587,0.11102770895048704,0.025299204337681687,-0.00010107777133984219,0.024223585754340502,-0.00009605096764941127,-0.09910529687401637,-0.0022163926719830866,-0.06517765507995557,-0.04118194525597936,-0.13597763179837496,-0.009210099462803866,-0.06748407422806418,0.014007923898004562,-0.009792320785459547,0.06945496929724695,0.03039744490269432,-0.015199137990485343,0.1441526030107918,-0.05603338770108621,0.04834781888078413,-0.08674079552544889,0.009076487685740372,0.027097377160348837,-0.041583178862239695,0.0014430116340786855,-0.005765209570466094,0.08689341592512234,-0.027131366520638793,-0.020780359409062386,0.042494023150552,0.05550222557975389,0.004283898192597125,-0.02541973150859029,-0.07247865521095836,-0.08943267748333726,-0.03550757970045087,-0.03747567075551725,-0.11312626721661592,0.026940207671908488,0.0557633587759007,0.046211605668462954,0.09185977882397348,0.07914783657738945,0.06213941750244301,0.12143399351843585,0.02122237424693267,0.06602686732310353,-0.05709683890882148,-0.03662904965442468,-0.07300450178298047,-0.06940120228335288,-0.03324837975577354,-0.07646795872502092,-0.041037142230273764,0.023974189168588365,0.083073033087616,0.020444010368178816,0.12450597620054721,0.0264990416613209,-0.021722941549682333,-0.0639803585160169,0.02443439197292353,-0.14319032773307425,-0.033201246629393125,-0.017028953446825267,0.04795999429783052,0.018730768156891734,-0.08935814819575576,0.03572255331587615,-0.03605736221568932,0.053555124475129876,0.06927258165298333,0.05996247569801984,-0.0829286550887935,-0.04965326923822525,-0.019374438045183243,0.03315327489207364,-0.04722847925025452,0.03292252137171294,-0.0783333374602356,-0.060818095062784516,0.061715945257428316,-0.01553898161835165,-0.05485315219607891,0.02366557123535219,0.013110639867883002,-0.031779351052873564,-0.09565296925120263,-0.06229131689931295,0.030399933082498123,-0.08948086927758508,0.019377122269523612,0.022001900618617006,-0.03235211302723806,0.013127887609783156,0.014809615883491781,0.09111142601764874,0.07090768071346616,-0.018517521379592027,-0.02599578744144259,0.0024992555693607184,-0.00612153444247961,-0.009667169360583842,-0.012771975387985456,0.021475042797735128,-0.035745938024607515,-0.0058577942385673615,-0.042329740558044116,-0.054225802857219174,-0.032484551657895475,-0.043790810122571966,-0.0015681898689074054,0.04577058513018459,-0.004648802745663217,0.057898328562396635,-0.08318172896694735,0.007268443367205953,0.011358673977267518,0.030578545363955798,-0.025030437611855194,0.07732206437778738,0.08843180463362764,-0.0035658219612499983,-0.07928765495890194,0.024060173488613296,-0.013113277971853405,-0.03599886543318264,-0.0033692728129389236,-0.06962626770302514,0.09885612493812315,-0.02348671359255802,-0.10228800845531155,-0.07776896050081668,0.01091039275974486,0.0861911033698046,0.00851949494574211,-0.08953241047803373,-0.042461812599206,-0.028149387733740053,0.0023801132454881265,0.04572518081750537,-0.09065565535807268,0.02436441226233774,0.007555989863062152,-0.009397282996400441,0.0017715465547266203,0.05225227516936151,-0.03853742602429693,-0.04743904498341925,0.07030061034304333,0.07412373705635283,0.0250593739580879,-0.018288525201741443,-0.0010697136767342887,-0.12187773385969751,-0.03159513139078364,-0.06697889752525903,0.03615103906341025,0.006243388403812909,0.0038139031087395642,0.0422829297122877,0.05669915450741526,0.05000154548032075,-0.059293135120274634,0.012041006846568635,0.010415957750356213,-0.001244334701840841,0.006038804120103537,0.016841500295689035,-0.027932675326648313,-0.011289182995899786,0.05376833006553501,-0.038910209666988396,0.06960324228993564,-0.0117276444997803,0.009441603141232668,0.0010114656509795051,0.02549159106865689,-0.08394138179864595,-0.047114602265667806,0.03270369194135379,-0.0082165772608351,-0.08583818720612074,-0.01950825834251521,0.07033572481078,-0.047478476545740035,0.029534150604868276,0.048951226341144585,-0.0044356781287760464,0.0890061306230609,0.09000176127215971,0.06361376787616366,-0.0984719101308321,0.030071678679035208,0.03792284102834364,-0.04247403235704462,0.0767815101021346,0.08115348867588278,-0.00238754180328935,0.018176588099668056,-0.06359702392452543,0.0819504371522797,-0.02815194064447866,0.10753090519525876,-0.01061902004594204,0.048870034568146585,0.00034174841079847153,-0.025699325243343733,0.006776091452709984,0.05783627254579345,0.04941840061736414,-0.04505744458270685,0.052001951743576906,-0.03242131752058103,0.016322317245882536,0.018693832106337165,0.1065171388162114,0.04085143873733318,0.09396076960904477,0.09645058904313496,-0.03207696920731902,0.07867397330904324,0.07726859589362435,0.004206317113028251,0.0736852751672637,0.11662757334960268,0.021115706049051698,0.00385409212485635,0.1127371131811601,0.17060144868363056,-0.0183166715109441,0.02144259214715593,0.08810270919827096,0.07828639637904386,0.08721585419737844,0.0317192606091477,0.09972184821269066,-0.023630040800005542,-0.04852081772400189,0.02157007687705772,0.017702861920069143,-0.014421526649474754,-0.05372844719756965,0.07703975144687081,-0.08686650942726326,-0.03131360466556964,0.006592871880088402,0.031221769057628485,-0.03477014747123817,0.06639899850229575,0.0009204316408082391,-0.016449831740589893,-0.04507311111801622,0.0012416677777223608,-0.08020161311765202,0.038261251689273475,0.05420432287126571,-0.040036463403341535,-0.027573773887328637,0.06550931508646227,0.029569216168203214,0.038499494452229305,0.03312736789311767,-0.004764163718253687,0.12175269824371228,-0.10963099452294121,0.05356189111704107,0.03596920625381724,-0.014184786334960208,-0.05952995084355042,-0.02102287926662951,-0.04996140623446947,0.0439217359376147,0.037780542070281975,0.041631233673153675,-0.03637009008665305,-0.015834699005772127,0.03994438073390152,0.07326956716115275,-0.009700643936362885,-0.013741219167998373,0.043746627854441715,0.061966156094236134,0.03652925567068935,0.03736133431904609,-0.004303766636910668,0.12226510254200104,-0.019268245233965614,-0.014310249627345787,0.0796639521031055,0.06673138023298392,0.00918053139228804,-0.032465624715137316,-0.06046172551213193,-0.07673082736035834,-0.019399855384085,0.04684173536404044,0.01730474052053676,-0.009842983228487156,0.019788873760193663,0.09947393327460789,0.002852156860747441,0.09520573190724384,0.002837182642740407,-0.01267938969492385,0.004166740867596746,-0.07348076254095036,0.0603958587502483,0.06258935307020612,-0.0037466190696803037,0.12651968029324925,0.07488406246873629,-0.02332125176316883,0.08539711833344388,0.03290417659440625,0.1301363268657056,0.054752756276901966,0.05980439452880939,0.06245992965180162,-0.01167646069247476,-0.09412786485791752,0.02376297525826242,0.053643994459277276,0.02693314705589368,0.02754060433052361,0.017242384291298957,0.044870005056500295,-0.056162024351060866,-0.008201750396338841,-0.0008861402999100242,0.04228642942754403,-0.03376601151862253,0.009582855935304049,0.10788221366681251,-0.035068626537880385,0.08873272255522938,0.013795761634501021,0.0752480614813864,0.01525678807068487,-0.00987982300352192,0.04532392695425247,-0.015230856578825749,-0.01254718532627605,0.03194624586056932,0.06059255604874293,0.1085413936207301,0.018281572694248394,0.040090702546451376,-0.04110711282783989,-0.040316540797819614,-0.01933807872617137,0.005839157417307617,-0.08296532517291631,-0.01592735204164793,-0.06123730910496704,-0.006270226955031552,0.04320610684179317,-0.03879428256700923,0.023050102815820303,-0.013872333571319515,-0.00029873776402873994,0.10268652775213075,-0.095207696160074,-0.00582893024021182,0.04551072020613842,-0.013650708543917695,-0.061080849588393195,-0.04907853806221457,0.010249799995160085,0.08109774853123403,-0.023436116248759086,0.0004466846824339836,0.0028924326595558022,0.048990482691009224,0.03853534056662163,0.012719003756820982,-0.018908521697216064,0.011318070600969645,-0.013307479566557418,-0.004974980323548579,0.018192257012970163,0.053956955601642084,-0.0070299223105409845,0.014704461329269256,0.05146027738154583,0.056611784490521566,-0.04403924583272099,-0.0051442721558308075,-0.003276554768375842,0.0018853063285159594,-0.015216495760792592,-0.04248084687612179,-0.04280538413868201,0.03332402978024218,0.005189250164492991,-0.025078457503838355,-0.06282591433677152,-0.04762121311698848,-0.03090134088069876,0.01805521535248645,0.05906604677455997,0.029371467760779642,0.07832532353511293,0.07425992716088466,-0.06806459012504586,0.058227028073394284,0.051797667317538106,-0.02294097943869229,-0.003954345427126604,-0.044010240753546495,0.04568773702375871,-0.004869518754542094,0.09392289249965682,-0.011244120245699287,-0.10082478866769592,0.03335815806087725,0.004829608991121,-0.01410055507834221,0.00828268687069668,0.07527903450038709,0.025026555026182767,-0.03060081675431157,-0.09360288902183433,0.08523016634698176,0.11945421287907329,0.008972418553413826,0.10511094242951836,-0.00491373321657822,0.08293027589446901,-0.027251734285549674,-0.00859173089456355,0.04706105285838586,-0.020757005124202768,0.1010609738463382,0.032600941980137084,-0.007424988535256413,-0.053064068712207854,-0.014406462617269007,-0.09011389466740549,-0.0025812307848193375,0.005051730504525133,0.0013305126906059614,-0.043296498806406056,-0.05729205329494661,0.060628841136676694,0.002620315147356793,-0.051458486128248306,-0.08312331965008386,0.06754061141139746,0.09981421848242197,0.042192726684216864,-0.03647427619622714,-0.08263056507942224,0.013411152208758884,0.041902232248564424,-0.044684054064327614,0.0005774767226566262,0.05690659480807715,0.05929875535151131,0.018969583948700432,-0.015152482388716993,-0.036560464986086054,-0.06873230305381314,-0.043397422408758685,-0.055750804856585574,-0.10446114851635246,-0.06816262044706568,0.07544210444387407,0.021655158986409562,0.03661174806844615,0.11230132136433336,-0.06522464567404192,-0.009690578542894455,-0.07678512713539831,-0.01905313512097926,0.05827884303854762,0.014610554735305462,-0.020960694240557163,0.08376532513414363,-0.009807856875321343,-0.0019418667226872067,-0.05773273797643063,0.03482996670449674,0.033046642018865105,-0.010738809536615752,0.02959118971233385,0.06963211567416719,-0.02029499306925188,0.004597212913620184,0.109380780493274,0.029986721847118578,0.026438750153299977,-0.08650963063258366,0.04230224414069161,-0.009767741505631174,-0.10305149575823982,-0.020649265455379064,-0.06122431961983551,0.09641421619153921,0.04037567609732311,0.03722612613518799,0.013421718101753424,-0.006598250963844199,-0.0002951415189815158,-0.07921275271161544,0.010726142721576518,-0.055676129261738636,0.08817277178125808,0.006238164878472459,-0.04843733319083434,-0.003753448738967846,0.06736668825361651,0.052213888227164,-0.05307566278889427,-0.08080422494999855,-0.08843696698409877,-0.018662924420896385,-0.13005844074148773,-0.05434774282127194,-0.07258643456238048,-0.004706302952486182,-0.053285755007088466,-0.09939536536100169,0.06400116959777558,0.12177366584043539,0.01608891661778751,-0.04120146901275784,0.08688571883905989,-0.017086421185601962,0.047508828280823895,0.0213334556691037,-0.002105890740811636,-0.001014760107231049,0.035235165492166313,-0.14578000842999314,-0.09502085286203833,0.029509076792098042,-0.0029462397961211918,0.019807983830243847,0.00020580042136933432,-0.09814911988760863,-0.01815346015412324,0.05526346631570475,0.03768001289117804,0.00824293111251015,-0.017499733997163484,0.04698751576696066,0.029412959152050736,0.03869306936260336,0.0818328748607083,0.042621166929263786,0.121865068567335,-0.03544668371534906,-0.01629259701673092,0.09455269726567943,-0.006172606476264171,0.09064158094764536,-0.013692884419534042,0.03671831669049265,0.01986436309653732,0.008928392961660765,-0.044908683780222364,-0.03396351731198217,0.031383133371403325,-0.05481682102303728,0.056318049464095826,-0.056349799802007786,-0.029001415697952955,0.046357400308397204,0.08648076311624764,-0.026179530887767255,0.00015237368732263514,0.025235822968234428,-0.016888388849765377,-0.047873461860746314,-0.08897023220078482,0.034041765626812104,0.009075551014154883,0.036062357304670896,0.042039034468865866,-0.040493743412852494,0.058128477404783344,-0.0917578510497966,0.06947258485380456,-0.05708365466827695,0.018936867107741628,-0.026695496192044317,0.04459271532830294,0.01332825128868233,-0.041235788445087546,-0.06704456801283326,0.045590969983688286,0.015559062815065694,-0.03477910796099738,-0.0497338631194349,-0.04329352861282579,0.006865764189606557,-0.04785116077930225,0.05224150495620895,-0.09505136910346643,-0.07740537649058246,-0.05905882779355011,0.03248509185277431,-0.027552741209940574,-0.03333023173548911,-0.002075129437968768,-0.004330214953270829,-0.058109321608267296,-0.07864636662082498,0.025871046342439474,-0.038628881413494603,0.011717689917996158,-0.06663762828970826,-0.04876634775007657,0.1063423470638969],[-0.08327964911637979,0.047271069232483254,-0.01813857336587451,-0.05139489386740816,-0.030490147819956844,0.023053829086323863,-0.003418585256573243,-0.021114750160566943,-0.013548462582432393,0.036515732697706034,-0.05248003415635673,0.026169565585476146,-0.07072885381346608,0.017341169790335956,0.02873242877364083,-0.046902804854127254,-0.054370281898105666,0.011531471518798119,0.010688655389841801,0.03581421823654809,-0.07236923471756956,0.08116825571645235,0.0002939836308567505,-0.006411469984561559,-0.019759407197902357,0.03867046387418834,-0.009967433192345606,-0.03797104577837649,-0.009345950349953535,0.04592375725327963,0.0409268615584924,-0.04613924191623623,-0.026612588077585805,0.020290191799310894,0.037729906756437184,-0.07303749284123019,0.0702766679462129,0.0035427772458275415,-0.005021899215236974,-0.09525978230001889,-0.008571238625253021,0.041003115662255216,-0.05568900984222429,-0.019282070988405297,-0.05145613315524616,0.0036295187904763046,-0.0065547225592138755,0.10505479737872378,-0.03295303516179055,0.028226330485982415,-0.0870043884817797,-0.022712752783128565,0.035318364170418476,-0.11702830234393163,0.04141998664570538,-0.03906716714201499,0.04620609594786321,0.1002022307626418,-0.005118950044458589,0.017149117520902656,0.021579014805795122,0.025607984958059445,0.10870636617323849,0.03255154155668299,-0.007694101522960851,0.0993511120490113,-0.011191750438480856,0.014716222545852373,0.009736165192445967,-0.015446587944955301,0.06534661221034858,-0.0038606276554588137,0.05735017640344339,0.051973629420089644,0.09203503537300883,0.00406426803327247,-0.026123411188335582,-0.1235154437444336,0.03005131401921989,-0.01603613676464553,0.05258304697621561,-0.028761243321420143,-0.033493162978681414,0.05252015784800156,0.02967326530834996,-0.002408829484391977,-0.033808239384021194,0.051730398121712776,-0.0725849638774811,0.016033739724144853,0.02284904303964763,-0.04046766234063375,0.054251637821272285,0.016222718935869296,-0.010145626736190365,0.0724376826677004,0.018377572221057053,-0.010595633496809313,-0.04160068818979828,-0.06571603868008563,-0.07368857667915091,0.026372037900190905,0.009755207099491302,-0.10716519192680835,0.020052638840619513,0.15679409325005816,-0.00044746026002392465,0.03316342825053467,0.021683472271894332,-0.02580057392593001,0.019841832418015785,0.02540161659781395,-0.07845005033090016,0.005728766983908789,-0.037461600261122885,0.0019910154486780266,-0.055296680721863466,-0.025183184990164892,-0.06272241086197038,-0.0008829610818318772,0.07444819898734048,0.03267202552096149,0.06465256411957673,0.12526634479350723,0.12050527452536375,0.11768487625675533,0.023681024237314698,-0.0663389055859316,0.07966371098726618,0.0013376036276135394,0.08251204304727797,-0.09914432509183027,-0.06282358454440685,0.008600278514931099,-0.029142080892778113,-0.03869960943703543,0.01023587827094315,-0.02052982115915434,-0.03150493001884836,-0.03564182825967847,0.023076220232761277,-0.020246426603200304,-0.015476269809379056,-0.05193699945973288,-0.12908905973002988,-0.020421671026781652,-0.03006135332150462,0.02832503122220467,0.05661916388776152,0.035913781159436366,0.09709483400976157,-0.0668088703565481,0.023808946307071668,0.003015762216255094,0.05646930275386698,0.05285854066443424,0.05016270854443978,-0.13824368196162343,0.0026395549569350574,0.014920244710287895,-0.011293741318155477,0.09051739270394603,-0.038338493963649196,-0.019639569244202824,-0.038175918105377675,0.052078891513962694,0.10552214932377824,0.031061067465376273,-0.0680765718844062,-0.11410343471856797,-0.03367616735203384,-0.12578324966524967,0.034748272606354706,-0.011270556575680912,-0.006482137207411169,0.020090819280293926,0.018384171196189094,0.14216267015533385,-0.01792749132925832,0.09514020386255344,-0.02348813739276298,0.010899546680001766,-0.04899442376847822,0.005796800055722767,0.0034484538123329333,-0.0636163695046953,-0.045867695665109634,0.03156049812402227,-0.12109820393234687,-0.038351098042737584,0.01917661871687718,-0.04269256337318776,-0.02736511672829624,-0.07903411444533316,0.009400030195856912,-0.096324808420831,-0.002849514866186979,-0.0017968875431459744,0.024997726187556107,0.061277837218999036,-0.04169518581161131,-0.013460462056748789,0.09660709811027121,-0.027939374379282827,0.0040920481012854965,0.03660972009335333,0.02889751472491081,-0.017679703245733917,0.028089187979359546,-0.044078206219539784,-0.12961405971119383,-0.018016100773339126,0.025622523688753243,-0.04546256520209763,-0.044376607581901706,-0.060458609385526586,-0.053983699524048884,-0.06097681640669581,-0.07094722388694946,0.06827816719576207,0.046614829549193,0.010356291433198777,-0.0573374712608986,-0.005433978991282931,-0.029185413198567087,-0.0011439654065364656,0.08373709250886746,-0.005694242054023562,-0.00875599299373174,-0.07420273454649774,0.04285582803742607,-0.012993023440203241,0.04202575526371203,0.06756966267195771,0.14768438042315732,-0.06379538925373336,-0.029354442764007123,-0.049869620040620365,-0.03873830208291043,-0.06464419674958558,-0.08583770625567226,-0.0204162351686988,-0.11564657092566992,-0.010531969327181132,-0.11229980631247412,-0.021140434010992817,-0.07151522688960367,-0.057690253869819096,-0.00339275745460011,-0.04991361866818498,0.006264015642908778,-0.0014140034453574292,-0.008597317261935616,-0.06391511436268668,-0.022419845719210532,0.041451940654959336,0.08130374102142467,-0.014588588241698446,-0.00884673667636797,0.08564089077333722,0.10197642636503339,-0.023148847509200262,-0.039210360716680506,-0.0894155975651283,-0.11576725098167166,-0.037381450844894616,-0.033025735292925774,-0.031921809775871855,-0.005251284924213095,-0.05612629849495508,0.06770218603418643,-0.017184226327549755,0.0018026768689094782,-0.07680286380301106,-0.07686588216517648,-0.03132598013093999,-0.03148903185126914,-0.03675642254123978,0.0680765053577278,-0.029100157700172172,-0.03526329972098774,-0.0028648462129109652,0.0854235679181779,-0.0891447986885278,0.04094011413274962,0.05082881025898238,0.012367780860213345,0.04564278837003253,0.003919237476205259,0.09229844980438162,-0.012877995183480947,-0.09794535429373492,0.009403845480569224,-0.0983452496801874,-0.04997598146451693,-0.04604715074286049,-0.027705461748126766,-0.08996144990413742,-0.1343307290965952,-0.013186020923316796,-0.05862104385810628,0.05081173343798138,-0.004486285809687911,-0.034581175533328026,-0.005447455722078186,0.06255796012309084,-0.05306507391795171,-0.07885033101434194,0.011980754455017947,-0.15058109665673436,-0.039681539515737455,0.015272675564739997,-0.09737903851920655,-0.04424343093416782,0.05943129503338582,-0.008923419296295658,0.08123091288404724,-0.027853683277763126,0.018490783141501838,0.010486376279398073,0.05341821551895134,0.043884240749398694,0.01175719550501184,0.0020235275378265344,-0.0016890158343976789,-0.002662307058358477,0.003504633419577499,-0.014785671479295156,0.0004768991603864554,-0.07543335555153596,0.05993959479994125,0.03556359332862637,-0.06567896901049289,0.007938189807833588,0.002446280090716349,0.04247308616072924,0.05127351185412039,-0.022831699117114853,0.08957112404415658,0.027042688517263228,-0.006590494858849212,-0.04873590947522982,0.056207645272875924,0.016149374157882864,0.04645648804560472,-0.0029812945241391247,0.10081917125065255,-0.06861661705795936,-0.09737348089590782,-0.040422345375113786,0.006737100579204037,0.006082774796019938,0.08165684606325813,0.00022935063598888893,0.04848949781846699,-0.013111998965378624,-0.044970553093922824,0.03739543887674434,0.01469014434017989,0.03923340479763556,-0.02183627166991175,0.0938108842063108,-0.011360771630059328,-0.02372996574111573,-0.03478654364323719,0.04255767441755922,-0.03878171281205919,0.02520173205151009,-0.09017130296244788,0.024638743976272037,0.0016680689657584797,-0.004892291961110076,-0.16100893027348345,0.0512845379032248,-0.0688131667215356,-0.028317213327444003,0.004520839776428327,0.005151213461062379,-0.009490459104809022,0.11079088907193815,0.13984846199093823,-0.017618490119685616,0.013452523860486157,0.06735760213502759,0.06357376548779003,0.08366420902760358,0.02938550639836787,0.07286864094462475,0.023026166375910467,0.04431450484954866,-0.05206009083545014,0.019630893614153135,-0.016219508833910854,-0.0068540531299852315,-0.0043797267423532,0.03813856777208661,-0.08956420592748482,-0.04824780629614002,0.06561411273234888,-0.028373100928002527,0.10581393211595012,-0.023216839541560903,0.05318965905589517,0.08299554775531989,0.0781541985448414,-0.02600382349056066,0.0632899867666426,-0.023435183210737745,0.10860002025837015,0.05455794552993565,0.12394488971352628,0.07074989061715888,0.044094649488937106,0.03265742223660457,0.01153331482734257,0.07220857883879861,-0.05256895802320377,0.05818683026072179,0.016561465131312857,-0.07418208459683455,-0.020368615538488705,-0.0013853424005833355,-0.05572773660287413,-0.07228215624501454,0.04062771580332798,0.019479996944457387,-0.03664552545119866,-0.008319060108962984,-0.00858457448136102,-0.003845113520352914,0.034708592258528966,-0.06896923500101083,-0.08425939735091602,0.08339208379943024,0.08441966317207256,-0.06653420366180271,0.08418183445537436,-0.13660534797754137,0.06192425131530254,-0.034501368888360785,0.0070289250888695065,-0.07047281510545826,0.09203824729263722,0.01902640857183533,0.032642640413482304,0.0820498814974061,0.03900850646379902,0.015415782216152696,0.015416618708515475,-0.03577327420947589,-0.029165378334039985,0.004042247896039041,-0.04274293373622452,-0.014578791765515112,0.0628270591018225,-0.011412420228983805,0.022572807887186682,-0.011715356880982096,-0.023697617906734074,0.005937268602775303,0.027334095640541723,0.06723503715774358,-0.027955958033135032,0.03014830133470145,0.04708823490388232,0.04701041332878727,0.09587540053469863,0.00010756338355795558,-0.04761926882850875,0.015096666908263974,-0.011798785896356937,-0.00010581689270816037,-0.07944128621453413,0.013848069808088434,0.05189284107789341,0.03107691782037779,0.0621120289976402,-0.012922349363680289,-0.030794993827643818,0.06132412206767963,-0.011014347837200069,-0.0380315919487086,-0.002841748454603216,0.0690296803095024,-0.04875076433099346,0.0029321014273115094,-0.0003597375378540135,0.03163644563615404,-0.004658523333171301,0.008200982778105267,0.07295835918723861,0.17529550046001638,0.11174122472450984,-0.013399154822527605,0.006074781086399503,0.04502466241606503,-0.005325949273095311,-0.08400550131257485,0.047593054244686434,0.020762937054047883,0.001969008904603829,0.01775327322678488,-0.012709374749743457,-0.05647618785787159,-0.03550975048532093,0.0373157389641389,0.005543096580377675,-0.015619219153502796,0.016478360684456253,-0.024865057832778533,0.006133524999917475,0.047849128420096886,-0.06910228889066011,0.026558677546747737,-0.04640472652917764,0.011156365952066543,0.042427301748300346,-0.027882420132796758,0.02606659473158618,-0.06555903105342481,-0.005424361476108913,-0.007376818791215255,0.0006980347003151949,0.13094572577642352,-0.05253254904544039,0.01244998211036003,0.11439431064145676,-0.029333825366135758,0.023440163639131983,-0.09699218955721356,0.029236008038652735,-0.058390301176402044,-0.012112547750236154,-0.06787867198910737,0.06287004376598385,0.0004659268069678416,-0.055929234445630326,-0.0026402332009130033,0.008542210719097821,-0.03997105272379448,-0.0001464336738024284,0.033070998719102025,-0.027131425025629905,0.09507549495034094,-0.035421841922872566,0.07451131699791638,0.010532817766880127,0.025977020920738936,0.005894439624275891,-0.0036460003798372254,-0.0668846590612726,0.02096602688831626,-0.006114069990098882,0.09173537392543238,-0.0574516441043803,0.0031250699718423014,0.03229696195738598,0.031813544830773116,-0.005213092011320593,0.010327121499597051,0.060382370220176604,-0.10560513122544689,-0.0003951928600439279,0.09465041615335126,-0.026566395274156673,-0.026654425559859262,-0.006920156947604839,0.030937238051432805,0.03833648132505284,-0.09736306641119247,-0.013275503591005216,0.02107738667303352,-0.02224758725764588,0.021407900206790603,0.06211081230485747,0.07982268690394488,-0.061868730912744335,-0.030529841033893286,-0.023290707911376034,-0.08831632652323808,-0.042783233651212726,-0.01394579857040835,-0.08350085983398782,-0.021825474917376676,0.028630160335485908,-0.0043011532288048495,0.02327197238505179,-0.03651017401981562,0.032385465505496695,-0.12243771834966423,0.01036582936384131,0.009192343194199282,-0.012713762858822761,0.022318346739704183,0.09956160504417962,-0.14491828160779974,-0.06414523567157569,0.041236853617238785,-0.009646797177731491,0.033800356107282624,0.07455286294173445,0.03927718892847001,0.040837777071943596,0.04812253779262104,-0.046791778321389414,-0.04620501982722663,-0.09098969465846268,-0.0034497796756777356,0.048963911132042105,0.03919062346241965,0.0528310857128578,0.05963387017411833,0.15984196635753783,0.030053312571908113,-0.06951042802050508,-0.005846518480331117,-0.0016795575555040093,0.005132630582137484,-0.015596662841271532,-0.057041486055565006,-0.04765588587725695,0.03147013037068895,-0.004471362164008447,0.0030328651068866072,-0.06246619067607774,-0.0092810338944213,-0.010712996733318597,0.005178308891045751,-0.059322107212014176,-0.08218959079540528,-0.08474496581006914,-0.028231733224162038,-0.0808981670967836,0.0023064386755644764,-0.01444944093813397,-0.05891126127747053,-0.040974979789148734,0.08279164807459571,-0.030957132781018342,-0.03468114081817206,0.006499473110968223,0.046380138689087504,-0.07631834202915883,0.018251136614276894,-0.04181037595302222,-0.01099375583304481,0.008483143970436827,-0.009007108262261372,-0.0430974435383532,-0.02678140174504398,0.018806896129571732,0.0533535547002278,0.045980328494787594,-0.019800622030321013,-0.07370184595443313,-0.014698666392273418,-0.1025916282700231,-0.08161141162771512,-0.002953511357102426,0.02969224014995183,-0.03857225367945309,0.029052325720898758,-0.06607539548293004,-0.07862591617119308,-0.06273898768436224,0.03497297052067753,0.020494206388487396,-0.10669051990237303,-0.09140292898917038,-0.032821654442516675,0.007030270140560285,0.06130328147586441,-0.04795830757422839,-0.04964548011811477,0.06589184518526255,0.03481421583858048,0.008108809993771216,-0.005315934673195704,-0.0034341076501930123,-0.08586166793974506,0.026291741546817925,0.02644624665424429,0.01497687782280092,0.01326874248589267,0.027022372771046976,0.0012215210732708375,-0.04078798597032531,0.031749862502245305,-0.0562697985877362,0.008609109349108688,0.03476027637824262,-0.07219610085108712,0.009203773369088697,0.01350524466652301,-0.053945789748887515,0.09820147555859143,0.008110460479465807,0.07135309787233604,-0.048475027177120725,0.021848634441042954,0.016991511710938895,-0.06791807872728749,0.03684348720137107,0.01117450415550178,0.06905858426371463,-0.011383806759546337,-0.03768640172825911,0.03369982091707973,0.06934233501947148,-0.1356348472510643,0.06186825166008781,0.03033032191539773,-0.045603260954664035,-0.020265127013804934,0.029229121340003085,0.018659021310881013,0.018802169311674676,0.06171739710950992,-0.08945717292292164,0.001858768531880654,0.049646450761961024,-0.015667612590294745,0.04277650288510168,-0.05750961368268973,-0.01358481817177994,0.031861915381698754,-0.03909508150126583,-0.10248179741168649,-0.023154877918328924,-0.027716149793877126,0.038518026494443455,0.006286428392115832,0.1304263831013186,-0.02806155372534146,-0.043672569832413875,-0.050147254350924056,0.026981875752038174,-0.11487349572247231,0.013366119985825172,0.03813523711213627,0.025521135916256772,0.019658877048741266,-0.030821050534466505,-0.11210373877872437,0.022175299814112606,0.027892509004276356,-0.06893467721575658,0.07316189963668594,0.013519815440326557,0.02905473911837091,-0.02253948217492315,0.0064120815161801984,0.04851640984825518,-0.00200006255478142,0.04201410591251467,0.012730420709949715,-0.029672347644363287,-0.03492088420244287,0.0450107418256762,-0.12035352397040665,-0.04625085694705709,-0.03216452321207323,-0.02368439168184617,0.05874356238378696,0.03282216027021613,0.04132945268037847,-0.09659282185675387,0.08280681360290965,-0.02558111644423616,-0.08918179822723987,0.08799942057597517,0.033779259826091194,-0.04037070659667848,-0.08700817903451492,0.01025104921841543,0.023157153741941664,-0.022225403071571916,-0.009165100512165906,0.06045858959368026,0.02701526787963342,0.05582687530540714,-0.002115422290322714,-0.05482258855596177,0.06723122627046528],[0.01334329931204917,-0.02837646375790796,-0.07159160429895488,0.06160261967991828,0.01943644962694379,0.02273780684252151,-0.06645780697858403,-0.0025979621428905844,0.014439680172268947,0.023656518551492114,-0.005655215767420587,-0.021210335831955213,0.01314836906315295,0.0102730466214736,0.04330324202481374,0.0014351141428280154,0.043474942737997666,-0.0721619540490194,0.015821207742253013,-0.052491134180854354,-0.07086844866825577,-0.02554250392118694,-0.06629077908784155,-0.02488083779055366,-0.06537998841768211,-0.07257094525051302,0.008071989086393831,-0.01664733555125123,0.06457562567688024,-0.023102869432580067,0.013946210461956952,-0.06641312415115364,-0.004320291111890255,0.08043825836830543,-0.050441839248542175,0.028515115867754407,0.06351314922766088,0.01886692656792137,0.04150632609411408,0.0123190357362727,0.07293657164558874,0.020766311370358913,-0.0913580226642019,0.009147527374252035,-0.05782120425750084,0.04996873148024879,0.12919319924907166,-0.04741429525810352,0.025373727468778213,0.03472797316183465,0.02314567707366937,0.037769272032430176,-0.035796728505774054,0.03857503186674781,0.06800900047319636,0.07158591277344817,-0.018478128964254485,0.0237239929698881,0.0039018130607726205,0.01314163698511967,0.04345723498710837,-0.08962126377270326,-0.023224173935066487,0.014190831745787263,-0.007143420051306092,0.00009855888164453113,-0.03475221757505671,0.06451976315862548,-0.004052965398476115,0.002612902312143557,0.12976646434304182,-0.07797786065618474,0.033564683989345936,0.11890285196057476,-0.07147023344476598,0.009234396634184173,-0.027545126081692288,0.024420841938504634,0.006172600251649501,-0.00311694812414757,-0.07286473653444603,0.02181272838564627,0.13321787259527634,-0.03235712918816115,-0.08019354915772459,0.02536088637033086,0.08988889000489877,0.012501473122045519,-0.014708602485458036,-0.07697600247940647,0.028481523331159157,-0.024866212338622233,0.030197718782127306,0.0016592757935417585,0.044182570439894965,0.06160700075737953,-0.03456304041263397,-0.11449240989107602,-0.008731790939695151,-0.08963721156703128,0.04572779008309437,-0.023054545040651415,-0.064358601594568,0.007193717067047471,-0.08069077280186127,-0.04814222952569869,0.04378187637145834,0.005069067338458366,0.0014843839579206759,-0.14435983619839945,0.004885446977158417,0.10052158530510855,-0.02612303486873677,-0.0698049428719562,-0.0378267713039164,0.09807920587578735,-0.04722325445327004,0.023802187652517594,0.06979007766629837,-0.04738563132940015,0.034397121971152474,-0.012249811404430428,0.01656728200786136,-0.02196206021698255,0.09721952871985344,0.024099136873522026,-0.02650494506080063,-0.10393863059942911,-0.009348758660759248,-0.062041710563588266,0.013071632828139314,-0.003591069513908045,-0.03630225419914621,0.034899031679967836,0.036969150758859454,-0.09516868271258255,-0.02326033532614536,0.01231445012393123,-0.06681631225354885,0.00038802588018214696,-0.026878130004153056,0.08469355820163742,0.02037548894698154,-0.09168097757773207,0.020700965483816922,-0.023897206369416495,0.06206998500842996,0.052663237175479605,0.042014593143036766,-0.1047731464869949,-0.020129886247156586,-0.023862451126543536,0.03433757202949692,0.062472438181377675,0.06605490333311351,0.04513602030464552,0.00566820961830287,-0.03462067113069498,0.01770497943136056,0.07065123210484359,-0.05679628980119295,-0.009791483835356373,0.007912472344026738,-0.03309153648584013,0.028935032810902688,-0.05647557118651483,-0.04630138204084517,0.05833410310588763,-0.02004377568825391,0.06344095776685095,0.0201721396422656,-0.10035241107637327,0.16778510587672257,-0.025278769118231192,0.0010827481099949046,-0.09579970519958057,0.031105556373655485,0.022032773195776973,-0.03448168780325192,0.03933449696480932,0.06757191438960049,0.016517178418375286,0.004377897984300895,-0.04558183271463449,0.012937928483040644,-0.1160068377540426,0.03279723208132376,0.01246572696482418,-0.052822437487864415,-0.03457941486344486,-0.03404461392582991,0.1078604007396872,-0.06945640045394125,-0.005607685748006142,-0.09525927205974495,-0.029811329035691208,0.04918047675809439,0.02172332069603961,-0.0019548097704236425,-0.07961170512972296,0.06643577060584874,-0.023078189110242942,-0.05329817514434985,0.05971361441791155,0.029062685942530184,-0.058717096919847514,-0.020213095154979023,0.03370265810832687,0.010324269058065452,-0.0005342873318872282,-0.008634161793221216,0.00991290437318721,-0.019223990170658237,-0.03352564938995079,-0.02643518807998989,0.03776029824486745,0.017530420393225853,-0.06317051399167027,0.027156543493794715,-0.0026709321735369947,-0.011753889863805116,0.013721866736694411,0.03783298327813939,-0.0646765403191062,-0.06015593528680091,0.05946262882072931,0.01710198468510016,0.06212163851366587,0.016995414544005213,0.007606412789342649,0.025293878031027856,0.06042715085999987,-0.04978408180950349,0.0029476415249533824,0.00496489108190722,0.07956302016288418,-0.016856138852504875,-0.05776760582689535,0.08531065572906464,-0.022865168554089352,-0.009110660511505818,-0.08226848257698256,0.01836631433236747,-0.09661911257885385,0.0035665456009723357,-0.010722011936734622,0.02378767531576805,-0.01124412601215233,-0.02393684499891295,0.01932427288132063,0.08864450953807511,-0.08123301294065519,-0.08260915139853914,-0.028968102299499185,0.05090472091114495,0.00439678822561822,-0.05118292543045064,0.10374861377084517,0.03621550342291072,-0.048882998945248037,-0.05364066751244382,0.023946316600930252,0.08492934467135993,-0.030465508957045574,0.10333645447881568,0.06716199231675941,-0.01935476842052323,-0.07345889209197064,-0.0923792178820038,-0.06771253912392336,0.010342664220403277,0.016576289049991325,-0.006074265181431266,0.02870544917034441,-0.07529261031211794,0.046464685388607846,0.022358251759009882,-0.04358965450422406,-0.057886564026513106,0.024902979567564352,-0.06352178205215235,0.11761379051686587,-0.08004047302880789,-0.06765778132980056,-0.01201459561220011,-0.016590024691535456,0.07173326760774254,0.05487537611953469,-0.03136206928941465,0.023116113397742583,0.03347127532734589,0.02578948430077408,0.04070281302849896,0.05366841139595743,-0.011285543021010102,-0.02556449246040217,0.0031335265234567838,-0.01055410222178133,-0.028965893548065492,0.05354731525163843,0.01743731736753107,0.02033818097065227,-0.05180613900004815,-0.016149169889472195,0.02002360360619286,-0.03919790383631485,0.030253991685845725,0.01545614426366152,0.007748886291407899,0.014543642831348767,-0.05764235991502011,-0.0013049847419185794,0.026887890870380893,-0.026849783678348536,0.021508226301688638,0.039474411938173276,0.07390455682762372,0.0017963068275003245,0.011722411641632673,0.02689370065763186,0.002765465672648215,-0.0250026846725097,0.05081951591116301,-0.08751372780533329,0.11088665278688652,-0.09818446577289491,-0.023205182037573373,-0.10190841656926052,-0.011148765626264651,0.01381058632194549,-0.06790530798913674,-0.11098143302747333,0.07675768794133564,0.06170641109142374,0.0006944353983149804,-0.00985168641724117,0.009630047868291037,-0.05125330564836585,0.06835597048153431,-0.09817276312407688,0.007234931781691871,0.08579158764172722,-0.04339875240170062,0.021587996939188146,0.057071778803676115,-0.04226065983034854,0.07011733820561317,0.027689846400503093,0.003341994820338548,0.04730190223354731,-0.09294681287794067,-0.03692193090070565,-0.06117937877191663,0.02862966132448981,-0.09973291527043776,-0.02902045483654464,-0.0033992689042449406,-0.03379056650006314,-0.06916311033492831,-0.09447508047482601,0.0025398882101003548,-0.048376298209333514,0.03104667279190235,-0.01616989822130399,-0.017615243365804344,0.09518995355934064,-0.017918718801639553,-0.03708802570929806,0.04737283888889525,0.014159392964143258,0.018820744534337887,-0.05109397995551556,0.026534848667861485,-0.009908125738805581,0.0654195483691769,0.08469974839986151,-0.05126807352853897,-0.02753648063083456,-0.09008905723706037,-0.0063867958107896635,-0.004441273239297275,-0.07743245207804896,0.046838362209355146,-0.04127936999674827,0.08177034779365437,-0.0007715650945877896,-0.034748531137874294,-0.08679965195545117,-0.05835025522826605,-0.0023274830677833553,0.07633875147227323,-0.07623883547328297,-0.09415793630132316,0.013300015683885072,0.04071268672690467,0.014652249878221392,-0.02181607392025152,0.141813692423216,0.04166100877692278,0.02933297286383317,0.012818394179012869,-0.03835786699734869,0.04669058468823585,-0.016392787074358643,-0.04491192930115765,-0.057917720168699054,-0.006493102638370528,0.0006964847099526102,0.08895144691820413,0.03859636092959482,0.03003405088188477,0.022452024368144752,-0.04396072406595889,0.017662856339413186,0.06196417523171822,0.04656321447635948,0.01323977551348371,0.011339652998793404,0.006155801463624508,-0.014260187146124672,-0.05173770392645508,-0.0449814593989208,-0.04321061688990308,-0.022823447255491576,-0.006004159158928755,0.00003861574623261758,0.05967426151431141,0.08763562620397414,0.06898257381342107,-0.07093452619502655,0.014220936221603185,0.026752344615401873,-0.06852675299361505,-0.08664713004862308,-0.051897490755906245,-0.036213686885418886,0.11883787157894048,0.018778030847698253,-0.04648994988238402,0.06955567805216661,-0.02670221064366932,-0.018812479427028312,-0.046407392842128505,0.012934005683571816,0.008241962256409755,0.08113022854949103,-0.002867918689616188,-0.06504785946744897,-0.008457661212108752,0.008826041021589398,-0.013436739323727496,-0.002889081846882218,-0.05329469897004238,-0.006593286693060533,0.1251780550289311,-0.029969877264133245,0.00887854592011473,0.04007287503106055,-0.01563256695159404,-0.07666531299748816,-0.04504198325005117,-0.07954382583325356,0.08562453299320649,0.08485658592856675,0.1489508045332246,0.010718268624548406,0.02667037986059448,0.0208465037906424,0.03383855816253666,0.011704887952963528,-0.01540394973362192,-0.039898500192284206,-0.018006266266794458,0.00007341882737672522,-0.02079044138389287,0.01423419423237211,-0.06425560409570996,0.033975416475142566,-0.0031577698570904476,0.03950961642191274,0.037822515029108314,-0.0573871216723115,0.09308801843397047,0.18030085650069813,0.031775063038062955,-0.020272915885061266,-0.05624152978325569,-0.03217859002632928,-0.12680832823086277,-0.0187227451264612,0.12585942683630802,0.20610556289358772,0.11451567223596264,-0.0001428096096858923,0.08928985833406655,-0.03894547286114378,-0.04112345919871255,0.05793814452886842,-0.050161028143984515,-0.016050104238313833,-0.13940521017842133,-0.051390694918473104,-0.03193689301692086,0.04517630305259339,-0.022101551616119344,-0.00003020585568024545,-0.0389647844759613,0.03713969959431108,-0.0009993415597880117,0.01580578615620819,0.04360624712740526,-0.035625518542554635,0.015891295793402992,-0.01544870965047458,-0.04033062444224899,-0.1219458718742905,-0.11750723063549448,-0.06259879585710314,0.06043025153273416,0.14725892134133903,0.1255049717866743,0.046956502612796956,0.09446855781289261,0.0748036911808484,0.00010061772280775847,0.015276363582396894,-0.10040914053878465,0.01214621972710847,0.00876166305389425,-0.005882784000041253,0.004791708914942987,0.01283453754689984,0.07440009092200411,-0.0269120310186734,-0.12857471594437905,-0.0033301128162117047,0.05108858329252216,0.047044484145080036,0.07487093904707465,0.007413411693848872,-0.09337220192317931,0.0509726850596106,-0.036202331432657796,-0.14676482720451636,-0.07105104021439855,-0.03322899913571949,0.12087417130401763,0.14680102620279498,0.07679894085053099,0.026866971639871038,0.046152020457374196,-0.0020654767285142157,0.03692871059626973,0.03038948873537592,-0.04367884251291403,0.03959758466827822,-0.04318178432469915,0.09648773411801011,-0.026886678038254085,0.02186807385038558,-0.050705455837176075,0.033746113684990704,-0.021656596919572453,0.02650741920788341,0.04003843206257519,0.034852449146759015,0.02559488961941319,0.009521068546308353,-0.027073672958515496,-0.0699564346340644,-0.1154314697313547,-0.06997807310670645,-0.08585526603052039,-0.04811084788452562,0.12471497597810219,0.08573296588666354,0.058447472029664826,0.06880647405565342,-0.0023541082888772027,-0.038110440449980146,0.09115665519262349,0.00887936335850638,-0.015427535966315778,0.012018877048245561,0.008494208567238981,0.05876555938071547,-0.010022451953611677,-0.07041732861249875,-0.015549752261984023,0.004726427073297292,-0.014852376691500713,0.01764246516666866,0.09272637661497109,-0.013522238764113185,0.03722318355840163,-0.039747637511943046,0.025841622192491268,-0.0779982642671821,-0.0325078079158713,-0.048130133308723635,-0.06766505176221914,-0.0336237848703852,0.06133725010721994,0.04972291377984251,0.07074836508982729,0.04949127971728105,-0.03289590785929763,-0.051877375069133626,0.0014492207760769325,0.04494151907146595,0.05980522798664687,0.05088640836258388,0.0421836822057126,0.08384133176634492,0.00559524388498221,-0.009322135243019622,0.003027280970959056,-0.055045888738464534,-0.012873767135087439,-0.007588514437410096,-0.00907069369817585,0.01944600219220604,-0.005281692331383422,0.04630164119102815,0.007962783534267243,0.11467861922842912,-0.06376919488559124,-0.11320221097658012,-0.015433554660681923,0.0065184975842767405,0.13672927483887162,0.019535250760117195,0.08009045022404028,-0.044566472654001196,0.03060421534624158,0.0067894703002512775,-0.00880135170721889,-0.019981043738500577,-0.0031018745736522404,-0.00993778648037263,0.05215135357832054,0.05965304922123015,0.03881395858078276,0.053750995649354656,0.038278656257262345,0.019920393816186627,-0.07981257039792418,-0.041126610520874914,0.008204069055140907,-0.01708966245435571,-0.09553542909329586,-0.1336461200973882,0.07805782544702913,-0.1088869385715229,-0.047750913222141485,-0.08668697781734201,-0.12263576943107722,0.00010132428328848957,-0.08656006260721516,0.007544582450532509,0.00442812017740434,0.09972876763956708,0.004854624109610984,0.016373532909399833,-0.05242969598229772,0.03147817828209764,-0.05551940160593072,0.05784796794872876,-0.03956549979086534,0.005705149804481112,0.02696812778200606,-0.020501832687674814,-0.06634421488095153,-0.06515200151155102,0.02315474029107864,0.02167352311981605,-0.04385099356132213,-0.04296125031647704,-0.026876390780227806,0.03582888283897366,-0.040061494605954234,0.011406750283837,0.02479471452129813,-0.13159810791406407,-0.11191427832325385,-0.017499496709474434,-0.005484597570217476,-0.014244647583895164,0.09400980778579329,0.06927344302779838,-0.005297619026849097,-0.057597070038785135,0.07288227116757388,0.04314856180573647,0.049960579137919646,0.05177358777452753,-0.0042008644554744606,-0.055007401085416074,0.10859818222224574,0.08533539252760154,0.004285052574008701,-0.0012802313967164038,0.030243787526250097,0.05623315749504763,-0.0719866960467025,0.07115401216925978,-0.031870829886736826,0.045777743291039646,-0.013695653977522938,0.06946337382381432,-0.05304595711994346,-0.04537725875106487,-0.09933550070802362,-0.03319642897471591,-0.017300801235339704,-0.017941979371981404,-0.06503875200186303,-0.04131022974359238,0.10101281394309486,-0.05378291275194524,0.0884266170151254,0.0008515720076297061,0.004020834377933325,0.024042882391637505,0.033713305825634955,-0.020781941745689154,-0.037139684100242064,0.008826165396791125,-0.014130102338071078,0.05836503367303608,0.01050094152329814,-0.04769181535395242,0.11207670336333724,-0.056807876649077715,0.02026378955139309,-0.06520005754066596,-0.0007482129994669676,-0.07216281722367075,0.037758668966876324,-0.02889850169888465,0.06518828547995534,-0.10068923179359664,-0.047039764470052765,-0.02440497386578108,-0.03146334029215087,0.022875071178784085,0.051215109356754496,-0.04501255663051687,0.013342903604853648,-0.05288905220401808,-0.0452294045200156,0.00848456155242337,-0.040910456775187086,-0.03263279340854406,0.01557623283459319,-0.009612105047489938,0.011880639455374707,-0.07096870373392863,0.0582050453741637,-0.08510942200292229,-0.11334327474118283,0.08936646058158347,0.02774052228985734,-0.0054029909125876616,0.05599190581589791,-0.024556715655653316,0.08246924615807162,-0.015204023734274957,0.023647211144758293,-0.09891837536402114,-0.00035280330493717436,0.0032620682099536846,-0.010383798778536811,-0.05761043040726015,-0.02836666277671111,-0.02111063549984969,-0.08990277328764917,0.08141508160370614,-0.046939719508663796,0.016396786019509498,0.004762186574709698,0.018084699147633315,0.06061326877999795,0.05101541817476647],[-0.048619346810860525,0.03332410815836975,0.034245663994531834,-0.02187533335442677,-0.10063207947256436,0.041436308532585224,0.04940476199305008,-0.03018288926361082,0.02748433526221259,0.022897284574220328,0.005161493002933536,-0.033679015770658106,-0.005761779800869895,-0.08206380219970937,-0.018117607046699135,0.06504800064488402,0.023608249974913068,-0.025845961571183327,0.025912085238870425,0.0691019498430082,0.007457989240018396,0.0011900409491248647,-0.06704885125692644,0.091095183466756,0.08749445038366728,0.01164051276226592,0.03477199193497706,-0.0012127098492884685,0.038262844344096734,0.04565463748743505,-0.0472950256403233,-0.012083577606741929,0.0037588931657287212,-0.00802000293212626,-0.060134067837068685,-0.07197499131087823,-0.016684642570509264,0.060218362732678596,-0.022034674083482718,0.10085213760525256,-0.03990608272145368,0.0649034180202083,-0.12141567250824484,-0.06334064164208371,0.06152671775124898,-0.012973602666924607,-0.031221734995857956,0.01193757168355789,0.07892875964061184,0.054678534671893604,-0.003825533286040568,0.022255526778756637,0.06241482182817759,-0.112569535092055,0.016071766101409528,-0.1084177653721065,-0.04377203395749032,-0.1198975559590013,-0.04114868507856313,0.049207269887734065,-0.009147377422389713,0.08601674026407978,0.0018685637236052295,0.10460797772571882,0.10887821811378415,-0.03884844315721609,-0.053862317199720414,-0.016289811104585498,0.06687626213018665,-0.012376006866876956,-0.10114380550179619,-0.04462743468086209,0.0532449366630515,0.01045314990558683,0.056039784383828825,0.031883189521215376,0.014256237134815001,0.04118933422791751,-0.03780670063850275,-0.04202028769657794,-0.04512590272282821,-0.011838001637454309,0.07223022014206505,-0.015003272960609338,0.010176327533161379,-0.1309755924801521,0.038579140396538814,0.05614740922701245,0.033405842989905524,-0.1009228114120388,-0.12908091344285672,-0.05019971597632628,0.047543553040660456,0.014657243571850127,0.03981682583601788,-0.027985290919527818,0.034338626705808555,0.07188660517822883,-0.045825974344300156,-0.028116351509674845,-0.07315079700420259,-0.08639419848772059,-0.046966643548077835,-0.007647049916293074,0.031464471928174094,-0.10336018685177499,0.0433502739841123,0.024250165081806163,0.08786097050771223,0.04866208794411729,0.027573714596155628,0.019655890220091708,-0.02619372225645941,0.010445033425609943,0.03321858899491669,-0.06134970852288739,0.054171955143675114,-0.07806147254953774,0.07101874363802814,0.0051809773962020805,0.07313896452785426,-0.1241005738601843,-0.03924256476639277,-0.11284540762721544,-0.0058114387431945575,-0.05430641546477136,-0.0031500032540639888,-0.08123993044671664,-0.05022804826151409,0.010970500603756707,-0.05587307044516126,-0.04804137498685498,0.02267683078942379,0.08027768944020926,0.06559329162712778,0.08391045800517825,0.057846981277301264,-0.08220143308683787,-0.06535712526215268,0.03371624559986547,0.047152595022409344,-0.04850357632794863,0.01136146927810467,-0.03829415522908933,-0.016633425745865515,-0.04696921574790634,0.08733191501372846,-0.025264358620926557,0.011859755035918138,-0.06210773221068815,-0.02981861119107026,-0.08337835969585143,-0.08073201209799359,-0.037698665013310345,-0.06676017883861243,-0.05128716638602465,-0.08793090092343357,-0.08754097204616573,-0.008453691943361328,-0.030721662531254478,-0.02672763298277254,-0.03757455956535818,0.034848415223416696,0.03774592578454657,0.10235993250828444,0.058133208667196457,-0.016267700641353768,0.02320929430399943,-0.0004481491377120878,0.07081674545991341,-0.0555606213179879,0.09914005114097109,-0.00691517192428076,0.010540573132418506,-0.0641582594761722,0.03634145246810294,-0.02913824728661092,-0.004203976327250196,-0.03298112881706955,-0.04700619896248012,0.028156601810187736,0.025934157131719197,0.035742495716812886,-0.0003107802135636764,0.048192116985960765,-0.09594802186992553,0.09666745449688263,0.07523559249783196,0.08221252308157793,0.08338797768100159,0.09916475999985669,0.08978570164642938,0.014249316029768718,0.041024790923265345,-0.011036394269879533,-0.06533220084599961,0.06961799044391746,0.013956012040618544,0.03535372149653512,-0.008745051978536776,0.04724012534791436,0.0721445433539515,-0.07188173641683734,-0.009876206196091586,0.02055217463872547,-0.04911481095690879,0.005131547018132941,0.12176212071659878,-0.048685506353654595,0.05754936952310868,0.037908777458703545,0.0720308565974,0.09366809960761178,0.07384705266820937,0.10274533603659064,0.10525903235721794,0.06237610911936738,0.031015060267631678,-0.007038566451125681,0.03115154755770106,0.04258203999031725,0.048810998811469046,0.05180400388502365,-0.011627672248707243,0.03380851098393174,0.011752564749765994,0.1130430673936912,-0.01631227373623853,0.0570257136234344,-0.054025578893703435,-0.04529061005843564,-0.0518499685226922,-0.058618466919169526,0.002774606551212283,-0.01666493642847949,0.041265680151445217,-0.007444325193457198,0.08324881256280739,0.0001970365044121116,0.1368118520700894,0.1378523913701169,0.05229913792136105,0.19125001652260287,0.16822789809124444,0.152779309212007,0.1167308624106127,0.072666545415548,0.19181218608527906,0.0686895077172374,0.0913128311537948,0.08405456882263755,0.025165026020771156,0.023839816648185217,0.07927746854309918,-0.05160347253153714,-0.06909684804215883,-0.006697527933085277,0.11257519283561376,-0.08963604816931178,0.0159479417041714,-0.044378011058547814,-0.026255733649461453,-0.07778113854555783,0.039303121470216876,0.025208193314002574,0.11445642145928826,0.018767685621094817,0.08762813272565668,0.028672311211298165,0.09845774124048519,0.07658614265626648,0.04510575086066878,-0.04988335385100662,0.07687024893883246,0.019512499808617568,0.017053846903390006,0.016809360440436197,0.0021578138575148367,-0.015529741093869665,-0.009041543261188726,-0.027760863439094608,0.055395874129586596,0.010002450942319527,-0.0658791742764688,0.032230871984687125,-0.0994638112443262,-0.07099810092983584,0.0577737325367406,-0.028951482304089924,-0.019804697346499537,-0.0052915674641297586,0.055611064422685895,0.0283040097984452,0.08850594983253451,-0.008994011708396388,-0.026064023752057644,-0.01998370526724671,-0.024601995733452314,-0.0905562766021793,-0.04485848263234182,-0.0470234332602519,-0.0307604999822861,-0.057138468066374556,-0.13355358485830776,-0.003912009289307619,0.06703811902997915,-0.039510815467864314,0.02649182102307734,-0.0017658071768613432,-0.04736030965642499,-0.012467278020536597,0.05437556865555008,0.04860406884236211,-0.018245753086311097,-0.001959627447593039,0.01361062503506045,-0.07875675240582489,-0.05699944785454639,0.06654084209861237,0.053388874004223104,0.033066838437442944,-0.055104272882065056,-0.05820057829521024,-0.11480020495624142,-0.04722608127940569,-0.12177603264416335,-0.06644757478718195,-0.06472570939405611,-0.0831020394783126,-0.09124605250851463,-0.07827606525504992,-0.00026797446863194145,0.06275843749720172,0.01929113214865719,0.10010507791934929,-0.007584576170856418,-0.026261670331348196,-0.009021570377864888,0.015284561635183465,-0.01896182051245935,0.008214722553911369,-0.07583977766670484,0.0008164854389487109,-0.06927829600217807,0.010310960862296227,0.026319875875549053,0.02133336203546004,-0.1167247082953274,-0.09734427220517018,-0.00963800526373046,-0.05222617489988728,-0.06065210590342389,-0.07128975514207024,-0.09392280446271153,-0.0699361929668973,-0.03962558271955305,-0.07115858238933738,-0.04926232074661532,-0.07750124802239633,-0.03517663385471305,-0.03905665216676186,0.03998329011776693,0.033813660757666154,-0.0010737775779891853,0.0585907327933013,0.024024597742830524,-0.031968720282105886,-0.012460584913379008,-0.07290465562073503,0.0529199755340418,-0.04104293715738811,0.04602131731036081,-0.035872230040123514,-0.05289986180084749,0.0024573223592854287,-0.049404733792076265,0.07806684915076573,0.04095685889461027,-0.01840374008646778,-0.08213447160854363,-0.038345448810760484,-0.003067400525023664,-0.02440427500529568,-0.0836239297586121,-0.030400819769559224,0.026280218413594132,-0.05306915085915335,-0.0744671464761367,0.035982854984999785,0.043108780004074344,-0.14012284712883807,0.04918877022802795,0.009491568087351009,-0.09583283451615197,0.06604460551956447,0.010590605766945494,0.01645743292492328,-0.046409136348956444,-0.036823166285623085,-0.06003261349845979,-0.011344651369710551,0.013552464329126672,-0.06424720329789264,0.04972254841917356,0.009476932850993089,0.06885480364805996,0.035651621775170915,-0.012433416507389397,-0.013826959161159013,-0.01312566913781972,-0.052754252549238545,0.041775138971065814,-0.12186645631053045,-0.10907925964147205,-0.030133013344165967,-0.08392380669450666,0.01195240316747667,0.02345397881119359,-0.0028598233016937386,-0.05826653389504664,-0.00007694106205399724,0.05681100541733882,0.041618738571431675,0.05091823637836193,-0.05363293531554549,-0.07294301094223295,0.11244332947611813,-0.02717472356630323,-0.03477346723653679,0.01602293023455339,0.013654217747368224,-0.040109770750259774,-0.04997469240316636,0.0023973614996382767,0.016275092416208718,-0.07753396971313317,0.006304393804369825,-0.0443480120002575,-0.07511121017981373,-0.05059278446750583,-0.0892543488589146,-0.02304793774103625,-0.14055841492564503,-0.0018857752030208815,-0.02591069129156946,0.008911322093103148,0.06140472186990104,-0.06434387892197849,-0.049857319022366904,-0.010507609148047358,-0.03290559582782244,0.1301568012108993,0.08243901735048295,-0.07728828363451011,0.022162529269583547,-0.0592699969766528,0.006109952807642751,0.02094695841378253,0.09338034706278064,0.03395427714221588,-0.026418070897134733,-0.07436615004918957,0.012108719931076355,0.008123537678286745,-0.014199970143623635,-0.037686774672813186,0.0868979804790398,0.03987728141236923,0.0018561933817670584,-0.032108556962135076,-0.03525545873413774,-0.09194811207183086,-0.015014128406180405,-0.09111113489946837,-0.020600690757479143,0.02085996810267637,0.012830376689658128,-0.06948277051989384,0.1103030404774055,-0.019460187986054436,0.006307987283101202,-0.02815419108734505,-0.02754853793788281,0.021915723718265268,-0.052091071045248294,-0.060444769579621825,-0.02481661204942988,0.07905703623262224,-0.03367688657832439,0.011604514509562878,0.006784797101418146,-0.03788374267097106,0.045324661246756145,0.07164770274441161,0.01632719393077273,-0.09865140624976397,-0.08971851066040745,0.006241438998134761,0.011541731665155128,-0.002293207612001147,0.010296629658397725,0.00873300920703489,-0.00755081302833736,-0.0072626853777968915,-0.07861349201410145,-0.020380292715533335,-0.03632287447568081,0.03465952646885404,-0.05388333002620314,-0.026043251423298473,-0.047370526170931904,-0.03166598381721648,-0.03650802331971089,-0.023261980183860435,0.015896101036508604,-0.09115230958903356,0.021333803291743496,-0.028639405399954004,0.020509224929117,-0.009522606641250219,0.1049059093078593,-0.06235852107995824,0.0065308659800039715,-0.003979609279984156,0.01887002469741034,-0.0727335566150394,-0.0733648481166343,0.003588094311056693,0.018186648121573817,-0.07269970467314825,-0.01493912427572782,0.045759043145822874,-0.002037239390785376,0.002078523494230651,-0.04070495008779152,0.06800423812651339,0.029531657752734967,0.09648807063940672,-0.0011667279221686722,-0.039240226192353685,-0.0027573441694553227,0.028953973006378624,-0.1896230015806521,-0.06353264054121992,-0.07633919636849917,0.046732841199259516,-0.02923180405617073,0.055551943123337374,0.05730641168205337,-0.038375654884481816,0.06659123728189285,0.04419447028842073,0.05389759263983668,-0.048924516080396246,-0.1121122505542148,-0.05893856674692322,0.05354219659905956,-0.0025532492915838127,-0.04963588460457147,-0.018630312642470222,-0.012736658338200387,-0.028708203806398873,0.027260786670583497,0.1269558559197273,0.020784540008004827,-0.002536995384739872,0.06630658056491971,-0.042018908626881436,-0.02343872530330879,-0.04086816077727304,0.025873713346319188,-0.014098920120369968,0.004172146551532484,-0.10924455100208318,-0.015248976487029636,0.02963294438139297,0.004773703283506067,0.03108262277001039,0.03588353449593011,0.05892345542536599,0.04792455930378966,-0.08826084339427688,0.029897187876445623,-0.05051689551359744,0.025030367059742056,0.007759732781378927,0.040036155423841806,-0.11201826655693656,0.0064473913858189985,0.08698021421259104,-0.04235750191706887,0.01763768070805977,0.056985259383784036,-0.0022513508206879734,-0.01993266422807456,0.11455482064916934,-0.005513557181145334,-0.004605503293820036,0.04511945479630444,-0.006526216534945156,0.016166046045070655,-0.11501443102310842,0.09451821809161912,-0.058326013580484955,0.019255930157235045,0.0820358585817556,0.041028683773754376,-0.05035452768517002,-0.008872311161567918,-0.08477766181940902,-0.021000043288188833,0.020072533116482404,-0.07364678467876895,0.12648618138748344,0.030560364554474157,-0.04175908665466766,0.03440775472071559,-0.0592456292576912,-0.034815488134863924,0.042097914738688985,-0.01109848965534904,-0.125418610708262,-0.054261757503225025,-0.014944120769860448,-0.05542615652976947,-0.0014553360269819406,0.015407097314254612,0.06287842539245508,0.07924570561651692,0.051279398787537,0.026954727141977563,-0.06294750064098757,-0.11658889608730853,0.0490231982860148,-0.05827538994073614,-0.024565154400641633,0.01201875805439071,0.09338620906905198,0.012637924116043513,0.01539328936522258,-0.032079233445024766,0.01810612715608282,-0.024502053462963674,0.027446155278780242,0.09488227646551284,0.06232262385996974,-0.015817125628978218,0.033412739046197466,-0.03373327647675143,0.03886470513778606,0.024155861680952448,0.040184633586466095,0.035531676802506185,-0.040111263837198256,0.05091279255619251,-0.06301159091474874,0.0659826836607715,-0.0493765081905719,-0.007268283918814881,0.03936421775366425,0.05371035340055642,-0.0839264627730115,0.03671669313216739,0.06703310760664721,0.015340191253231262,-0.015677764783654426,0.04522391385367074,0.004729321515809109,-0.10942210895278388,-0.05087388690782414,0.03528916120347762,-0.01389102831208227,0.04562550648813503,-0.044723048079378575,0.04549716186628686,0.007847350083249768,0.0008897084560629101,0.043181139925744925,-0.008755949189834309,0.04398606900920033,0.08095431805859202,0.05848834320006796,0.023673664916663843,-0.006594384196490112,0.031861508227148845,0.04693057685704781,0.020235030486021884,0.03915378930870222,0.005851930036370873,-0.00013492498639718848,0.005866390857107215,0.012914941670710823,-0.01778936635373132,-0.0277396112609397,-0.007031143238889813,-0.05076942674156083,0.021251446982952303,-0.0083179116159261,-0.018137014483635788,-0.05125851019994784,0.04116080242119836,-0.04908014189287492,0.12216037463234923,-0.027106635028329083,0.07348082647753844,-0.011911681230434389,0.005848915019207676,-0.0720784656979374,-0.03903537726181005,0.07633143868154744,-0.013495697039934028,0.05474637589216718,-0.05654121117608986,0.05278878803538436,0.014327595234186323,0.05067121837478004,0.028128732382954665,0.022315219308380665,0.07367378689056815,0.013387999102375805,-0.016301432243946624,0.029807946236926057,0.046925105971391774,0.0689640448792134,0.015843061525440263,-0.03010192140816724,-0.053324603449744844,0.02468148788073185,-0.0006396728083995163,0.04854172143089931,-0.07743801825877498,-0.06964065400703014,-0.02055441258422097,0.006495359095306426,0.020380403454497785,-0.04048222617068589,-0.1256102183733579,0.05271356599057171,0.00502269485769501,0.06291756952695954,-0.019962458904009002,-0.008219311090615904,-0.08703482525374188,0.01790382815465503,0.072845724005019,0.016635091839969248,0.08640595531792705,0.0740376263770691,-0.06835431020314824,-0.05031520380651882,-0.04968912939603668,0.025631448318614726,-0.09303077481470283,-0.06778988887029323,0.029139068814421062,-0.03820425400734764,-0.11985638679224417,-0.06810069387060855,0.006301210412028896,-0.0445054227938461,0.0128304844863254,-0.05970203663422135,-0.08664807269507604,0.040621020495432564,0.003334609717433428,0.0383373754504636,0.005242115592057578,-0.037852033169520044,-0.08384215030851432,0.024198301050787394,0.01825000555668757,0.022872396084963775,-0.028568028805994353,0.07535402045040426,-0.061968541306666416,0.06980315130806083,0.05024402567070754,-0.04692676970572201,-0.034973863441504514,-0.006508983128733034,-0.11955899208926832,0.018869419170523868,0.06670049934263132,-0.015918041349568205],[-0.05487212264868134,-0.10657318720836945,-0.05686777622890609,-0.03834354883860223,0.04983723175770336,0.019681684048106968,-0.012107319394369473,-0.03723717370229806,-0.08062592123776313,-0.009338206022103465,-0.031498706747981144,0.021695235844475465,-0.012947927803803386,-0.07133859380885843,-0.021717477531864413,-0.037036405492770555,0.037726216502370985,-0.06328085676599303,0.06094017391576127,0.013959286153333765,-0.0553049907160808,-0.06944235512491316,-0.01766556327576552,0.039028090968500316,0.08245876643704904,-0.0567887869404195,-0.022998898401895236,0.017625949322334977,0.063459911742183,0.12866415148021673,-0.0363694331149883,0.06273780450384442,-0.015597507514587548,-0.04668184839437177,0.015558247731095862,0.04170745843960817,-0.031539574630537595,0.04622299766255458,-0.0747088122756702,-0.02955686420832829,0.12857743075462652,0.022799387586773797,-0.026022312906418838,0.02374833545316125,-0.04689079905403863,-0.037401360557796186,0.06705632465822485,0.05215492955214886,0.03761281249670912,-0.0033453705014278184,0.02713277151343888,-0.004258662725193525,-0.03475812273309911,0.01715847377651955,-0.02721892324822734,0.04148450811839124,0.037282708707779964,0.06490587571520254,-0.12269391222676249,0.008551729310937714,-0.05621170125458789,-0.008316248571363235,0.015020619028933075,0.04916688971743446,0.005764517025028739,-0.07671173951881353,-0.010886065907170592,-0.026446471251044535,-0.07875684133608711,0.056934114252256,-0.014453073000986404,0.004189928620119782,0.022920956015828376,-0.020543174261206592,-0.005927418565313259,0.060509262901164665,-0.0020824384611613828,0.097050891938217,0.021122766768603835,0.09713191144332012,0.04637543685401114,0.07192776204649752,-0.07318501788547056,-0.028919624158626905,0.17461594014080453,-0.09058649004520015,-0.012198299510605304,-0.035338803984637436,-0.07634720018609364,0.0038568746802743127,0.008155758281578948,0.04390509292662316,0.011590543214626268,0.0481457106797461,-0.009790189125109906,0.01729035914268262,-0.08081767109842404,0.006974067472989446,0.08392176238193938,-0.050132961778741235,-0.03849852952961741,0.033792447406369594,0.02386703950636802,-0.05355379530166566,0.05036426023901944,0.02580499869540908,-0.07495316602965689,0.03237027920827523,0.010233394119162144,-0.025419876842546974,-0.09610350754233168,-0.011276634329414099,-0.035334898873518705,0.016386599336806078,-0.059877595857518624,0.062489578334419545,-0.010301913459580014,-0.02922101033234639,-0.032902559323468174,0.046331135905546716,-0.009447396378241098,0.03168861617068879,0.12227388041120928,-0.034909382074927955,-0.056298390291746506,0.02799199137681728,0.04619096680008989,0.0443644579246283,-0.037664841510711096,0.010807957048106031,0.0663198635177952,0.016047248650212495,0.02710147726477536,-0.01799213379854303,0.04784237720804268,0.05819996963184732,-0.05020754336597665,0.08160894163421775,-0.02368674329274149,0.1003017378241301,-0.060200737981984886,-0.059798073505327794,0.05974640998652141,-0.02250137838720124,0.0193493559864069,0.03189996493601712,-0.06228847864484599,-0.035937978041540176,-0.08778458527585088,0.03319878108591572,0.023880950847893982,-0.03035493877381919,0.022074877925939974,0.02964602566284127,-0.00827935516522708,-0.04279042815207255,0.0011052522398510992,0.1383668399257104,0.11325806466368549,0.07388220555225443,0.004878095904089989,-0.07106602356355235,0.02260624723847257,-0.05591295386718092,0.08203855096737864,-0.05551540717824971,-0.06372816767944285,0.02572710390862017,-0.0627768138139167,0.0461700463999609,-0.005957577968601254,-0.06689783512763567,-0.031152117367858643,-0.11028597473891039,0.06845862110183427,-0.0013419066043982404,-0.014991581910166737,0.07829938343393555,0.03274277403196718,-0.0031328416091574328,0.01858064499910023,0.04942648714017949,0.14391024019159723,0.06577524112372467,-0.01707165597933438,0.017213589513671083,0.08288961621416314,-0.035794121504288116,-0.018320541088284462,0.08659304151838679,-0.10357156863697654,0.06240564802546495,-0.021223612144676964,0.09975157236467568,0.11168202944483847,0.0032804841923312076,0.07328674660008133,0.033471384006665356,0.04913457778680434,0.04785977198547316,0.05685445095810511,0.012166815388957457,0.013391437615338033,0.0327211239777262,0.008575702834264157,0.06307543232596455,0.1373841385633756,0.0528249498652741,-0.01737283687511429,0.011624097389418853,-0.07536929141121888,-0.008939336376042146,0.0000674555819877439,-0.015212765449779788,-0.047625984916666655,-0.024283735522823938,0.06054978373756863,0.036259238207572174,-0.010936877982823577,0.02860807350270215,-0.04397793278110737,-0.012831972368969945,0.015559559559470505,-0.05886746493125486,-0.08519847733839196,-0.03032786613035901,0.0372576416817909,-0.05966590569061871,-0.0012344921083212008,-0.007169355777024442,0.023073451479534213,0.08765701746504143,0.05034903053176205,0.04389174156506712,0.09200004378990875,-0.06276329864511775,-0.005262182691551076,-0.11256765474087851,-0.07466828413245499,0.010027158006363574,-0.027495631845670353,-0.047491053619976666,0.04043897905429505,-0.035905490236324986,-0.011734299417095261,-0.07376722218811695,-0.06230523599149136,-0.00045671077634547503,0.02234185605965482,-0.0818371669198281,-0.025025515079402677,0.02073121757435866,0.028525643280178387,0.08345374263872075,0.059983965750806355,-0.05830933010281082,0.04276104620109167,-0.08733837045085827,-0.038217662584004684,0.07534615549285523,0.07077256363722072,0.07059914449421034,0.10471465165342375,-0.08073428172267547,0.009882320753770909,-0.1020874636548724,-0.08569849020811315,-0.14556873076932222,0.05602969959252522,-0.10969678064302472,-0.0896496921708664,-0.04048288825852139,-0.02129948506971982,-0.07361740738149994,-0.1416608802171803,-0.055626848555023756,0.03551378166005706,-0.021350442753165735,0.06441921106003612,0.011992203592740433,-0.017340906373495866,0.03827041351756104,-0.05534556721060703,0.05094925480857268,-0.020260284183278278,-0.009211230965207755,0.04575203991597389,0.08255864800359385,0.06406103810406039,0.10667410750056003,0.05855078132854509,-0.02920433691135663,-0.035544144052669153,-0.03091350532144246,-0.04589628939378496,-0.05677854951349802,-0.07660992503345508,-0.06992204287622696,-0.00839398512322974,-0.07008126737018602,-0.04244762659846008,0.033929484010046654,-0.05259341075212808,0.03287480447300176,-0.005076351945603553,0.0061929870451566974,-0.04832365294357337,-0.07003896387409934,0.08927892149300046,-0.08214022428575582,0.03336137188894047,-0.015530684109654263,-0.08172384356715087,-0.09766345879475707,-0.009437820965856195,0.07019098442675421,0.08172485613985175,-0.0034642375000442285,0.06655671112433025,-0.09723219377822868,-0.11041567824902376,0.0265342990024625,-0.06316623454560893,-0.06104424649081601,0.07675709604489707,-0.045110596668665855,-0.018390553437905646,-0.0655099750243666,-0.061236673128589734,-0.11234493893591675,-0.04525483533331756,0.004818831432978322,-0.0006236609083830457,-0.0200218849495582,-0.024661152380461127,-0.037510226560034256,-0.003422402072039811,0.0987871400288859,-0.07077661233795192,0.036275924695386985,0.0613793823518521,0.03874371888257558,0.06952043020428977,0.050630288976439355,-0.03500904144652599,-0.00009895692302099805,0.02565298802258664,0.003788872025755168,0.0038603207883298636,-0.04479935236744702,0.007805339131752438,0.007361596074698044,-0.040385527340350016,0.02863494549244538,0.11968811606769422,-0.0023491539961975833,0.005296866968319458,-0.025544129515833233,0.03831473562162891,-0.018476299076415566,0.05106987807910706,0.10777507501795142,-0.0021169993676804447,0.02832940710922903,0.01612499814612773,0.05203328948989591,0.11867435931353781,-0.04597639630674423,-0.02194147269082531,-0.019821090225625847,0.04255620986649906,0.00653342813565253,-0.020811363421956493,0.057068850460862845,-0.03787212027878777,0.009056659960104978,0.03086678848353728,0.06511614684651011,0.0006691274684718547,0.02683898929850304,0.03094150303523504,-0.04860600282476638,-0.04103828428976902,0.04806905309621464,0.04747766761192701,-0.03348988950225955,-0.004874703251721869,0.022436306159911632,-0.06419109683905566,0.12836635488975798,-0.007164787694580745,0.07267734454113253,0.008820639068694684,0.009183464447460836,0.0777116460855042,-0.06954506827840315,0.03640789413636011,-0.005159158287311193,0.05183828723348204,0.09933197425551123,-0.014060813836816129,0.004004295591586563,-0.001963381121403209,-0.0818450997784525,0.0053546201889124985,-0.04593704043259473,-0.055134923708055436,-0.01982136441948833,0.001855542867157567,0.026226467636972357,-0.03823980767244041,0.022804453560509662,0.034079546616293845,0.03320509923478722,0.001969810697496089,-0.03529980418305377,-0.08160445849499633,-0.08799984551786305,-0.025921610960869926,-0.10166155970645654,0.037108932818971915,-0.04910125750008447,-0.06812149722445676,-0.018721838786909074,-0.005889830129815855,-0.03376820506612883,-0.05345646066239442,-0.06083164465362298,-0.06884908572716189,-0.020475778999083163,0.013832043832010166,-0.021829671203768435,0.08878891755555168,0.04767096307242902,-0.016477104214668265,0.037343546786568434,-0.055651564032214995,0.08090390138258886,0.009004683443837695,0.026598355255538858,0.025228708428228008,0.041232567073509266,-0.07526341698097529,-0.019178958121263714,0.003818095252987904,0.06632690458950755,-0.11086863319647719,-0.017809948976827125,0.007866075346579899,-0.09389061412480407,0.038907523459214874,0.06174907443458714,0.0018401737318303945,-0.058720829510347065,-0.02594257810170328,-0.03642637467646212,0.004221722843440328,-0.014742014053071552,-0.02649142825380571,0.0047307012802871385,-0.030773043011627917,-0.041714409918824066,-0.08470011144702698,-0.031287411246991075,-0.05356086985454832,0.06009724584221923,-0.01888467574091341,0.03569467103356524,0.00299027353724086,-0.02293801417601626,-0.05682577459672468,-0.015420578290460285,0.06749189229485636,0.01601593921975871,0.010580517125109424,0.06752284145512487,-0.02586743599123498,-0.06375005679635093,-0.07374017081093277,0.06038062662379961,-0.04702641598713853,-0.05522477988485694,0.023056319145068095,-0.013769279799674782,-0.03927019209515656,0.06119918550067672,-0.0695962794004133,0.08343560764814038,0.004790966076056447,-0.05984508046631663,0.0035087522557431415,-0.05110577329048588,0.03895397231019862,0.012540023967572873,0.05727076528080417,0.09658001426312987,0.02691444066220598,-0.010027134399079842,-0.020896492864820693,0.0012965399279306448,-0.052742866423456485,0.04732491338413825,0.035126424029522686,-0.014259172038990913,-0.03614915279433387,0.057588618995990264,0.01693421131166917,0.022779381582602325,-0.04111811772502272,0.007503135894861477,0.07877487646094564,0.08228945100593942,-0.03195106466809403,0.011069452683130688,-0.01849540206247391,-0.08640608962786162,-0.059141825362305805,-0.057067297057070226,0.03209901592679371,0.007109392303152562,-0.014318064846264784,0.09963151276824085,-0.036088002709934425,-0.09144922038584737,0.014561062762192196,-0.008881941335684406,-0.030793361484387965,0.04672893799009843,0.140814851502125,-0.010376527653530056,0.0369838489611504,-0.0318532955479433,0.017561288376474346,-0.020545648875168087,0.031563055802103376,-0.06513900459643579,0.020826211675277866,0.054050957488840416,0.08959994796444164,-0.06357120831286409,0.011169542639056819,0.031134256811263045,0.036966297437863845,0.010946574089862411,0.013667148725800361,-0.05080983901846329,0.017291039767455253,0.0657738850675001,0.11848501689354958,-0.023002052327159028,0.004279592865962218,0.06970661369848405,0.046480196462109616,0.06414237735134445,0.037894251405828056,-0.005264585331602256,-0.03733309156554667,-0.01338311622610312,0.009512949679918847,0.1293762528160137,0.028283179000446905,0.02745438622436427,0.06136378949560077,0.04141304477509063,0.016824775766878818,-0.03244790003430774,-0.008283179625650179,0.060345878913671325,0.03684493387055163,0.03646401940362099,-0.018164265924246716,0.0952452463165158,0.016597885694428487,0.022683343749252818,-0.07302014828078703,0.009038334999301841,-0.02305826887782718,0.03596105325484894,0.009885084835443477,-0.04857172729254555,-0.05172487641342652,0.12010714126748673,-0.039074949023335415,-0.024049524401001283,0.024179900051939332,0.026082621474657335,-0.05278475991281279,-0.008215652704317728,0.011382644734501846,-0.011024979131469954,-0.026669952646946028,0.08063538253856961,-0.04558234620373282,-0.03621658756906855,-0.015266434826930561,0.002627159249272683,0.021962087866770216,0.043969684729602776,0.025780171450148003,0.023277846287313577,0.0568498968745553,0.0350711030546366,-0.012980047167945276,0.049671447018304206,-0.03835248382465049,-0.006757244430110047,0.017804635104968387,-0.006701366976448669,-0.02402820744296809,0.04142334055647968,0.06942727707827488,0.03727863465577146,-0.04315426784693579,-0.002982795585783866,0.06187239839494213,-0.042524125114485806,0.037000652474765534,-0.04533843248430097,0.03126166209324304,0.0038731827183516028,-0.02422298287676657,-0.025634615748792097,-0.068519877527547,-0.03797199624098455,-0.030761109110449374,0.0045044307594476005,-0.02055408442339798,0.0065367351195198395,-0.034408086256690756,-0.03085368945773265,0.058941136595614875,-0.07684326905321462,0.06599296948529472,0.019356591469407786,-0.004898853238078476,0.021791394807090313,-0.06322607363028875,0.09499083594430244,0.08946389157469258,0.012941081877201284,-0.046073288858634306,0.02752885756838102,-0.060827998110994,-0.04450586273855254,-0.04690292131927496,0.027521567219425988,-0.053839953612041094,0.032431332316206124,0.05035352519431335,-0.00627194426688278,-0.04358744758123712,-0.02777920180302914,-0.02641051752219679,0.019878805456660487,0.024783098405182512,-0.012381067149082025,0.04860250147648397,0.02372789618714313,0.10468060222900952,-0.026880834890675297,-0.013644567930142034,0.04752521349005282,-0.0017743413186428994,0.026900998539662185,-0.05273216097371006,-0.013082650339910238,-0.03836220350378786,0.0493854957232514,0.06636576856268642,-0.02240419208376755,-0.05795051421713688,0.030542585643455928,0.03490152532285638,-0.04031569894817951,0.031237375066558434,0.01887597249892416,-0.02115849673736922,0.08962376888484451,-0.0018371227514104491,0.013405823515986483,0.08736349415733845,-0.10608832737799864,-0.030391313677787173,0.008823849481664666,-0.0020388394207115084,0.026019622898523036,-0.1509919682911747,-0.00316225672693794,-0.07675640226906973,-0.005218620496819803,-0.05902426206312351,0.060452890397186036,-0.13673425746291906,-0.034935010442219756,-0.0492786318518832,0.06304803079015309,0.02243479830999314,0.07205137322000056,-0.005277741707352281,0.019213774899495772,0.01839306331112714,-0.029153813884717855,0.037263452509157774,-0.0048335874601994795,-0.06989349688621486,-0.0421045804052059,-0.07113032432447526,-0.055509568707623844,0.09299571737915295,0.004734630343147862,-0.02935570089839769,-0.016235345196944195,-0.03317314071564231,0.0399257859246582,-0.0045273454988133946,-0.0038420149100145515,0.08838008930010557,0.07625229534214972,0.014850143959428777,-0.016942373020504418,0.041141585695323106,0.03977611321893828,0.1370833430549747,0.04600257937460458,0.04425010933928111,0.014178455119374982,0.1282250535525644,0.016670123363017948,-0.07421102998656867,0.0895123154486442,0.015854184707688936,0.04231254763010698,0.015821542665125265,-0.017668681441462716,-0.0005651858172905288,0.030476684819443312,0.015317246833224175,0.05389565516434429,-0.01354569548792088,-0.0556344541136217,-0.010596543509111328,0.061822903355059376,-0.026324975154181342,0.016900555787396195,0.030198092712015703,0.0631410583255976,-0.04157243352996494,-0.07275000846125732,0.015189036176788118,0.043111642041328335,-0.006111205157290184,-0.03771720926940089,-0.02806358788111158,-0.03038614964538332,-0.06275705309027993,-0.07010626938432202,-0.06459549964417972,0.13485610928673303,-0.04795120654012105,0.062418091820586705,0.0008196046284608351,-0.08162748492360428,0.1069646976589398,0.04984559393898769,0.016073981664072402,0.022748715356791176,-0.056754456938622716,0.05418085132056533,-0.018635739998204066,-0.035512332337825775,0.1049621510750932,-0.06772550530504985,-0.06862102596759165,0.027218890910505424,0.13337211816977643,0.0664616002941766,0.0018190886552250664,-0.02023827489553904,-0.06507156086316504,0.04790102956719489,0.04393848689008428,0.01659141530188473,0.0510736027770147,0.07092111678402833],[0.037990246754228726,0.038471977869875024,0.015050638967459095,0.03483784575699764,0.0028946642807506496,0.004441236358514016,0.05798342716945634,0.015200015472202535,-0.018539497717549057,-0.002779609156757314,-0.04106372369632722,-0.010973492986582572,0.05081248879048283,-0.03459576592235973,0.00606882826309217,0.08589638831873672,-0.005678819880615437,0.001707806441324301,0.007482613872918467,0.04210796751188455,-0.022379286375744024,0.00969514411588472,0.0030615430867924204,-0.025948681764979314,-0.07303063296434754,-0.026769361240125685,-0.012424681917963266,0.032238455859100124,-0.07570020747167247,-0.010097518480341404,-0.07106907218821532,0.05024277285462203,0.028502417503041173,-0.02646706981309251,0.025187366674663897,-0.06325673314135376,-0.017380932446326408,-0.04311219026703171,0.042770383522921326,0.0637927795970054,-0.10335524999774165,-0.05414041094292195,0.05596571917086513,-0.100097176608568,0.026405772031542735,0.03499557300056169,-0.05592740305121752,-0.07906924957957276,-0.042359898874575086,0.0366313185967723,-0.04726758492484221,-0.013230896345737675,-0.04349921201451717,-0.006587889150890166,-0.0014207675883474915,-0.06476946343206014,0.0694939926947935,0.017387120067208026,-0.032381056070733646,0.03856249569010283,-0.007600079502886998,-0.09058749565634584,0.04285762144199344,-0.038260087319561736,0.022236578512891462,-0.037634288416507275,-0.14624614917342826,0.03511876555274221,0.05297658409884235,-0.011847982522182656,-0.10326024742830485,-0.011224852359502636,-0.09238199775005793,-0.07653867458620243,0.05951237314958909,-0.001830364553810106,0.03173268883504059,-0.01319970036477113,-0.044322813311199014,-0.011293841571084614,0.05432303250904402,0.06542863679436269,-0.09637974904088067,-0.04721781990474994,-0.08323916037492188,0.045385776685470475,0.030593231159643422,-0.00406288509825596,0.01805628529641964,-0.010611248800277884,-0.0177248096703081,0.0048403424125500645,0.026199496782294884,-0.061018097094430665,-0.014055446799250278,-0.12505956813481775,-0.0514505659288982,0.021390639344150576,0.011099236549406264,-0.03617194601310837,-0.004723296825342727,-0.053365914729573596,-0.004067460802449581,0.019614604283366432,-0.041863081752811226,-0.031438004984443005,0.02544830718715315,-0.002028896102932699,0.0474944123416127,0.0383726213930644,-0.0621930183698505,-0.008551002084270027,-0.053041080882752056,-0.030096952481805328,0.05910386460727139,-0.041558959966102954,0.006426529165744291,0.06573192649598429,-0.06336661608762025,-0.07974492343861189,-0.0316787354148657,-0.0949983331504415,-0.12222918165376413,-0.09676540841003593,-0.17611497203792167,-0.06268954413181442,-0.07846461515604997,-0.04498743640745061,-0.08973608314988464,-0.02619291791530403,-0.03731086261126169,-0.09742102768156376,-0.05161415610733582,-0.006538735042750982,0.008978944066598202,0.0019551437043434533,0.031082765995392572,0.03356352677611669,0.031192873443150557,-0.02913611753642233,0.030566741476962755,0.1036947847589015,-0.048354408397796915,-0.0024999023642179085,-0.053830140650953574,-0.02477839777295112,0.10700730558152745,0.010663650180156125,-0.022575351102079744,-0.054371500877604395,-0.029992633496948477,0.03205233148394505,-0.029338599334351838,0.09290447792138642,-0.0013060142334523298,-0.026591123916634936,-0.09468227725212988,0.05012549084700077,-0.0643843194906198,-0.0006915872639269919,-0.05453818999983311,-0.03112383253368181,-0.08634653351469869,0.009285768965418481,0.032642610880418275,0.028509427802933602,0.021498690143165536,0.03852745110045124,-0.05204863777492348,0.053305951031983635,0.04775041438735177,-0.02580730165465314,0.06715363895903789,-0.06080638038876695,0.06490993179039348,0.031186157091803304,0.08155859652269826,0.001173557418599079,0.018836482711220914,0.03570877090541055,0.030888354918610913,-0.024900429362336985,0.011933320458900002,0.06632832471019565,0.07017426388321281,0.05404133151540589,-0.0030281756543701207,0.0666150324734897,-0.003210993642183727,0.04051327047748613,0.02327385456991226,-0.09565320792670716,0.016174370910195,0.030258759342397953,-0.07145360904818167,0.036245837466500244,-0.028072701983402497,-0.07347856119616021,0.01012119359498038,0.02427510230029527,0.039331203449120625,0.0283740835975072,-0.004292950242844921,-0.029976279256897845,0.012450768673908801,0.1198077110849367,0.10455589952131128,0.001016467802257872,0.04852118749232061,0.12256115914975284,0.07304768985817923,0.12355468466016385,0.10142544371276131,0.08194029970946012,0.04683969493347375,-0.04250651145362374,0.013356004417426874,-0.004476810259320645,-0.030697640121114606,-0.005080843285911299,0.0011992329151100274,0.16235362934953487,-0.048122212494877976,0.04583869535986664,-0.022179466022161164,-0.05693452097345808,0.06649282431147065,0.030297210085880336,-0.03816475070338749,0.00024086624480145963,0.06046083691849184,0.010943049383241674,0.09838139070316959,0.031595099984155176,-0.07543576737976952,0.025074881333440647,0.004950417739741292,0.04787644540834868,0.0855750335668994,0.07804537149964348,0.12196163025854065,-0.012703919579957985,0.04828042975815455,0.0565151807274278,0.02055988414433029,0.06230226500797273,0.012586607096164389,0.1255155853743593,-0.03562206009343894,0.12652869517956655,-0.08735508961969989,0.021383476567574222,-0.012695144939370276,0.031118400834315302,-0.08850086839751956,0.06029827377005141,0.003931079056012251,0.0028133235508531014,0.09093172147922172,-0.026816057714725915,0.011601585765415074,0.024137584109833576,-0.016918919481969885,0.002545246409749404,0.1046024991982513,0.053751120107295484,0.011372255349277938,0.006095628805374482,0.08739890643850126,0.1374303903960031,0.10478791217774153,0.012633431492666958,0.034700332825296935,0.019125417699887414,0.008830628428345923,0.11423694932783006,0.011180913193478031,-0.006724733175627441,0.0037965124993092282,-0.12701276274398868,-0.01646250275014815,-0.0662937941624204,-0.02201573298926427,-0.059247535279810686,-0.008685864750865765,0.05840882230913176,0.003850955399274313,0.018534730695413483,-0.00907722853620526,0.1269286845153833,-0.009388491715129234,0.08501444959303527,0.04742882978217673,0.12801991988692088,-0.07139262645610175,0.029293300934363446,0.06255803173630824,0.000002437305451451405,0.10191819297817066,0.07498182565054959,0.07542219416325854,0.030146805680911628,0.17939848746643167,-0.06951378205112559,-0.050812054543000855,0.022230139525380447,-0.06309942483878835,0.024257008709541065,-0.04863895399687642,-0.03893269688591375,-0.09505209779501006,0.01009691405598655,0.02768047022546956,0.00509154966532293,0.06658600220421082,-0.018303039511343842,0.06129675563731355,0.010083685537376604,0.09580030048260571,0.10751083996656997,-0.01706584187435057,-0.035765413937199675,-0.021430996758384394,0.03798920664634036,0.04798553043013865,0.08840898326673147,0.044347614248666414,0.043828849162704936,0.15434756787072854,-0.005885661176252855,-0.024765695791146573,0.04020783433560129,-0.011827902879287224,-0.01151593729261223,-0.006483679156925829,-0.0011791582524004053,0.04167591431315825,0.009888326834936163,0.05850776216577347,-0.07851785410322255,-0.07422361602865658,-0.021271089314757935,0.06448954464496384,-0.010153679314858114,0.10622202382303327,0.06960580357891583,0.08629827834696595,0.08464340276692142,-0.02393857187612875,-0.0882312421859843,-0.04746946270345769,-0.028167426034458133,0.09294204786833418,0.02325637896337481,0.11556224120624722,0.028332391758109338,0.059882856403943696,0.027172876822069345,0.10813171439982865,-0.08552400230337293,-0.01742812133340604,0.03396742719961477,0.031456962063076105,-0.024393315123289853,0.03180093819265172,0.020777911721735234,0.033602349115829405,-0.09535549506305864,-0.03679114689544598,-0.01920782248581764,-0.04704670115963922,0.06349970181500564,0.06192123929734179,0.005385610875402463,0.10979806103672636,0.09543218559895005,0.060943401628534725,0.06388105664085995,0.054825295818210634,0.07804211360618526,-0.016933780910421765,0.0015196764440907973,0.03287481365399877,0.13581104655789403,0.08925975750126017,0.024986904871755776,-0.022613910671513283,-0.038808372482667136,-0.08694207504100732,0.027230572492752247,0.0317647953135187,0.05269281190333404,-0.010408631948879,0.05589760968908769,-0.0626094677289695,0.010477306866875284,-0.012266581667691602,0.01762304198826011,0.09337982637073028,0.032592649799716766,0.11423835456732043,0.0923751640277881,0.20969497479957408,0.1325747539103946,0.01848270346347755,-0.09182593021678695,-0.019851592966739797,-0.05060050088662591,0.04449896176357933,0.09709140951969708,0.05313339898503134,0.05082517590230049,0.021564882438002277,-0.007447164501292852,0.00795943286353802,-0.0034859092965907608,0.0007829339610080575,-0.04244288030468568,-0.06290586051221089,0.028631845561061523,-0.07421137976589154,0.023290824455849162,-0.061552753105682464,0.05188194264745354,0.044149837141572154,0.05025697134484874,0.05781503526381235,0.037647440472877124,0.012005746537417749,0.020727524738926948,0.008880114886362124,0.026039375447989926,-0.021272792328384107,0.01936039358851928,-0.03835967135738414,0.012950891829422984,-0.024873656120904836,0.13875722038896976,0.05536328832763557,0.07898174727338249,0.04330391231845352,-0.03256252277430639,-0.044457202565991796,-0.008929217224935594,-0.0292220897926503,-0.028650316189737794,0.057238134674576745,0.023708700948310322,-0.06774996972536688,0.035348846965291,0.012914600243593708,0.04180018960094841,0.019616420225535964,-0.02781664506161554,0.01639619507084263,0.004829275522621072,0.08416586330073238,-0.03369360524192861,0.02457160774236402,0.04285220715408451,-0.013678339344846158,-0.04915253034689776,-0.0019855724885783858,0.067459764650667,0.0479296361453605,0.09231491685430798,0.11916661903840302,0.030487146414975973,0.0760230739954668,-0.04181082496157957,-0.015457794083926515,0.04574126806003384,-0.04165983218437158,0.007496330053845373,-0.005246613584809025,0.040698055495047306,-0.02337763936573532,0.09464328891429354,0.0744150806311374,-0.05106693901571595,0.0498016931171748,-0.10020142563228396,0.03865420514056557,0.04311863470365883,0.015675136148381612,0.0029202383470561762,-0.09355444685128009,-0.06714842626921749,-0.0066529013790478046,0.1267961376713121,-0.02484114069012042,0.1234133095475612,0.10598589739856384,0.11433740095118723,0.047918428136288584,-0.03403152488210666,-0.05218452482451748,-0.008321797157894422,-0.007234349235919963,-0.06252129497664978,-0.023692985516675362,-0.06969248082825512,0.007170983822079062,0.12287634756021766,0.099096561647251,-0.02992781897164875,0.0370636259973391,-0.06299360960441605,0.03971500910872344,-0.10729569359866113,0.025481954221530104,-0.06297174872913597,0.006603238502670735,-0.12541296430549942,-0.03806019093281533,-0.021970887532513764,0.0011293014908013133,-0.02481413599932167,0.0667187113732427,0.04349635016577136,-0.008792489160664345,-0.08117147887235482,0.05879348946539555,-0.04670254950013596,-0.07834246646497016,-0.06460319069370848,-0.14346896432225295,0.0231019114579998,0.04691372612877354,-0.010368385429496052,-0.057837996538482914,0.008845032503030655,0.07184581243983232,-0.00020421157773457666,-0.05792434173776828,-0.04817073010903588,-0.008075957884789188,-0.0639419084782304,-0.09453481508832484,-0.0327046997476675,-0.04540997424179001,-0.04049975900134692,-0.03882014044726065,-0.07833783574502878,-0.08504488519337246,-0.07975789469219545,-0.02544414242773162,-0.03873566192154524,0.00020663409998969635,-0.044261544481306724,-0.09468496065701525,-0.10638574488075568,-0.023232849539426743,-0.06585830354281828,-0.02884474770841366,-0.08590606137575175,-0.008208144737105733,-0.0010657600121712157,0.09942039193466956,-0.031345185831268274,-0.029722919572626513,0.042437302156070944,-0.07036774654996376,-0.027985915853815005,-0.013857517002297188,-0.06190033909846653,-0.021274868108637913,-0.029696966552796838,-0.062360480008814174,-0.0335403770028359,-0.13760270659780213,-0.03062286316441091,-0.07317447039876165,-0.05424086085549729,-0.1143798299907384,-0.11467053488077751,-0.004204367182895726,-0.07238920678798877,-0.11766058321127898,0.027462380325854508,-0.018799443494614022,-0.10313953361573334,-0.023378114369137833,-0.06848957537885782,0.04750264905075825,0.13750985777961852,0.04511039684608019,-0.05066740912779476,-0.021017854192827635,-0.059210773008816414,0.03931009270190949,-0.056839728091928124,-0.06580418805289251,-0.0676540545743959,-0.07208660902417274,0.002657300536716703,-0.07253796129120216,-0.12776718169625986,0.014765553572721782,-0.10020020211114793,-0.058306201409279376,-0.03534939300481311,-0.08114292724746974,-0.027857757870742357,0.006475793938729492,-0.08304759852204475,-0.09765344786980103,-0.07046883298485081,-0.07063956986855684,0.0002263633148212142,-0.06247448634684212,-0.06845728168418194,-0.028771916513307252,-0.017155013175172103,0.05298285903038157,0.07144635104149796,-0.07546754206312686,0.0056095860726726645,0.05361248506423446,-0.030128271296913218,0.03329964138632536,-0.09453197362098587,-0.016270141821585354,-0.01343299465506605,0.04435056459289362,-0.08370714613494402,-0.04822260299179258,0.025358921811212246,0.03539824910266567,-0.060981248892971164,0.03896081100904468,-0.09350079282568452,-0.005174044440944915,-0.0886561677934225,0.010755403407913275,-0.04815579023272496,0.0022111739150927853,-0.048684286889346555,-0.038904079219332324,0.025460636492354825,-0.0038031244743506527,0.05207738926072933,0.05713903297025887,0.005379287632368746,-0.09531583551959615,-0.010625495406998772,-0.10271040470134701,-0.03153009580431188,0.05514158042477854,0.009353303002111922,-0.0033086362900818255,-0.03821816460592809,0.06745948050639351,-0.0300173376169091,0.015252271389883705,0.08926407274141533,0.008313052034461312,0.06299000613537398,0.1076127109185315,-0.01745565257113653,-0.008424153111913135,-0.004260238590871737,-0.03162770041219605,-0.11201329010060702,0.06753371949557613,0.008170641652786687,-0.02179700773431428,-0.03689253757922754,-0.08655405915071407,-0.0550361002096037,-0.0734315978100062,-0.0485724795012643,0.056210321131675504,-0.060172291585513134,-0.05838789548038146,-0.062465684831823166,0.07677518632637441,0.02183086265262665,-0.012018904627102863,0.059871321540385984,-0.04281508183502442,0.027861646379989655,0.01874388863666585,0.059779864081563744,0.1206347863564786,-0.06095138851459873,-0.003640730836016952,0.02252671602203676,0.05384520292839275,0.07500424043234795,-0.045730297339403696,0.12844536065862538,0.04630265831586543,0.04490951405318247,-0.016000397346591144,-0.11728376773770782,0.01539539254885314,0.028591408476593926,-0.008356478154093242,-0.05741928224966324,0.037159808283815106,-0.03572923136488992,-0.0021604403263983294,-0.004247682065595765,0.07416521583276553,0.030847307361306905,-0.03204395540443492,-0.02712393459982066,0.07346043767900648,-0.034654556283050114,0.01557870156690913,0.03838848845980625,0.04707510456596513,-0.08489905743852916,0.03476872059987953,0.004915602072099009,0.05721789618767743,0.017591454320762274,0.07725654757146827,0.009720538880776182,0.049805608204266334,-0.005912863999334929,0.02354096166518084,0.0921215653696369,-0.024464026553086358,-0.030653142024034682,0.001362706281846079,-0.10582803171890023,0.00775366957747341,-0.028498480395344413,0.012982657252385262,-0.043517113833674764,-0.04429591259651637,-0.11696567854979346,-0.04635327354122945,0.04863610924961756,-0.04022056199844542,0.09033836786326639,0.03848386835531007,0.12743978569177036,-0.05630772170003429,0.09113005434687522,0.05041178333608056,0.0599252940747182,-0.0646701604478905,0.04524075361783971,0.019804338776150072,0.08488471614337625,-0.09932225556833067,0.08361192171997141,0.05598485374290018,0.026136718970894222,0.10816282943319828,0.038533445907357494,-0.033969432356299456,-0.039780886982943416,-0.003237525797101135,0.02576701106648007,-0.013455919940322341,0.0605030220022302,-0.11413414857989301,-0.01599004886905914,-0.0024181980025539548,-0.05302373110740391,-0.0733580285781111,0.011579454159596301,-0.017048070426490397,0.011992766462624944,0.003684487195567284,0.03194822850755352,0.03473675280380326,0.03674793691619963,-0.04937897460614601,0.00810648015239494,0.028174979782297768,-0.013314851868935341,0.0592817077315254,0.014522222818952336,0.04813881742731936,-0.05142467265178831,0.01147181646472387,-0.006034118957952269,-0.033717987662759026,-0.04389570507761878],[-0.066526310976827,-0.03966040566109287,-0.04786944325477679,0.10482321935897704,0.007343087699923714,-0.12419845759734927,0.02282638947708898,-0.03655133262885219,0.028969790545832815,0.027494586014977347,0.045517557033575254,-0.0376900097848056,-0.0029138943572463985,-0.0683334452695246,0.06341108640919521,-0.06245051461872695,-0.03193291452257743,-0.11894250132119477,0.0953112401955034,0.01283101711890453,0.05038254190240632,0.022842849501497148,0.05053293595253248,0.13754965775895533,0.02668228046884801,0.03712870731685462,0.062174020863988017,0.0722810386219668,0.01690867876178934,0.038823544775677614,0.043847150720975885,0.04073822114945582,-0.01146820284150234,-0.005845133199758634,0.059345055147437424,-0.04235224198947476,0.05535420767952543,-0.002514577296778023,-0.15103061588722888,0.06969686382658824,-0.019337123873016348,-0.009987229297289367,-0.03928244367256255,-0.040872036143393395,-0.033514763246711606,-0.030439218009174752,0.059696256696792516,0.008712187853287947,0.020343096426824112,0.026737896272821984,-0.060535481959720076,-0.022025412033206203,0.025224388066921188,-0.006942760070383917,-0.07325963940254311,-0.01807175116179361,-0.11515831677976736,-0.05078034845180703,0.010501127243882611,0.060238661683500276,-0.01613146070654033,-0.09873781849124733,0.03637589712032859,-0.029405266185291358,0.021430006177745365,0.0390370150452743,0.0013829119804657803,-0.000629875065897795,-0.021892388073690948,0.13554581891455675,0.007637121446698327,0.047148044424645034,0.034243239088299515,-0.07906837347991742,0.043867176067724625,0.09188235695703742,-0.0017026112285102952,-0.019880070146076918,-0.08438713675544732,0.03565429990796702,0.06822059423494606,0.00765913113992733,0.015717078218973828,-0.0080659592523147,-0.06711630217244918,0.07906680380540262,-0.0521221985768155,-0.1046239688815326,-0.008129824091166554,0.00515670791164583,-0.007242679719722453,-0.05105742425552667,0.07564147872053882,0.02198973485874338,-0.004318900660103954,-0.11028053188864784,0.1036325471214268,0.006690962686380916,0.028817681216647736,-0.06416573464521098,-0.053036029366127585,0.06502716559264786,0.025116760722466925,-0.02655549574881325,-0.05087167739924407,-0.06759783948826312,0.005751270768195545,0.0396612082341272,-0.06644922543468153,0.05854015129223122,0.029110618664061297,-0.014727242284854263,-0.03122477582728654,-0.04768419124670335,0.04094787125327842,0.04958472436682244,-0.010044656069258027,0.035703005555707545,0.07056820361195985,-0.0018809923114845744,-0.004011832067082706,-0.0005915515598889854,0.07560582340816839,0.030831714267641672,0.004721316959901753,-0.056547318611753654,-0.018462894310562528,0.043289654641955104,-0.047553771651262094,-0.05921296270921943,-0.08974311311951697,-0.030152254398423936,-0.07509733139896481,-0.05671789313047113,-0.016376624151447316,-0.037651423924947525,-0.020010354848766565,-0.02144568212861022,-0.03315961836778429,0.05099207146910098,-0.028699801928014662,-0.02806932980916434,-0.08095857727115645,0.12078493299390229,-0.09988539679803356,0.015128966489149279,0.014085819691073115,0.04636583374433517,0.06388490793262983,-0.02461337461720384,0.04007840493328485,0.05055041415320129,0.012504387798716411,-0.021661416673989624,-0.01214513293248387,-0.01625084967594573,-0.12552919714642813,-0.02308501089031208,-0.08995710419809606,-0.12296876079930208,-0.0790291017154112,-0.0403770667278387,0.00506264527714936,-0.006374588343654709,0.019687822335435923,0.08616042741997165,0.08609086824900206,-0.03367770930161637,-0.06563727569038175,-0.026606091258419007,-0.025098027231996587,-0.0035401394602204692,0.08830397572357833,-0.02102676396636892,0.08358834024258457,-0.03911210981251153,0.053998164648287786,0.035598400444043006,-0.029259973116850448,0.004244613113429934,0.05919271270899237,0.13267679987877032,-0.0025909014640707697,0.07813792699875767,-0.025652556402301723,0.09883368817660902,0.04041976049432555,0.008990534418042418,-0.07814753663271462,-0.032163448966413426,-0.10110433008067357,-0.06669740825172989,-0.05903267354890599,-0.10288666653151889,0.06589217700761471,0.14161641635943584,-0.04016346989470695,-0.03319042380509017,0.011453603939032504,0.06074771386525395,-0.005752124471468211,-0.018023427421279513,0.029361746192924327,-0.02225732573458858,0.05197055527175354,0.024783974501974122,0.0648324096021822,0.07598644900799709,0.012685592667877029,0.15358259524394258,0.10378504372978163,0.029493334945282345,0.1030072050228622,-0.040082884737717185,-0.10485900863095539,-0.07391314401105936,0.06530427284114064,0.0007556004515641633,-0.09726410794432014,-0.007085794914377593,-0.07212219908859047,-0.09965600399799715,-0.007430156480885104,0.0497816043291525,-0.019611745620615698,-0.030347951508818985,-0.009513677898041438,0.046995300143109764,-0.058003842360285836,0.07733733430987783,0.04992979832197086,0.08699449351679803,0.0029909397107934074,0.06274786964688692,0.059069275203655375,0.04790056219499828,0.07612640021476542,0.12426094419965819,0.05890443766652344,0.09144762038059116,-0.00917518088460062,-0.07507181351093778,-0.008333532965177089,0.005053083498386144,-0.09976831885513397,-0.012941493189133839,-0.01791254385872478,-0.10696051906041311,-0.0811653676629659,-0.041197640484607535,0.00994420981707298,0.020364680735367246,-0.0005838877644909101,0.053176516747935616,-0.04229853269832339,-0.011750990572253381,0.009563183767303264,0.08023206237981216,0.019933584566584818,0.029659599124122662,0.028434091205123486,0.03852333355940366,0.012286042021557239,0.07503856279264821,0.09653022611950199,0.07259243213318232,0.05612428751140208,-0.003914899088856229,0.08617872999090387,0.012192844257298302,-0.015389122186093365,0.01724028395087614,0.031051647506619314,-0.06185686921930144,-0.0472149019272132,-0.03587729690848893,-0.019909892547902923,-0.04959936678160902,-0.12863099624765892,0.10364502687303107,-0.011624905103945439,0.06480485274991771,-0.04240676731843521,0.08363557643675068,0.011761495571139577,0.00009225714821819861,0.05939269348312228,0.10685856754094436,0.09989890200144867,0.049370272463352766,0.04353126531439516,-0.009180177392912683,-0.03524051670197481,-0.02125674126515546,0.08078786132119624,-0.027969490269121662,0.06850185160366787,-0.05584174785436211,0.04896941782728667,-0.053712131395114084,0.008791511618297587,-0.050706611606530484,0.05211560264407478,0.0005831699688868129,-0.12040571456023344,-0.07237861814775275,-0.002752537594165914,-0.025447450522634932,0.021777173471078416,-0.07576504409850104,-0.0073539627383229726,0.02258783634701237,0.02717392898157028,0.06687981426898058,0.017542241975593054,0.0408039595919789,0.05906325855082399,0.06711377181530681,0.010346316174073146,-0.033593496773644746,-0.014460518811396405,-0.05522595249168937,-0.07974533316127318,-0.026171302231915324,0.024301690412441856,-0.11896741837114731,0.01850668755335673,-0.03728795586674549,0.07889572681430378,0.1372272840072317,0.0700094794160348,-0.006121331268760521,-0.004810267270089545,-0.031068774836985544,-0.05400926611739788,-0.10455130235358889,-0.03122547356417102,0.08733820346723524,0.03065475406302614,0.19040508608523504,-0.023549856702968375,0.03364896053753511,0.06289500428063974,-0.02525831140366908,-0.11442624995463732,-0.03826802159777366,-0.10786477677230655,-0.05974778896021885,-0.14711098183872753,-0.07808626330337344,-0.03834694138467755,0.07146659170057704,0.01846645178057205,0.01783961362047063,0.04270427924818306,-0.008832975042396619,0.039255713624354135,0.07405699604750886,-0.01898644196070246,0.05892234587783572,0.07198340247650946,-0.07492519437462025,0.006347811366642911,-0.04034174831183,-0.03922073438291362,-0.023251174755807777,0.029371761142188656,-0.009289268477825038,-0.03421975368534918,0.05739212320506186,-0.028768968929165938,-0.016683679559645632,-0.04299460004624054,-0.06726957261578247,-0.04227615166722113,-0.08159588919582135,-0.017030657420728474,0.014931136799336567,-0.018101628032663016,0.0226786080462463,-0.022980714917989302,-0.0029056828641028172,-0.05671419671679934,0.02723543828509624,0.020131731713043954,0.08498426038880615,-0.04032517352808577,0.040837999084351956,0.020039043794047768,-0.013075371498222367,-0.001091354113348158,0.0613960934845514,-0.0557412842716883,-0.018132498361953932,0.06666886969007188,-0.09719671248183169,-0.0177785017605822,0.026117689597418666,-0.10737995323250679,-0.11242506054156118,-0.09678054861498457,-0.10757693157421006,-0.06390962032990029,0.007298471360769439,0.01760510158052785,0.031476933556916956,-0.07829290384573698,0.0857185523696938,0.01787897009670808,-0.0021980354756246353,-0.03997063455271251,0.0014419900517748628,-0.0959510942172481,0.01671980202028068,-0.07853548931093428,-0.007108952820886443,-0.04421800484664436,0.039672988190050745,0.04612642702251498,-0.04539446660471121,0.08891383002591431,-0.01084739409824139,-0.03189176190610915,0.010357879383196128,-0.024924500869959898,-0.08210004801574063,-0.1781343193986795,-0.06015418975038072,-0.11077825522639932,0.007306292566046129,-0.016220410267265686,0.015907648577037005,0.07206977683968477,0.08797397159931078,0.088565221754505,-0.0008423518247784085,0.04288416588683625,-0.01716440954701062,0.11263408851898261,-0.0043604039036760096,-0.013262769999339688,0.007910602499048678,0.02203924643195311,0.029146170478339686,0.059712774391977905,0.05628833504637651,0.014860413624001055,-0.0004948352986893746,0.02034794713290564,-0.035767461118859166,-0.006265166492707288,-0.017653748324357958,-0.026887795152219163,-0.005259043352065872,-0.015710488456727015,0.011838406709451427,-0.0376779669996317,0.056759808946113946,0.03728109044145965,0.02474981344476439,0.06602211621203116,-0.012480543108669471,0.03161600506082067,0.10116709735350117,-0.09207266457557628,0.024589241545087903,0.015067369208448152,-0.06820872016180143,-0.038162280615689215,0.024817992209794294,-0.004182104828113533,-0.021155437313099646,0.08879405810080677,0.08272356965545526,0.06597096818986092,-0.060483859506415764,-0.027571323424408992,-0.025017118585408966,0.028552180465851312,0.013287460200500163,-0.017924112039958393,-0.0622288452002326,-0.04633873793391116,-0.04699694049132706,-0.023938222092427068,0.08422221919289366,0.0401607627394575,0.1074918401448824,-0.0012599901405595608,0.09942623494316549,-0.06071484445238985,-0.013115938450327628,0.021120044308820224,-0.04403363511590071,0.007168111435158056,-0.0168135150922083,-0.044729840296948806,0.014803634664117292,0.003087823911524244,-0.0001292329397506984,0.06983449779322842,0.028558321279099855,-0.05309355274808926,0.019950045489810074,-0.028262190681546482,-0.007952489194663693,-0.021018064977969757,0.014361193607877427,-0.0657611045583408,-0.09504208847436434,0.007325468315952997,-0.01927298535654255,-0.02185996408392458,0.032643303201307754,0.08858028396105848,0.043693802374026446,0.12575506620959034,0.023930152004966718,-0.11209842153635342,-0.07836569253733648,0.06989918408036712,-0.0190457443929999,0.07670863799134202,0.09246432300744759,-0.015239622652896152,0.1047502286157343,0.02376852006618291,0.017527049653750765,-0.0016988752483594878,0.025429908117987038,0.0005570807525591925,-0.01662416792292134,0.03941404703504243,-0.02582174519286804,0.07413156858699489,0.017875980879040642,-0.010426826035698354,-0.088316028813244,-0.009940110103823218,0.026086728881355783,0.05513347544499475,0.015892455351326138,0.043768038213011826,0.048590261213484115,-0.03210757207857138,0.004624119044888744,-0.02053601064803753,0.051488050246634186,0.06579902764648173,0.004870781079455542,0.05309642211304568,-0.04240396551304269,0.009743026164724188,0.038853937846282695,0.05730968971712031,-0.05912044858578201,-0.0035345360866854978,0.019482251078001674,0.073222287528421,-0.021202742190896497,-0.07489540335523188,0.04055226505863433,-0.01122210462115528,0.03268412972718439,0.006698628499083146,0.09758464135282753,0.009919545927029635,-0.02349003268295833,-0.0513653501122889,0.06418379374875081,0.062456590427890396,-0.008386944930499102,0.04188840897176266,-0.04429678719300363,0.033009643886394484,-0.06784407865520749,0.009166507406374489,-0.059049096743898445,0.009245340116997385,-0.08677865224115364,-0.029940264695156437,-0.0336593687577274,-0.055677151174787796,0.028536137387732294,-0.03918676027493191,-0.04263402990737943,0.09669020497677173,0.05510597258607146,-0.026391503514539453,-0.042434530278266415,-0.04825186798020729,-0.07101880810548104,0.009280228433636576,-0.0655308123714199,-0.14551192617448605,0.029125858745517125,-0.02251695065417588,-0.045843617277937884,-0.011088209230661531,-0.0939828627025064,-0.04503512415279385,0.011264654892846811,0.04437811285407333,-0.020786340273956545,-0.009059950558662554,-0.014559531231486043,-0.05904401190564553,0.05999353075396625,-0.02282984929203082,-0.0742546784746348,-0.033944207761590954,0.04134009691977368,0.01296687203171304,0.019509079131900964,0.0039670009320038465,-0.02330762757319865,-0.0199326615654731,-0.12271115355834424,-0.07360350203460433,-0.028005111880305435,0.06948983451008203,0.012728362055108734,-0.06399268013794246,-0.0031808620462609634,-0.030614916255114845,-0.02990428956029655,0.027027400275210684,-0.002489060006333897,0.0013436728268052148,0.049597758209367654,0.12957816919253584,-0.028626165437958803,0.026887622109642084,0.07466527443223983,-0.07089664524216753,-0.0021829206712804337,-0.0579147934147547,-0.03646991965318023,0.015477656801654081,0.03502877072129439,-0.019223982932807013,0.011298145622824196,-0.048151414293233025,-0.0406148754653502,0.04345795554577379,-0.03631181282856096,-0.05170001911405959,-0.039302126267984204,-0.034157943464705603,0.0017450930674978978,-0.07355584824561817,0.0290690906788673,-0.004928100196097032,-0.009670963430812442,-0.03382277802323699,0.029807330117903305,0.052403945820178495,0.11798938630885349,0.05843025749044151,-0.07124903554626817,-0.000626672666718271,-0.05876305165758264,0.13673516569330688,0.034618007638723115,-0.008424263195689403,-0.027660853191042476,0.021057119580178467,0.07471897474234136,-0.046783536066096434,0.021684296215820624,-0.007843311852947123,-0.09385888921777598,-0.04687117362985398,-0.015012880379121529,0.022319538761536237,-0.05585673020642631,0.09786135524586118,-0.0020100683673843506,0.005358215449332479,0.027174682363902507,-0.06128314183169206,-0.013370726839540725,-0.04981357396626675,0.02389432328684088,-0.003952501203989277,-0.05132883592050951,-0.06524955098399501,0.005695859427786056,0.03348679887804352,-0.0118267673156796,-0.052980882088152756,-0.03360017600051354,-0.03888081625757803,-0.0702415985765884,0.029920185828170867,-0.03185691915867578,0.025264630898855132,0.07819396430689896,-0.0630616201065733,0.0821298503579671,0.016469034079901385,0.029652326035730345,-0.06923021348822321,-0.017975314634544576,-0.030257813144044875,-0.045797793897517335,-0.008492549446520404,-0.07738458970042517,0.04548259532796199,-0.06579498276712634,0.004195038807429494,0.05950447122618044,0.0020469663858170934,0.04046614085606987,0.005469875593117376,-0.051055132979881075,0.07923002168374353,0.031842666509886104,0.006149949812469958,-0.00664176883089547,-0.020034711937874726,-0.0367517392614772,0.0374628031759461,-0.0318910789307088,-0.044633338561490155,-0.03784976350295683,0.011370280061838474,-0.07768547854384909,0.03955492139436709,0.018481198288980382,-0.03600600503777611,0.08974296174997572,-0.045895255044991506,-0.013972117708762732,-0.0704414929893822,0.001476637538409877,0.03902835679413184,0.046678490017148855,0.017695323087060198,0.04551534842819657,0.04712847416461673,0.10112375398780694,0.0938690027698905,0.011624674528097316,0.042110802859962916,0.040148739499056785,0.04500239168737684,0.10019052678654936,0.004295980504960622,0.02377243584471791,-0.08050711974899556,-0.015268191104240155,0.049005611096446994,0.03510326198357599,0.041144809556431294,0.012160556427275369,-0.05066863889593472,0.03913779305454769,0.10629671051084592,-0.06964743017893209,-0.017546734049850247,0.13028836766662774,0.047347893059127726,-0.024434441049836008,-0.0019172212960397212,0.03558979414142891,0.061608504909131445,0.057938389185778566,-0.04515006135126693,0.10809200957177344,0.03353156718999649,0.031450925077808355,0.07969460142546722,0.07513324469586143,0.04436118477909382,0.05104997703836828,0.05255910880786946,-0.018386572111088014,-0.03997043555404391,0.03296641455455561,0.020917284047363288,0.007543813404649407,-0.01351408100869761,-0.10404826254952604],[0.03706153955518953,0.10353127470803504,0.05814900806625995,-0.0199460087317548,-0.04673153832376549,-0.011217495646171062,-0.02857851575244415,-0.03037166812281098,-0.052745353464014696,-0.06633499350856877,0.09622454562391348,0.04645158840078069,-0.001935462848428002,0.006891867215205109,-0.05732547318520271,0.02967383198305099,0.04452454921784742,0.07289176083170057,-0.02791323417022272,0.009976558232742098,-0.04355461476054153,-0.06513835246083878,0.02281405736637874,0.07559824046724228,-0.09913229977562482,-0.04078330357880629,-0.01058237010022237,0.11071308472364019,-0.09508774788493837,0.03288845944098696,0.016231853610218026,-0.08143261550505518,0.02800197621780689,0.03689425726601419,0.05336705994693966,-0.007706498566022476,0.03784204866113334,0.01723429068142889,0.09021627478221687,-0.05425320866766694,-0.035632932771020594,0.09353551853127855,-0.028208327195009625,-0.059907879280484605,0.01289253862905907,-0.047613059928365724,-0.046589121722436726,0.0215371918315492,0.01768667525282663,-0.03680135220183025,-0.038927990482533606,0.021428303270762075,-0.03308578909342202,-0.11702299107379961,0.03470748012729278,-0.07536509889756703,-0.015222796087022188,-0.07343324686152347,0.043916072248188366,0.029237312444408955,0.06415018635442979,0.009851214247204334,0.050845481489736985,0.004590254489017491,-0.005914501007431144,0.06788052758602728,-0.039153559971456364,-0.027802005827685106,0.08823127857373916,0.06258582307263924,-0.09978272791762276,-0.06178742898847471,0.07821613735587236,-0.008190575272901577,0.00011443384321864911,0.025394076902278954,0.015617374277230622,0.03547062956727799,-0.0444626319803122,-0.006023829399920922,-0.08436154991634903,0.04545156931928321,-0.023365811894883612,-0.03670127206408788,0.03168354179416639,-0.022248066931668236,0.009597747092568705,0.019606409738599614,-0.017961397102481798,-0.11316446861454141,-0.02216476938217663,-0.06951935240158459,0.04591043835281843,0.021517541671557845,0.013593944036596564,0.008932120043406124,-0.05813761716718244,0.0606731356294081,-0.03757604937375982,-0.016099364922685433,0.02864298883193569,0.05645707338160633,-0.007759091198726493,-0.01951687436329813,-0.02676065898135801,-0.041527001896524425,0.02595897582936823,0.0030399711745703432,0.10135009692452322,-0.04667019955290745,-0.00065050434099924,0.02946243882018316,-0.03332793925331004,0.0420993925286587,-0.030743674664712013,-0.002562919811617797,-0.01062305795828342,0.038287477010766735,-0.07335052556068078,0.0027567692254963894,0.04181844680852922,-0.03470344928151004,0.0602888579718546,0.025262470002626304,0.02051928875622204,0.014484481941353553,0.06369583748358429,0.11279447721695726,0.03378906683028611,0.0556924466067146,-0.09173095193314364,0.032828863623744244,-0.058412137930027606,-0.021021853525149382,0.008193509115784574,0.020157187330618692,-0.044191160809629516,0.03682841701553292,-0.08958945399118809,-0.0444357662426108,-0.03723568229985226,0.027406789714939848,0.06359270461385616,0.02358592431651168,0.17995586256320414,0.056803341655929256,-0.03171833480507557,-0.03350198620005939,0.019608242084252547,0.027232692822606673,-0.04763239034474539,0.00005196829051799192,-0.030279363652541014,-0.01178031416963728,0.0757312867864291,-0.007413443539233101,-0.01363945436800236,0.05352062013300072,0.019348171663432178,-0.029397083729092888,0.016222953584940872,0.02525645425525728,-0.0016006546755458434,0.0314915144096643,-0.028345803716314864,0.016441022569629978,0.03438527054574462,0.03153464485253818,0.08424408604017515,-0.01467173517730247,0.022749080532603695,0.07717944932769702,0.08170613969361423,0.08053271882052011,-0.009273213091143415,-0.05839800226958155,0.0186739874277699,0.01374454395455889,-0.06274529573684047,-0.045638964087509865,-0.018340316403573986,-0.06503944369548197,-0.015299321803696742,-0.004093375600216322,0.05524452616141655,-0.10042172355703359,0.07783846168160323,-0.10372656341702208,0.0092673404575574,0.04842657407545124,0.011485072422158172,-0.010237642554779405,-0.014912264426031229,-0.0384583021084204,-0.024192598007851392,0.037779202719888404,-0.008733407552970926,0.0038233135437477613,0.013324251155263058,0.1094787869936927,-0.048152328161258244,0.025446661107940943,-0.024511516793993417,-0.012228166783587983,0.013423336622298816,-0.01906572490318033,-0.0023580740721847854,-0.07443251310731468,-0.11507970160727383,-0.002704796716007423,0.05774088128600772,-0.11426471991567044,-0.08017431006012377,-0.06257414021346361,-0.04385696855864799,-0.059192282815219315,0.052826677636819995,-0.05549045195870354,0.03399666047407538,0.011618140423882605,0.033814405455070376,-0.011301974614911739,-0.012659442449532722,-0.051953839219750365,0.07236168503176496,0.004955452501376707,0.05087763574993928,0.006565734857463268,0.01700646289947713,0.04006859140585458,-0.09385316848228496,0.05915886795777915,-0.008979302665252873,0.00457714810155153,-0.008438666246364962,-0.021650260810955852,-0.0029469268144491525,0.05362444613313783,-0.06199781344832615,0.04468554340716914,-0.09992412066418313,0.0066158910446043415,-0.021426485955474254,-0.008435008708576393,-0.04326326467070681,0.01729612989291895,0.0019715934301362875,-0.02734793039147742,-0.03348997569356097,0.025228650003605173,-0.14778279404363232,0.022683944225744553,0.011754567179402207,-0.08306536829767294,0.057104324890379116,0.0028065836281003917,0.057949817593244496,-0.0018851709723009507,0.026304915183107295,0.045822365748859284,0.0375687017960614,-0.030077430341075777,-0.05352621762227238,0.000954777378007453,0.012616986578332531,0.04002403033397665,0.03096994925616956,0.03639211671983721,0.06043560496469099,0.012083841531742821,0.00867028635084176,-0.015349136955290091,0.05199887490463923,0.09158199127412321,-0.03687879313930903,-0.03619822527730335,-0.0925593812247748,-0.020022641608680128,-0.01454440076107989,-0.007868823682645814,0.07631691260676655,0.05368006094977173,-0.007457944656619513,0.0034185288399984286,-0.00981275485881836,-0.019266800006983224,-0.00326554600768592,-0.042736546221327665,0.07125224791464284,-0.029705820232135506,0.02514700822831875,0.06747892318294424,0.015700327033228965,0.037029129655297345,-0.029082497701874935,0.09015745243380834,-0.04100627705681174,0.0025131376160862674,-0.03186377157201941,0.042840520825920936,0.015075027359504162,-0.05702390859224575,0.037205864936490377,0.045034655001404834,-0.0913075812109449,-0.014304857545887275,-0.11573528530224497,0.0041387903841296194,-0.009658362715933287,0.08344562705175222,0.011630252688268767,0.053316241632384215,-0.021863004433028653,0.039181986929435156,-0.060441129627986874,-0.03908845725951047,0.07116384974627447,-0.0044896549866330305,0.05661687638593841,0.019830074029407514,0.038108729871932735,0.02132181731694189,-0.10604384570808309,0.08419335713132987,-0.0543170548181989,-0.034347131204215224,0.012169625285898836,0.050825980792718155,-0.08593008420299086,-0.05944792134921631,-0.012751381375065757,0.00048204374725294597,-0.0888936701993489,-0.03859138107344398,0.013205344595684287,-0.03115843156135961,0.04113051109030513,-0.006190740704503042,-0.0028996956808836354,0.050579371132883195,0.04027069824895268,0.05682958899599863,-0.04961198210570953,-0.011641914193061383,-0.007216436692808393,0.06986185822009781,-0.07812816552175415,0.011509096484305615,0.06894807254604975,0.08974080425836288,-0.0035643598909392035,-0.05670978829668579,-0.020074049642281006,0.03457156619481099,0.0260027457586804,0.017616029015015716,0.039151675105753014,0.0003802491689977501,0.030477746890511408,-0.026224786343218814,0.08720028519351505,-0.06732958753026018,-0.030284679483041612,0.020458177464642322,-0.02992224456118592,-0.06272492148417695,-0.0009895267965073908,-0.040077550375154196,-0.09606769223975398,-0.021883617420771804,0.019707269230471558,-0.05252582794867502,0.02089901894202946,0.04297294150581145,-0.027683547079413576,0.0541885972825991,-0.06801270323528225,-0.08635878273755236,-0.010479047180210137,-0.01162358961880801,-0.0017303606018430802,0.08542810961268198,0.07227105149951535,0.005339926952777641,-0.014896729545629012,0.038530699040764345,0.10746938497217705,-0.0181832440190592,-0.005696156594895437,-0.0738697569994307,0.051644526380038296,0.013522302707258875,-0.02882342355818366,-0.04078805899707365,-0.08883967507997084,0.05481453356764208,0.038698575322793194,-0.041796524454684174,-0.024969005062414215,0.008233668548958477,-0.0058209475332485815,-0.02764643676633621,0.06969046090883999,-0.034897145348571315,-0.008758694792520531,0.03655464258675569,0.005891032993975172,0.02104027112183283,0.03693640698991458,0.08646945394753855,0.08277002470256296,0.025400096815107943,-0.025979063560246457,-0.04726915287031026,0.013069381526594242,-0.033697445684630976,0.013030154568919953,0.035509204490023046,0.03526681232028239,0.027944771888978134,-0.14047895792771403,-0.00475937396970119,0.02699496064532965,-0.02481819822118825,0.05198638251767104,-0.034363533653593674,0.014979900574140472,-0.042564545090347156,0.033735648164577685,-0.057562393691249734,-0.04515455462883681,0.04229552175210817,-0.0013198310552021983,-0.020543259611718247,0.13109939356437464,0.11389617227774453,-0.0419678416712202,-0.019546632712014525,-0.023298845917104478,0.01139042772546111,0.029184095362041564,0.036478461727855106,-0.014602567155959046,-0.04710352197748606,0.022048032558960592,0.04884146322537071,0.02934327577125495,0.09097178587661409,0.04869869684956733,-0.1209748263175848,0.029268350632972985,-0.011623898268200488,-0.07040659041538241,-0.00887403752135777,-0.005297199718519258,-0.043036376721759716,-0.014868201880666603,0.01632090850537243,-0.14295169506708497,-0.07938898910216041,-0.06688982803245405,0.04135282830410587,0.19656616003509808,0.009048520005845816,0.024352701637700324,-0.07124503115127839,0.002061929750456153,0.030922110530567124,0.02138580274110676,0.04893198154160244,-0.015820335666938252,0.04479839944812736,-0.008448704400037105,-0.013135658887678005,-0.03534132049309881,-0.02209901682646612,0.04604096203162994,0.026144181929847958,0.011554059403792772,-0.024822285725117302,-0.027278801844716684,-0.05894354201965013,-0.059267495297439986,-0.02030863392203369,-0.0059602836858135355,-0.01504916702626088,-0.008955706235624859,0.0395469082074564,0.016836060966109182,0.09777569086834864,0.07667269018406998,0.07026569225148237,0.01584294935718758,-0.04901965126694414,0.0010402648462187697,-0.04793403380682032,-0.06480796549919413,-0.05047651507205628,-0.005470468640197453,-0.022089019541844376,0.06662577369043308,0.030834034182189562,0.04975406364023231,-0.03258872829087745,-0.00857087525353543,-0.010679725487519203,0.029708567479401815,-0.04975107015102685,-0.014038134114307772,0.09603636197449814,-0.007273467224319543,0.0459317768272851,0.07832579898315424,-0.05453978784172073,-0.07216933891760802,-0.02896438301882227,0.056820629026151835,-0.006308249091767375,0.06209134714592832,0.0035479614914287307,0.09678198582366293,0.0488267099682581,0.004838520636564472,0.044337834946578183,-0.16159874927230958,-0.04616399458494799,0.05662017151013981,0.005362098656515627,-0.01166221396942732,0.08596631878436131,-0.004696870781537144,0.03830253764352514,-0.11348625389787181,0.037863659302915235,-0.01956505595638983,0.005315247813409885,0.07147809189175533,-0.1130630758069706,-0.04214655621275543,0.023720159118146608,0.04306076818733848,0.013609486491401078,0.017937617560957478,-0.03820496751216957,0.027333688818838263,-0.0034860089674879774,-0.006304781692297717,0.03579004821116114,0.059565164693679826,-0.004355473545657449,0.0025040078288352994,0.0029288835371618326,0.0055829073184430564,0.08279625718143971,0.10183894035897652,0.026295738974672092,-0.007407113187163201,0.045571179183476154,0.026437326804011795,0.024320203457835844,-0.03988861860033157,0.00442891754260283,0.054534738575488385,-0.02593592242563466,0.029905643484963836,0.04189294191474829,-0.006794342746203877,-0.05317072970448194,0.002091590998897192,0.13176384801624544,-0.032036718535188774,0.06488288235845215,0.04580314164493377,0.028062645919331074,-0.08818802709807148,-0.013742466294180663,-0.02812030073284144,0.014155103869801773,0.1420474050764837,0.026765480819297735,0.10421334084800907,0.06363988681824519,-0.006387883403002328,0.016174040883883932,-0.0018768844188279173,0.0076022989349143,-0.03472521506036674,0.03132855412851373,-0.0037170124136040755,-0.015991925877523894,-0.030667683994736454,-0.06517297206969482,0.03853387996202961,0.0015979155363399777,-0.00487135026165329,-0.039071081866120544,-0.018282369615137222,0.029653361489313718,0.018222331675298027,0.04107623169211282,0.032991190886532844,0.090516670449246,0.042993420261578943,-0.018893385349005195,-0.012576812909941205,-0.03766720544289887,-0.01555907659749035,0.045946684542832204,-0.052347874223935845,-0.037086870571613376,0.014269397332159747,0.09415246371416486,-0.11173206273752163,-0.005224071982678942,-0.027666352386392208,0.0683341015989303,0.017668402088945274,0.008312571984492511,0.02364379980842258,-0.15539328532059893,0.05460869979764473,0.06305849618255652,-0.007765133277261164,0.08355797347902066,0.11232450494571064,0.08833537441749552,0.03511793058851675,0.026563634210923132,0.024686779356018745,0.09010551108968481,0.023534429544579908,0.09394269892589636,0.033829790838879596,0.061411199275038256,0.05435429824919658,0.06269249641722172,-0.018676760260351605,0.08131813622843928,-0.03867309409015375,0.07073452407902779,-0.05093697876019422,-0.0019737870413800455,0.07643013758480334,0.025127547196048657,-0.014257188963558213,0.03643606086341717,-0.025180706983603154,-0.004299873585875014,-0.06135074034454901,0.04537479502891953,0.06933776455967196,0.02199643627481095,0.06311353941064159,0.009973457824666035,0.03569024708262961,0.022973251919467686,-0.008522846339249624,0.07755886523478883,0.04376920909053706,0.032642752722475965,0.08715508543688179,0.024980443465273935,0.06479525480970003,-0.028456326010471145,0.027564000679923605,0.07354585985579562,-0.006780793966269306,-0.028959465033847203,-0.017680756967219578,-0.08034032843989872,0.00022695152884827187,-0.02824051882228581,0.05670070908520712,-0.008638195426933256,0.005956460749871694,-0.05307249373800103,0.011498290255299332,0.061200434709513356,0.03632290256842379,-0.06596856985183895,0.005016343463088095,-0.031331302787227254,0.045876520583956,-0.09481649016275567,-0.06011528596159593,0.07237907154008097,-0.04557282865209584,-0.0373592062652076,0.030524252031301217,-0.052205642198055,0.0036955781259185665,0.05222928591854995,-0.0333855492456287,-0.052274729972836775,-0.020244353703914843,-0.04937087738220936,0.01715909897305642,-0.042419831427839144,-0.09073435921531318,-0.024395493835180165,-0.005800640607225522,-0.003060075054942264,-0.052124502649378505,0.009058184769699253,0.07154036049653031,-0.06366006901104379,0.020825348013354297,0.007753077944473157,-0.1283890639645082,-0.014183167874600458,-0.05240439676036772,-0.028611750962936416,-0.06370203161914463,0.03182426776741602,-0.08865691831237317,0.09541837802841296,-0.06410218275961206,-0.035661121047233645,-0.07433682907300354,0.015836741105315227,-0.009680886599755974,0.03356328250418573,-0.06005772772145581,-0.03515355138935517,-0.01110222511541376,0.0960658379142907,-0.056051700418014334,0.014029796855041729,0.023747080257774725,0.05252494848903376,0.009909993275803133,0.02302616443274161,-0.06304505914762144,0.00789498384610833,-0.0026879500780449053,0.06212956908959564,-0.052763159132444004,0.08112243558677043,0.04260235281376225,0.024041164740319657,0.038766924612689324,-0.05223937191667155,-0.015177126190366205,0.028334375095783015,-0.05301218701421708,0.06122960691304623,0.1051870690963868,0.010963709220073876,-0.04116724047028238,-0.05039085361858398,0.03520893352725672,0.10729367930917551,0.025004791591429293,0.026458535942812614,-0.07133471426835812,-0.022513474824935698,0.040563253716083644,0.02156183436988919,-0.0644012212960579,-0.018420508178636875,-0.015053639753625711,-0.06301847957338595,-0.035431028616557725,0.03096197430638176,-0.08674051174149468,0.02354934689385804,-0.04122229182132151,0.011592805086645864,-0.03433355164397198,0.022081409156265445,-0.09612933570400108,-0.16484045055416133,0.07742185037263405,0.03689142903451193,-0.057370296742179853,0.05335052499100918,-0.004571879669592954,0.014350125130126653,0.029582849024114198,-0.04541065048592004,0.01099662643167049,-0.043381660581914956,-0.0524866206400929,0.05283026499773334],[0.06537672897736195,0.12271406199587119,-0.10427376154384423,-0.06918289766723569,0.04209106580857165,0.0067524839756916335,-0.08674668528126286,0.04412296571875449,0.07434971765605543,0.021514175334191678,-0.013290167449393053,-0.03424979225509071,0.0817046579886856,-0.06254885033657975,-0.043241978783251374,-0.03077936292668768,-0.08255080807295802,-0.00021964491032593907,0.03434493160715027,0.1539008081281709,-0.055672360075711316,-0.08053120019715772,-0.07690117306364305,-0.052713721077211645,0.0028972631665566836,0.034668539157547994,-0.014335932729232998,0.06371120988926698,-0.04338562639304683,0.032718876938227205,0.0150646717775085,0.10423952198046416,0.001030432689518621,-0.004165813853475633,0.029859412097537386,-0.06109482085445853,-0.040243414540988794,0.049393433885799025,0.03744308188213681,0.002250218491281195,0.04145427485960567,-0.05992182437993225,0.0826832253324699,-0.11534333066368005,-0.06836872183507259,-0.05619837911788902,0.035718224901191434,0.09742658212855489,-0.046402900928425014,0.0382210098282104,0.037753893543362345,-0.0018873580542335673,-0.06301910656537658,0.034386380851672574,0.1347707043790434,-0.07413663903091583,0.01032359003640922,0.024873768657342338,-0.006176897791399248,0.09793588310143547,-0.014535569241350892,0.020323626152013035,0.018353640062339624,0.011806411123053681,0.019239797670385125,0.04816925606298631,0.007672284109881718,-0.03883938330626617,0.12174568008664394,-0.03404359097712807,-0.01986831177505266,-0.006389667880855212,0.11059669243917938,0.0005674711723268211,-0.018055850027354263,-0.00835729949601155,0.02598645441599886,-0.0490373752869465,-0.07031328069899354,0.02687378840862797,0.04669203116019623,0.006627708491054277,-0.06931914044682531,0.019830118060500338,-0.047964229641526857,-0.13491519982310884,0.04297237532289817,-0.06316014415972052,0.06582626050086436,0.06497623202810646,0.045669032565588644,0.005295192008812753,0.006078602299161847,-0.027108536822831496,-0.026678947869395668,-0.07154812178929741,-0.0684915156559959,-0.11751084349863568,-0.04094404076086715,-0.0420789373159364,0.02191289110517925,-0.05614240181173932,-0.06502438712394659,0.005694182228107818,-0.0771826925638077,0.007376706160685446,-0.023506281074227836,-0.007073572633271031,-0.015257081628399232,-0.016219156921717878,-0.053214811869879586,-0.10388219683343344,0.01872672482406614,-0.010579479955957366,0.02684631151592712,-0.00197477067760644,-0.12214353117855116,-0.08556836308149997,0.03481226181111352,-0.07253928812943926,0.0248306833538651,-0.017729957562341275,-0.087738463135614,-0.07195623697979665,-0.021168043582515873,-0.16553787667576472,-0.008549741858264995,0.039376416961637906,-0.03139358836425014,-0.006684290199797483,0.000015149837978092237,-0.023562569129238913,-0.11442265310475114,-0.09662343944043683,0.07332668896843146,-0.052505436853635026,-0.00969769421356784,-0.10806015014797934,-0.0620017144038158,-0.032022404985519,-0.0036050285218062784,-0.10634638106506586,-0.027754805473716695,0.028979799315116416,-0.053541614256624126,0.023754694349615697,0.06493036268802047,-0.07075559969864607,-0.05243393522690338,0.0035542201568511613,-0.05563044727868187,-0.017256775591471117,-0.0674137807295436,-0.023160637042365425,-0.031126022622704426,0.014603569405955183,-0.18507149235810014,0.05242277291283801,0.028207432411171487,0.05637019210897671,0.06539954253323335,0.00016024804457330098,0.01254371936802402,0.052848314818510045,-0.025242183770162397,0.07725569037205637,-0.03268612343969069,-0.042738694373346445,-0.053138719436612164,-0.05906327011226488,0.02164633782590879,0.04970735907835669,-0.06795187906894762,0.041016407080917916,-0.0856660199360377,-0.02392760372208062,-0.054892372877864866,0.03023805055680741,-0.024870126426110157,0.015418302623173043,-0.0037880595994340864,-0.03502424986177043,-0.04954748537841758,-0.08883450232077543,-0.03986226382951062,-0.05362894745031453,-0.0023954440540215364,0.17474764371248283,0.06431507328147856,0.04716515466994747,0.021076376262944257,0.06735978750178806,-0.056459476793457614,0.07072598526105853,-0.021430614592270705,-0.0060131001033132256,-0.04889085338637135,0.02580011575129671,0.0521001020501214,-0.010582689627745737,-0.057323040785071416,0.013242465883718517,-0.023470470661246457,-0.03214913188724043,0.03620709849293472,-0.02762648373918995,-0.023367767326795696,0.01205225025817648,-0.022982528328140798,0.03240925994871634,-0.022393282349109016,-0.07276417569692312,-0.022247309837732092,0.03278429447335338,0.024550795491337034,0.04824458223903111,0.003923967858918445,0.07573809410310121,0.040154264405368026,0.0003678758054705856,0.051397238484286456,0.018703623862120086,0.003440699184008176,0.02611219466883898,0.04811351694145953,0.09003300963675563,0.06123479719979016,-0.016453166497264807,-0.03818046744880259,0.07798092949904897,-0.028227129118601375,0.08639997091918321,-0.02484627951500464,0.05901307802019921,0.04949934834754077,0.04688913291761988,-0.01999577918457395,0.08585750529227804,-0.07310055635152807,-0.03701517311937179,-0.06577216156236718,-0.005388139987517439,-0.05099043204025439,-0.024916014478674753,0.09389025709621826,0.0210786328070187,0.10196653617037113,-0.08898371071832517,0.020024203995160868,-0.043598156018330614,-0.0006347789097276395,-0.016475524210218074,-0.10295516929465683,0.001807702293810016,0.024277750959473817,0.0010478124042939644,0.05537055065510439,-0.038280499836919925,0.010538727548601823,0.06373761053033089,0.012574582650899495,0.10674669049384705,0.07078562211788425,0.11479297829747151,0.079997758018354,-0.03809957167225912,-0.01800103419260006,-0.06675632886047035,-0.06272044170177657,-0.06420325234925461,0.07506374595003133,0.06149742651182472,0.045329585486746364,0.12429283852760188,0.10078284562452024,-0.07877942673292394,0.04103035174859058,-0.0124387940706808,0.04033644857709109,0.16040875654589007,-0.0012166621668032555,0.0015880584949070494,0.02664031149938397,-0.019415707618631515,0.08272199298512985,-0.0679683789340118,0.0949436017917716,0.029760522345077197,0.07376469157179824,-0.01348902992035951,0.0009049539744362548,-0.06959757479632375,-0.04558474393100324,0.005477735336272284,-0.11195910265491638,-0.13897183699214327,-0.10310985258955338,0.026303215342790894,0.026788157719995563,0.0982539881063265,-0.003519060211453649,0.050633059878441564,0.03475135686358565,0.020832979544386544,0.04177761972883652,0.007567636628201895,0.010610597805453207,-0.024902944214681425,-0.016384015724113646,0.05190733401181926,-0.047278567276653194,0.08672492002780854,-0.02449513126994049,-0.03785122114981429,0.04733080800838127,0.029283919581351226,0.08914026985156767,0.007335874063343256,0.08980549240526957,-0.030703384744605794,-0.11339017517199518,-0.09287224373808753,-0.09502217242640178,-0.029638423620039146,-0.03605149599713742,-0.026620469363475837,0.01883140050822553,0.08764058612739725,-0.02928876881687721,0.03252574089129889,-0.06001642043319423,0.026650718323791265,-0.031359231859884,-0.06611369196051183,-0.030926774876330273,-0.0717606467595897,0.04721831079861574,0.006852914178203882,-0.10993476280191135,0.12487841424685936,0.06159161406595906,-0.024517622792983966,0.05581791538046208,0.07306746659385209,-0.020672953739977854,-0.0005294162245643133,-0.058818629519015744,-0.11031191056086356,0.007813146498821538,-0.09488358014771142,-0.01076394805223646,-0.03868839797033075,-0.024618854143243857,0.11411658412913751,0.06286744702881754,0.11400294652423369,-0.0133673391257651,0.04854951266099957,-0.049908151962591234,0.04682317034218666,0.018976223945114702,0.03013153145426815,-0.0574706851355058,0.0777916456792798,0.11316537970431154,0.03964716201104806,0.08156576939360533,0.051640555194620776,-0.018649812625059832,0.05554976379287047,-0.08458000013283393,0.04703586603105963,-0.09617473359741528,-0.06185031033688805,-0.05533646836127261,-0.06996721082403033,-0.059897025369092485,-0.04290534211975279,-0.04096633087363865,0.04300771013863458,0.006570826655239834,0.06153921075526482,0.057469717158582734,0.09651403750379872,0.05147719493814625,-0.0016268000278921578,-0.02061676839447395,0.012130058138353352,-0.008881099387321324,0.12839445678288464,-0.018485186768620803,0.020573917404763456,0.029572377426437084,-0.09441918310433703,0.007351366685001002,-0.03528338595956672,-0.004101681240938147,0.033013446794910764,0.07851633207232717,0.05425705299696236,-0.02500257270784808,-0.018969330518322697,-0.021128809766777192,-0.04483034191372377,0.02528580073233526,-0.009768619121431002,-0.02369086000974399,0.038996763252834195,-0.008279264457323382,0.04205211178663567,-0.015810341073789806,0.05496442851521026,0.08748129581239311,-0.012799932614979078,-0.010698193449001142,0.003817982672339396,0.03367733389145552,0.036976243578593915,0.0069773639039107495,-0.013931177574874895,0.09596683150055561,0.01862938686078552,-0.011506147209952185,-0.012324116699820148,-0.06776435150641538,0.011108094828840807,0.05885100780571028,0.009709623998536946,0.020520235149552146,-0.0540903257352159,0.007311327121034801,0.028338046428269998,-0.02279143617480753,0.023604113840212968,0.014323146040658047,-0.14157725083049782,-0.018195929466648206,-0.01800498010130263,0.023665702318403363,0.019707440792374586,0.015018930959022913,-0.04579547064885824,-0.008641744376310241,0.019196269895065725,0.07463806969056905,-0.03638771991807481,0.0013562271641084315,0.010903063112010716,-0.032796821060585984,0.06681836501371136,0.015593191685389295,-0.029731817344968357,-0.025660470902205922,0.03218534691290205,-0.010731895581591709,-0.023875329679566827,0.02278086899612035,-0.02941192533300118,-0.018298268058509964,-0.02663787337845822,0.04171855737612312,0.056604953444742624,0.00125399955165493,0.025587318817499902,0.07306452684156843,0.011595160543010248,0.16854324850279154,-0.00790141968976768,-0.0051752813385741725,0.01361570384440829,-0.06349846601362219,0.019283155950025537,-0.032413488771479856,-0.01369957071373578,-0.025550681090586797,0.050787406843088516,0.05945068540665462,0.01984630994485518,0.06912705058013272,0.02874504276485005,0.07099794915525061,-0.07520971762650087,-0.0005404525079134736,-0.014336195099766191,-0.04539063396642397,0.012384364578069905,0.03102600448610272,-0.010996340856333445,0.023450929572048054,0.03669507481902897,0.07195094970624678,0.01024584116734514,0.03494288299700208,0.10712996784116861,0.07173282731016131,-0.04403460164796279,0.02127102114267175,0.05384161804032702,0.0026018948952458796,0.014220962158632467,-0.04797339726380314,0.023401980281163977,0.018905956569070643,0.014646564163697893,-0.06626953399983589,0.019743471177775335,0.00562694770479029,0.0017987438752138055,-0.06329097434408988,0.005496217469795091,0.09231565297288524,0.05463612603098684,0.04913644630391456,0.024563338832893647,-0.05134507857370351,-0.011429089778870674,0.10257401319185801,0.06455316116806403,-0.05747034996229282,0.12935990818153748,-0.03551297203947506,-0.016224007182750053,0.005599725565546152,0.07037161360890777,0.03786713807869901,0.057971031110013845,-0.05262892412272283,-0.030481343590183202,-0.006711929838219326,0.028756626902685205,-0.024326366332502125,-0.10257503640422994,0.03624984139212874,-0.03497337629713636,-0.04192123827690188,-0.04579834131484087,0.03275763350104977,0.12024891645253447,-0.017385069032172625,-0.0495705480954405,0.00122734356430441,-0.027535541483332822,0.05586142494263447,-0.049765036596558336,-0.003457854100344854,0.03582754783502737,0.030616552719589768,0.014601192921061091,0.05504702937926001,-0.016000742849157933,0.09666545877400237,-0.02827249014895359,0.021518831222162,-0.061101784723752765,-0.06315817342728489,-0.03089685863986398,0.0435583136017217,-0.041228888772557426,0.060088534311056624,0.033961034686445776,0.039172479645714874,-0.04262747587908222,-0.013766066862891346,-0.05454217577022544,0.004493719495989014,0.004133628494438313,-0.05357748068839344,0.10936241542604082,0.03726978890476718,-0.07122499015961814,-0.028651131657356294,-0.004076246847023556,0.023552885889673792,-0.011797346345092375,-0.021917887833712884,0.0023568383586913115,0.00482162847384036,0.005201885824512399,0.012568832709011782,-0.015152709011948318,0.03531183250741356,-0.04987973547532259,0.011802125774074754,-0.050829859117024784,0.057929501302145775,0.13248435046069787,0.054469640144806104,-0.054567828940703667,0.08355236197207426,0.11801521960362209,0.044510449692692876,0.03370365522280223,-0.09092774260681573,0.027431396942276323,0.03206156103041136,0.05774758201564717,0.060475205564504496,-0.010945647131263767,0.09104631653130138,-0.024027562047692963,-0.027542008714129772,-0.034322202149910115,-0.07419486619283969,0.12063497443146833,0.0647562714168225,-0.05487142642960286,0.03203924106262166,-0.0140356624517038,0.06607121442851857,0.05635168185009785,-0.04508404674655344,0.002555496188295137,-0.08613024158312745,0.034936840408889225,0.015614297830286287,0.118139048852857,-0.012010676173718603,0.01930444630500716,-0.08910560118628819,0.1228312158597276,0.03961816689365394,0.042791356238765614,0.007899728628316139,-0.12536312990848816,0.035456589898869156,0.037598263314385906,0.04621714858249544,-0.0007205857357829894,-0.0319385185876274,-0.013377317545057875,-0.05673550640614774,-0.005141113710320681,-0.08291518230178689,-0.007886981552849762,-0.0628571539057982,-0.009396154172068322,-0.019179353083366133,-0.012001585793588105,-0.0012024244019981278,0.0191498149717762,0.0019602232789158154,-0.04936788690877623,-0.08845249284641131,0.00615880285126807,0.01744778257884634,0.0344286073200191,0.010398181901184694,-0.0012688435119886446,0.01779216301417568,-0.029382600948060663,0.08718625639622049,-0.007587813746600356,-0.024546850651329725,0.00570986979691258,-0.048239408095732184,-0.045579302859321665,0.018807820498049393,0.03814397410026836,0.003022559990669288,0.0294215541826879,-0.003648479298388068,-0.03288534646440309,-0.018390555324614123,0.03330390957231029,-0.029465156011453518,0.0923091660806696,0.04764547228286232,0.07852197439737008,0.0125799110417498,-0.033291633242894775,0.00573334700379815,0.0029315622803550564,-0.06827185108664068,-0.03629522826104117,0.01565018534971466,0.013909030119976911,-0.0006425003864249261,0.07027501009916177,0.056634900089627946,-0.04130614186596262,-0.02475166955227323,0.000022240223446232726,0.0330084772062897,-0.08304406020464465,0.015816251573429075,-0.09717018226512646,-0.0017703635192364484,-0.0205545461296631,-0.05817508900237667,-0.07556751362061935,-0.06513423496781673,0.05539096928462742,-0.039317986776492425,0.07951610883896311,-0.06738383576419645,0.0039936199746470466,0.04165860603218922,0.019660023345057304,0.011191604079953217,0.08178862883155112,-0.048512669150671754,0.08911670147211581,0.05748464399254731,-0.04154418544837094,0.01920264592551932,-0.08330072172874523,-0.022312040097531637,0.004324642346097631,0.008223447255761568,0.040272590482218845,0.051291527077933295,-0.06529659601945052,-0.030725709585332345,0.029572775805478825,0.03488102228487684,0.015483824118164995,0.07072193406289418,0.036721338139372145,-0.06248287685524786,0.010127372887285916,-0.031751421968780065,0.0859445859573939,-0.005478591196770645,-0.02452684064850772,-0.025992409991102614,-0.02086090158663221,0.061451877185892664,-0.03820296429101466,-0.0192640608027382,0.04227543540967398,0.087966023332749,0.021764038798113866,0.046095546916381215,0.00803082781465573,0.10806440375728903,0.0047341893852829685,-0.026206124964164215,-0.04246652115470188,0.028265221831843827,0.018390602859159638,-0.019043378662782173,-0.07431898756636325,-0.021577573790817046,-0.008529924634736698,-0.02839325930211728,0.01985147925579089,-0.1224663875532402,0.03182212842630794,-0.11133430895671032,0.02787664472960875,0.024254268538843878,0.061828822861353945,0.029065982920002273,0.03737174929480499,-0.053823519503213596,0.015332653045411386,-0.024712659349280196,-0.00035122531847893196,-0.010567700040037174,-0.014604703947799325,0.0435482599603638,0.1277526401866678,0.00958152567940789,0.0049776243922677495,0.04755037825872678,-0.07127668082841579,-0.017942726947741048,-0.0430590988803314,0.002574829590422211,-0.008996580143236491,0.023183368606461415,-0.052798363128691905,-0.006764474212026602,-0.05168075624835953,-0.0508317168936998,0.015020112157187113,-0.00209732035686966,0.04832826946958463,-0.05949629778252593,0.003283500001495904,0.028739311529922446,-0.01854786452676294,0.09290684362723309,0.04693905038161983],[0.13752933539419016,0.000009834101382995719,-0.05969700193620006,-0.10504072759702471,0.06720238380557454,-0.04581456158026027,0.009019806117203858,-0.05350133006547344,0.09279202251949165,0.05246430180724215,-0.11418592058833371,0.015708750825951162,0.07082391008267763,0.028003929904846327,-0.029924925131643895,0.036493206634147485,0.03930468469987897,-0.04467644804085588,0.03451099149295829,-0.06057863477248732,0.02152615090093049,-0.036135543254368144,0.05097959958605891,-0.003815550596177166,0.0019773472093429583,0.047641384839462945,-0.000050941382450326805,0.00920960575843865,0.047252364354196365,-0.04072057909995297,-0.05520511126915377,0.058521553667285404,-0.0046573717843602066,0.004892389870909524,0.011284370966088206,-0.09622965808538499,-0.028336944889530036,-0.0524046016501532,-0.028337434730618206,0.043189912928687076,0.010228942133122624,-0.046047545176920175,0.04058557146271758,-0.07655331182049144,0.00311618570858414,0.05257164554570318,0.026420198571913484,0.07872407765030426,0.05158565324613805,0.025303533015294824,0.012060162281518814,-0.0018899227837429415,-0.04551040350348783,0.006214318414978721,-0.03959010642599654,-0.06550124642141529,-0.02670510397544555,-0.006656980549041642,0.0438910545919836,0.05707423972604706,-0.02364062807112607,-0.029462578199940463,-0.05032984651934918,0.015748889761003786,-0.021938888678147105,-0.055959698073647944,-0.07050541180521565,-0.016367781559473486,-0.10490255520166446,-0.019148238439981948,0.020122114024141532,0.04174054174214979,0.020071002457449433,-0.06568424276700667,-0.03851591582307318,0.031111709418350075,0.03389282795900539,-0.010366874798880977,0.020804468928586204,0.006987599253854425,-0.013157852051255052,0.029259512893914437,-0.05815320936471219,0.0787348232088893,0.016342118808304253,-0.026247771490467524,0.009762943372212722,-0.03165192235754283,-0.06801908322136387,-0.0033309690039537605,0.023374041850777003,0.06379261102465933,-0.020068315905177433,-0.027531853626709575,-0.03867438803125729,-0.029028198641556726,-0.03320073201952821,-0.06846594720514095,-0.11014359255625926,0.042762668615825936,-0.00023360744288771873,-0.003398502674822265,0.034619037827923894,-0.026079098467599968,0.01430692223890918,0.006256495199178737,-0.036895899915317706,-0.04846230454660854,0.015794994799957454,-0.016433804217153042,-0.03275991775214949,-0.08896448051764426,0.0760616797984148,0.06400520200743602,0.001652594762919471,-0.039569024655241786,-0.022863709507929774,-0.06910763410980025,-0.0290675665801939,-0.038026519397110124,-0.028941418395575697,-0.0690432587300919,0.05073592351776748,0.008992867436215309,0.04400254000207955,-0.026126102701057835,0.0014926673341924444,0.011434290732179324,-0.01634292286834691,-0.0018157555786955419,0.10479754260160122,-0.05509788670924557,-0.003972612639352742,0.049698202013443424,-0.0032024160449253465,0.04474020132864849,-0.03470085124730489,-0.0032747588535281162,-0.023488573374211966,0.028292095714823388,0.04478299493543528,-0.1063869653735006,0.05006799687095613,0.038361285040428426,-0.013111908098878322,-0.10921700626560991,0.0009086052147303714,0.017457830783588195,0.0196649765480266,-0.03004568501069951,-0.024046336284482203,0.0035475614450451486,0.03372477066503517,0.02329836147849599,0.09214271006826216,0.01258420724716194,0.017643681334619403,-0.009869487848849036,0.041273653342955206,0.03738042066063275,0.0688338200875506,0.08559477840844157,-0.0003221622890257431,-0.04898897644331544,0.04304475070991719,-0.07519525806984993,-0.0013631233441297813,0.03553382879434281,0.023545790480187206,-0.026326062341886666,-0.01177260706312588,-0.10029101371758105,-0.03596190831913995,-0.04638500969026259,-0.018376997035462823,-0.028863530830499095,-0.022933460172052954,0.023205933371875893,0.03596931147170841,0.035569215081570606,0.03918675322060528,0.0013298570011152256,0.04436472659551142,-0.07498264596856159,0.004408987675089197,0.04740726605589307,0.007244135398768949,0.08281530965563798,0.06882294900949493,0.026996179411543454,0.006250994447444012,0.0538596429732039,0.0006308727152482803,-0.027660565358892192,0.002216522078202102,-0.021560192452895387,-0.04696334752554898,0.0020493850221924605,-0.04364297119436257,-0.0022538242845716342,-0.024304831995141947,-0.052417735382598266,0.02745958193125688,-0.05570307354481464,-0.030205353554466678,0.10760637254841676,-0.08054747516280115,0.05690912421161424,0.0014727654269980491,0.1111357894247807,0.047757378282237084,0.09817085510248762,0.1148883459810556,0.05407385748608278,0.10454120084423073,0.011673270588670634,0.019197216124175232,0.0607069841581026,0.07252498639759915,0.015428037113794849,0.08640746089906694,0.049896212692599785,0.0011046211392967647,-0.019200290815025625,0.023485468878800837,-0.0292146532636973,-0.006659799355720678,-0.015285152275209228,-0.08367485773922972,-0.10869369773329654,-0.07287217158967392,0.0655254501327092,0.1015374819756803,0.02015227463177536,-0.0023803645366533544,0.13040967349363272,0.07814675991734535,0.019332523103735802,0.08283085004267621,0.07701212068958502,0.013753802833315388,-0.006045354012812372,0.011399376246897675,-0.033327239281182405,-0.06384185136930293,-0.008096478381270113,0.05658477413936419,0.11733835395995625,0.0661490568742651,0.08366536911782034,0.0001199227277388128,0.054713846128933166,0.060227573656658345,0.004299982712221023,-0.04635116623019639,-0.026714612519932603,-0.02100916224362244,0.018360701173278402,-0.0813237345054375,0.058421883950109714,0.0009430949392500797,0.0755128740666695,0.11540327689223906,0.05963555558608616,0.03271076237752453,-0.013596019529183703,0.07026005674856552,-0.062221978949741144,-0.033148879480076,0.024747178137968333,-0.0009120695955737406,0.046772537555296,0.07321898314297527,0.03654627871461772,0.007577119480966224,0.1422392438171062,0.02694144185417994,0.1308929976432639,0.07131882978344097,0.0701955766129521,0.050578338772886235,0.08468735576263337,-0.027767802210265456,-0.03793123550283895,0.03194596216854619,-0.017617618824646474,0.04072542704648971,-0.029908228601228947,0.08155894807441971,0.12189915811695866,0.016871116372417436,0.07879899691569729,0.04334771992634751,0.0294162966588374,0.010399482875693955,-0.023555316568644125,-0.00906085055900644,0.050874998793264715,0.009653017102141781,0.032536279569263006,0.057424520426241646,-0.05414844304534155,0.07078438384673612,0.05352571094930529,0.012850386874734956,-0.0537964448886947,-0.014951020156875713,0.008268262607787007,-0.010236393857633785,0.11041995559875394,0.04192339801301647,-0.021912558447899053,-0.02331803541130651,-0.047315119128914375,0.04353672149693913,-0.009443978866018535,-0.014458029968594943,-0.06789570552847124,0.11061692206999159,-0.008304042726295327,-0.010409601373705496,-0.09642307712159007,0.007546999978829886,-0.05466572092840597,0.008559782431440233,0.09077759173444779,0.005115970617608569,-0.0035801073589637185,0.02714496411474977,0.002698712387423543,-0.1445429767638506,-0.041949198187564374,-0.000288084180267837,-0.0026730038276394476,0.07165941615889854,-0.009027147045506714,0.017659852202409076,-0.0564458504811865,0.05894456842428943,0.055691955633959185,0.061474289450151626,0.0003075848187162179,0.0898268600966632,0.12146078145092887,0.02333246553530488,-0.023665040711538497,-0.013400536053826361,-0.01337959513248602,-0.015793960760561623,-0.002664867813130386,-0.01916788491864024,-0.07767183193707286,-0.14196222719150525,-0.06666170492192011,-0.06936495023336976,0.05096346896751162,-0.014641501604023948,-0.01503399794964407,0.03005217334969958,-0.02953194838438594,-0.006238375515596104,0.025804331730401316,0.03267421427526401,0.06666622145899484,-0.09741963488756995,0.035713885975593274,0.04101473770715446,0.024779067183380857,0.04848358073750848,-0.023884728820950742,0.07879263487690094,0.03992625883364703,0.07741531516596041,0.1445113270548152,0.029061588455830047,-0.0652519650626311,-0.037171460163256315,-0.0705488045375364,0.004927581148635836,-0.0969799183725289,-0.058073827935918546,0.07347329091917748,-0.021160890463927145,-0.1389375844665658,0.03373046710787284,0.014319730835818632,-0.04455665397037685,-0.0871428077730248,-0.059075572434606954,0.02196267111731107,0.025620089221940836,0.09974900851521257,-0.07372249408803741,0.0031928141568535766,-0.030724672761476342,-0.10197385195763793,-0.043542918071772435,-0.0401086763170583,0.07676726249166539,0.06298353857607733,0.04107575342669022,-0.005648870123281389,0.05708594734000289,-0.1733629818579861,0.02646278531935442,-0.010465188522711319,-0.07854924682004846,0.021926225499162635,-0.07096430970956359,-0.1185532282514914,0.039448489055918474,0.008207128539316103,-0.04969714410684841,-0.04935589831570764,-0.020610825266858826,-0.0022929104385911387,-0.06367039003800756,-0.0009580377481730867,0.04363922956200748,0.00024260395357170677,0.006208419238495101,-0.1167156325929073,0.0402068847956296,0.061929608578902666,-0.07523129485298306,0.04290963643949072,0.0685475409312813,0.008233450356051001,0.04097384426143182,0.04599701249025174,-0.06310394129224799,0.06712507358342405,-0.041251849510343656,0.0031880059186648693,-0.05378068551011326,-0.03397652009769916,-0.021699763757088254,-0.002083054729661129,-0.0027919551422820057,0.0031563493906774944,0.0929200193335591,-0.04788773519570137,-0.06040171777312429,-0.03088928059502098,0.07288193009142631,-0.033355862263193946,0.015786867441466262,-0.012694222090154236,0.09879362070749857,0.005958051378491606,0.07967986771075547,0.013933444369150089,-0.05994395365923144,0.0967179608766127,-0.010855093201803103,-0.06290860461511949,-0.12143325636896692,-0.08829860064403094,-0.04136276866268011,-0.07975345685000315,0.03485392582376467,-0.00025759468458267656,-0.0777941411208886,-0.0328938096325406,-0.02095898692391132,-0.021678750195941034,0.08744394172883158,0.00017939004994358464,0.04526361624005734,-0.00117585071836059,0.02530821925349966,0.009862775416395074,0.07798194593035478,-0.13051649195956355,-0.06559714269690183,0.0921980410231813,0.011267346392105809,0.009165000709277529,0.0034213401355544615,0.046172605624944366,0.06926352874465844,-0.042576461245369894,-0.01537614992455686,-0.08079682135137639,-0.05088928386936418,-0.05821532635501563,-0.049610161015543705,-0.01055857895665949,-0.03266060120652662,0.02309470144392028,-0.07573655205095166,-0.05161376261033879,-0.004094542261099027,0.05527622735882172,-0.03953472584868691,0.01284146850607262,-0.057497810085939675,-0.03929289632289238,-0.05045444452977868,-0.03935188815300357,-0.06498923298685723,-0.005078531625182233,0.03240387663288107,0.006510820478815255,0.11260105704129343,0.1129428262382235,-0.028789402203565014,0.06555154835517171,-0.09491404681615895,0.05087280818301517,0.10738228684805329,0.01434471326360647,-0.04146671623944741,0.02749621382803396,0.013702344484928592,-0.06137275937908016,-0.03414390768636568,0.0004041018549267937,-0.05596658385541671,-0.04083429169284696,-0.02881245546512118,0.08044316077296344,0.03059164076620333,0.06972408797773093,-0.0019938555253463234,0.09077098764938649,0.14127070174101378,0.024733154211406518,0.013824941161595697,0.04625247276002859,0.0038931369531726816,-0.02090060519425715,0.09490577590924881,-0.04467696041447274,0.10811184601980571,-0.09207257783787998,0.045970519793042154,0.023207347635212826,-0.010713708781473041,-0.09124976229156494,-0.0403013351562347,-0.029482332750984764,-0.06205086224773164,0.021787091558992205,0.0011901765445868513,-0.09629294745795418,-0.0038253460241733876,0.01593107608034883,-0.08569070428024833,0.07628790667912222,0.005669007364117832,0.029179928700916517,0.020296078366620108,-0.003886902453370469,-0.01645342409040744,0.0643617620734621,0.0021475151637892604,0.013038594148828108,-0.04315913863540572,-0.05034271543385723,-0.015728854374237888,0.037023510873342755,0.036923433747780544,0.04276760097527937,0.07581400647080451,-0.0263161775347546,0.08111550987164341,0.01825492419246349,0.04258508359554704,0.027220645679721406,-0.031577056496229904,0.06181607692075001,0.023484188795266463,0.014642384093697591,-0.017422483027065176,0.014731784556241296,-0.015266207087114077,0.04278668035857697,-0.024110733078632457,0.004005539880030429,-0.08240752735320842,0.038320021244385286,-0.01923894719158763,0.031741806959250045,0.05112011475950552,0.09367542072742559,0.0008112441508159578,0.020406448574210645,0.01681346079048311,0.05804666339243088,0.06843615130771522,0.017910513814924665,0.07166340056311854,-0.023279386523729597,0.013915764452187963,0.05711207117957497,0.06366615700870083,-0.004276680999890792,0.005042128645118398,0.05330216947469512,0.041214254036494015,0.09496273410473861,0.052115220630747174,0.10366893724078009,-0.04780835461602624,-0.03108077066517297,-0.031745493761648994,-0.043803036292245204,-0.017717789597724746,0.09051722922988518,-0.016448469119994657,0.04116294737008089,0.027830992919396936,-0.1067779668611019,-0.085460808378503,-0.005737346691460893,-0.0164827515094772,0.03577786220451182,-0.015274377818002277,0.007043087622451204,-0.07961045669025213,-0.030281277334433032,0.05899167099297731,-0.009588266086262261,-0.004064419969278076,0.07097736438643985,0.06631291217786517,-0.017221471308580937,0.028930019412219753,0.028809822305405672,-0.047031074929981403,0.09140384909941525,0.04372536309144014,-0.014673344792461298,-0.052189234905912346,-0.037478607278259767,0.11408323101568286,-0.03260364497554892,-0.0024621289037026427,0.09332540019126821,0.04734641451270419,0.06835348640861227,0.04858523744965649,-0.023972438878870957,-0.013512896842717021,0.09076990426631616,-0.04796253053021683,-0.011629160690961492,-0.07608407154737709,-0.00477259314664072,-0.0040651830793817295,-0.009749438343960843,0.03302753757192203,0.07393369169068299,0.07843212592151984,0.10413508942273923,0.10086487750751125,-0.031150751463333654,-0.05638689028808624,0.08560169313583164,0.026811488356765265,0.06017700953766093,0.017537382305879156,0.04632745275541582,0.007996715506762226,-0.007842533620211947,0.08276180198916283,-0.03156619352382244,0.0040329157046928915,-0.03132262084446543,-0.010991164374051673,-0.07961038764947401,0.028546677458284382,-0.044804085031523166,0.031665216148002426,-0.020429321403170823,-0.04718967879256871,-0.01923978591433796,0.03332745270593479,-0.03871175030231117,0.05233132619699453,-0.0022255953764305915,0.018167324331543257,-0.03688749423579825,0.03552526168652936,0.07055053357070457,0.09701885561633544,0.025402101817844604,-0.007858238971396677,0.004679209352990528,0.043294840809676445,0.07514055070287387,-0.0036538110579007635,0.04669772173214017,-0.02980835262939536,0.013208599162681042,-0.018928447345282873,-0.007463014286639852,-0.004197374376803257,0.006153932653144695,0.060285597974281326,0.003132592997645806,0.013519702064901079,0.10451380530725742,-0.0019992040901137785,0.020893797155097395,0.024463579057563817,0.05397248201310921,0.010012275747317095,0.00976477978776891,0.04001427152732994,0.004365475951033368,0.007269784572682796,0.11029840151087186,0.03401282597953136,0.08979951676176928,0.06809447284623746,0.12802736728377015,0.08135124830637315,0.03120259338994281,0.052753218674945014,0.01765958286587174,0.0569828912346286,0.02187779877929323,0.15652848345174603,0.02764844694720405,-0.042477169790802884,-0.03653339769922496,-0.03704349071800968,0.06292501627249375,-0.007387698696575002,0.023378100363430708,-0.04826698868800281,-0.027226447071905906,0.05574850328323818,-0.0002408724359316308,-0.022361304407857937,-0.10363992172807167,-0.04764963008861154,0.11958128466435272,0.04053006471646329,-0.006937254777356624,0.02325318119372136,0.06266352300919421,0.040603793609043544,0.04203124647139937,0.0649556730789028,-0.007763619609544288,-0.03895602979373276,0.0435848623375592,0.05512285600196804,0.055844528094988403,-0.07054969979456836,0.020753809577491573,0.021937892193579393,-0.04409100947976058,0.00010687312744266117,0.05401317465819519,0.04298001082850405,0.10145715879094028,-0.05762380986529924,-0.04747152359535815,0.042811533255089886,-0.06631025765279615,0.06514063587423373,0.032797213003469446,0.02109082859758946,0.024332048606335942,-0.010638728496812709,-0.03615961424200109,-0.008173202387645604,0.13138522218638624,-0.041122627644016335,-0.0885828963143998,0.026549826807413992,0.021791417707985948,0.04869983739211232,0.053954605424150565,0.04420370133281184,-0.09266068713039063,0.03116052606181086,-0.00850265449853687,0.07362757552478584,0.027499579341218154],[-0.004939526517318615,-0.015449489091298816,0.06573572021538844,0.055549644429184655,-0.00018619762078752526,0.04941864995457983,-0.07163677751881779,0.08090860122300472,0.07738380762103002,-0.07038977740524993,0.010519630823222062,0.03675234829778286,0.08205238086054807,0.04417405487425327,0.03656078034755829,-0.0839400778529693,-0.04143571639508654,-0.1406966000272569,0.052123861579574986,-0.02409381581499002,-0.09874847211764175,0.014275150247659641,-0.07241199214856107,0.010981284476852092,0.05335756597655613,0.009844725798388512,0.08190856994920517,-0.002080305433551584,0.03332668701342637,0.0051593471589861965,-0.018172045407637356,0.011279301499804193,0.08851798035378641,-0.05245612347963652,0.10039538324869866,-0.026608602649942303,-0.06284949574418675,0.01141273253851501,-0.055548031071509435,0.05696591297492686,-0.12370402715388722,-0.013528854754138783,0.035835476832111926,0.014939795881312832,0.05248236283379896,-0.08068774948080382,-0.01984348786810231,0.06504167422279171,-0.03368161257907375,-0.048978367018754444,-0.006006409728006651,-0.022375266226226286,-0.08434080840782747,-0.05236030691684686,0.08144547810053901,-0.07886638317220881,-0.022210773551478217,-0.0753065932131587,0.07665301496045235,-0.016873156037377716,-0.027916966588974235,0.057989149602924166,-0.03827054329627614,0.023605326663079244,-0.012311541395373151,-0.055313182838524384,-0.026841131646616233,-0.032889240169107915,0.05482710056172227,-0.005078124087968938,0.027625944632298366,-0.04873684231773575,0.049380956450654837,-0.012824804708306095,-0.10227623536613767,-0.10594755808471945,-0.009646657382607813,0.00149906490689559,-0.033596817402897106,-0.023145411687383714,0.013859696485930148,-0.046328593197639684,-0.06282926340917984,-0.0667657197784377,0.09088607865118592,0.09513830901828894,0.006489633690869938,-0.059700875532589084,-0.0036544910176021044,0.03989046747101952,-0.07978989390317047,0.04248817395996179,0.1326740736028219,-0.006466472218355687,-0.05131061813903688,0.023006406365766608,-0.008485084299838836,-0.0687368873889853,-0.03393463404533215,-0.05610655825293746,0.0013933920618261885,0.03083639030347619,-0.04605732833729276,0.015298044421140257,-0.04631240444889355,-0.032240003959597495,0.034635358396554114,-0.09636916425169527,0.004052078018873287,-0.02362373490276648,0.013521500279037344,0.0040779007710426305,0.025741689481371885,-0.005309454077922148,-0.035214552808693525,-0.011956271281931495,0.023023319432574785,0.03107875112777178,0.03589799223057838,0.014386958547939544,-0.0451789815947956,0.017776709440839675,0.011638353237377224,-0.10811959461174553,0.03417878427238518,-0.010898660813242034,0.005501726682054056,-0.030483379857552062,0.06361020481572509,-0.000670077478699939,-0.056154857076268064,0.03592914350370614,0.08427380099095509,0.05002605242244156,0.042155957698937506,-0.017689397053943057,-0.016561619536096993,-0.04865745263645076,0.010391939507704829,-0.027102820784512236,0.026729416413905617,-0.02423171356433666,0.06581088612301134,0.05523138082051604,0.026387884926617138,0.004297592029160789,-0.06012591735194033,0.06522336116995307,0.016988249581444854,-0.02717294612138498,0.007308125358514768,-0.014453711882714996,0.04190904829305357,-0.012711007303597687,-0.03738692452541577,0.03911372409505034,0.015561220127723771,0.070040451855587,-0.09083156448057013,-0.09888597290394364,-0.014028073500154606,-0.01034590871298074,0.09083169282189638,-0.07414548404052151,-0.038291173382211524,0.023963183331517805,0.06214003933069532,-0.06664001246794996,0.039449580106552244,-0.17289671975180523,-0.05378134319412942,-0.0423372427585682,-0.01940313030459144,0.005678642342707529,0.0013950802228326355,-0.1397577166158481,-0.008420153554452896,-0.011529381801184993,-0.08950623308673714,0.01736113762985067,-0.04730897316552443,-0.019101389069968434,-0.059844253690694835,-0.04905077888084512,0.04024948717167295,-0.06686048917614071,-0.028039331577702144,0.013966704654209804,0.018047456159628043,0.11021047062329051,0.06901893521823141,0.035413372296755924,-0.05265051099282251,-0.10940886824186562,-0.1131366167702397,-0.03622746820066215,-0.06582501165309346,-0.0792603014928878,0.07852344881401303,-0.00638471529185361,-0.07396450189298247,-0.15367243329014132,-0.033717031703658626,0.03689320671587513,-0.05255229701090641,0.029664961542848724,-0.09117061754085412,-0.03389198624430576,-0.06575416711756192,-0.05663936440566942,-0.025886776153642144,-0.07254668962656646,0.008254841196160571,-0.049368820492623956,-0.08136890287294059,-0.01449286308947559,-0.029583364274644374,0.02529254054129171,0.02714107668465206,-0.010927967529145512,0.03536414508495632,-0.020058838758488958,-0.08456651995008092,0.05962208194441589,0.096242839137766,-0.0876509664375361,-0.04062035311184266,0.0086598034184302,-0.03423410658199985,0.033286118727665695,-0.03007011336169134,-0.023989944045170488,0.03140760022761068,-0.05134563780321153,-0.03619613929175666,0.045948344940039465,-0.009374941767236123,0.055322046674653236,0.0183025181648531,-0.007063847069439496,-0.02307461424384986,-0.06964575531396514,0.016355744675551277,-0.0007591123314686201,0.008330999556247231,0.03046856172482369,0.06413471842827037,0.030019294970152426,0.002564687673063754,-0.02505746570939824,-0.03620343762040102,0.1063582016902257,0.03530342186084563,-0.027268254080343352,0.05650459148623624,0.058453704194143384,-0.10445884725141123,-0.06270593454394748,-0.055406945441008874,-0.011092679748982344,-0.11444364219551176,0.03007892987391941,0.01219664985212752,0.018033663161568392,-0.0604494846081976,0.008921949897990685,-0.030948934747521997,0.0028279357516134565,0.021047200870300004,-0.03439879025962233,-0.025252456381503478,0.10497876145465648,0.06084253194087006,0.03605197553433261,-0.046448218822269426,-0.0670482299287869,0.07541618434842098,0.07390969705447226,0.04530593865755311,0.020894260204441448,-0.018774210031079576,-0.012825430383046493,0.0013441433384297995,0.005786696659059148,-0.014853558883071107,-0.007751032908509317,0.016563047087641475,0.002240157868303615,0.0436415500359993,0.054640869375739295,0.017805372155776728,0.09009259295593312,0.08923367875846712,0.0042226716059563275,-0.06180201066919164,-0.04217027448110885,-0.016654193075677465,-0.05687784419638652,-0.022763872715958932,0.0058002937055012865,-0.004112573101209651,0.046100680435915926,0.059573727869592044,-0.02259341281989687,0.07554129590924089,0.061751059860379626,0.08658419586116739,-0.06677369130383039,-0.0022138317425164297,-0.022527723325189916,-0.039477092893210906,0.007234358775163575,0.07436009795966887,0.0041562865628672644,-0.0020183629287503888,0.020544081337652276,-0.07546223004004236,-0.086012635858972,-0.02762475582513945,0.019306126792953657,0.0037475633866962655,-0.0084356727811037,-0.13683262102361107,-0.03075886031659962,-0.028717739824603267,-0.030341751046854513,-0.07832792090381084,-0.08919681023011997,0.056021702653768574,0.015075141302740801,-0.002815141765358485,0.06207434158815016,-0.02164986496451599,0.08628883069035054,-0.04596066290108176,-0.014404810306645583,0.055523107543243126,-0.035918727051874176,-0.04212421856523987,-0.09625828848601489,0.024671572099526366,0.03955651134509463,0.03841583792401531,0.036777393492217474,0.07539067706770013,0.1018395151201299,0.029099189739830323,0.08506498130645972,0.11884799155075058,-0.03096395177305514,-0.04923944817037715,-0.005912429796696359,-0.025468423290413062,-0.043905528356798125,-0.068693530101658,0.011176528476379132,-0.07667765307601038,0.05932444187543879,0.07429847441367314,-0.025720315119629054,0.062086389287202226,-0.01862817081813463,0.04319565922727106,-0.10907566004692615,-0.044922676689645315,0.011493093068967963,0.06584065764905225,0.013238238292251216,-0.10236470279697615,0.015517420528249691,-0.04516104280769844,0.09832321871103972,-0.022757275898226827,0.027332588414623014,0.018001146046476117,-0.008969057664163269,-0.024379622932620484,-0.04544849064433033,-0.048218095440493595,0.015233520274966527,-0.11541010372888386,-0.042082491859894204,-0.023629611740465007,-0.0247767060607188,-0.06096120288620054,-0.05855748559547286,0.004030336508152146,-0.00030258331771028607,0.07713780545221575,-0.04424885863054153,-0.017707777521555154,0.043263075660259886,-0.08009106855057647,0.005443697992997992,0.027370108982735612,0.06455461655369772,0.029315145769522478,0.04249253421317577,0.1020122380374607,0.08183422071200593,0.07369297207235273,0.07733135732059587,0.10890812153558264,0.09360751617875611,0.04761829788642247,0.05686100970522882,0.027351415319545755,-0.10456929190151235,0.0693437099618242,-0.05839759982163467,-0.07841857031544064,-0.007285249667182181,0.02499808911625371,-0.01251881621146997,-0.059826074953385516,-0.03665111751018692,-0.005579678741203151,-0.057637354656556235,-0.11114373687176823,-0.0075800398428077275,0.04100089436403273,0.003130338696461829,0.03193378180305126,-0.036211604366026044,-0.016321449413021015,0.07613892536807404,0.06475219176446036,0.1388536629902697,-0.02018310322610838,0.15037876411948006,0.015406788938608576,0.026298041959261186,0.07400036797489133,0.019790683178508437,0.11279936423334844,0.08268407443229063,0.06373352412488335,0.042188934706727486,0.09526909253262962,-0.10145042435614625,0.03741800508068734,-0.0002736855097382561,-0.09621909344710049,-0.05089257177150011,-0.0345069254499482,0.07538631699004035,0.06679380426676487,0.030886152134480142,0.009517810212265878,0.023074349132605445,-0.010972212660195657,0.007180547153226733,0.03849764261609879,-0.012449176646249172,0.0020861696240181654,-0.06770722677569084,0.08443747668889764,0.0609019557996109,0.0814709766718514,0.09230170459541802,0.003714217039866068,0.03791006414983913,0.02539596067989249,-0.010655424993130025,0.05579667115886453,0.05965377212337281,-0.03252183706573125,0.004149984418003219,-0.013666582028979227,-0.02125250537605395,0.05638857014160119,0.02291048200108713,-0.043667830993144384,0.05023214453213504,-0.02815971357675444,-0.03945654936116787,-0.051382985288884346,-0.06671151821008725,0.0708628602171804,0.005683724469864479,0.03868644984146346,0.006515166720466801,-0.0005781727910245334,0.03934858690049773,-0.04077991409336264,0.05456609852062398,0.011748986214634091,0.056277943986766374,0.06548630323440882,0.09473602579320584,0.05205797979593158,0.08839051381817965,0.12485263747449712,0.10064377351714812,-0.002673185333194069,0.012834201596244208,0.15282203685700946,0.009959807208016506,0.0979600418254934,0.06413983339909025,-0.025829558277523423,-0.004431815807075924,-0.007950827985300458,-0.009687450098471986,-0.06754885425768747,0.01627882857486419,0.037730604167243074,-0.009710339061411949,-0.04763723917555802,-0.03885697235247727,0.010337988314617156,-0.05028213999751652,0.020248593485340024,0.015053346326199991,0.052542196440887444,0.0012599525659818104,-0.030051315132363657,0.003688260557760681,-0.07845312614996117,-0.021958795038713837,-0.004239498875447679,-0.12789879581458613,-0.0008881324753078842,-0.017367897862484962,-0.04520086401945368,-0.020718761391539147,0.026980516355504258,0.01141485663297133,0.015144585766831755,0.039318888383199184,0.04229259362936471,0.04938002824150015,0.043712587252753,-0.07168677270863177,0.0435474345934298,-0.03219946098237196,0.004835777145904769,0.05770860983817405,0.0002662741934841281,0.08127124240167959,0.0451293919535256,0.03145524173982986,-0.013802447831426009,-0.045135858802735934,-0.0692991711088929,-0.042367493956043625,0.022189309150411052,-0.05042685989690705,0.054532158711677006,0.014635228596048478,0.010402029293854673,0.06199782692709827,-0.027555227870268612,-0.07828900529570858,-0.029079829473962343,-0.004458564705915722,-0.004777352860742699,-0.0023958084613464876,-0.08326412043409037,-0.05658624902462089,-0.07038023987479854,-0.033491650196887615,0.04145122256918221,0.06927775514486789,0.006451953722627044,-0.014162947330884086,-0.036153715684459346,-0.008362698567380089,0.053647239165879865,-0.03861995660131549,-0.016788230946251075,-0.019819896676810164,-0.14251144900884377,-0.06584068759321349,0.020487243450137374,-0.08908873600003749,0.04799048503162498,-0.04826602873225993,-0.009395944786910084,-0.08607125708439414,-0.022400173299212563,-0.057607902703827575,-0.019623753491906554,-0.03459113305803548,-0.03078931284843691,-0.06107737681098029,-0.018940518547395802,0.07495449078855684,0.030580814198016473,-0.07360557254757535,-0.0854403755695491,-0.055925262495537524,0.05266417682460758,0.048149922165754665,-0.10457923086938362,-0.07891522278564077,-0.04600318521740239,-0.05744291170967669,-0.008827929732606363,-0.054961258743969815,0.022250639127104614,-0.061208728967019226,-0.038275144152269916,-0.07547696508836459,0.06776827403915762,-0.01647373399491912,-0.06491074976933625,-0.05561394511850265,-0.08134453418430174,-0.017869136161522775,-0.015657801225989622,-0.06446446420951382,-0.039316478705338914,-0.08795486044565344,0.017058966535270323,-0.030238034456235876,-0.03403663510649196,0.06834022886960478,0.04926829319597048,-0.0742262433603363,-0.10878758896707494,-0.01047205175101015,0.003089274860834347,-0.0041380603967464125,0.11576168952058191,-0.024053264811608726,-0.056185570784066746,-0.0018870665681018286,-0.02046338102324364,-0.04547285007602449,-0.029112620953119304,-0.003645226772785526,-0.05918250709372828,-0.0632404485379112,0.00436822309416955,-0.048353329279951375,0.007447966906381308,-0.06852432537042408,-0.039596341680000174,-0.027099276601457275,0.007567328777883448,0.023491268437279122,-0.06475442866721587,0.032926847270292964,-0.021121429277445345,-0.016598928552951846,0.04650427128005943,-0.06754456443251677,-0.06457632866972077,0.06306273475010847,-0.058138874753069635,-0.06555147098260763,-0.11035996615797936,-0.07959248436454429,0.03384662247949794,0.04838651387833188,-0.09729041946590077,-0.02861968956537304,-0.0020892908914187593,0.029845478742063947,0.0610363487899875,0.017601068986681453,0.07429312983323291,-0.09922978029547971,-0.053892381090498445,0.011052710328178086,0.07393230846516999,-0.10034113255828422,0.06439086291660114,0.010700211582761101,-0.042322971555308155,0.001116808731319392,-0.06645715829945884,-0.005650088470780412,-0.014686349854676053,0.0003071018789615362,-0.04243252337315572,0.04363262800930279,0.010699171260490898,-0.047123221770998584,0.05680302059308975,-0.021470187448170433,-0.06087913025594448,0.043712396857577836,0.00871042421064181,-0.016961965298549306,-0.0515870681464176,0.009317681322489568,0.002474271002353261,0.15894107623747583,-0.043472553326510836,-0.04986162558278911,-0.05481748273655227,-0.015010172786987358,-0.009094552214803656,-0.051934548800438886,-0.05534440901825305,-0.052341428071627276,0.016091795491393345,-0.010919977711141286,0.041032007210350434,0.02593403469492379,0.0077482313879732164,-0.10871505303943674,0.02858971559060311,0.013291946720285355,-0.07629190969931637,-0.06864716991320542,-0.04334156104988653,-0.02351873681920717,0.010542722690526612,-0.022398131535727003,-0.006654998444995582,-0.10485621519730712,-0.0645352206712436,-0.05743497597175737,-0.08861922587064289,0.00027790338506252833,-0.06823232761716863,-0.024702313358692447,0.027309616456607604,0.043897460103229605,0.026395052352340118,-0.027160672849853244,0.04761975964666559,0.010442346627509464,0.10740237725461654,0.03069380724445088,0.09607157954354581,0.025887495135261288,0.01869834411761017,0.07567034436087922,-0.010935904390633454,-0.10803741844556464,-0.14615769698959943,0.022702819264857718,0.08073250018230552,-0.1218057945748002,0.025885740677978386,-0.06836772393979221,-0.016605403157834136,-0.033543166344579434,-0.050863590619678795,-0.05669221250999237,0.009579010696463719,0.09498782422767808,-0.07734402420159993,0.07781232902443536,0.10287471142669447,-0.018120803302276285,-0.07186576907186285,0.028042183207505574,-0.04722261176367677,-0.015533093093175802,0.05847426205378302,0.009395269589592243,0.004277291516851671,0.02045342649950183,-0.024429867256188603,0.009076664731587965,0.0825928555338364,0.015386637970388292,0.017068975357804335,0.06039732352437474,-0.01155289977742195,-0.06480150302676949,-0.08326598385193552,0.05878446185625243,-0.03828355836568304,0.006023344217851956,0.05521229397295958,-0.01500388054370176,0.03521671801171112,0.033941953184533746,-0.0029220295447468796,-0.0707527910388629,0.04079991776638466,-0.02447099482507383,0.05244402900743176,-0.04120865244995412,-0.055387531183038914,-0.03887811695392656,0.05002650802452562,0.05527810450568756],[-0.09472771023051607,-0.0034039207670807812,0.02173504008836494,0.006579825124892399,0.036064100239605594,0.029998110937961547,0.0012627559674429304,-0.04705918537739579,-0.027672957735858476,0.031115473506808027,0.0021362452523301855,-0.02621345197078045,-0.05327024580885116,0.04202516391566758,-0.029861718485786507,-0.05842425466782989,-0.005313444508570538,0.011427859846255555,-0.0533404772850005,-0.06013591060086482,0.013178438556606411,-0.038487575849000116,0.04858100609457861,-0.0038855424815226196,0.026386655906729194,0.04055783124930683,0.0687928435873151,-0.01320971713276966,-0.006055518524920277,0.1287051824346526,0.03254689494629171,0.011385455173458592,-0.06678036588342995,-0.027603136972989467,-0.0456147093682352,-0.015629262381669676,-0.015308609220125871,0.041253988627693715,-0.056370756442232696,-0.04359209986715026,-0.007311571531741171,0.027319673449490205,0.02959761288766886,0.07397372694232181,0.04165715675830155,0.0063246972013218565,-0.01138381269913886,-0.055705158798906924,-0.021993162452500884,0.08043785785686455,0.02001308349710541,0.012062552823382488,-0.04764320600641546,0.037590156384718194,0.005133321446104619,-0.024960432523886647,0.08746062258013634,-0.04011781478731722,-0.009929869315009866,-0.018122801657904364,-0.020460187582371083,-0.040830534766181335,-0.0700187377717166,-0.046485558184256,0.03988305251368002,0.08382390132524864,-0.0953970086027672,-0.012401599373897622,-0.0001819808698841132,0.08042585657312229,-0.018914247152763724,0.010526821613609285,0.021498295964948334,-0.022485907783113216,-0.010396687857237161,-0.00702775432315021,-0.04082685527346959,-0.06182549891731496,0.07937575300323355,0.009608629084078892,0.05812158676528015,0.04263539507528446,-0.019389875322497467,-0.010128900997881121,-0.048825211473178885,-0.019685703700768012,0.0048051687001672795,0.07208959183763118,0.014868929311615724,-0.0040046762105214705,0.04945054941928126,0.034560941698303996,0.018096939822695238,-0.01174778179361319,0.054967974347498505,-0.06715511955508857,-0.05180555113349588,0.03424356770994206,-0.013202866852241183,-0.04555588635766087,-0.06857150775028423,0.005457724412570455,0.03230353282117927,-0.0619659197427002,-0.017132174037895256,-0.03188957691337179,0.01699390071355018,0.03311718276250408,0.06967122362977045,-0.03706248769468475,-0.07212977666458235,-0.04903801067108084,0.06119481214058196,0.062230536182517684,-0.0530923384584036,0.05033722554417879,0.010670545929630373,0.008582211711728925,0.013116771968436677,-0.06294658728606511,-0.005075879748914266,0.00792409424721588,0.07667344011833944,-0.024802376363862903,0.050068808360511766,-0.04462761782649331,-0.014348968938110012,-0.05691547393970884,-0.026783568839730022,-0.025166622000516725,-0.027501436358043328,-0.11886564562818167,-0.00587540071947065,0.018722310259205826,-0.047314595944707966,-0.022566842851073368,-0.04411441753644003,0.011354578619584976,-0.06429455493221893,-0.020382362381764205,0.002600701791523994,0.08142580525459192,-0.04737396329711788,0.03161825139878039,-0.02669971724536713,0.007140390396058083,-0.02453051815672732,0.04563708782344461,-0.004742142305945585,0.07699488520660755,-0.040938600185907635,-0.051455904492201325,-0.013445999961176217,-0.007223411645065077,-0.0006731618445224706,-0.006538719157868497,-0.000890812285573509,0.06487924802328654,0.06029387344443605,-0.018291974899741346,-0.02984081404997631,-0.04843566363442937,-0.10207170478559062,-0.032540433768300285,0.017456079614162155,0.02271109687564378,0.018748525198237262,0.05695758821438529,0.032772661806706106,0.029269028293544955,-0.0018496453080719157,0.03285617747275001,0.06407232654223133,-0.001017652850810724,0.030754542545937253,0.013255941093342388,-0.15577728034092272,0.004297759570565005,-0.025798975166045908,0.020435655305293926,0.008354318964728769,0.08012164959196227,0.002926244023110579,-0.01121073897811359,0.08943796433347215,0.09118368959085228,0.050380436630863744,0.0061341844946070385,0.11083855657092932,0.05726476703899801,0.06199069443763304,0.0614159442948555,0.012940803030156272,0.019482337164305197,0.15383549626909818,-0.030728051750097973,0.06673746724283099,-0.035123045923097375,-0.025303224808161665,-0.01784817726676419,-0.08605523573950506,-0.001145329302270075,0.025419721251172905,-0.0609633572901373,0.007340049104192053,0.021251122978619863,0.038468360427492757,0.07152293931425939,-0.18582570123187198,0.032531515566257156,0.018261461038765556,-0.020398230323652376,0.09783920103312549,-0.0562801241403183,0.026081425121814498,-0.06084661229063566,-0.06775553011658357,-0.040060669926320305,-0.01967431030827039,-0.014438113704055372,-0.04874970727558029,0.08772800399683496,-0.053264356420679185,0.00011236782742911869,0.02199257139317771,0.07715010627068788,-0.0186515582937512,-0.02162754149319882,-0.021192766005297813,0.004622063045912746,-0.017713345075748357,-0.03561735969047517,-0.06997445981830254,-0.03204124246326215,0.036256022516477075,-0.10182600779690619,-0.027595621090788384,-0.0367959671018046,0.000371879040235868,0.12667405598343146,0.005463040618953239,0.009055293835888448,-0.070722335615165,-0.08292184018322973,-0.009402073422646961,-0.06763850559342169,-0.028265225904255085,-0.05740572001596825,0.03252402614522252,-0.005320359800501512,0.014802946264558725,0.010086734920555852,0.0028080782480098218,-0.0668075752966179,-0.022361869164513274,-0.012422928498873427,0.017739950602678436,-0.00760111389968929,0.023599306273737877,0.013237384744113729,0.0884804053320864,-0.00038895463454846006,0.009926666577858567,0.030988872585786097,0.021670462443998485,-0.06477339980774699,-0.06826084325121134,0.027424446141664456,-0.02507196249202779,0.04747144327313754,0.009746345342228298,-0.00045676989444429607,0.013726337678737899,0.026020566083955955,-0.1473726916665915,-0.01106455392797569,0.027915125709847083,-0.061407556799978384,0.019862747572447367,0.001104618026902191,0.1192751470357006,-0.09132830313270128,-0.07187426793238809,0.032919197893429036,-0.040848315857293746,0.007406558147086157,0.031144222211591462,0.08020350379061392,-0.026019079803653384,0.06813732257029027,0.024858670088951294,0.022105732243715693,0.06532600255959665,-0.07301118837867288,0.05585977935808668,-0.015334227756497057,0.026376460027143073,-0.03042632182451702,0.02875194198426463,-0.02766250235005673,0.015474759642644793,0.03686629073757515,-0.020365573771300913,0.023742123225196192,-0.015690339502737922,0.0804909610155107,-0.06906167499490734,-0.0560170807637176,0.05752649986651999,-0.06486514727120436,0.05610521174448083,-0.040733493508765775,0.018599706158916828,0.07955980608964149,-0.06865151009315117,0.021479223374308017,-0.02923703155784208,-0.03183785973772487,0.02384746064482591,-0.0222392202183511,-0.024515124250013502,0.015821029822899,0.016952309561104675,-0.09062743005996046,-0.04774663467210893,-0.02883961165834562,0.009910761733463412,-0.01883947289800861,-0.027405258649488094,0.010864492012868206,0.01907853288875597,0.012751744538877877,0.011233740971783326,-0.09968070146061944,-0.004635142920725847,0.039786470197753186,0.06307826696703965,-0.06000918871214922,-0.1060320965158348,-0.12410566365292655,-0.08150322991053914,0.028256478679142646,-0.03322765203371665,-0.028894379268012787,0.04152259965876303,0.00945491590598613,0.012871119483048126,-0.04658116064009121,-0.007257668759134448,0.034139212960932454,0.07128446363759558,0.038982511687319095,0.04082511405910124,0.03765261315684879,-0.01656483601450021,0.05044004302344387,0.00034132254566654626,0.0033204089138564527,0.004186250002975314,0.004509201208605604,-0.13906044171410656,0.056386524789307814,0.02001579617067728,-0.029052057402205306,0.04794177873715813,0.015477925198088539,0.05297309607332485,-0.025554709794828167,0.0021542895080518777,0.0032151692340828303,-0.029815108846949313,-0.051611976149727144,-0.007728636393992256,-0.01537100839793788,0.0528441423476887,0.13611916627739917,0.05559697774167558,0.057121191606504876,0.021647324306572322,0.09591654935201525,0.012787892588833382,-0.10585045900702843,-0.04440285231656914,0.10132741624515959,-0.02623609647977436,-0.0058002860455449515,-0.0885957713418476,0.1418900079077739,0.04024443067068296,-0.004103752939322696,-0.05128400807183203,0.014385683413729417,-0.12207387162430684,0.06751734151811366,-0.04953706478538458,0.02522489020117797,0.052071433429938994,-0.10814591762146243,0.0531721779877084,-0.019010790134542186,-0.022720297270729852,0.042623483753917,0.02071022441733761,0.04494344909470433,0.05779379704093167,-0.08065144705825403,-0.016735193409171373,0.029335783288604703,-0.09492903049131012,-0.021840610390201926,0.011477305052798948,-0.06873969470844637,-0.06339456005822829,-0.0545647579182487,-0.03477566237265567,0.0035933774037362463,0.001569811498133682,0.00014225591940516134,-0.08131813059208917,0.00483062711691683,0.026627675314561578,0.04653546017417854,0.0725671336691468,-0.05293798796150769,-0.03736359810856742,0.019326090208392897,-0.010560670838230559,-0.030242661371842967,-0.05224037080946579,0.08185942644145475,-0.06971099144356965,-0.004783883828881335,0.043908455218155625,-0.01967186753372031,-0.07333290321508368,-0.05967893441505198,-0.0308350016021286,-0.038520426838659506,0.01899703776077086,-0.057230430927731946,0.06420169434328153,0.019161095680546244,0.08262426201032122,-0.026413757005388335,0.04569329724147857,0.004233784619129582,0.05358483107956342,0.07043710368648258,0.036885986484417085,0.02234595194053256,0.06592094577502983,0.08027599508165018,0.09546153426188302,0.015052893445511166,0.021615347587856267,-0.058344760120547366,-0.027938278713666716,-0.03607571504364054,-0.09898078141882916,-0.062296542231659244,0.015244472364887471,0.015892275270019553,-0.06778643925199217,-0.058968127110312164,-0.07772664024977385,0.014624677410468969,-0.00413192414153538,-0.05479408147711062,0.057892538677765566,-0.018679029420337473,-0.05046764996644647,0.019879380409706302,-0.010509018343767022,-0.031506365491027005,-0.06455417291178438,0.03896974466306066,-0.08541463950933353,-0.07623625118395357,-0.002000504633328936,-0.051430378293232853,-0.058497606572937906,-0.010180585067951239,0.008977098994609222,0.04071824142922518,-0.00847651090651664,-0.04733686748900062,-0.007804719104742714,0.03944192065717488,0.04773329320796987,-0.010660273830673594,-0.04202391545400481,-0.04085323113149544,0.0015367981717707767,-0.1451020601915439,0.0026940282877305514,0.026941832539249817,0.02895532469849273,0.014090326579135,-0.07930218183179444,-0.06863756351894434,0.046469735737225966,0.02227553047849291,-0.03663604816186385,-0.020018340309607193,-0.07329130219325808,-0.021263339748113983,-0.09219043244673164,-0.018692141789200103,0.014020316629535307,0.01779810231190178,0.011945212660831957,-0.0988661403741891,0.054945456618217925,0.01709524180384154,0.049677812968832114,-0.0027003468139381436,0.00807647839190296,0.03510135628268334,-0.015489382447422853,-0.05359710269848685,0.04300879495174401,-0.031981102407394185,0.041867515581435345,-0.04467067285005267,-0.0010925661215934017,0.04023761800995085,-0.06821432959354816,-0.040259260296856204,0.07967518184714296,0.05710169908536474,0.10439748320041585,0.09645439894440345,0.04436438020890744,0.025858946823990172,0.06941275058056011,-0.07075741389566476,0.049198591903127656,0.022932487488877867,0.02130726827165694,0.10276559919077294,0.06801608877623588,0.0049557591103259625,-0.07008147388390998,-0.07705848813705557,-0.020379016287778568,-0.024145625846564826,-0.023458005761986183,0.08188438075135221,-0.09989730235364228,-0.04188277173712032,0.03048614399620124,0.10022965372156978,-0.023673096663707458,-0.07942764062870158,-0.06974696697406352,-0.06120395513414347,-0.013112180707436517,0.07167052533720766,-0.07118553735466888,-0.03254637799157438,0.03196276196165804,0.017355547816102646,-0.06954252253756288,-0.014846159234587226,0.10782895363340539,-0.07774697980821278,-0.01932378759768866,0.09572145890739688,-0.01151571684108274,0.044972427206624616,0.04203408341998839,0.04137396789540775,0.03682307805296553,0.060595562147073255,-0.0547678118324993,-0.06633647810390053,0.0610076326248572,0.028825993052293095,-0.0034764693628837515,-0.016805908138226834,-0.013825576696880443,-0.0380686995074308,0.018079633183778348,-0.11023562003808053,0.029826963485627037,0.0157076193587839,0.058606041872733834,-0.15495497099648728,0.014867815021423179,0.04028603245484953,0.05563271641841339,0.021711803538583395,0.08898449660539284,-0.033781520240141076,-0.039165329537744833,0.005975356428173393,-0.06306545469150805,-0.11656327325930099,0.017230094919875923,0.038458684525571316,-0.06904789862843957,-0.027414108095851118,-0.028225247969028547,-0.03715018725015253,-0.026641275902679576,0.06003752332201561,-0.012377431255586248,-0.040645769254234215,0.007888529520167982,0.0570819787691501,-0.0647476616466252,-0.004152986765440706,0.09389973548778767,-0.06507250478490177,0.0760079307350994,0.01610152575703734,-0.01251430945588386,0.08747617527437349,0.03662259031773838,-0.0487105275576419,0.0776195926554026,0.05885051348467479,0.03616584544184998,0.001369745405324898,-0.018683336769564258,0.01313086520433194,0.009892126012482029,0.018343169676196935,-0.04257397356181527,-0.009180609419197036,0.03244800799710973,-0.04240517056611532,-0.009621024749446051,-0.04043004235166197,0.04317920361610196,0.03224111029222928,0.057247567682803514,0.05335445107975422,-0.006815300997297148,-0.007693903633678998,0.023372644912432416,-0.025621859530048145,0.036568433800301434,0.06336151576008751,0.07161391768789856,-0.07320591873110255,0.024329300886662283,0.053802927997073986,0.03660835188188575,-0.018021551602007066,-0.02798948494305043,-0.027209691290770405,0.006198192835024137,-0.050936753132298215,0.01888127260311949,-0.0229758836313039,-0.026426299801968988,0.07256551550973446,-0.01206135170876016,-0.02334281267137334,-0.006392148596351377,-0.07019810652837578,-0.03524399275571141,0.025364510669300542,-0.019011999650163244,-0.05427312945160383,0.07716619730413538,-0.01974193641871343,0.020907899408494444,-0.04628211647604842,0.06195637086942797,0.010239348627418206,0.006957830634683239,0.05709962013515999,0.09788067885840777,0.04989959385516471,0.04297901485672125,0.09991966152666745,0.023673249147840365,0.012593399709898352,-0.04502883264264105,0.029970982824863757,0.07735081975156877,0.07528890695636531,-0.048511502078783846,0.05373060025530356,0.0216480678858334,-0.031411993672107244,-0.006353474944987889,0.010824620640000105,0.009030830076259476,0.022063459828074176,0.07403240482306901,0.05569234737540012,0.0020764717661517443,-0.03807392637712366,-0.007145307575643475,0.06260155822241036,0.014304658908108128,-0.09566497483700999,0.1043740925223256,0.0075446564116441435,-0.0041881758742018695,0.06268657482478712,0.11512315202395738,0.013635217132295596,-0.07903977437199808,0.06459986593421545,-0.05670189855972016,-0.032715021562656876,-0.0710551997517066,-0.07431810163664261,-0.03635642991931859,-0.026618764994746705,0.0022680363537698114,0.06692237294370872,-0.021304131632013803,-0.0830726782906017,-0.009944129565488027,0.04577378346219043,-0.08999818500721711,0.026184423491343943,0.04911939359290086,-0.005082288254243766,0.0152448954931697,-0.004975864145371462,-0.046292412459912835,0.05086359858068162,0.05502849837137007,0.06273128980459378,0.014447831395291865,-0.048978029976422324,-0.008291365071375038,-0.055992195842157796,0.040854876408293404,-0.00045169007986650906,-0.028758168138023815,-0.06749755234184775,0.06098575870760765,-0.01095854110663133,-0.019052216735209033,-0.0024593589299849393,0.08205752940025922,0.02680987562978692,0.05013352532659505,0.01847165428757164,-0.04390065224203589,0.07506743646516327,0.10719881266534616,0.05459418710693091,0.017236044405361167,-0.0198694647602127,0.0524718126388285,0.07327770461914457,0.03659774732791992,0.00004962223172885806,-0.0554311506838953,-0.04759469746840051,-0.09612466458013628,0.06173043331060571,0.0007039706249008276,0.031160851376767558,-0.04424686127959415,0.028468633659927873,-0.0457264084001193,-0.017685754718535784,0.007169161127481234,-0.0240522948362325,0.03369721928196956,0.006055104347808405,-0.003697868574828004,0.05530649954104899,-0.043052212704820826,-0.07059600302349879,0.060653500944146,0.005171661759237909,-0.019032521894598368,0.0364964875044671,0.018634278471659327,0.014397873339572832,-0.04889270831680917,-0.022223448879724297,0.06468271446087216,-0.04324020568220006],[0.06672880311230234,-0.01378124457547322,0.09809862395434252,0.02084663122945479,-0.04700604841831909,0.09006878365372425,0.011696335727501495,-0.015749273415421518,0.07776984004703195,-0.03339294505120383,0.0015280358779349045,-0.07239981455052673,-0.016281738403486956,0.03466357816863069,0.04054567755229378,0.027588696598129552,0.028685998765942033,0.05564570148652696,-0.021350597783406908,-0.037355888988237586,-0.007817537413457785,0.058926304729178924,-0.06990780105903084,0.017212760697000996,-0.09164152189998247,-0.0014022378042896396,-0.005830198260488459,-0.00835819730821963,-0.006596924907196915,0.057944864621090574,0.032178073201611146,0.0214796520757747,0.06423327549217789,0.1135826471935583,-0.06411599274637117,0.07195905364159474,0.02109557784357226,-0.036397241154425185,0.10596494679952655,0.016353543103723386,0.035800744158603764,-0.07194944623979731,-0.03812755272040711,0.05933214479061366,0.030745125324665105,0.05217121471993918,0.13407126225631025,-0.02208419623675057,0.04026848460460503,-0.04391132541165673,0.04410113728418043,-0.012690626826037148,-0.053721165197648996,0.02053604511413346,-0.07034984512353103,-0.0547601122927799,-0.018591340423944527,0.021957300436383134,-0.011081230318059378,0.08463645726913394,0.08970369180929012,0.04908661811617153,-0.0043643191871058015,0.02305412848828449,-0.001696764374812659,-0.06213806602390668,0.019638069319900708,-0.04229223129347868,0.06745518111993089,0.02591438345906811,-0.04544151541275362,-0.027123203187589404,0.07857236999360528,-0.020717595333714922,0.01289022944413204,0.05205013597237244,-0.020225442554950353,0.0708773446987113,0.001333168975673211,0.038842431993246176,0.014008216772026346,-0.021040418843016776,-0.09509050662555632,0.06238146847202437,0.014967005804731703,0.009588134463103148,0.029603311709478795,-0.031022123274631164,-0.05211864817283516,-0.0027871922177329666,0.005688191948491421,-0.09169462547829267,-0.04485354436129076,-0.030333982339335246,-0.07192351471152429,-0.0162711219583404,0.03791995782626648,0.024792895116114586,0.032057497677340265,-0.05215931077003721,0.03255612288968129,0.1243504401041748,0.02062946112601161,0.10510684676563575,0.11882483026632862,0.007589042926886687,-0.032414899426971705,0.001911577812730708,-0.09402339709373579,0.031920081466651484,0.029178445826489766,0.04585815789906402,0.027870058596211396,0.048100096838339115,-0.001758936631974406,0.019762147649249377,-0.009329074108900402,-0.09948727243743316,-0.0036238573530177486,-0.005424698351414324,0.019696513680545997,0.05851367726726273,0.02553865612793526,0.09272047613969919,0.0908265064048096,-0.08486933175222239,-0.1186511224388592,0.10300503159627283,-0.017728417790766598,0.0164764057456291,-0.04875927794502961,0.0018764977232417163,-0.008960276742044063,-0.03278571520869053,-0.10643023666700857,-0.1308100946199602,0.015871701342952443,-0.0058230196499541595,0.019285872638145435,0.0697057798062281,0.08830789240909513,-0.0064793708660610665,0.10034628993851023,-0.058512813979571934,-0.05445282457483649,-0.010776188009478589,0.04058391668876821,-0.08326578740917266,-0.0026369389100357075,-0.03790462955987689,-0.030161603547709415,-0.04409954087212082,-0.006460545629130412,0.004947907485389975,-0.011968660599666399,0.08456301348407472,-0.08384872931353168,-0.011609505298035633,0.020484037479405703,-0.021994816040266405,-0.16270416594957607,-0.0003848032116752787,0.0452534345326309,0.011802020687742693,-0.008429310031877501,-0.04771396228378277,-0.06770852172005323,-0.03826816267369687,0.018481029354179224,-0.008510233433801438,0.016153513981692798,-0.029176870393667655,-0.07773388958710116,0.0430428599747692,0.05426518375949103,-0.024664252272256458,0.05504988951504046,0.0004129699399730481,-0.03971204727681897,-0.06605842352921464,0.06735052700429073,-0.039496747716962675,-0.04420003644863178,0.030952577824370168,0.12887954183189024,0.010666324093043812,-0.00987444254577466,-0.08643390475273306,0.08382302206572077,-0.008848168971173818,-0.05631635509241017,-0.03702669050385541,-0.06441989558257041,-0.06124573334095857,0.00667976969657954,-0.03986228774398069,-0.02472541168319165,-0.021619319766804205,0.0310979269742283,0.08807367515548546,-0.04710467602217096,0.005551961936711924,-0.010491475436872944,-0.09977068647521614,-0.0644811041125864,-0.0033436701015509733,-0.07939243624857234,-0.0616895558042568,-0.02902175413660449,-0.04011336938945732,0.031029448603261615,0.005069782582789767,0.11249943093945305,0.0676266931380412,0.05967998294944817,0.00705651068636145,0.0009958702462566367,0.07172138858141634,-0.024465697885078658,0.03341904730052269,0.03378367404708004,0.02277717252192985,0.09661713373632065,-0.06158806304527089,0.04078424152028008,0.012695029443934403,0.0017373665970189178,-0.018667086259671225,-0.10424989947736583,-0.05650410434166147,0.05547030059005745,0.0041904352064389,-0.02336320958995606,0.012986296436398094,-0.016257150069906412,-0.07115085344231588,-0.13961620190546312,0.1650302099959152,-0.012303346962755781,-0.06534146949806836,-0.005182519687499682,0.006290223554125585,0.1722124936867784,-0.005524413631552228,-0.03734409456003023,-0.04781768355429992,0.05206332223628448,-0.04448532682703329,-0.032225607842943246,0.0469102810544992,0.00016881193697923508,-0.006925734150869866,-0.02829414238043481,0.014757280733623696,-0.07298386975675934,0.019305496625241596,0.026364795646124612,-0.010844998419522736,-0.04366734415021062,0.030359858050355,-0.023587317033310382,0.01866133150805565,0.045722264047272074,0.057251869720019895,0.004780618209896549,0.06851779379535725,0.005101256882418948,-0.04769958300675112,-0.08130758427575482,-0.042149749612461464,0.0012931706532296953,-0.0310877406687383,0.05841930310193164,-0.04112770430851548,0.0019811791030605987,0.00437813131575272,-0.03594539248050665,-0.05144344662566697,-0.02845687925354569,0.02866549759143288,0.02749395455346204,0.02461188671681727,0.01750827142146171,-0.052840264026820086,-0.016924124899477463,0.13502699333318,-0.04443879104730945,-0.018236559926072215,-0.07777695304462116,-0.08627584335406074,0.03946369706679737,0.07529750166872101,-0.020397821620288355,-0.0644384120214031,0.08457408542552408,-0.01639444243203295,0.03949554948120587,0.010955981243463656,0.1557307752023596,0.07308184169035314,0.015050875335915925,0.02545518587969541,-0.030944990987199307,-0.00986176003652684,-0.03192299030951521,0.006403968386680695,-0.05877423000718131,-0.03258522912964216,-0.10501798451715039,-0.005622358778062952,0.004428917386409931,-0.012313180586986843,0.026554862827846734,-0.051596764123302136,0.051524139486340395,-0.06404654105402376,0.015138770909251916,0.05548896924722446,-0.1125527083399728,-0.07424078173099065,0.061660458537070625,-0.016850601549826347,0.04989668730205727,0.045798103457735675,0.010998696166717106,-0.027870692829954895,0.03888267489229764,0.09369449943141948,0.05542522690324318,-0.054800140038791134,0.047410837849974,-0.056077358126727934,0.05589409915265507,-0.056003812915469416,0.021830718654654004,-0.06617312954776071,-0.0016458203986859552,0.008708552251405368,0.014208277840612363,-0.04083831143935028,0.03304775332032465,-0.011465988940874734,-0.04373656932471176,-0.03847105648362092,-0.017580860058234404,-0.03545652845097173,0.056698634829253816,0.02922780323980477,0.032549558941820766,0.05304202844269701,0.0822051196180553,0.043417431681235893,0.02630918846879657,-0.021763245384733544,0.01486859219646729,0.06270475878721585,-0.07354531641473806,-0.070933254828767,0.04737341284739745,-0.021686147825553913,-0.03427946469750138,0.009624170943460877,0.02944898377894797,-0.04716996085203438,-0.08450727811060539,-0.04092181488346672,-0.021882772943379085,0.08276473068861323,-0.036029562062180186,-0.002291497367706705,0.05127856927409885,0.008452172875869251,-0.07716731775673358,-0.05342509907350547,-0.05194854464133311,0.0011839056874607158,-0.03914403902053153,0.06922815097434265,0.03149068409636906,0.07078583226119835,0.012900256500897893,-0.023701159523927644,-0.051589023254268784,0.01551920730580657,-0.03311396795833673,-0.06396223645360746,-0.012068105040348224,0.04312226619377753,-0.0358484966433719,-0.07814664909607204,-0.047743681871788866,0.06300921935901747,-0.02532133255703781,-0.0036902877392102173,0.01590407995241711,0.05099878400460407,0.03397383543993638,-0.014223619122147677,-0.08361144605812226,0.014646860835160012,-0.03646240235593725,0.1344283361492067,0.0975070976495513,0.020555416664317896,-0.025843141789690882,0.041546091387474914,0.08779745602527173,-0.07159220428148186,-0.06379657472602317,0.00800645266986113,-0.04441319662450184,-0.04466112190002274,-0.03843416474780679,-0.03766628503879072,0.017978568934705272,-0.03510169557538642,0.11395540056372062,0.025697036012271166,0.014990984071702667,-0.08097599832763373,0.051626493473249636,-0.04914187099306993,0.018827102035910787,0.046083977162446776,-0.030154071808873487,0.028938041758405933,0.04372298965376059,0.01126087431933645,-0.06664188870915327,0.04091200503913842,-0.02823471205121029,0.06472851154494488,-0.08067111263516294,0.036137530721348815,0.04189308995405864,-0.016789418570067546,0.05222326741828642,0.005577242077790568,-0.07010591108298984,0.06018191616188664,-0.0398162754043925,-0.025317523555123855,-0.07971324950644933,0.08043286981042806,0.12219308553364766,-0.09574731172678576,-0.06424239942191132,0.0012814184889825206,0.060528381983263845,0.06953178762626361,-0.053191767798190105,-0.04661272945762368,-0.07934964510813179,-0.033093518905038526,0.07852871394401162,0.09195386776898429,0.013099734651632583,0.0727645702231937,0.032962968512419116,0.03144762070956094,0.029252843146956923,-0.09681067583258114,-0.05387463514410339,-0.0428071222370964,0.005207410799135576,-0.013891468542057852,-0.09420502522736196,-0.03322018029824811,-0.05794107197713146,0.0875099503409894,-0.043700720166529365,-0.05529695924848954,-0.07114093819452201,-0.07356658475767613,0.08212704021163904,0.0025120246698742384,0.06159479577596862,0.11234602846397397,-0.030939417394272497,-0.041484278413710385,-0.009561230029929578,0.020907910755164343,-0.015112896972287336,-0.03644641353794347,-0.02152316524204497,0.0028571475072978214,0.07859211004825051,0.005206077150060797,-0.011258364195894864,-0.04929936045913372,0.008744808147474442,-0.03271350687844597,0.051700079435822305,-0.027590606883310907,-0.1025129827377195,-0.08582380215194503,0.03307672441109194,-0.05295960118570102,-0.011999483747638396,-0.006170432270408975,0.15493323015081326,0.042337227152798876,0.041892696612324795,-0.012047278616890695,-0.016916167953409045,-0.02420209378994084,-0.03962961881555044,0.046677526745988566,-0.15431594039903485,0.018599798062208177,0.056364467137741646,-0.12024803739948758,-0.0011945333596644918,0.03410978933071386,-0.04698543224004934,-0.15141281238901286,-0.10915817142749655,-0.11523170392857009,-0.04930251992382521,0.08795632383879318,-0.015267399306382774,0.03512144962758014,0.027610471063138183,-0.05540942345333228,-0.014490574798280214,-0.04349382015307023,0.00480592652408537,0.012525405815692647,0.02906081768265963,0.04534681515857963,0.05349828402063686,-0.0080026230165704,0.0808552486184991,-0.03784273735419047,0.018854988807334064,-0.1384012401162356,-0.024849832609548574,-0.05809956469159485,-0.015595809170058823,-0.043920619138408744,0.07045348266219856,0.04893925032787474,-0.043158845020412964,-0.05361243586195272,-0.06939888746360062,-0.06983885746861815,-0.09634997925426408,-0.05493047427239759,-0.01660488394373318,0.02162090496487222,0.08688264822342322,0.13150916190446774,0.012938967130785592,0.039382295970059836,0.013457412446465774,0.027427023917264662,0.004650708572913621,-0.05512728361674141,-0.10684964407160638,-0.014405042981451635,0.014745556466888696,-0.07156889935654122,0.10586236384345417,0.0605773024002426,-0.038571306252800426,-0.0016411116565272438,0.03386257506530027,0.008112049995003992,0.047416872563855135,-0.09501349010902387,0.022287557017324038,-0.07911900934425838,-0.01791228262068079,-0.017926975271055134,-0.011476204433283687,0.10219146253077394,-0.07403397233352897,-0.022758510187797055,-0.012509093298479814,0.006725558393845103,0.0091174249183171,-0.008563128428780516,-0.04899819751377145,0.04724370979565439,0.004205923893134315,0.058101626405918885,-0.05095077268788443,-0.025774990459873786,0.0648348085772565,-0.009394448179471998,0.1387785505516215,0.0471948541435716,0.0010480389385793285,0.04921906866664485,0.03683497970741199,-0.10798439414168894,-0.0024894648543763577,0.05010549210075289,-0.02958230790516984,0.05930280127009807,0.005155286012737082,0.03975379369096186,-0.0011591768818201582,0.01946902084473535,-0.046475685957574335,0.0881749413333862,-0.10039820135930841,-0.0383247991791018,0.08850692521380991,0.03607629791661254,-0.029389787981988668,-0.06443717634558,0.1198307452342519,0.06303282105854668,-0.09062760149572549,0.01432966275819296,0.03163009654314998,0.07544547995609409,0.001655862545453931,-0.0004886013498114893,0.03121247980668337,0.059383351583361554,-0.039635295206508984,0.004526856674576299,-0.06785749877488668,0.03931556831391895,-0.029153757249284772,-0.014551540160352065,0.046412232965085974,0.06525305902633931,0.027476291694252933,0.034240357415904296,-0.0913030618664194,0.040295458362058556,-0.016309109922739245,-0.03323033040605971,-0.05465429522004995,0.02419179625180326,0.048078297935555535,-0.12761641829024054,0.02081325930539719,-0.011913791973509367,-0.03398227500701676,0.048632714756031835,0.03919163113493773,-0.06133812136018864,-0.061273071886034744,0.011274617833586657,0.01703398603322425,0.049003071218813116,-0.0331657805393363,-0.07598973933721041,0.011008921700973609,0.04754689064764301,0.08707614276177753,0.06187318935011027,0.07916820198726067,0.05125732239193797,0.004668363123606729,-0.0031217041188113114,-0.01351278250735554,-0.019524855536034478,-0.08730360356493348,-0.016170591384707427,0.03353183925949189,-0.06952214733462682,0.004633936413387894,0.05209504465236447,0.05430209829293129,-0.08039158597942801,0.044227334047273234,0.06643328448913491,0.06085235481427451,-0.02999554942243445,0.00005743993029642841,0.03716886983472396,0.013546852894663022,0.0397877399553757,0.04657536269464935,0.05321055910563078,-0.009778005337953661,0.11218844527149076,0.015077688036090562,-0.0486228676183743,0.012695936322312487,0.054295487150947466,0.04489694027081752,-0.022190397021082046,0.02466256578367573,0.08731804651464826,0.013643591316503853,0.0070111417361654466,-0.0561258170764795,0.021363399372119198,0.04189979525875983,0.018861430975137462,-0.015830411386840132,0.016117229963884212,0.025538994304302873,-0.015693334033333194,-0.004030707234551331,-0.05043018151735693,-0.01024462671278556,-0.016805797753926075,-0.021030306983365957,0.005337891289802101,0.0121584012721373,-0.03086983243306954,-0.046189503671749385,0.06493044192893456,0.031762380125857345,-0.00009787189071959744,0.08710543375834698,-0.06205319989855065,-0.0012084957867016435,-0.030193139932846065,-0.04338232304363772,-0.08160566328684232,-0.0366567438372426,0.05642831822106162,0.06356669549810094,0.06759606172758308,0.03596932080864633,-0.002602491121366142,0.004956760839741114,-0.06599840220048006,-0.03213623061790978,-0.04058484739606739,0.007405533202964669,-0.019343161148078634,-0.01894739384346326,0.016567101745814362,-0.00925201522858106,0.030540118440706126,-0.08154812329103256,-0.008403736552091612,-0.011930711857190636,-0.026048065392213937,0.028420627330806542,-0.06832204675479142,-0.016116202844156158,0.030728098625944004,0.0015327516540372995,0.03178702185900002,0.06192647922583031,-0.07769473690422717,-0.023636075334399695,0.07164880468473707,-0.044602272796552246,0.0055571130388983765,0.04832388397883837,0.01939265290121039,-0.016335990764392034,0.01340412732136947,0.0016083435681944857,0.0054290053466004235,-0.09081328730587955,0.006643182710950792,-0.12750924578715128,-0.03706533568025886,-0.0046381162132438526,-0.014287805186477981,-0.025132806084406264,0.08260647237182583,-0.06203350751509607,-0.03704660877701053,-0.0007094249115082617,-0.0637539200077886,0.021891456699177247,0.032216907146268715,-0.052501863436675,0.012039677016508092,-0.0473374876710032,0.12472306274710218,-0.00852721920479926,-0.08179874580569578,0.05994993484272581,-0.007582775542404954,0.0243889383953615,0.03464503585711391,0.0012104750926203594,0.04725521542276489,0.004599028628088177,0.03738932444195889],[0.056824889951807726,-0.009134566242147585,-0.07597718595166064,-0.134195955252895,-0.05666592075897031,-0.0031107607980202104,0.09026414456943915,0.07643601022467243,-0.08124982891807642,0.06841341249137423,-0.07992264116332454,0.040415728390613,-0.015492299983331738,-0.05605973245905522,-0.045208009876488126,0.03614653367092176,-0.03299904086533466,0.026846233257683344,0.055597222273348075,0.07017831766397258,-0.017097256394845425,-0.012309282864453817,-0.08199995318977595,-0.03846126356496071,-0.043476777628749866,0.03192927569600855,0.09130350817131956,-0.037327582134449526,0.07676387639436799,-0.03214117159158496,0.04553926048551292,-0.015684547451067916,-0.11938309646755188,0.008268449927023467,-0.11977952382314828,0.011559500030611935,-0.09649465056083432,-0.04791351340278159,0.03217458815889497,-0.04747006739275948,0.0028325427606210917,-0.05822455724146159,-0.03514375057913434,0.03850053699816248,0.027307065782741443,0.09483736169103123,0.013176775477931408,0.059556804265727105,0.023433231881657662,0.04053443159965999,-0.0772435337387884,0.03637552728398442,0.03469835443980134,-0.013254210877722512,0.009839350112843093,0.04686422267733219,-0.00070497560490305,0.030067357929281672,-0.12604183526662802,0.012669009582683697,0.0113539160175231,0.04029078091732664,-0.04491578819690118,-0.10109554074992314,-0.08001543527967893,0.03416797205529221,0.09455066630996592,0.02071898942949224,0.1214951707782014,0.049004270564674386,0.07456654178147125,-0.04176657765911971,0.08405408121045534,0.007840093883721363,-0.004679912321616963,0.014834571777428678,-0.018420745185365024,-0.03307143296471034,-0.011908444725899239,0.048132906656659855,0.02182534065370833,-0.011854923725725637,0.006921568937021572,-0.0947889512090918,-0.008837466015138998,0.03007242258989746,0.02624801389519633,-0.015909094146191287,0.09668913466548132,0.009768156940699409,-0.07171843479435554,0.04722083101928755,-0.0016584323721233981,0.025866538019766672,-0.028652468685609753,-0.06996368275039576,-0.015968348156932457,0.04883876291993951,0.018890384188146266,-0.025359177310777546,-0.024342753986195426,-0.042901016213482475,-0.09629657587746746,-0.07525867233962849,-0.0741189392211614,-0.026313373199164956,-0.032684711185496124,-0.05862347465702216,0.06922262552365155,-0.04976560701882369,-0.025474718256477593,0.06605574391996258,0.009731397567094086,0.0026271243892982453,0.047132276979693424,-0.017019863193412317,-0.10025101222526864,-0.011115524706514644,0.08464696589449354,0.014316673431850222,0.03176434189342742,0.0864583338168015,0.08737457541674641,-0.020435254655744334,0.04995920780959829,0.06691817379377864,0.0017199651496866398,0.053881493739133875,0.06548965214312766,0.08525619497099488,0.06238233585120796,0.07460399834068712,-0.06757748159863475,0.0881827472017166,-0.10436794185811211,0.10894827088370035,0.008191672625610467,-0.012403437524401059,-0.04026137701256991,-0.021503428090238356,0.024044407442607454,-0.03237996491550433,0.02468783498251393,-0.0649538546072016,-0.02868131368911038,-0.007276394067182759,0.12358845689888812,-0.022874187629061918,0.08983073162173427,0.0008456610558966971,0.07828000925225391,0.035265641094953136,0.023939661078750337,0.0201734915562378,0.03683058500771718,0.011279733584169222,0.1582387349568651,0.00830647403671429,0.08756304369094219,0.058453488596639944,-0.007549556241486128,0.09025890186884637,0.03358883655656599,0.0474940667725837,-0.04007449930631683,-0.0038192806533295055,0.05547655341304742,0.03517297953692345,-0.0395093875540413,0.009249214381777874,0.038661772161848004,-0.10767825282266179,0.012915949861004002,-0.017908448438739146,0.02488718339929787,0.09068205561086329,0.13586786771289525,0.0014698573307220153,-0.03800350103485841,-0.018877337919030106,-0.030923161207395775,0.008118756449490215,0.10757416261308897,0.019804739416250074,-0.054381416919676316,0.01609869885503033,0.07530299993047745,-0.023388275934500203,0.047142023731981016,-0.03596939762313101,-0.013073773820869003,0.04014976643764777,0.06270189105916654,0.017024717062993792,-0.014403216643861919,0.045524088989820855,0.10843115406797459,0.09345762505136081,-0.004158459369727983,-0.01951201239122085,0.04451500942315397,0.07321778986053827,0.0058804641019052075,0.0812455875309004,0.10845924415438521,-0.043069685574632456,-0.024107613080435936,-0.007463163524595091,0.020100576320288756,-0.06205656414393982,0.06974068573254774,-0.008194189560697278,0.037804172498795585,0.041569237876688495,0.06482856365541867,-0.0043912850900990705,0.051711816250930756,-0.09913888842525131,-0.09248641902245072,0.030722887792778316,-0.0619549503161643,-0.030704741570017402,-0.05754981505288803,0.041893671157103164,-0.07948516710223323,-0.03341463034437409,0.05334050798328137,-0.0019766060715459073,0.0662845347718389,0.043703723428004514,0.011463956180592086,-0.04484423868096532,-0.05752151025183023,0.028097263679377427,0.007520409367372747,0.07199309555615424,0.056371513774552615,0.06783839517887769,-0.019940368998639355,-0.007109000818535753,0.04918136603468114,0.0004764993075347796,-0.006077116523523948,0.06454000544441268,0.02657285656249369,0.07466152446295309,0.034774921661777744,0.020946079246577168,-0.02409970765248632,0.01188922484045239,0.10263769200640528,0.050235232226525525,-0.011508972643047944,0.02486478948700059,-0.06802415838020873,-0.050792588567648164,0.01990533242816681,0.07993450184176731,0.08053196247029565,0.021158590527678524,-0.02297584963461994,-0.02652468757466472,-0.037003080234866266,-0.018492357468023527,-0.0246623795991927,0.04223482396577329,0.04814129814889154,-0.0338942206274598,0.06905839768857475,0.07270323020947926,0.027710312232526936,-0.07860249472525381,0.0010959168203117597,0.11624025523342013,-0.029247280689072976,0.05162861371958941,0.010448549135091887,-0.043872424772037344,-0.061796798399493334,0.04179530849410026,-0.0017633518879757624,0.038003239052314494,0.015737540932812055,0.029998166735022855,0.14006479427700597,0.018995308487597763,0.01866501602704388,-0.06052189949752971,-0.02313104566625886,-0.0021390621185663006,0.025562242707606583,0.0030952157016612652,0.07862640541280136,0.03022462365234685,-0.01662761287880139,0.07771899445147584,0.05990570553503904,0.006966500517599455,0.09113963273388284,0.01631396748808006,0.04604770443672298,0.1000867661027655,-0.0123734782202128,0.07034541184209736,-0.041353362766365316,0.06864258951323758,-0.0639086560517148,0.01188798214569037,-0.03242681008679165,-0.005631287434745743,-0.0027962095271607573,0.029565695027370553,-0.11103676135201859,-0.09956460963375102,0.015045271884824594,-0.022450285169280697,0.03273460115568341,0.04261061761552036,-0.030173921259875978,-0.11699253901499745,-0.0170377162507931,-0.007216832011001092,-0.13840264591940685,0.04367914495091792,0.048156632669416354,-0.036155809212713434,0.06845981796473577,-0.05238791227484107,-0.01608460634884312,-0.05085971291676966,-0.03539608212635555,0.07006971205304607,0.01687638932506286,0.03316585165383883,0.07210727960711205,-0.07589227032220575,-0.03868947459370729,-0.017877089501743083,-0.07945540126942122,0.045330669284862624,-0.115684513549005,-0.029380989551304366,0.020502513380770353,-0.03416542215483244,0.034164113110309285,-0.018714527671530878,-0.021393335276263536,-0.011375370641821822,-0.017279191620500713,0.05335943492432816,0.045686954571461165,-0.06039432893777357,-0.035262789216323816,-0.002971842754620564,-0.10527849476295803,-0.07143325294703122,-0.04210894758976331,-0.04875332359507733,-0.021473453524259965,-0.01730791103282494,-0.04232472627231559,0.12143223569191947,0.060080551425408045,0.01210963490275499,0.06423315916656393,0.0670118193339098,-0.08062326041929772,-0.06849678068100935,-0.007455688804934065,-0.06024933246957955,-0.1374572914910567,-0.0204576759031992,-0.03602808277703707,-0.06829709993094014,-0.01157710311896633,-0.05022418150289462,0.0649133587243943,0.0772815597147458,0.08437015877658065,-0.03175714516075302,-0.04617131521781886,-0.03900857306054108,-0.07508822276795114,-0.05099296250146465,-0.05404789749201678,-0.06909623887234398,-0.018490990631707883,0.06859499385427548,0.009496642942755236,-0.01921068671505612,-0.004605752027124414,-0.06597369291601782,0.0571533573360143,-0.06699481427678304,0.026354535569210535,-0.003883829587411035,-0.023900048362316684,0.07946986323750954,0.016876109621888454,0.01149020956511423,0.11456821007144281,0.05828332652342876,0.047872908396651245,0.08348439087719685,0.09939709161880961,0.0833791475137816,0.10751517188084211,0.028962087159809254,0.017349529128179324,-0.09723171148473429,-0.05683137347851683,-0.05498168376503856,-0.08341681402920866,-0.004581451714604648,0.022680322306643644,0.017199602130703935,-0.06906918839484999,0.0641980752552531,0.015780568193603746,-0.06303114773973487,-0.005090337472935558,0.0695473381605103,0.08409628302396151,0.0382439834747315,-0.10579894629553384,-0.07083383411826684,-0.017919250647970168,-0.03722473414797291,0.022458683966429218,0.03449810263400069,-0.05000147140085992,-0.027023376408829892,0.01797202308524893,0.02392753274209165,0.09463587400170403,0.10622202953924038,-0.012581110385569597,-0.06929500182442164,-0.07474627824220423,0.001630332675477905,0.05036095074204564,0.06416426099909858,-0.023113269439328746,0.08219725534035976,0.06630982711517942,-0.0019435276003121507,-0.11707947628258575,-0.031754427379137216,0.08103251179093501,-0.023082335516513355,-0.002036440033591349,0.04269230002192533,-0.010154487479964298,-0.010449324206215721,-0.021900310590018995,0.0378369582067667,0.021920383508835153,0.10817211657439309,0.10375360291268737,0.18691023181789956,0.14092845198813964,0.18218833303899695,0.013936357212250146,0.043312045513102346,-0.09176827865867661,-0.0577829401310021,0.022478818831926126,0.056808556298759305,0.019077090251771272,0.1299292693593307,0.0632033236908525,0.039855546096705365,0.06397927048483021,0.05437562248968365,0.06352670993100369,0.10983436761877882,-0.04454033516793605,-0.06833225584186921,0.06761402390563652,0.04251512666261884,0.03564873325056833,0.04425438201252934,-0.016698661514596442,-0.02473944403212533,0.036882366498323396,0.060871944760356025,0.03686984289511534,0.09230458380277382,0.08450697293192631,0.1650582208372198,0.026339494051689148,0.0034507678230006984,-0.05822679472688234,-0.04596062587867366,0.04073911911389078,-0.04256492568853943,-0.046462886982778805,-0.06641550869839624,-0.002881605422021566,0.08248593538586078,-0.035302841085049816,0.006035159820502831,-0.026358620166772723,-0.038887754290055365,-0.016864578076577225,-0.013901138267236308,-0.01664671805749839,0.027396963229337608,0.02221539177145562,0.006517401965538032,0.003115271059052016,0.06896989785813186,0.09536368421680144,0.15445914341266392,0.061260531773160314,0.05538556143880482,0.12416986447254144,0.03550651885099368,0.0651009789375977,-0.03420539219938744,0.10727540405673905,-0.01183387947821267,0.06451493306223065,-0.05239927815291906,0.039040027230200065,0.024222391404643953,0.07643674321815677,0.011683953527897651,0.02056168504589163,-0.02539115136786646,-0.09188942326015635,-0.012699541416690066,-0.022811402471524356,0.010908584004162853,-0.022911672926522075,0.009213251692107929,0.006858297267706563,0.03740922702409218,0.08101222643894286,0.0633557823512717,0.03538787692359406,0.22927594079653685,0.14148792461466875,-0.013624416560802786,0.1070078765177304,0.11244400520275004,-0.02194985785182856,0.022600517661463457,0.0031682976684099013,0.10242523057252602,0.044639268127433955,0.07351932404057865,-0.025694680218006357,0.11943864939649668,0.1460939025958157,0.0415132567621642,-0.02512420819254895,0.053356952656710116,0.005174582943374259,0.018611897506792572,0.1138053075168875,-0.04369354655314068,0.046039961134524826,-0.027220058647133772,0.03972523263671546,0.05342477345475308,0.09735163657667524,0.12020443298728017,0.05581206258718908,0.05433752602662422,0.13244530759552442,0.012632687813665463,0.0029003095061583095,0.012095533534101977,0.050383586994135504,0.021491402499596884,0.04762326602393573,0.13354739047861844,0.09753697254568493,0.07010559513615368,0.04650585781159327,0.16930150343541414,0.03761636815490537,0.041866971778703015,0.03242717567464187,0.024531079075007834,0.05807458994549787,-0.037522916885692946,0.043749867575517416,0.027240438321960568,0.01672635728466337,0.13464011662708394,0.04050833139119543,0.11697905671218778,0.003382050356821149,0.12328996696178834,0.06933488887287359,0.05119999342298413,0.1310472568657667,0.030724352633209093,0.0926853355691009,0.03368465814197061,0.04912098962696429,0.057981161442044946,0.1126282203613644,0.12700189001789625,0.10191089489959142,0.08075295026277962,0.10698484139684301,0.07240790303264452,0.0024591344834964356,0.04736195282129179,-0.001823092340281062,0.025085024627974094,0.01265021721290318,0.012007569956289823,-0.016927410079773112,0.04254829079764862,0.009663479719560544,0.0006023143603698867,0.07545203753812516,-0.08885191054391194,-0.037989069655812606,0.05316065507807474,0.08177323080856004,0.11205413495409515,0.12864497496906366,0.05617478949306372,0.061494341756693854,0.09989424076024744,0.14305088899579077,0.06503456100727589,0.09533805892668626,-0.0130439389315067,0.09440230120124392,0.1195974339283666,0.04358012651381131,0.08771137434997267,-0.04369700391766591,0.007576057766070244,0.04635885491998306,-0.07543770363347398,0.005280171459761043,0.07470402940190116,-0.056326647164118636,-0.07517437308507374,0.06223456384667585,0.021868590449082077,-0.004404290452107692,0.0447061367541939,-0.012265659704413815,-0.024112586604209528,0.05418958711288196,0.039393010103596124,-0.08930444680528499,0.0014217937723002714,0.16696552828120273,0.07922637530280709,-0.025309928735658255,0.020601565629979845,0.037976263933726405,-0.06403924082520944,0.04827912930615444,0.007428276208182367,0.016597748858813082,0.0952520831425886,-0.058042906914137736,-0.08630120798761517,-0.004539676403946047,-0.08142031213215804,0.016061502737640454,0.022799891843105848,0.025143832776960178,-0.09768770690280147,-0.06802778310185727,0.03607942862317879,-0.022467166305140316,0.05095709742056873,0.042115402990488805,-0.0757779108958331,0.0490411298195265,0.009562397782365133,-0.10825396959134886,0.04317412353872046,0.07014408778397765,0.01533586809113538,-0.014924112243066013,-0.018594519341582464,0.03205461458203827,0.03977110271529922,-0.066529194855815,-0.023920001655318112,0.08411024142756834,-0.02178834127829156,0.09650417523159273,-0.08503222345990996,-0.003536863539949663,-0.06801057435865587,-0.08822793452466744,0.04748155940076783,0.014723816704171763,0.08266397840927328,0.04709577205508305,-0.08211027830292086,0.00417485194197351,-0.03332324127235283,-0.07490340068445646,-0.03021281050953222,-0.06830986378824132,-0.043652849730953486,-0.144030806130353,0.05491658737345862,0.0008113141606431398,0.01869423184897981,-0.08171455064957503,-0.00417591455964805,0.008706727051402898,-0.11299828343010622,-0.07235002648465003,-0.035220638304623415,0.03556281795203824,-0.025279791844963612,0.03892260649169159,-0.0023780430837046515,0.04540859137386957,-0.03993664365750879,0.007410301237844691,0.09809379893605163,0.08536354328312463,-0.014196018760740831,0.028098205412175496,0.08302020760840931,0.00598196282720761,-0.0232091225223671,-0.0993917461811772,-0.06301438056563498,-0.07821122248919508,-0.007753840989993532,0.09277495791372141,-0.08837420480195815,-0.01969393100675751,-0.024859254671917526,-0.06125093501662131,0.02034936119867184,-0.02647738955799833,0.0003531203779499994,0.00016758586217805818,-0.0429957426887558,0.008174624700494678,-0.03774914095447007,-0.08228148640253634,-0.01693113098286913,0.01631293856528592,-0.0015417954304568,0.05238831950894621,0.0055767014361842275,-0.07561861878800862,-0.01767030367813396,0.061865926594094615,-0.016749111940203936,0.004544001356876473,-0.0236083890067315,-0.09184569384123582,0.006632069887777527,0.026111284965858104,0.04827508123486897,0.01914045572547189,-0.01879687987073339,0.041497179349898994,-0.07634994509003008,0.08936784257398646,0.051831834897681894,0.004921010343414311,-0.09800436000431274,-0.002684365692341318,0.06008409922008173,-0.005477346272989458,-0.03132343046085181,-0.022134092914347654,0.025061357668841152,-0.10234090445323209,-0.03811141145063142,-0.01639668754981639,-0.04745134306952445],[0.052522256035465245,0.006026855708139653,0.0005165026386164864,0.019177327372901978,-0.02011138072511408,0.02423533596462628,-0.05185740286900986,-0.0031082105027930634,0.02728482894636126,0.009893149035864164,-0.0264784965475859,0.019539270473810714,0.06625789097701987,-0.004641239296580514,-0.0024653435043820193,-0.043682526032912235,0.06371737863763556,-0.0022857548732615183,-0.07780896074886257,0.1012832940079315,-0.013479482363560192,0.010565344322828558,0.057827617673006884,0.06344101721689152,0.09349245079654105,-0.02261474692052391,0.040136887727505746,0.031360465212248105,-0.0016624975285463456,-0.04066689097399225,-0.04484585103340173,-0.07224532895439739,0.03517430948318666,-0.049150013030934865,-0.05166961240574325,0.03388387263165365,0.003634835772342224,-0.10177894798520729,0.06936635022249997,-0.03565250159879099,-0.08235971643443038,0.026144622155690952,0.052021188282188435,0.0927678752300105,0.024449034183920422,-0.10423984880422653,-0.04464815603745957,-0.027854989458571486,0.03186910175861109,-0.09447873011782505,-0.02945803335652945,0.002857242386367989,-0.011287731317529902,0.03798040541437681,-0.08560688115919225,-0.05697466418387441,-0.11051043310544222,0.039496925314283615,-0.00012311146159513253,0.029593271880390952,-0.06185147313551042,-0.0352336698052853,-0.04270843092843303,0.03477609766950908,-0.014515550467099863,0.008629543956475276,-0.050671752111088667,0.010167727898729658,0.0008220795836709879,0.09543377740602159,-0.042644767973632605,-0.00046276432034174386,0.028021205533010532,-0.0786696029776711,0.04334470596561706,-0.06295043889392733,0.10239031053157492,-0.017954422117192878,0.07678206120522553,-0.08694235363260526,-0.07408476398430286,-0.01727770665523074,0.07381729953030301,-0.09489827844399364,-0.0687279966440669,0.12273971284328153,-0.031632620005698046,-0.02594681699868512,-0.094484060336806,0.0013021951597713374,0.015502182797688037,0.03527142904973427,0.03818658368048554,0.05508731479425687,-0.06801658361736215,0.07169394937350135,0.033883741934338664,-0.05145028317374741,-0.172734020661709,0.022370380672885392,-0.04325291035760721,0.09967710004956849,-0.016558527657847915,-0.06376643056640731,0.04853386258644311,0.017274462657004927,0.021688726545041774,-0.003507624181563984,0.11638418468679683,-0.04913944317404639,-0.015050624909824806,-0.021684551115126145,-0.0756534188565336,0.060383842411510964,-0.037119641134804086,-0.023131176560062177,-0.05296489270444852,-0.036472022655611905,-0.015377087784252447,-0.03083981903369305,0.003414793304524461,0.025233565234194216,-0.04277286694825009,0.0244246678959605,-0.013842314900420845,-0.08234566031050984,0.02553591030099766,0.011647106766002413,-0.04464918109109188,-0.041175756898509386,-0.07878873629895491,-0.08161281947308167,0.0014765348683482493,0.09489511695124592,-0.032223051231412725,0.055564715615640775,-0.032211113489908544,-0.028796629398763672,0.036454659580352135,-0.046183775124609146,-0.058108380534535736,-0.06967798199671761,0.07019659289294401,-0.03990154942464307,-0.03807163659830845,0.003352092838189706,0.0337936327199584,0.08866142426153686,-0.0019891780179134965,0.002480707867439886,-0.13877556370372848,-0.008280703724407328,-0.01011697014219731,-0.1331687876761604,0.008604226745724223,-0.03103556845464807,-0.06241368009709857,-0.06801046570334515,-0.023830173721983608,-0.02607765119149553,0.0015245462090335844,-0.010832314595544132,0.00019009539566271908,0.000190596873785391,0.04330893640913921,0.04105689423312804,-0.04740180863747248,0.04462518240601442,-0.07778811529861802,-0.005044549892354913,-0.025874492949408214,-0.06868881312494819,-0.0432752540815391,-0.008267444336673022,-0.016033305967834213,0.02636118123244363,0.03650541423377545,-0.0671773333055954,-0.0076121981714661995,-0.05516048453425466,-0.06613424905124117,-0.04544564679321768,-0.060583397230826064,0.0054750787150362225,-0.03036356849336599,-0.03219219523982474,0.018724100619607432,-0.01862028023698246,-0.034270514829643994,-0.027572256192455118,-0.04286647170678897,0.01622034222660772,0.03918838558778248,-0.034420555368352826,-0.06918884367525154,0.07753515005466548,0.0014102993358625622,-0.039474332884497934,-0.031560007806063994,0.08281827924388888,-0.05029634941364804,0.02295684585926648,0.11226728280701088,-0.07976964300488004,-0.043717494407483244,0.01041727254331201,-0.0493151488867741,-0.08901916079356131,-0.018337051655455516,0.0026865974037100135,0.0020919592159205297,0.03208664702176103,0.03221674081861389,-0.025289017444808028,-0.019762705159712575,0.008592782972783401,0.01984760421146937,-0.018619568995652383,0.029845777710290015,-0.06257921212899767,-0.03422580808639618,0.01707055847484905,-0.05111839767828916,-0.02212121016384267,0.03537283558629873,-0.019732238830976183,0.05346376927950943,-0.046855622213052325,0.03196605200984628,0.04041108272797762,-0.07156600537215145,-0.05187035016091341,-0.08102763235422551,-0.04487564220740278,-0.05374877163568427,-0.010192276496846439,-0.045927835987803894,0.06414053030489661,0.025448123877550955,0.01758970957165547,-0.036985285750715066,-0.01452615013103704,-0.07534718288319003,-0.07786601876537468,0.014489682834185088,0.022373067854102202,0.013051860789283583,0.15630469381624162,-0.0009245710236584171,-0.08467842806216082,0.042890421983702125,-0.031161758204871663,0.03699744138159932,-0.03518098246497898,0.012678939317635333,-0.06560779598429621,0.01222530268204781,0.025919009428750032,0.03226266274775911,-0.012897978956308665,-0.05500598407187062,-0.04211620644091457,0.03928050097273917,0.005627506742252,-0.08688768400284622,-0.013031644134570966,-0.0033917190431364736,0.03209807552597452,0.045949910147701896,0.04833479708475813,0.08575519866775067,0.04261402266257702,-0.0005264831362530766,0.028094912097823516,-0.03126713722384971,0.10571281459461074,0.02011400622841524,0.045548225874262015,-0.016118717319322472,0.060165593717683576,0.04460377757095751,0.08061869523295388,-0.0862142380188552,0.04548335424084415,0.05819067741622635,0.05411905731229391,-0.03849435324552963,-0.00572020464097652,-0.011386387275995257,-0.005827969826068869,-0.09293677530090015,0.030519268066286572,0.01871685559180268,0.06869051198449537,0.0796805188547535,0.0747814362521661,-0.04808743643946209,0.09551899988356295,-0.0034694812015213044,0.0017087961944614138,-0.13469170680920844,0.05922456813357522,0.0004796634158014058,-0.06320171162609785,0.09781638270159418,0.02038452400599046,-0.035052168159273395,0.08158230539964594,0.05239212349350735,0.05315204115464017,-0.01630478249860215,0.001503565734535316,0.008316000077479842,0.039321678131644486,-0.03600162632344355,0.06954091582713734,-0.04229865040471026,-0.12680001339204555,-0.02755562219627001,0.03511136640603255,0.1313603825518815,0.02876767627989561,-0.06331887934908755,-0.027104405769763026,0.014163378144197436,0.006134067786639901,-0.055296276554506495,-0.0012725557946817523,-0.043921805313784555,-0.02758715657517594,-0.045465738175437025,0.005077497668272097,0.03765532954716398,-0.06881557063676726,0.0017891997908101288,0.08428909872938657,-0.07511606503588313,-0.06699795890809564,0.05764094249827582,0.0202718412814845,-0.03221574227827719,-0.03559260194940485,-0.050328330314052386,0.02691668991160203,-0.005625572012918753,-0.014629119397234602,-0.001974228990853287,0.15243439862642144,0.054393729091954106,0.037866124486187425,0.04558687288381178,-0.00827142538135556,-0.04642465416757849,-0.07289463324233458,-0.021307666276100496,-0.03097685022808319,-0.12356908778728432,-0.044596683229353694,-0.04086761977992028,-0.058635844546288035,-0.04321429117609095,-0.008329299612317606,-0.009906555120834912,0.11488521539585551,0.028550221752446762,0.04392789341886,0.07516709841255265,-0.02886957862365017,-0.06814887438646236,0.03608039025060977,0.04001776796186,-0.010799968420578817,-0.058923275781824325,-0.039089329683231935,0.07230721844743028,0.09205797566938281,0.006474875356253824,-0.03865930163833177,-0.001141824874432753,-0.0017763552570033252,-0.07760003840687164,-0.07835839664102848,-0.06229763485993152,-0.002296133475208423,-0.07699545538914414,-0.0480285248490396,0.05225070550451996,-0.036140785049388204,-0.029581283303817915,0.07044460863773075,-0.06726274742145838,0.00936779846696465,0.020494360483935763,-0.008414123960132035,0.012055163129401742,-0.01592361147919971,-0.05546421642051139,-0.018843821632592267,-0.06023698990905006,0.026123294899993113,-0.019695312989207407,0.012339627241994965,0.09901525943191616,0.030655544163964026,-0.02827186992929678,-0.022043030696965,-0.07089543522837333,0.015308338133443818,0.05412144327415707,-0.0381985117560068,-0.004138974460446392,0.010379591752513805,-0.03934644331146572,-0.09070564257912665,-0.041216427597782594,0.06423772224970407,-0.08114621124668456,-0.04254887004824265,0.06678009266905052,0.01750713963004792,-0.019793986004350457,-0.04245917853250975,0.024232686736221722,0.005401243980951964,0.04014521925637803,0.04485527420119262,0.07714333566366731,0.016792156591874476,-0.005770424545368833,-0.0035503973935545946,0.13182980780125364,-0.017445807771964594,0.01770418960995479,-0.007496983148635799,0.0792582498933045,-0.029726118393960662,-0.005106118242113615,-0.018339685410256823,-0.015617505509774357,-0.0013883142042956007,-0.05727077239366845,0.039327667297429675,0.017770505717370443,-0.05396124676063323,0.05335841151069811,-0.008849417653951275,0.11062875369990327,0.012546052217111416,0.06397578332813288,-0.036491143877641706,0.002600707843582558,0.027639436482398645,0.04068704949089027,0.025908078203539117,-0.05032984645792351,-0.08140723748076316,0.045796370534583644,-0.10179520584483252,0.05976934405271952,-0.026034134387859738,-0.005292014734022895,-0.0006370578683201003,0.06762369912199725,0.04653396789198012,0.059854716401630426,0.02225455869832426,0.01913956918807785,0.02001073599724663,-0.053988152056345724,-0.014631924798075605,-0.025756440226354458,-0.12505101516932365,0.0021300678869943194,0.025645497513940775,-0.04126565111807643,-0.008659851889349996,0.01692691094905336,-0.03274493589403725,-0.0476359273446647,0.03072812170904018,0.04668431713957928,0.0466870935698766,0.025361529658130898,-0.06751288119328414,0.01087247071312151,-0.03585158175419271,0.039052996762854605,-0.04097442585759678,0.07057996264556865,-0.00010719362303462496,-0.05485333770907921,0.08729007073813926,0.03209400442469596,-0.0018779431725436894,0.03829185893433487,-0.02821036376616383,0.06759451734325632,-0.04367374003393516,-0.13775978144881773,0.06266292072582937,0.027245950542750818,0.021541848700926583,0.028499310338389268,0.009122843084982075,-0.11091704424403892,-0.042153608107792846,0.06994955516563175,-0.011143365447706386,-0.001284410757321044,-0.013611411504905848,0.004894382876726806,0.013775169547900904,0.02985559490471739,-0.051891324368198204,-0.027258118343285478,-0.010186783917772014,0.019171140335798923,0.052132667980983344,-0.025798803024772082,0.1206447972931788,0.03385354006967992,0.05965194472278587,-0.06261049571977685,-0.045280264505398925,-0.08658545313172819,0.022633069836395864,0.000052137706118001146,-0.029917563231209313,0.004945455415153304,0.012425920381284542,0.06441099397109998,-0.05490814825473055,0.03395966674110735,0.009745413814684347,-0.03292478223290485,-0.00840661430134462,0.041683061798407854,0.055734730709516185,0.02806718474278537,0.12266417783345744,0.004766335024867708,0.10122168155099237,-0.012413265406139526,-0.010682708823654076,0.05236336647837458,0.04026456200675527,0.06420483860187971,0.03370116134907393,-0.02923387219090393,0.07764191863345904,-0.004552079460025284,0.024515992222374054,-0.04222144144433587,-0.006234266459452991,-0.08115807454570113,0.04469418893282396,0.020010566211200762,0.09444812917594855,0.08444573211340532,0.04389826411146104,-0.022354717332752433,-0.03152972326201333,-0.015574893641659008,0.03294859174353457,0.020081519241772424,0.04414294866085324,0.054427075579393386,0.07047894773903257,-0.07576389568446243,-0.02688157670677514,-0.0407813420443894,-0.0792226848999979,-0.07672780794789082,0.06634210361440707,0.07050001851877558,0.022548170660957382,-0.05261768611572213,-0.019481654103739806,0.10258732180574458,-0.016756550148732743,-0.044351913145470705,-0.15741224087092753,-0.11326307944442468,0.015040403673109116,-0.012813073448181325,0.002363208975925951,0.09629127848887645,0.04918807122683602,-0.14670351301760576,0.022323112825483018,-0.021631307191529888,-0.002469814030611517,0.0030843380502036974,-0.025432138650632978,0.013135832684823316,-0.02654473826655594,-0.032325792282501445,0.013838971085849378,0.0325846089678714,-0.07184821437440692,0.08260606258741923,0.016951124200642133,-0.03864913370875208,-0.019697296309326137,0.04293562110391767,0.003199778678726734,-0.012174556454758751,-0.06102658383739345,0.019440600276995647,-0.1127936614058199,-0.045875012207242556,0.04124632989287032,-0.0342679066648385,0.007123115291387345,0.013929917523557033,-0.06098437163556754,-0.05548566608161958,-0.03577358538214578,0.011464222302065778,-0.03155169909192984,-0.045330146875707154,-0.06507510093283717,0.053487629488625094,-0.034780219077395494,-0.04834388906084033,0.09338405505703684,-0.12603712194017747,-0.05438905386532593,0.020629799433177366,0.09754852132885809,0.11737989268899246,0.012282745619051596,0.06611812243844588,-0.08908799450573313,0.06943993452942945,0.03509271111341588,0.021815527254508266,0.023920680914665746,-0.1036403943163596,0.024749458814075385,0.02706752714672126,0.0037888389829498353,-0.03926914373876559,-0.010715644767399378,-0.008810551536044731,-0.03370995962907357,-0.012468030431266168,0.007882593491541417,-0.0156722396031356,-0.0005770865552142273,-0.03368805215712323,0.044640868037864295,0.05043690475977843,-0.04352657878598883,-0.04262623377959258,0.05530935094077781,0.04485959797677524,-0.005081990652187994,0.004530199877843919,-0.06469104357153556,0.019941678514370478,-0.019680513218663983,0.01239449606252326,-0.04381163699400192,-0.040806191454860335,-0.04851776758500361,0.04233611680686088,0.0436127828640253,-0.00641576686883287,-0.04717823490745115,0.026136001321436876,-0.00759849008430439,0.047206908683672666,-0.11806600024179889,0.05541402124383733,0.019761995310569682,-0.026636505386514842,0.04136389215826155,0.03671444402972446,0.008102488129270384,0.018159972672979835,-0.020235783085566124,-0.003299012581386871,0.009743909105090796,0.06239653174987217,0.05484340278659099,-0.09957661982593714,0.07315659344496052,0.025766449935556525,0.01038481620652859,0.017332933462642634,0.04672274153229563,0.05079197373560581,-0.043038597046583714,-0.01169619258552108,0.04900702832294081,0.017473340206074807,-0.023771222143953434,0.06774222093729686,-0.013058544867164408,0.03485686974613761,-0.09744979553810584,0.07227183342989091,-0.053723200484084875,0.04075722465653454,-0.03776347163734712,-0.05791512785622482,0.07361047859596304,-0.0012747900925132833,-0.007996531076720426,0.03697669115967732,-0.09397348970525045,-0.11127527609582855,0.07330242823839407,0.02094881052844869,-0.09209672727457018,0.016310806636718713,0.07392492190561883,0.032802934851758274,-0.04548577847082259,-0.009377527937422636,0.1453801739216803,-0.06102454849430536,0.02995894545295392,0.06954298427508136,-0.07795974656204875,-0.06322816870747058,0.0982577354829495,-0.005032313874733665,0.055790904180863146,-0.059157793654994704,-0.012228967843213444,-0.08958995919798805,-0.041099180616583984,-0.03353297032793919,0.02644279211194305,0.07953466291323179,0.0476120287539278,-0.028709262820099172,-0.015176250660593534,-0.02855103418081651,-0.02695725361187171,-0.04582025390191351,-0.032261111007731186,-0.08513340280026344,-0.022464246766418377,0.05031163098551736,-0.03464258773549553,0.06528721084172151,-0.013587362294812968,0.003525631071816954,-0.0046715314075546155,-0.08040896362710517,0.010346149197451675,0.09640633618932602,-0.07655705900499703,0.009266458710279337,-0.014989019021446375,0.043841807717653905,0.026761993224504482,0.011068080365120306,0.04079327874873129,0.04065754713893471,-0.009272564263266654,-0.03530069034513905,0.055587939954825416,-0.027419366793520382,0.029909254645879887,-0.06140569118126556,-0.021962675360949042,-0.01667785352711164,-0.07379280648568261,0.007663307448750999,0.06220708340817473,0.051317077076111245,-0.008273826022770318,-0.021360109663428814,0.07706642416935396,0.024342803519667597,-0.03946522500664526,0.08031001635163072,0.03144464863562141,-0.07818762224638909,0.011283342392368905],[-0.023145964388551033,0.07952913167810657,0.035507772718638475,-0.00023660127707119232,-0.036177463104623324,0.047333671530447555,-0.004892133804726499,-0.006141393947585421,0.024428171603828062,-0.03891967682699551,-0.01992794545744035,-0.04313675232258802,-0.07487427784363783,0.004608083856672623,-0.021855951048319812,-0.002818778820156282,-0.06726811502071078,0.04146104999373321,0.08451110560527901,-0.09645020040411549,0.0747307247661848,0.03534220595509227,-0.049919411529782326,-0.035670104924088335,0.12248429786321165,0.022201004524411434,-0.05631871658388233,-0.017663749079570756,-0.07385319848383284,-0.04712653320298511,-0.024813527067715176,0.07582255189330614,-0.06078498018250454,0.08762669986699669,-0.09279256537259667,-0.1063271133823678,0.03435256031340752,-0.0325215784390681,0.0991772247855441,-0.02901622699871228,0.048560738309769556,0.049923884925863055,0.0648363225811098,-0.07578063072565595,-0.10387177552087692,0.044517219596246736,0.02363876890672606,0.02397488826097376,-0.08684889852048816,-0.07808714761908857,0.008086315459309427,-0.03664856445921164,-0.0033189479355933823,-0.021862497689152976,0.05256872696663728,-0.017763327261996517,-0.06921379821436638,-0.04998528378351873,-0.010643574812543924,-0.013109386296417603,0.014817831508565547,-0.04840939651499522,0.03391252745969057,0.024225556971338474,-0.03881399551651273,0.06899138708816335,-0.048978411812952476,-0.057847561699776055,0.01537167939941786,-0.0815863233738161,0.05731670758771527,0.040848466206225856,-0.00043433202827778517,-0.03750414443961772,-0.06487472467710578,-0.07225229496015252,0.024140923033275044,0.019181566307356696,-0.0994387035380823,0.0059517866269496005,0.02146898973869288,-0.015859435207647925,-0.03061696055208413,0.004756076590801547,0.09657805189932851,-0.06131713815162228,0.07037967888653394,-0.011564880463125543,0.1191383212157492,0.10517206187708854,0.0019913293515957165,0.04516228032562918,-0.02423536845335766,0.03669615957460092,0.04602006584637018,0.011859068570411545,-0.07936785557043789,0.11059854475266802,-0.006381563736530227,0.06677278263438169,0.05412212165349991,0.03949137677841929,-0.004558797744410474,-0.0037466591177584504,-0.014675770764731807,-0.08360505902963655,-0.0694200670562635,0.037809512121772616,-0.0015006776791463157,0.057511807278857005,0.03168284889121801,-0.021038921170046954,0.10014939761706165,0.06667522931441583,-0.006113238223512349,0.10128941758298422,-0.07769569429085044,-0.023896460284306382,-0.03487283296275087,-0.014754508932777008,-0.05608636249232037,-0.04660277132369423,-0.012214915449021532,0.06563796642320789,-0.019566342714706673,-0.011104615434870497,0.010017006479265745,-0.05250757617135108,-0.014834594812857546,-0.005260935408175185,-0.02413242414158096,-0.0993905531059991,-0.049912640553545114,-0.006735275373496048,0.07961293721579223,0.021834311599895014,0.017748389304317432,-0.02764831241834356,0.03192593766969031,-0.034222048901741756,0.024203047417400533,-0.016251876337095007,-0.0485438165070906,-0.03174473089330158,-0.044945166510930445,0.024640218103880264,0.013930835918444125,-0.029539607922331623,0.03317735455259089,-0.02727813484440341,-0.02454127234442351,-0.023748111483156267,-0.07583435409730535,0.011427192815604687,0.06520406396547916,0.07102823617486183,0.023899538318325465,-0.014485032149769808,-0.002931845117650719,-0.05186031839176734,-0.09806548425148871,-0.0006669939330701637,0.012057185320148898,0.01819346127455082,0.06269743784280521,-0.10752349407880461,-0.03605899729797428,-0.03904347159177468,-0.05161263276161345,0.031064098754148207,-0.011993339110697433,0.10471185402787522,-0.005086448445670344,0.08258426267323411,0.02633249460230339,-0.011013405194456295,-0.08974753103771772,-0.07793649332623949,0.03882410824204114,0.06656611752131858,0.011012077510734228,0.08315717905372083,0.10026722652721459,0.023288644334449007,-0.05629658722643564,-0.04169252454112147,-0.05065469360752706,0.018226511540519998,-0.01191876086466349,0.043783886991845024,0.00653446466538429,-0.05630174568302228,0.0261588694736374,-0.006181149555398418,-0.06688948821093574,0.12099669323128999,0.04647244476479186,0.023855700119205268,0.0337979073791967,-0.011726174768745577,-0.07460828538910486,-0.040082581851545285,-0.030300837662618655,-0.053197532971970926,-0.0449869140639385,-0.06767036134097142,-0.12033025269287582,-0.006582824900574106,0.02596228664325161,0.10865172700315774,0.12494107256689592,0.06158464823053762,0.015603252645879974,-0.000040565894452206477,-0.014816446121139998,-0.0034659262375719892,-0.007561886456106665,-0.07201001417076136,0.02584606933864677,-0.013024601523213273,-0.015907676909637562,0.031038410149674445,-0.026168634539858765,0.003614754070510171,-0.015064396444323749,0.107401580835973,-0.07980741393780949,-0.03137619025367951,-0.06113457968810757,0.02604360267562564,0.018935860059651685,-0.04288194910812194,0.03106552898400204,-0.010485361394474818,-0.05904428669030126,-0.03776855549267006,-0.021840045618033144,0.18050861951016348,0.12996800778896334,0.09312959901676343,-0.10032991896639781,0.00019412879872926058,-0.04953889056139063,-0.027592650697219088,-0.06188452676097601,-0.03378178764861923,-0.049765705447165805,-0.08591772113883041,0.008788261240103902,-0.044169980169170356,0.040106316747146285,0.01721625892486044,0.007351192700947055,0.04845052709550286,0.027445819010830205,-0.08912358983057132,-0.021839924151310287,-0.00019522757639726246,-0.008066338259074022,-0.035965640176085875,0.008685595259092392,-0.04763062434737332,0.06433633107468278,0.001558891249190308,0.026546317351180494,0.06176782620652843,0.07286364864756206,0.033270212735924176,-0.027381282770608712,-0.10002173295034689,-0.05525628157382116,-0.049241630307957966,-0.06573065747005319,0.013498915544566732,-0.03280911136453922,0.012524192134930768,-0.041221053865639484,0.03311732650368652,-0.06824004332872864,0.06673044149515778,0.03436554894016182,0.04072350584112505,0.06603285465943089,0.08092841977933499,-0.021940203486674643,0.010235262762118197,-0.07697145080031421,-0.04519705669768175,-0.007950037053085472,-0.09031894119808571,-0.02470644986691281,0.0076324222860272165,0.06257596095301836,0.10722534791097581,-0.012453238680445363,-0.08735636124322317,-0.05382964267216069,-0.034806382131361564,-0.08020064354943494,0.0030069369345883707,-0.03354038244336857,-0.043718460765356605,0.04559405584648619,0.004801627721968621,0.028814352012729635,-0.04252754802455577,-0.012894291385701667,0.020393673400029684,0.02292913635474985,0.031117303406800845,0.09750853266637287,-0.0478347065371229,-0.06203071982032897,-0.026992390160822423,-0.008120729381793724,-0.006439055266016183,0.009518958007183487,-0.11610538085212553,0.03519371623172469,0.04638717266870902,0.11193826957934581,0.08785039079417246,-0.10999992867652394,-0.11034187657028964,-0.07434379933088359,-0.14544958008093717,0.03293980437405486,0.04946706567578507,-0.005005327738111969,0.04186730615815291,-0.012243440679443596,-0.050511090662484236,0.06314030535991882,0.03215230302258063,0.04439903971844169,0.07816755052284498,0.03452512659635372,-0.05030198946754758,0.023414941400599888,-0.05370150953798687,-0.014360602539823132,0.013500003456828672,0.03339871665242431,-0.09439332527066939,0.005632022934886153,0.07751310489435763,-0.04728039206225897,0.022889661469088426,0.1255281793561406,-0.0760948799575198,-0.04172233387508062,-0.032385672947036134,-0.019670196355293317,0.02461566983693935,-0.0456728943498897,-0.07178592538133971,-0.039247606143637856,-0.020908574947661712,-0.07631667273361023,0.0297989995348955,-0.051921846270605435,0.06986092006888091,-0.0542842377445105,-0.0306811648879389,0.01979444916173535,0.052889161885055096,-0.03297205482841334,-0.08343965573462025,0.026415573027470142,-0.0012762312062717818,-0.0047371733352348355,0.029802831062661128,-0.021238266851673963,0.07215189590987782,0.11827672531828767,0.036035758176266405,0.06723504737225156,-0.11209487655869599,-0.005449332045656929,-0.010658064784777483,0.05987465423094718,-0.02357263169353517,-0.09337565371493034,-0.05038462891609291,-0.09171579537556182,-0.06106336934082692,0.08326239999998929,0.0507705587479426,-0.008427228016111793,-0.05414253615717543,-0.02169315468178975,0.0490000248524839,-0.02840163939928905,0.048869518940677856,-0.043989828862713735,-0.006831527666704041,0.0023852157305725504,0.03392041193649851,0.06914634514441982,0.06366116814580572,0.11964022840390359,0.016677190005336184,-0.03527625194718938,-0.08442770768124941,0.00877036449658448,-0.10566856998826496,-0.10104007698253077,-0.028910927946205423,-0.09785017407461552,-0.022583573162133757,0.0017359786355309406,-0.016618970025784212,-0.006710971039872819,-0.055212627752189186,-0.024361574906501097,0.044462124844622176,-0.007235469189643631,0.02802867559666233,0.009442834832976305,0.010310311011915402,-0.017112314159918193,-0.06939499369657345,0.010506590273454198,0.003944977386793077,0.029702545476079766,-0.06905129075925452,-0.03555217857987746,0.06540103040922188,-0.0002776612820464948,0.031032609631121904,-0.04312246136323213,-0.07690815599471149,0.009143088525636148,-0.06453022924004197,-0.05193013955077369,-0.04055746934845642,-0.010424315121980403,-0.043219018548864334,0.02535914645208362,-0.04574014416626732,-0.021128231805223927,0.07096646812664291,-0.01988538904455821,0.09116377587807499,-0.0027386270747378526,-0.04840722648902053,0.026358406296570987,0.08742577995245263,-0.004555144128185905,0.119596349085023,-0.017991610933430657,0.03695946587709441,-0.03117793835997091,0.07008874358088761,0.0460625262551985,0.043491320313544336,0.013146181217575268,0.010837650227622038,0.003995718692643714,0.0026910825343287666,0.04921653894546579,-0.045838871958628714,-0.057573280818082544,0.09971348122085198,0.02277744412304785,0.03823848037762567,0.08149419131347009,0.06735955113830358,-0.017255439804158123,0.08209995816548163,0.07036462603557458,0.048047104895257715,0.08341796010936389,0.02869164112878185,-0.04632770796767019,-0.039164250791962646,-0.0733288284855994,-0.05347057565009438,0.0402703751927213,0.06155776900580782,-0.02296718767038643,0.035348948537558836,0.04008130181633427,0.042205329998902946,0.0025506962321567186,0.029043235281972717,-0.1081023905488012,-0.03584324133936071,-0.044767576030799366,-0.111065345455292,-0.013964142702878678,0.03887462101503832,0.0632826212782753,-0.07044620002651872,0.08292736767397031,0.033448850423766545,0.12343846100932362,0.13983695257311216,0.05465418140531262,-0.0585647819169207,0.021752990532369204,0.07551831853355302,0.017113177766681042,0.06552036060340176,0.019259045807331305,-0.008258436064871217,0.010163904381290091,0.042262395500451286,-0.04916559515081905,-0.05519348915512351,-0.0561527292940452,0.038824669364700685,0.09428945996613709,-0.09525740454773621,-0.03041428761825911,-0.02926964274041259,0.008254475701283624,0.05561466114425973,0.019182109339912788,0.09817340110108458,0.015845527098382762,0.04768936000740646,0.06273882140087605,0.09494737947766901,-0.02960983788424654,-0.005721674607489982,0.0043169996539356836,-0.06420392362607838,-0.05452088825274227,-0.006427244278859361,0.007912443271719496,0.02423863605105438,0.010282320751622121,0.03136619950424896,-0.06546284826301539,-0.012586451562545528,-0.001394882941778007,0.11034060162596811,0.014350305442160207,0.0313535980268368,-0.02400532025021222,-0.00796134967881705,-0.019786964924905608,-0.010249828682600255,-0.09801510343889265,-0.013283881949616121,0.022909656654419342,0.07103401408336198,0.04255460642939884,0.059851983852077545,-0.050406929966855495,0.05287106024579336,-0.044201455571847514,0.05407751549507516,0.04903826913963529,-0.005176954274788911,0.04129922835005951,-0.0058323868764958205,-0.0011584826396963442,-0.02365684606084471,0.10233927571777734,0.010767825621635542,-0.05325301189247021,0.07117642858695586,-0.06069407945049227,0.06404150322161245,-0.1177129079641449,0.023195703859307075,0.02373431772726162,0.11885222502461906,0.007127585814656342,0.007465147753514451,0.0666609427547086,-0.053623346779919735,0.06139170425782092,-0.02881272998139819,0.104484074223772,-0.02761071581957831,0.16302518312741124,0.0224974049586292,0.007271861283212576,0.09787161244514653,0.057032168093781595,0.039141603362636036,-0.048974466817806275,0.03568628261351912,-0.050357781817843915,-0.03883975082618577,0.007434108249606826,-0.08011953511953415,-0.007870870334874712,-0.023236254684130504,-0.06234884921330705,0.0050686781223465574,0.04317555251048858,-0.03205705851531119,0.05150786879779568,-0.035622489537649196,0.002214936677583916,0.003212157368280489,0.0442608418856882,0.06556784099405075,0.06208817984694239,0.04729463187162726,0.006272192448934963,0.07869928947422172,0.00282111843872879,0.05914760651628465,-0.018334488598340318,-0.0307959136264181,-0.008303208158057282,0.02174916726070662,0.0547957689532817,0.05831286505163486,-0.06734442989633876,-0.02603135493048035,-0.021858905108191034,0.1500668435288212,-0.07221978801284212,-0.06161422648662016,-0.0715010542299293,-0.0921099826910278,-0.053180280836538966,-0.040175189721564836,0.014812824562835721,-0.03647846714682012,0.045779785319573385,-0.02299337734577564,0.06961903361297003,-0.05241604240796315,0.12916753282115553,-0.03329415036109589,0.06247899221098171,0.04668183639803165,0.04230866051870694,-0.04828581689664767,-0.023619686273226033,-0.059371736165118615,-0.05820464348985702,0.04954692316438129,0.054925013465849375,-0.01400005245686633,0.00555303980838659,-0.045567657631022544,0.05780268849580081,-0.06547889596330751,-0.006105158638883381,0.0732585947187719,0.03878973056656303,-0.10568853676593222,-0.07356039595182033,-0.05105349384539835,0.0010775903336243317,-0.017377821901340375,0.04572511169976756,0.07809219474721509,-0.04872579048307966,0.0931391491232462,-0.04184961120880014,-0.0010473344923488343,-0.08441712748737121,0.03811175789450696,-0.04143781282506416,0.01684191293756893,0.010282719536463088,-0.005473884174226144,-0.00000994716839909845,-0.028574646519324377,0.0032153113705178623,-0.04341602005506451,-0.04777662170820405,0.04666669344781484,0.1112349786645291,-0.06292687227051008,-0.01472901233502679,0.059520858548591085,0.020236287825914513,0.057860925681769516,0.10181887165831094,0.03374864649755186,-0.07374426805954079,0.052119226719145866,0.004153704011323872,0.008859125058810674,0.023611390506827347,-0.04878118788970062,-0.08377938558312575,-0.0654677165426842,-0.04298712677228044,-0.07867965469432146,-0.012893118015756396,-0.03188125662877203,-0.06627673789554572,0.018479696297842508,-0.003399146833962215,0.03811227911028241,-0.07060739423400722,0.02242234913907524,-0.05235578861779236,0.05085919394269892,-0.16700647687638237,0.01861617586953049,-0.08020938634588148,-0.07294021981048818,-0.045256749091462434,0.05729401419871933,-0.06385312132315092,-0.024569428519120275,-0.029032614579363212,-0.026884892528380784,-0.05855978786802209,-0.003515768876081567,-0.029822181977278057,-0.036058388700887505,-0.06366093492578047,-0.039602352315303735,-0.15005100704914723,-0.08338018820366909,0.0037011405151015147,0.026811817767184148,-0.0895977752627796,-0.006419017003097893,0.018654167546409223,-0.07697960731063723,-0.030764236512875392,0.010470887407864725,0.0008936835971097781,0.02299511608240758,0.08205929010723413,-0.026956386733735047,0.07799616125000323,0.0147864558597326,0.06683968059949089,0.06039517722232586,0.03905208310503363,0.08692192520973578,0.024386125097743197,0.009008167891147232,-0.0027218805371613266,-0.02394534758658405,-0.0011617566536824624,-0.04297892171197533,-0.044435403480842385,-0.049407178234732826,-0.0046406328684902515,-0.00048712572812726425,0.028591470522881114,-0.06009912592452032,-0.059034135122959505,-0.03182549910866393,-0.0341123186858051,0.04735652252950846,0.06086943421006295,-0.03014608314270004,-0.049008490423773185,-0.07007398184212091,-0.05851982209026434,0.029918269477563934,-0.03618209525108868,0.017426500777446598,0.06507028235064527,-0.08864068807792262,-0.056314487704702126,0.10705072583840596,0.042909725926560664,-0.010872132886152444,0.049156058522454464,-0.059725043292429725,0.018414364283495847,0.04317169030190639,0.026677360313022504,-0.057987111234343906,-0.002186648919903036,0.014697901876237781,0.029905725169344075,0.04237788510749904,-0.009123569897409072,0.015709611993188103,0.000048914833315269923,-0.08212756143334868,0.05869604273677087,0.03675076847597927,-0.08937341347826638,-0.008708369050123113],[-0.08369746662482731,0.03193696770772493,-0.016202675876813406,-0.10180678647220383,0.010609172559994542,-0.05611496720202265,0.014679875103868598,0.01965159639149414,-0.02602964362328645,0.07495775784070662,0.03763778882160517,-0.012211244242405984,0.010100993209073528,0.07659805676613178,-0.06254133710927053,-0.06341925814389648,-0.010116320105340092,-0.029400043382213366,0.015255671340190636,-0.0900118421236549,0.017562305941240634,-0.04378920418267534,-0.009717006547459845,0.005196750839043906,0.008737129512887376,0.00908858308482655,-0.020128313866652252,-0.061109285882982534,0.028741059148275912,-0.11452413992548953,0.010324469695030937,-0.08123396438395984,0.004550027037079437,0.031459208977479176,0.02496084495391184,-0.018377122359751117,0.028163482218646296,-0.0320325147482607,-0.034427575245766597,0.08492109566594085,0.02375482716661977,0.06817361680613859,-0.0025540791086806234,0.10215984356110529,0.025537571165550072,-0.00995750443174893,0.043618147278292094,-0.04019897257608903,0.06543417693750112,0.05787991657544961,0.021445946223154176,0.06103172893544964,-0.04402126177898204,0.018554606767766726,-0.012997737215343164,-0.015319088195694072,0.005528324346139909,0.010479580834126019,0.026160444752125468,0.020274152320104714,0.05178243066529431,-0.06805722798537858,-0.04360610218623729,-0.07049037444288359,-0.023535661859908748,0.06626877397989955,-0.03114238968854572,-0.01742368429098178,-0.06058087140694154,-0.0495816886769664,-0.008759166010783236,-0.023160912797798895,-0.052203413183229797,0.020064139706531283,-0.05487593458674942,-0.020209153463022482,0.008052595160288348,-0.061282403310624,-0.04213652539923239,-0.01983111347895152,0.021643316292141588,0.05729407726431982,-0.01799220640686736,0.02878503463584388,-0.019670249265924623,-0.055403635843192814,0.033266708339878825,0.01877432934751428,-0.0356652707957795,-0.04955035129144396,-0.05004160727407791,0.009341432123709185,-0.03636788588156793,-0.030177817834627522,-0.007015721083070024,0.011005573279315072,-0.011804883795091977,-0.032309569592128023,-0.00550350546582085,-0.032859402801528194,-0.0268325949030217,0.014179072968312873,0.005371984770459296,0.04709193758896397,0.07180764198698854,0.05495282118817986,0.03614487811406747,0.094310781541792,0.03511219816411671,-0.057975293679855947,-0.036088345980088005,0.08072106687674753,0.0034515223683611726,-0.04427853720944022,-0.04423724150964405,0.011689212200862291,-0.022391369059671058,0.07843585966761091,0.06186552144367205,0.010931972552265124,-0.033929269799872715,0.008986764190231119,0.08290929193817456,0.011201196127714277,-0.023785245098610713,0.002712830117651051,-0.004226398582392312,0.09914599494599037,-0.06201848360967744,-0.03937202089333572,-0.00100460038958311,0.03481079099448155,0.03730167712465963,0.03271305200843592,0.01647151295871441,-0.003308063360532398,0.037238152021672265,0.07417213091017294,0.016211642875706075,0.03026637833413758,0.08918806353427951,-0.024547392951589645,0.044939458011856184,-0.02579051889058295,-0.07476278670468361,0.05985391903597364,-0.0059186941905413236,-0.07207879968517145,0.011029468188568353,-0.019570902137861775,-0.06691044861662765,0.03159366228729324,-0.07819069123941064,0.04364899707418837,-0.11073497691475398,-0.09517495077205665,0.0037752465415235746,-0.04457193893276293,-0.0078552640636038,0.04718366122418926,-0.02684716335626324,0.09103539365487819,-0.04211690005846115,0.030413415457029705,0.0103993166635322,-0.06626991242691359,-0.03022711051041481,0.02064970489047693,0.0021676666544089406,-0.06494612551647878,0.05618363487158697,0.04373192631062816,-0.08720393509964551,0.03423059224643784,-0.01682953451162678,0.04271468830318076,0.037232332405506906,0.008559045518439053,0.05404041714294259,0.024110654865993637,0.09279447346955208,0.048623115303872706,-0.009308232295416021,-0.000940357680778365,0.019367253319575103,0.0325709281670914,-0.0024355800229715814,0.015316036777583596,-0.08231836521938256,-0.07311717224413362,-0.03726515257423567,0.09027503643916984,0.06269104772324889,-0.0075775571534760205,0.027886076267877542,-0.04445826250966089,0.02187940584051984,0.012258013388839474,0.01087565211138113,0.07665543165917107,-0.04029613772836033,-0.014960928989215298,-0.026408652381674464,-0.022543251901931183,0.025160789722109306,0.09508317216354549,-0.014516140227097015,0.02611133001301126,0.05858634208185892,0.008480937138410421,0.03630173759693168,0.09984466159170975,0.08165232802937349,0.02173760797465597,-0.038408221713713483,-0.03108829455474127,0.02953017824824675,-0.0476635302795896,0.026305460284853466,-0.02057019808712288,-0.01825178241166512,0.03376162440314484,-0.005040899596923917,0.07133633771839823,-0.007403404675019906,-0.033271752736762146,0.07246366866241,0.016096594701194275,-0.017887359197221238,-0.04559607090656969,-0.0003447999706979228,-0.07427595033437417,-0.03121609970172231,-0.008834842070330659,-0.12291970326606112,-0.010887600560741393,0.05824969563021176,-0.054575962999797105,-0.015249981188219025,0.025386845609813576,-0.01286690629643557,-0.042460753955983505,0.01730448778210145,0.1269512389589025,-0.007918731939452674,0.12477283948976445,0.04263530687529013,0.008558838385245553,-0.0179477431769048,-0.01498643109424016,-0.06123486197382516,-0.05409966929649293,-0.04324192131744044,-0.010665593579127499,-0.06672533668818781,0.009832750068478184,0.011335694998491474,-0.04531628857275835,-0.0710746146799752,0.06377319523920144,-0.0009833277912473033,-0.0035958520648503977,0.0054901540747665,-0.004103574143775896,0.010376941717985557,0.033092849682951196,0.018886978051376575,-0.08241157807144463,0.046368742543983314,-0.003054601034683214,-0.001859834835820108,-0.02357374442255285,-0.020066985918155044,-0.06187564041258001,0.04145202144184009,0.025116915236326882,-0.03268125962217178,0.006128711748264243,0.057769805089195256,-0.037739889704836875,-0.054263423361562174,-0.01876963677681629,-0.06229115959136905,0.009946447916839981,0.05200286869500404,-0.006714705569365997,0.015527565518318014,-0.04864623075618559,-0.06410183501315898,-0.018688348688809173,0.010821563087051025,0.016369869663255487,0.004007127031332677,-0.09106388740776575,-0.1419259129435633,-0.07065774362094551,-0.10447759427388158,-0.03397427297149283,-0.01743788373474798,-0.07220715294536129,-0.0679514678868943,-0.0021987107442173743,-0.06693092531213436,-0.01461663272758992,-0.06712610530792636,-0.02143043391815629,-0.010092464306761898,-0.08051684054780096,-0.03966850873476195,0.029751321645334946,-0.01647150365089179,-0.039547787060815846,-0.0680560360793664,0.041571704682336764,-0.012449856090352882,0.0038837267299710004,-0.04346041107621863,0.1120927041557706,0.05461125675584997,0.042765008386679855,0.12992191783981002,-0.04593995320054487,0.018232778861687466,0.040548336192146366,0.04006852590647105,0.08648002891778998,0.01269135184796101,-0.0921513455450972,-0.04999804289987817,-0.0018952373566076528,-0.08562626992349603,-0.1053964445991661,-0.04976777861791531,-0.07859477700633948,-0.07235797077718231,0.04393563040243088,0.045488168909896515,-0.05938596408253054,-0.09783105438678796,-0.029794566843004664,-0.03570626714529593,-0.036142817942975296,-0.02545174382354788,0.004831966720788864,-0.033043304256400924,0.06535022686139308,0.09252334687553511,0.024007765348294165,0.03854568711506833,0.07870390844673719,0.07231978489620301,-0.006854544514160423,0.07800471470778482,0.06142173616760641,0.041508171665705626,-0.06384926244614529,-0.1203694423462265,-0.006707993456762162,-0.10167272062460578,-0.09128061780634011,-0.10114465518511896,-0.0373258433776971,-0.0013371209470199876,-0.019177488746691847,-0.011020891142558007,0.1212332141785359,-0.032574252546144024,-0.08645878928677016,-0.024060603679167156,-0.0009471150718738309,0.0022952906235330626,-0.02553548946594973,0.02199642558240074,-0.04857412347733928,0.10513714558853501,0.051261232740094316,0.0680344333494134,0.08417051172551725,0.11249046924174777,0.023924458775774093,0.0254107532791037,0.05856527370329752,0.13627008764551515,0.007588016360372219,0.06249328189247466,0.043957474663710944,0.03261868188072347,0.01255705029571322,0.02470785963516203,-0.013690253970489964,-0.05811313349154849,-0.07716412710728532,0.03106116577248647,-0.043563922994508224,-0.07829004264247381,0.048556197912728534,0.01934848248809978,-0.026822291885028576,-0.05387419053043998,-0.06101723761354931,0.06748297679709223,0.07989323151492933,0.06482971473711353,0.11157225520572692,0.08551595110380432,0.001130500098598347,0.0687061545302719,0.03217879621267362,0.06157503039826542,0.08976175705260055,0.008420666443102272,0.006904984795868222,-0.01926166524938574,0.07277208549068594,-0.045471206055773594,0.04959763605712415,0.026150111549883236,-0.1092194107037447,-0.027119013234287143,0.04727489798028914,0.013561835980132378,0.02229046587943103,-0.024922547292465593,0.03620301171642671,0.017751145752820267,0.039969375741003475,0.02535527047142127,-0.0062762634329172565,-0.01737380416027252,0.04597814013812852,0.03634758864053044,0.12148357223432442,0.07435259350038693,-0.06063707028155065,-0.043703022172051874,0.05991358216611753,0.10538899297814193,0.07671117738397748,0.1174726410290994,0.1221611031157834,0.10613146392916543,0.025398662840473058,-0.012404971606459448,0.06980900935288033,-0.06687915409917689,-0.003512135715152634,-0.05569220091617193,0.00039589744264196245,0.13836984211229783,-0.06446628224263294,-0.0458829916718923,0.05218411787753455,-0.006568405362807128,0.026078349596781507,0.04506286515519733,0.07253885196766961,-0.055592437603462184,-0.029256012051129435,0.04520280327546118,0.07805688926826053,0.05261814498909752,0.04181280060442201,-0.028673886820162208,0.1016106601286481,0.07163685061892489,0.0007550066664224658,0.08331539630788763,-0.008260610399432686,-0.0429403573654546,0.042964129466832944,-0.01741113766549346,-0.004249273758512788,-0.12125978343792206,-0.04207747751962203,0.030595024447897533,0.01881029467087136,0.061119252700667856,0.009012741929577399,-0.05033011486818092,-0.004250672186182283,-0.10673987846482497,-0.03483597479769868,0.06724105128394266,0.02512715668360713,0.0656002248496388,-0.07691070427992365,0.016855302766288067,-0.06742689864826491,-0.021220368000783033,0.006133246031255524,0.005177471256469202,0.07152353558873295,-0.04561240683210709,0.16609620602841751,0.11637367019505337,0.03033896069610876,-0.007449979033196432,0.010999118824706352,0.08464960196421739,-0.01758085885186182,0.02937714098640843,-0.016826960586173403,-0.023216260809167253,0.028636047075610703,0.032158614600404756,0.012574773516790512,-0.020014026317132567,-0.03891580587788277,-0.008922451519228724,0.045605172691841465,0.07065724338684959,0.044531363530034875,-0.010799281340699194,-0.006176530625738514,0.017178835491195216,-0.007655893919042584,0.04067199552727382,0.039662780556073016,-0.0504026988816765,-0.029992282965288882,0.013148217793217903,0.16904260792314474,0.005442304646191807,0.03243319309239714,0.056099634241337834,0.004506996328390676,-0.07577419746431108,-0.028361700101055428,0.036007108388740654,0.040221252536211435,-0.04453637963182398,0.07074405103232959,0.0512864687249237,0.047130987263489854,0.10608216967372115,0.004453052892851231,0.034168673348967046,0.03389722175447025,0.03848330346807986,0.06647031587462311,-0.08386565249833634,-0.061936464918170224,0.01713692496069023,-0.0015430735827107042,-0.052715224973506156,-0.043529696633156735,-0.018320601324339585,0.02723781618264788,0.06943680426695258,0.005541175673889467,-0.045771499227494766,0.006731901688992322,-0.08112891007085585,0.05397580827508453,0.016153017236406095,0.0319546755656555,0.007732529344075951,-0.03218459316612262,0.03217848477022825,-0.07237365622070539,0.009517444039083394,0.03353192940190475,-0.07703754584630046,-0.030862110665174948,0.031562624945551676,-0.01806358031080933,0.06080480829473117,0.013725560863202235,-0.06864503059819829,-0.03830710205692545,0.0027535324863400337,-0.009020969646671255,0.0008767048752169371,0.0335972159885504,-0.02346071153128069,0.03775143303605874,0.110258597691713,-0.030820070659022664,0.0312441075317465,0.1473290893308548,0.046793968020755125,0.07216532822050718,-0.0016023787275757117,0.14444938694407172,0.04098537949090457,-0.006735771799767044,-0.05892068988239636,0.008111723544135484,-0.05834766382560233,-0.013093026781502523,0.027192494480441916,-0.03826430786448125,0.02486259446458513,0.018151156885988364,-0.018697215458219847,-0.08830598885632766,0.04045947808851546,-0.0025122666348826603,0.0738945726518453,0.027193183565376387,0.007021359567855164,0.08437906178849323,0.03718450437482823,0.06635473037495619,-0.06941869958285123,0.004042164970465808,0.06788728860013207,0.07644159696004148,-0.046301700494327004,-0.05426601227196788,-0.12625134054664838,0.020768850308910295,0.024003918180755687,-0.044920149790562074,-0.006535608990738217,-0.03716961823880142,-0.0038307225865978154,0.041339201792762154,0.02241749213162847,0.04543901320173405,0.01767006828121937,-0.005895736294051222,-0.06253105082567806,-0.029165390537390087,-0.059077117153066704,0.014913931868461058,0.030616651952891507,0.017895768534909328,-0.02435807336212275,0.04511149517182366,-0.00525786639360485,-0.027666762296166214,0.03074423336309081,0.0728040579046721,0.00964977803636633,0.016752032776811046,0.11340426982954707,0.03908603590488091,-0.0027980446876510697,-0.02905036166129962,-0.050331812894508325,-0.02596763605693985,0.02426537588230111,0.03392049411946143,-0.017842910008288942,0.03253028275553429,-0.004883886381843761,0.04875352406056192,0.014183597561241072,0.03783899604683809,-0.013246823249692553,0.05047826908124088,0.013397126892269571,0.035057538892589564,0.011420938395226862,-0.013951007642510215,0.0033448617158255817,0.05659390842073484,-0.06300395032418132,-0.0026364961729112603,-0.024954813307014198,-0.04899676529231394,-0.005257700061606968,-0.0465625895327021,0.11269915164511304,0.002577827863518203,0.09142463480465038,0.010645526987355582,0.04615819690363698,-0.003259371899126297,-0.07855560940356647,0.045853986230093804,0.012323004734790284,-0.02911463020950246,0.08055219407821597,0.05416310331930717,-0.05450677159760005,-0.02927430808302599,0.005086298187819009,0.00655420774493366,0.044409605917134165,0.021043028720602694,0.06274530932208815,0.07994804744331853,0.06397884469907242,-0.06554435843262867,-0.027146292096631726,-0.03679613223842723,0.05258211505372441,-0.06805385604345465,0.07497566345435835,-0.03746416069930062,0.17952190175662333,0.0133304182828764,0.09463886495031805,-0.09166903939045357,0.04492441908787805,-0.008383977257331707,0.08173198910290778,-0.06312318060461379,0.061696471851500914,0.0007300927252209801,-0.041661182749106934,-0.06852515949109886,0.07397389662253812,0.02734446392745601,-0.05586477895448522,-0.020994848393918897,-0.052640877601468995,0.0007051363219361585,0.006061517280802159,0.10773056416284135,0.02412009879344001,-0.06849565607007935,0.09093783931510624,-0.025303392935206576,-0.02165846302633656,0.011068800009983499,0.038992355771624194,-0.12052130339882491,-0.043385952468401545,-0.012283631915954288,0.007739661886999352,-0.007874557316038087,0.05542532162198776,-0.06131971640158224,-0.07668365161704527,0.0023297617985136095,0.02091350566597007,0.06163883986904106,0.053845178440902176,0.01372022212683308,0.0876532934004827,0.021230211228716208,0.04976000861690373,-0.011487908253983348,-0.015337613023669408,-0.03431310324610449,0.05497852837584998,0.011108084187314632,-0.0021615998003728775,0.008978748303253827,0.027591634000533164,0.05230925402594132,-0.110267854153288,-0.10045035907147333,-0.00817787462982117,-0.04264452273809052,0.0402822814951073,0.03173678170124574,-0.09117433569502327,-0.08362709944161416,0.02233067287539323,-0.03344999951974984,0.08919619524089699,-0.011507856784996249,-0.020057547272997932,0.023241566930869977,0.034155551318196656,-0.02176735110850781,0.014249036715331625,-0.025055191135799727,0.01388968144334663,-0.047585783085377566,-0.022756459669237842,0.000613416054778918,0.09425652369021083,-0.07806561532402155,-0.024358282682655726,0.019288071426313672,-0.021115195738587337,0.022586902701060983,-0.034425202916211546,-0.0017725588117271,0.05607633691619345,-0.016684954493010436,0.0801626867541476,-0.031850320871082576,0.14458845192187308,0.017461496079403067,0.05098636830430283,-0.03965821862057608,-0.09809659106230514,-0.024605572119882502],[0.07363304101592993,-0.054847849591898964,0.006871038826138869,-0.1289709217426178,0.020399608514242558,0.05957318305418696,0.09082212719883817,-0.025496015931491395,0.03685993563889115,-0.031084173948201833,0.06650386707922376,0.045335740605953294,0.08048707467491303,0.04972330180920731,-0.10094600871000371,0.07058260496082702,-0.033798050222607956,-0.03357024704928268,0.035244830208749224,-0.010470677373418415,-0.06673481766494384,-0.00892458222111202,-0.07381878186653448,0.012323656997117415,-0.03779586709771879,0.06093728890423464,-0.019042533761555205,0.0007740512261339871,-0.04434094813112314,0.06883214062351543,-0.028079881026559797,-0.0316970366836517,-0.0011821373504984755,-0.02680565583920223,-0.03942113825799392,-0.01599582158257302,-0.07814473562562817,0.010468000020709287,-0.021193006313846068,0.02268057154162919,-0.004071719073522085,0.059585515276000506,-0.11429774081323776,0.16687407054983353,-0.038104141534906995,-0.0090166196119178,-0.02283169683118532,-0.02800610067565082,-0.0367474054797488,0.006388152413289392,0.04853924683871767,-0.022138210045423046,0.14409139854276468,0.07255279351575873,0.09236601858682437,0.0019615681027089515,-0.03112152800480996,0.07098682558373134,-0.017322156767670575,-0.0656043172085202,-0.036061762090613306,-0.05149312497403914,0.05808263629094657,-0.04924980017912155,0.01822886158625936,-0.020736838190200644,-0.019568842654496526,-0.09636974999096444,-0.015852990859107192,0.09983357006021616,0.004696747810374268,-0.0336489313424047,0.054653989045359334,0.06682393831363213,0.07385778704997244,0.008132011182712862,0.02643483743495544,0.0027242013036187125,-0.04059160169332328,0.03407108617346494,0.027201693605761194,0.044812949055081014,0.03354362598347685,0.00020174408036015978,-0.03163695559852482,0.06365699860214964,0.04504134311832756,0.04752052477763022,0.0022990675566085797,0.06884297684822693,-0.0016882852480783598,0.006324132336795911,0.13434804306264952,0.05269639278176998,0.061522448278321984,0.010304060767746074,0.057525918555697504,-0.0036479058233855046,-0.06808951182270767,-0.0030382631905297957,-0.012415408957688967,-0.014823584589988437,0.02914283820317759,-0.08595743293009386,0.04888999393975789,0.03958371811569851,-0.06514825997538426,-0.01193969286301541,0.06713159005007564,0.0019449979686036274,0.05511357889625331,0.01881789883441636,0.06636686386756893,0.06231186695267507,0.10560248195317211,0.09553722238885914,0.07302089199088141,-0.02539872162425017,0.025277999414019193,-0.0023671322109341548,0.013158087957437748,-0.09140899975388674,-0.0752272270892007,0.04410001142810275,-0.07475260027555988,0.022656888182191245,0.004089814513146109,-0.034709774194596955,-0.05420007322057367,0.0021624856500053924,-0.04510590446174487,0.04366771131029943,-0.045146978041724344,0.04547113463295564,0.036478670107508306,-0.010647726447297234,-0.03471942914854804,-0.010291058896953822,0.009308706892367685,0.0405687120499317,0.12060482896781068,0.09409443569754347,-0.046695991259521466,-0.024755785551693756,0.011114118789035815,0.050060615254831166,0.04932201556207593,-0.09941103380933963,0.018090444019861356,-0.011843717530640802,0.07058363944239206,0.0782607881646519,0.08407188175304173,0.020287735778736046,0.027675945413671445,0.06539504799775919,-0.003552161051444428,-0.007796930069646857,0.03408094564658839,0.04565440198508663,-0.058260461528120686,-0.0032824122388009293,-0.06809943598626302,-0.012627514613014635,0.05878048213342493,-0.04107266729353811,0.03488874885174579,-0.011904151488679682,0.051877401073329325,-0.0381203105238188,-0.0006789861882347928,0.09439195431747942,-0.09351437378030418,-0.015672929028560226,0.0384776822990424,-0.012201042012575821,-0.008004450733591104,-0.05430795199511446,0.015390086769835462,0.03854208993006493,0.026795813236638787,0.005758357553603243,-0.07276368588036511,0.05610993325145499,0.042829089760763,0.08123084390951026,-0.05823615863951233,-0.06632459401190108,0.049181971527951805,-0.06715133654252017,-0.06026960459700165,-0.053605783181575835,0.0887373518649549,-0.0338794054235424,-0.0456823832115005,0.13072106807915565,0.04268143850414376,-0.03877771227847442,-0.016816622783333006,-0.04237634495059192,-0.03293886367839982,-0.04791057796028394,-0.03977804132978779,-0.007145001816082397,0.014744891225228866,-0.008479133682975358,-0.06061265344226971,0.0055237969167362625,-0.04686495303762074,-0.00010709312322391162,-0.04591398658170568,-0.002763577172902252,0.029394986408801286,0.06967445270454103,0.040157797929492284,-0.03153695953755664,-0.01432901166754597,-0.0017326720484374288,-0.062045987070424594,-0.04275127328226629,0.012872553915885472,-0.019338109394239196,0.037151444163863734,0.021463159063738347,0.009683056678637423,-0.04619038074456708,-0.08300471579578377,-0.04197830557475461,0.012755701013784525,-0.006107069291531447,-0.010858162568776962,-0.05541188450181742,-0.02215496543253224,0.00006148342246961847,-0.06411245264281666,-0.03975806120511602,0.07675805725747446,-0.13284002600711214,0.009638347727088296,0.012635771673942515,0.03892003616507177,-0.020150917905669998,-0.010916263026773785,0.0006523126335043483,-0.025782139152556616,0.015046701932986338,0.024753252199630114,0.017415995578795248,0.04290685921404383,-0.058409258989651845,0.0010858117402572662,0.008621700235586671,-0.0018909459735877957,0.02747746408963861,-0.023927595885472448,-0.05215204067158134,-0.022759421214818717,0.030833587400826406,-0.02381718299567881,-0.04079390216227576,0.033896944093969504,-0.004363622916654775,-0.10104220521497954,0.030966785561362405,-0.06481339864756998,0.03053844778576113,-0.08157667101673478,-0.006136582539722812,0.002291011497563758,-0.048075712402434974,0.08126328597293848,-0.08618796049886421,0.048197031914967325,-0.05058141261050339,0.07127112623701903,0.01775894603131523,0.03000060704574382,0.0061033625618578296,0.04527082135476367,-0.060768231068810345,-0.032245115763443875,-0.10020814464022693,-0.0272109223602588,0.07382487712607907,-0.005650590661187015,0.08539405570853255,-0.013500019351861191,0.05345215360287288,-0.04339606326679344,-0.04032615226939425,-0.11633637087612327,-0.07190928189822128,-0.12661666749962813,0.07171148671638597,0.10194953273447226,0.057131151007836695,0.041739704997779375,-0.06680196075902796,-0.01748863788345414,0.0010188523645673034,-0.04179292111934122,-0.07690673093687543,-0.03323895249060539,-0.04563545606487989,0.026177921727478633,0.11052920587103104,0.08258378988883912,-0.005710354918135065,0.024169251599796736,-0.05246720115018154,-0.020354647382745963,0.005628331286755302,0.004900846675641296,-0.03986389078403375,-0.011714728396669833,-0.07328685054692122,0.03383160933939354,0.0066009464744105,0.009651277148247865,0.04426165766008646,-0.0229038122412058,0.04181285576433901,0.08771231761714098,0.010958503635621545,-0.0016658587413579161,0.012470754805020036,-0.022105168445831953,0.07717093289495555,0.016286292708651177,-0.05633878265205862,-0.14357705521649394,0.062436757806911644,-0.08895914254058472,0.10730128336679542,-0.0009992547209890315,-0.01266382346829227,0.04806474812181567,-0.09330756988167149,0.03885330653421023,-0.056490669109639687,-0.02859477722887445,0.045235084268166914,-0.006405311691193746,0.004295236044325973,-0.04405740956279291,0.05108793836651903,0.010725664929704008,0.035380513828562485,-0.024532647454031088,0.005437671452957598,-0.013887973349982312,-0.07825310572832701,0.00972892996824969,-0.08103382509874801,0.0038705535793790925,0.07100438946241379,-0.07184367631137793,0.010721926703363614,0.03089988444922359,-0.025308401579979302,0.10117619218188093,-0.0038479394535841736,-0.07265594973435353,-0.04235336806723712,-0.07525244854246373,0.02831991338515461,-0.019277859213149697,0.02052410154443679,-0.0518720422010474,0.10535972323287295,0.000994501389701727,-0.03678946842621304,-0.04040143868734463,0.029336015743353757,0.07274719532010024,-0.08340946384612719,0.07683386124807293,0.04634079459981806,0.048504343791141,-0.07168982485633357,-0.02057553167715086,0.008247939229066041,-0.00430922186572787,-0.04959184393339726,0.018932395761579124,0.0643608936081304,0.009231076941306817,0.029582289741487498,0.044042526202067785,-0.0062752433190705345,0.001953426687246414,-0.01936710493698869,-0.06713952034538502,-0.0804907848355907,-0.022411843884274304,0.003396372399803121,-0.05923412765052769,0.02541644444366391,-0.03753702042601897,-0.07267891638678715,-0.004464121452985284,0.06789663925312263,-0.005065648509648022,0.007902848109520872,0.03488414747060342,0.09370481479500732,0.03493089415070724,0.02434444845720446,-0.0038907230290446183,0.0474932314957848,-0.019078229089289696,-0.053938514688298154,-0.006123497318052718,0.028261230593382983,-0.08416695672988299,0.004240311876681938,0.0364560834763849,0.02352866734268067,0.006217538840939066,0.04573545364244885,0.04502919562004935,0.01012948162033527,-0.051352016726408274,-0.02425126711714599,0.00339727589929506,0.021052005524913125,-0.05157619107475742,0.024744644659221007,0.0358089650234385,0.008106183590378397,-0.01234355334485448,0.020243190625571388,0.025100695744052347,-0.01346938234124366,0.024378792571829896,-0.00492742897157804,0.07186210978183319,0.021058058085269622,-0.10191435023949781,0.0035960847529518144,0.021511812449649483,-0.05047269771371819,0.02999887755978703,-0.07077122486607193,0.027045804220985258,0.013337024973661238,-0.03072991327454079,-0.022480323482118755,-0.04113459375379125,0.021811021805440894,-0.031235694718031972,0.0035216628561322454,0.05775049326816708,0.028771402469531474,-0.10649549972266788,0.016126523302168027,0.07211355649530368,-0.12872231429661946,-0.03710243620331629,-0.020874911505426794,-0.04237429736185525,0.0062313908140384225,0.017279673340617415,-0.04206904609038726,-0.019764420549927747,-0.011639026606758958,-0.02308134527428841,-0.00633471007914151,-0.08767014176605618,-0.023744720653584718,0.01404633566562678,0.07024294412162158,0.019119875282997283,0.032593899877117805,0.0002774542429762045,-0.00674734118022551,0.07040879137867043,-0.07406091858613832,0.02941539004595583,0.06466310927544572,-0.014849665417391692,-0.014637466955127243,0.006334709257521327,-0.040614780616515696,-0.05764160203280196,-0.09173161422366087,-0.038738789316003726,0.003029750085834908,-0.04392859086330856,-0.02131320141548607,-0.04898110648605186,-0.030497395992304326,-0.04948953425120953,-0.06412578657012055,-0.040874019551654296,-0.023727289867494412,-0.008312353203109505,-0.08899740888715668,0.0795391973526695,-0.07056216611035293,-0.15053273435186834,-0.04049849872750729,0.023265949949456938,-0.0062517041163161315,-0.035765767547637106,0.012050013746300662,-0.03540448311631698,-0.03051148495029573,-0.03290317651525047,-0.07171526690298323,0.034714025493787146,0.0006471074619706739,-0.025596161413643653,0.059868274018158606,-0.02797010195979257,0.041310289911231424,0.07261483300559024,0.014045660197388055,-0.046236674891366486,-0.09377973503619684,0.007583571975852793,0.05675906071996167,0.04995012518460191,-0.05612724566722683,-0.04823736966335469,-0.09556515326889672,-0.01494244462677799,0.05791431289638721,-0.03502755284601938,-0.012785986693508295,-0.06908508221348418,-0.015594316962887043,-0.00150339277277304,-0.0766128092565438,-0.01570469602871174,-0.006157372679928041,0.03852791247207463,0.016850922694936377,-0.04942404523092561,-0.013241164366932052,0.09465181289223108,0.01833734843489148,-0.047534475039167724,-0.0911624288722717,-0.016564919867408903,-0.023922893990539016,0.022398168560841824,-0.05912430993939623,-0.05073628874514903,-0.0957216064788434,-0.06118795431303938,0.12838633061970037,0.0043155107253442905,-0.01872937506453607,-0.011462395754423442,0.006841246401405726,0.06641027479357808,-0.033234988937182866,-0.05889553477545922,0.03563169997754198,-0.07164448253549616,-0.0027478977883884483,-0.08090988724997142,0.14232179185125501,0.05385764693649096,0.010947559715829102,-0.025954815016466643,0.04669569461184434,0.01107310558078524,-0.03496433538530692,-0.038904119987989615,-0.021439889829821434,-0.03666324829266613,0.10708257849368168,-0.004428266286791602,0.05142597563067679,0.09456882662526994,0.053963208242302364,-0.01194773129664918,0.007073640985443399,-0.03568359837456648,0.031835540729569387,-0.049845380810368684,0.042746684469951175,0.07157992136169464,-0.05161458866729987,-0.06088249862415135,0.011186465016070976,-0.04994656766868889,0.033644958979822115,0.09793989574374606,-0.039984263966840856,0.11041067394049167,0.021201020362890937,-0.08103005390150696,0.012106980798426455,0.034054230779298374,-0.02703693416064934,0.02215772983513854,-0.09512319382925333,0.011168662406968718,0.034643541615159,0.08075957212961188,0.07638864432259347,0.020562768687048455,0.03904205400722212,-0.020338236832741878,0.06455465254484251,0.0032295934210646604,-0.049782964736068414,0.002355974692317741,-0.0975068022585504,-0.031408126578243954,-0.09931584967232006,-0.012870960713209171,-0.010586433674767998,0.0023222438422033633,-0.011396278323020955,-0.04425557193067952,0.08780570222835397,0.03775957727049501,0.037904273955461185,-0.002839600083518296,-0.03813353469335565,0.02264485738689087,0.10987102807754669,0.14728135047073496,-0.03773828332269148,-0.054435514568707266,0.0962861821830689,-0.06600494738224799,0.04427016199630235,0.10406465600515623,-0.048484530909310194,-0.014119779787563817,0.0019999487698191803,0.014659639460487157,0.025061688804088298,-0.04363534273207513,-0.05056602144354335,0.034407781881348146,-0.019923117495287735,-0.00796855750256793,-0.030901436509327484,0.08721185072884821,-0.06137965684251564,-0.02765804558881247,0.009537824021655435,-0.0629293150255115,0.04547418250848887,0.048470688128187604,-0.07641746435672578,-0.009035106528097069,-0.03471842940878699,0.04069724292549161,0.06669142408479092,0.01967069595606945,-0.060564997691310185,-0.1146987162532138,0.011541766342822578,0.03657085700595514,0.021310578519638905,0.04734062405441817,-0.09423090976176238,-0.017961568950051018,0.011180580332967918,0.04049562526615934,-0.015871998104701756,-0.01133979864973477,-0.05178076434161122,0.009681336563449333,0.010699705541888196,0.013275172089100775,-0.020753065638027198,-0.033029570424354844,-0.04007343116382974,-0.002720895616357662,-0.02422271916290787,-0.022252140845531208,0.004394861504050076,-0.024095069266071904,0.025427241362567837,0.03516357973155304,-0.04889840866970465,-0.06304311330286338,-0.012511413676988487,-0.017830851439158538,-0.03225680066544224,0.05642984807380462,0.019909750570268687,-0.07318090728792587,-0.0013876402296937478,0.052309839943601215,0.0697302513211036,-0.04598956660919594,-0.04841477071222223,-0.05543876905075999,-0.09033842653741327,-0.06404782285729456,-0.036304090497853346,0.033981320698493384,-0.04385746605326013,-0.028718873804211096,0.009313384211929836,0.042679608037071805,-0.06481499354789516,0.014716089209020141,0.09650297947584331,-0.004538351870608816,0.015904982327162382,-0.06771951046869377,-0.02335620894441954,0.07973699335472278,0.027234272119321636,-0.02246379389914745,0.05031698363757679,0.05798715586712579,-0.01948734027205232,-0.023442207849924884,-0.01083963572173293,0.05732146780219162,-0.04244958388590558,-0.06825036133057368,-0.08435622363407863,0.052474411741560485,0.05199304990906467,-0.04079298554564594,-0.043686598303564306,0.01418186273549854,-0.014055636179531364,0.0360428771005713,0.05714351291466936,0.042677764362746756,-0.0032924752986931228,0.015015060468087722,-0.014160453856231858,0.052979506812126924,-0.004694619970795277,-0.00951975775426429,0.04849257057408934,-0.08010538007600689,-0.003425671978080705,0.01779856136742048,-0.0034200646954069686,-0.07918359457694221,-0.03817344122894762,-0.09841939388525893,0.0121353407921028,0.0036028111654331572,0.08344379490984216,-0.04233305158865092,-0.035817084800294594,-0.02099766334454042,-0.010665483386043778,0.036394254481519166,-0.09363555146497077,0.10670747192126709,0.013601192117153717,0.051511186241524204,-0.02638049001922975,0.07053686425891986,-0.06209858239677691,-0.07688159750680537,-0.03082930997963177,-0.0023864168247174,0.039215908956126914,-0.0011726793444081225,0.03953571798210545,-0.06792490642414382,-0.03642573783006248,-0.058223659387048834,0.07734572191603564,0.06581598471205548,0.01317462064607992,-0.010275708894649599,-0.05196737757049819,0.006699818393033374,-0.02528363253222546,-0.06670561400300477,0.004230268935487936,-0.02151881166193463,-0.0026465889230105465,0.0022553177891912763,0.0271093994892],[-0.021681658760861297,-0.03224358835721384,0.030525386585850155,-0.044567983914581964,0.02520284915577001,-0.052282471381869235,-0.04365952712597762,0.043819899817437544,0.06385451091823595,0.07601847949516335,0.011448695413141521,-0.09746825493720437,-0.04541749723974762,-0.03229086406533524,0.012748887553320466,0.07579990520090302,0.03475736318525308,-0.031797161590560646,0.002312302972445504,-0.003264507719401647,0.10951630106892445,0.04567847371824676,0.006153305195006103,0.01605694970776035,0.08468933799979785,0.014450678009084417,0.12299410555043565,0.02972019051892501,0.007158302842229666,-0.023549179389013856,0.025178405459243425,0.0069487134803573655,-0.10499681969963356,0.011045982015179652,-0.05268407363264194,-0.002779100292583483,-0.06858634220317222,-0.024105122137045975,-0.00715980658191096,-0.060471625277367075,-0.04914826484766506,0.021882629186760483,0.01763650305686477,-0.015589800171366812,-0.010831431617046555,-0.07809887346480895,0.03375397573342669,-0.001692887007815824,0.022587546727243037,-0.00012131342467531814,-0.040195171302327,-0.026018427899365624,0.0016715357391961624,0.06154495560727383,0.03744851240020243,0.03943347245421036,-0.15467926433218654,0.07563156835494805,0.04995325333735403,0.03391302738755055,-0.07681491062535376,-0.008549002822462962,-0.021417486901420344,0.03110259218948837,0.07899936277026783,0.041430284669341205,0.05850508534551672,0.07346446788882333,0.021145898546530366,0.0054382132297286605,0.02722230878065871,-0.05423486168994725,-0.0021883106895839548,-0.04144383971430779,0.01822278073310287,0.009038738811202039,0.09824466663467793,-0.013434181714895776,0.10127025763692497,0.007403894873281121,-0.005222732977939183,-0.008639151029861823,-0.025773328958050956,-0.057001562840927195,0.01560993156464777,-0.00524633948833062,-0.02316503514422007,0.02000971554553052,0.03215294395999607,-0.0960667585149999,0.024314432560426737,-0.025286926039379494,0.05720457872586551,-0.07516028837521857,0.008616665113340088,0.07697995255769675,-0.01436717550170622,-0.05748131869581966,-0.1347428074188189,0.09300031184385227,0.002070550410703421,-0.013531049309615243,0.04904744568470779,0.008827119362093998,0.02722217583008025,0.057965556655319855,-0.008033064530835769,0.0183907753847091,0.0319503008176887,0.010690373364999494,0.04726842485265665,-0.05014836681930782,0.011522516966828437,0.08011612235020717,-0.1272345275174349,0.05317712604903548,-0.046766881107394236,0.04835358498246875,0.04431981863503184,0.06596944193607605,-0.05894234611763971,0.01897985196383578,0.046888977641007475,-0.09334906336777882,0.02050154102926599,-0.02945529957094295,-0.035634735994851854,-0.021140836405022147,0.045961927870139745,0.019147240035920887,-0.04081662771601096,-0.016609648825711847,0.009098588801677436,-0.010129695193033264,-0.002205245639066699,0.010410896036211188,0.034150445933800025,0.05561348179317774,0.03168546269822503,-0.06377561925006812,0.009368325748371516,0.043966034127360304,0.011585658783746134,0.007738116285861049,-0.014940881785807452,-0.10036361611498704,0.06265485574653251,0.028801260604142634,0.00909733809664464,-0.041683262634634316,-0.12628571969386498,-0.05849267452229962,-0.053205256169938556,0.00031222797365290374,-0.04315717608009384,-0.07986039487673936,-0.04891973886278908,0.07010319241267265,0.08364234454755293,0.07124698041699082,-0.014483846103484507,0.019302036692285002,-0.004080601457868443,-0.0007149664699581911,-0.04162635701824801,-0.1281809271073487,-0.052173137899020214,-0.054634957063245615,-0.0408101822717071,-0.017942321914700896,0.0791028915723468,0.08091292703222865,-0.03306240543487205,0.022777883320490643,0.005420452916733772,-0.021603430117220084,0.09094536607992944,-0.10176121355578295,0.04130044017950912,-0.005015987463614449,-0.025073661713696117,0.07950069782812177,0.07301398005025496,0.022440868874129764,0.02167529148241186,-0.030598742771236104,-0.0772020673906237,-0.017749578626982412,-0.004600018229303005,-0.04156670184597203,-0.017533341135402117,0.008312678661547767,0.026079244794366418,0.021484536918274226,-0.007204856479392003,-0.012717185452898527,0.03585451636994741,0.01308899740539214,0.05216877360739178,0.07511227171889798,-0.0794455180497959,0.05243123900316816,0.04749433410834284,0.033978464028206284,0.07014564148852152,0.012491106734374235,0.10665632648203623,-0.015590905840664908,0.029245907782799403,0.030933882196039528,-0.11819765311415739,-0.05883494036276065,0.10909745813972037,-0.004241534325371495,0.011061256512989523,0.0110618549754549,0.041488728449585996,0.024121181062105743,0.021484019323164263,-0.08029023331869134,-0.06679934609743465,-0.07366734634814379,-0.07610187592806321,0.02178908583810288,-0.03960776007552941,0.05058949479605276,0.10819534528722939,0.07120622584235942,0.07259011115887086,0.016135505116765973,0.01655543756225383,0.022930420124844392,-0.011560464689108728,-0.019793111744161783,0.027287793139528078,0.09979121907483769,-0.034541424074065755,0.026884461266423184,-0.007520738563613213,0.022018039410553563,-0.040726806188941526,0.01619094628393969,-0.025121254707880094,0.10134839493651537,-0.048728859953329574,0.050839778667646406,-0.06497677135204778,0.03605892098977799,0.00712089325280927,0.018746378256932178,-0.036478527373786374,0.017692600798815735,-0.07589343193522784,-0.0751058845401527,-0.029023621166542262,0.13073578796921598,0.09023953860762098,-0.0006748733562394189,0.03169506576555449,0.011984921637133007,0.030373712776734063,0.0929214282421458,-0.012191249111204406,-0.05096991381676737,-0.017611913908161428,-0.005581576635659808,0.023659312342394052,-0.05051375582900635,-0.03502853948299732,-0.05329956015828286,0.04298986683351723,0.00638088445032176,0.004658287373076349,0.08476284870918198,0.03493524804349647,-0.010101585063993813,-0.00604361963288864,0.021740289205900862,0.03715723332795355,-0.018742904324011635,-0.007677842031719632,-0.048108575521949,-0.007074111378114044,0.023210448019802505,0.012708546471309791,-0.036913563229734256,0.014211518718587194,0.034444594852293016,-0.01832923372561773,-0.03438627886256043,0.034506674535810807,-0.02320677800935695,-0.04858360095540042,-0.031000000438436696,-0.0942159618232297,0.016614218327018,-0.04675190540418184,0.02850856095436339,-0.02247480955786186,0.008690402263444457,0.09266414109476606,-0.002258741760727343,-0.030232745493784824,-0.027542524329461755,-0.05222342702465929,-0.09305034394262157,0.026510272303733932,0.02036708581235415,0.03287533176101558,-0.01333258859143443,0.07203384589450461,0.029759929462059742,-0.010784526180291529,-0.048995322030414346,-0.010581450380029321,0.042198737913667274,0.05682105436164379,0.0003740870310154538,-0.014748193308521512,-0.042687068607340624,-0.037574628506296094,-0.07204538087138958,-0.0022198969393147218,-0.08154451416049867,0.049194301260801834,0.06224017721380321,0.1093717013255495,0.06387959752779246,-0.02900155573338509,0.0676666671025266,-0.0124413858485036,0.08741549716851268,-0.0910956314495679,0.0237114943655963,-0.04538033360593844,-0.08962028471668453,0.015432051956217595,0.021243944080673278,0.011138060142460982,-0.03167376763842662,0.05108490234037874,0.019659541548893454,0.008337800699561429,-0.11252596223487446,-0.036203524071138395,-0.02552179346863169,-0.012279698860961091,-0.12044063577789552,-0.013719702263967576,-0.11455327751425663,-0.014986444426928248,-0.062312690750129344,0.03620600685912607,0.004274985833187107,0.016949123799141316,-0.05009180275998804,0.017360903557906,0.02309166771846273,0.05734295142277973,-0.006675951337956684,-0.04530480703819467,-0.07420136441512498,-0.01121052810917657,0.0014397252091068317,-0.060637682265800255,0.01798551917690358,0.006082642883423985,0.007334384084952712,0.00950766128229277,-0.0725758806870356,-0.0025596228548439184,-0.06902558006075174,-0.029457189607956256,-0.026414039367724806,-0.0663705069747047,0.007313148966845705,-0.05606964530803388,-0.057683677890076966,-0.01968528928959691,-0.010156835609028567,0.009730554839106929,0.00746292943490042,-0.057688751894445445,-0.03415076930781129,-0.017528513802221604,-0.09628018055813103,-0.007623536666691556,0.005336420268529671,-0.03049091258314627,-0.013328362112125701,0.043796072949921924,0.001528541341609177,-0.012585212398023366,0.02608102309852523,0.03933464858773574,-0.03590666833727232,-0.16397233029704605,-0.03518883079025463,-0.009703756735320871,0.050680837103648194,-0.068878096912129,0.07366698924205757,0.10460282965496763,0.04544133585083529,-0.06172819733647938,-0.0007374886743826616,0.09582939932992467,-0.006033486190624379,0.011522644696199253,-0.0541040557496922,-0.1341401999847542,-0.03186966456411358,-0.053545575913938,-0.02664365361752791,0.0698419254599556,-0.0072721620028986045,-0.024293499126537214,-0.08197992797144393,-0.065784953949465,-0.1330170567324002,0.01904764233224126,0.009897920278675166,0.10480820838951359,0.04208143061138604,-0.0003493830087757684,0.01139833546239404,-0.05913422732421034,-0.03704233452651455,-0.07352718912489829,-0.023067735735896478,-0.08069359731258618,0.03209332799031882,0.040528778428914614,-0.06588427637206905,-0.015406238915086749,0.07091024910954388,-0.006665957662588526,-0.03136050548700376,0.06330312033656871,-0.01430916298691519,-0.002923086788144711,-0.002533594741251381,-0.07799147927952542,0.09957889980720647,-0.08858857589791223,-0.014976630265813605,-0.024906340692229818,0.010020480562908518,0.03633572968059813,0.00788401279226399,-0.07701395292048091,0.025906641708526957,0.024098034033486215,0.11928923878499456,-0.05797173464443615,-0.14110768058984832,-0.028245749477441708,-0.021790596832654864,-0.005977934782926881,0.05504992636365357,-0.032906507208190904,0.02473988026007652,-0.06801455541849842,0.029724460501548894,0.05998504449271889,-0.12942997939823112,-0.044138516278828366,0.0025638575099593704,0.0008096889238133875,-0.01975597193652172,-0.000887230021529999,0.033273262673424356,-0.017617476217790987,0.007899452358247681,0.13968484743074175,-0.03897466574306052,0.09235386751030213,0.03952408933795294,0.057294206286856386,0.06755351203396777,0.06300096750518659,-0.062385531653349584,-0.05026738805343044,-0.023108796029307772,0.055473478103780144,-0.026011944739208384,-0.030786048008187315,0.104758094982109,0.08688086379901926,0.1091450320314514,-0.015023565106849454,0.07952159897290842,0.053789087763659406,0.04160736762556742,0.018582246961739664,0.12995729324992525,-0.053662199982397685,0.0016532444900263805,-0.04205187220764112,0.007474624603709936,0.013110769509024381,-0.04128276159531546,0.03267248069501139,-0.059379448546975966,-0.029155070942092576,-0.13989315579067055,-0.04997946324824065,0.0039243721692554774,0.01305618813665667,0.03530149068852916,-0.0021653853456106405,-0.022580283371750807,0.07114949329258925,0.05489509216930326,-0.06462298579642001,0.05707756046751965,-0.07768235899647541,-0.08884652356710308,0.0900304763284615,-0.010324101740526921,-0.010569460657261269,0.05677290724507571,0.06926104463030192,0.09825362472349988,0.07916439251279793,-0.028437926903580057,0.014761131013065185,0.012102835309174668,0.09540970363349636,-0.042004873068509786,-0.03539825953731501,0.04212468888757256,0.08312158489423553,0.02938638022232222,0.11479055758338934,0.08071172775951561,-0.027335621664847036,0.02607680169449368,0.03625711595399268,0.017440342897448446,-0.00971574462654459,0.011582232103937296,-0.05366722513394398,-0.054751788291229425,0.022447217505605313,0.13239348436403903,0.03194784684819725,-0.003066851946938058,0.06133935348602972,0.011336534573101091,-0.0064719443984225045,-0.06224494943542635,0.07630433810092664,0.023013759554682885,-0.039182159953333684,-0.0658153118443985,0.02019046688793689,0.09603834134824042,-0.019535450705210667,0.00770747390157582,-0.06669656446606433,-0.06409254169577817,0.05525486566085742,0.011255038740705384,-0.001037758059185121,0.0028239156060037083,-0.08823465359118997,0.030982763896256704,0.042210691005157695,0.08871497756848884,-0.011451671095467063,0.04131606674753321,-0.005820435611302395,0.05621176475304542,-0.009373058547628713,0.062204216747060254,0.008613790453430432,-0.14462834551801992,-0.0014944603487155074,0.017572478371230733,0.039095084278854664,-0.05734812960162406,0.004245178398493748,0.0031620659331527182,0.0770324336269368,0.06624428304770971,-0.02754584478488502,0.021508808514169378,0.026737506535357287,-0.050835374608049926,0.006188592963018739,0.022867559330683206,0.005608621957502036,-0.038671352920450895,-0.018793090140553314,-0.02413749387061885,0.0356722929200188,0.0531771981695743,0.008330375514395489,0.0657213661507618,0.09314795100992955,-0.0534119429875353,0.040358912578420676,0.02771117767000868,-0.020869082784820282,-0.016528774483120335,-0.04767973060126006,0.06078534016571338,-0.042963676302283156,-0.0761932443714342,0.0006474387246323726,-0.02908972057325313,0.059380680190651965,-0.024700452662858238,0.016071556268244802,0.02517400639218537,0.0595884424255656,0.032620257877348964,0.06861164047097831,-0.017877338432114438,0.057708253492783725,-0.011462189885532952,0.013167472728082654,-0.009588504344616725,0.05576062955979094,-0.05490020341126163,-0.019099849501672823,-0.06868909209739311,-0.02761291958840377,-0.0016636217743890502,0.07975464847693907,0.03948724797353653,0.037049756271292214,0.021442505253604693,0.017697489945652845,0.03442398629581623,-0.09598697495900582,0.09759106562918285,-0.04936845180440475,0.024553977884244235,0.027847716897577344,-0.0013354223236008139,-0.027402143720575995,-0.004921019953455539,-0.03344422874287185,-0.0005949600413624014,-0.020483685881977704,0.08763840548206982,-0.0490459485093849,0.014067896103366171,-0.015137156325701015,0.01093500396113066,-0.024196043210155185,0.03785437024320539,-0.05426776719163635,0.04906267636779581,-0.12633865073667974,-0.02684374064265922,-0.013327357701501154,0.1226353109885914,0.016970874399696034,-0.0287644255127977,0.08066739293688159,-0.0539532900976517,0.0334163643707457,0.06918123907429946,-0.01838268440667815,-0.00690509748834033,0.05786069559691918,-0.05528676661692014,0.005967237432378841,-0.0744913514627732,-0.10849285231758161,0.0993939481547619,0.05378188396924156,-0.02903253403621597,-0.048852209331844074,0.09488782836769404,-0.05581020771299418,0.009329265731024139,-0.010151513198848435,0.011738206593165455,0.04648873803062967,-0.056973431873821506,-0.04022505386468124,0.020283875732698745,0.0772634407790902,0.06360580912876633,-0.04548832122292235,-0.031754633306702355,0.051082447344291126,-0.0013009204475602147,-0.02896778904170106,-0.14875409020083327,-0.05653878094011874,-0.020613128026977547,0.022007502454284792,0.0351763724717181,0.008473185610159304,-0.028214213286803864,0.025462171126236298,0.03074054384007459,-0.03934514537351162,0.018543048634122133,-0.06917109022258984,0.0038057472074575893,0.04988841001863277,0.02805753147926392,-0.010112810430154,-0.08868158155681304,0.0032455528593755317,0.009039377767393848,0.01697830662257524,-0.03847338794897976,0.013286505085773233,0.014066330569732645,0.05144090651395668,-0.04553475994992397,0.01239476345234682,0.019374117885291357,-0.027507882449807303,0.045952022099910166,-0.07597911351318694,-0.04343307631821584,0.0306149737338795,-0.0935147795769516,0.04976666421281598,-0.046791988687178016,0.1566745553167532,-0.01765995929912127,0.06681393347783333,-0.10345527246350654,-0.027402306417935927,0.02973696169611308,0.03957731087916055,-0.015961713884551466,-0.018256744803451717,-0.02366822817442825,0.010410161357030752,-0.03250038360000781,0.004032830039459296,-0.035384491589597,0.0357863695833292,0.02557092157117493,-0.0268713365328919,-0.08639809203640653,-0.00005432940416473358,0.02146860932538412,-0.0032652654317381485,-0.029306711348788216,-0.11968278724716273,0.0019332931648857429,0.0056520865852085055,0.05001907531501371,0.040428498057250316,-0.003805778486346585,0.03654274119454429,0.06296008278047784,0.05525978123852614,0.01821640384522534,-0.038225295333053765,0.06372738388696489,0.027359289768375015,0.05547477772944046,-0.011780050549345332,0.01778883584937412,-0.008338076828806721,-0.012131373059586479,-0.05622909603512566,0.08678399661019799,0.15099184590140688,-0.002174856668537493,-0.04999676026226751,-0.03962209680351005,-0.020082262295933698,0.04391964384230467,-0.027896786172651875,-0.03819222679558637,0.001287220521508846,0.03346586422617181,-0.024233247451482427,-0.011515416491484456,0.0571605022091939,0.05057215700513279],[-0.05771014553385196,0.06404921436796461,-0.028871793593151986,-0.03376351872370479,-0.11019469996217233,-0.02757610547734303,0.010271953700332747,-0.06498281229580126,-0.03819285797518317,0.10884324663647572,-0.04429776973803093,0.019217274471880787,0.03256317618699099,0.01549644748004251,0.04600978730290693,-0.006718653173663176,-0.07555592701996018,-0.031418348214181505,-0.01594052118527785,-0.04322843964352693,-0.09620753169456615,0.037127018995265215,0.10126082532021073,-0.11297925817005527,-0.047594800525939104,0.047018064810705584,0.003965883854957354,0.03962157062395326,-0.07036988126772863,0.024401383207744966,0.040887564420997155,-0.007741797840193549,-0.02805554462610103,0.0004089615017597292,0.0198547681665915,-0.03360711163556894,-0.01640643609325906,-0.03221030624973651,-0.0012155727135174117,0.03009669073339503,0.019991192756400437,-0.028563458597698543,-0.01991930874233403,-0.028674136355384516,-0.027782620302616547,0.0102838402037782,-0.04920933739592195,0.005476827562368118,0.05782438795336787,-0.05167065288284652,0.06077374141226221,-0.11091953645286629,0.07647085927230546,-0.07807178205089206,-0.034865972470157006,-0.03347067246713745,0.03439535886116712,0.04346057330044364,-0.06952643604024283,0.063028819175639,0.009508301600175512,0.067380007963698,0.040752579469416995,0.009146902078733081,0.042351651997687215,0.07568738149085054,0.01447629192517888,-0.08907182195286542,-0.005999120008010334,-0.11232033840409347,0.006126553184431309,-0.008682733003069732,-0.12643713796094602,0.029271146062086743,0.008827889344112619,-0.018463615394901906,0.12965297417699406,-0.043460925533759985,0.005183748311879008,-0.013103673219819144,0.04888403309470195,-0.09098460122885572,-0.027606758698804367,-0.0037061440929457433,0.049641168558227686,-0.02361862270369161,0.014407493610903847,0.09291230020107381,0.04003553247490287,0.07536055356393534,-0.0823920735108733,-0.01783830246218756,0.03802549332193023,-0.05192833581838033,-0.003736468603651964,-0.021785361007943704,-0.03659163559438581,-0.05339247750423286,-0.0721764545293225,-0.04598324826072901,-0.04090591139253001,-0.020408959301714977,-0.041085911769390825,0.015225334387558367,-0.04536033089799667,-0.05649743885906138,0.0061422948433346464,0.06110489353495358,-0.04388051972258107,0.019640147497757346,0.11305059121736555,-0.05565581602341716,-0.01986985389243872,0.055846819715718976,-0.03568423990020947,0.058268231894735664,0.03717861377838197,-0.10345792529249524,-0.053200669295092366,0.00017634291214588501,-0.07146785928983701,-0.08709542394640359,-0.029383861489879284,0.013397029589517651,0.017729622671734415,0.05727676456166116,-0.03705033321777577,-0.010332898497967837,-0.028532421302097544,0.01900962636237343,0.01186291432293291,-0.007412237971510021,-0.0804162871676116,0.03621137117795245,0.009568477924754772,0.019133544694116437,0.009790455604604386,-0.026158141418392726,-0.045315788473753026,-0.01804483710011714,-0.05221843400873481,-0.027594772735602558,-0.08230734465329012,-0.0029113124686477873,0.006058951288990947,0.013554382280084168,-0.03942010411137237,-0.02305490380730425,-0.0037883437680060745,0.0430595712745148,0.02918251342225546,-0.06858145776527629,0.10135686481384773,-0.0541758327426899,0.0007464781168981821,0.01598034732863569,0.03918322888260413,0.10872620751166759,0.037857721639490874,0.006784569042369682,-0.03142343500031011,0.039806963152943076,0.012351463054766275,0.010454185396048208,0.010045544675305874,-0.10310463915011991,0.03315769933016705,0.00933990309251952,-0.04960905192766503,-0.06658171617362954,-0.04004096713730479,0.056166983222827434,-0.03014629043394889,-0.07108416328782695,-0.07078193002922593,0.06101945247467462,-0.07127272664690398,-0.03448359622960771,0.015445579006762711,0.06822101074092368,0.007109841818793508,-0.08164404388537282,0.0061951372952348364,0.039077386034787366,-0.050643475465780255,0.0864578037796472,0.01874759649159475,-0.04194059901692279,0.004214691254556239,-0.002513258218946836,-0.013573545529983414,-0.010883569433122672,-0.08711144544989295,-0.010041660872341564,-0.014172585029382736,-0.10008091432776853,-0.0073192739703949695,0.021582901956440307,0.01990888389268944,0.001572658010201106,-0.02217714710281412,0.045810399289503805,0.02479729590607363,0.04583790715703813,0.03381117865732244,0.06716038715106383,-0.03780489354449946,-0.0368137415148163,0.029456973789878358,0.045984482346822814,-0.06357068743356929,0.006323943744545234,0.02934038186003646,-0.009807341319457201,0.011157519854928431,-0.07149260249234153,-0.07811837227018954,-0.033435986163545116,0.015909497569912456,0.07470285605783195,0.013212234116906477,0.02749693602184389,-0.07218246452659931,-0.05472782733742682,-0.009325384593596957,0.10053171425230231,0.0028591459949190616,0.027517458072188465,0.011418345850818043,-0.01535358219971301,-0.012975640303649498,0.01806856082139616,-0.08203032073431626,-0.018362323996502197,0.010814104595743874,0.006056928638780526,-0.020657907958229037,0.0004075844322943329,0.028777121668233978,0.01457302589878906,-0.02559145775275192,0.05184692616158822,-0.02140930868362899,0.017307853392984632,-0.05753891284121155,0.02916573899506497,-0.05030999458983752,0.012157543452354775,0.046140253814851824,0.06235172286384033,-0.01814438532570139,0.004854636128673061,0.01368001809724172,0.001421433823253452,0.023282715941825974,-0.07940962933921293,0.039802339197428184,0.04763577631205499,-0.057886059134791785,-0.023910039375661496,0.024064854421158674,0.056388235531535665,0.10105053416144023,-0.017571906625021474,0.04953566735502318,-0.043834197788465125,-0.007840372293866981,-0.11670440465994995,-0.04470055734655559,-0.01897443827495733,-0.004926278225627439,-0.023069286722696113,0.03091679637066283,0.07189533099348533,0.08134202498990435,0.05082879687057633,0.11907712677382336,0.06255081448269428,0.06802717578987,-0.03197594230213918,-0.00042477013187112344,0.034413149255025074,-0.09674364731041607,0.054534906183472946,-0.048069270297033014,0.07336938947161925,-0.029425620623050385,0.005853377927093843,-0.062022123204058976,0.07431095480371716,0.13485730238868016,-0.023165438747896467,0.005236831479543702,-0.06367284124308505,-0.062000656166338625,-0.07665263475806859,-0.049554556609080626,0.005447174634612578,0.014253766906570094,-0.08219298493003137,0.023960329575922645,-0.029109960300855376,0.03394938034076065,0.07618741506087555,0.0387564355031118,0.024659676772867484,-0.022109763504145175,0.004412069154381418,0.005130218975871211,0.005507379541343257,0.007504488688892662,-0.08757969652667023,0.011663125964405706,0.05121929577815194,-0.03854122521837049,0.04063348812754286,-0.017249879408313497,0.1001588977231212,0.07752287982511709,-0.0943267582895272,-0.041800779282159514,-0.018751391673021325,0.036605444193986855,-0.016113405847950273,-0.08649908697575032,-0.06968504084399788,0.05382113481875561,-0.05665105274960868,0.059558993626531456,0.04539853856896059,-0.02898998792154469,-0.05036245056953995,0.043918959354968444,0.04027413944207495,0.04671596773809707,-0.025137437171883,-0.031482485221567894,0.1006247815872907,0.009483239080673365,-0.09404120702019321,0.13830178528089734,-0.03760302602125028,0.04493518980982684,-0.03561071312357809,0.0006181624372493277,-0.0139926002047316,0.0608533185817783,0.05903858957212341,-0.03228063994757619,-0.07522112956010805,0.03676939740251944,-0.055182275316382215,0.007840205403468224,0.019189177913657766,-0.02099839961403094,-0.050710811464577996,0.0589003781711444,-0.009879984894990371,-0.01984158115013618,0.039033313510163446,-0.15060224675345943,-0.06217814655490253,0.05608499623315628,0.048336064620317656,-0.03541327430287215,-0.03246882453226874,0.013105077135855004,0.043423742311349524,-0.009430087810768716,-0.008305809970083108,0.04918324366194645,0.09887620054985638,0.024363005053486785,-0.00795119609211413,0.11083928309383387,0.01963636445203071,-0.02114758122813379,0.025560368158502114,-0.035424891213997646,-0.05536812112150504,-0.13598648543815653,0.07870220660648046,-0.05203843282640394,-0.009525495953207504,0.005764013915572421,0.016088224246205342,0.06592946765861357,-0.016278702495715974,0.005205253830515946,-0.05026653517652872,-0.013766472973566727,0.054135866490893435,0.02884948956283879,0.01699461213343739,-0.0025053700155005403,0.04078532360526581,-0.02114089157062986,0.022888608242806405,0.06772568324016591,-0.014990609088440205,-0.018984667318184163,0.08474415313894292,-0.015469780071403375,0.07083420407350134,-0.0011262151435651713,-0.08118655662379107,-0.04368547633941255,0.04142524749308796,-0.05010414715883046,0.026038437695686246,0.0036961404845416083,-0.025040114492057182,0.05663183159343962,0.015310155471655238,0.03514249169245853,0.020215696748779897,-0.0192091693399051,0.014438428775346126,0.03790919440286975,-0.025471562282766716,0.017284444304471278,0.034174125283757684,0.02976456756272263,0.04073065704248216,0.03389068484963727,-0.016617876493358844,0.026635426447198303,0.023360263187353028,-0.04139911852257285,0.09960244805769362,0.01504939914583933,-0.004423527396065935,0.09222236101897391,-0.051399018351985785,0.04158639892733306,-0.026834664187975588,0.02389901862349282,0.013369656002689882,0.03617324531792985,0.01754973870251114,0.0016226275722531157,0.10592778489922504,0.014030115430942973,-0.016766227108403826,0.01923436251355937,0.05152990126645516,0.011625645943813039,-0.015948530332857477,0.01768796801222069,0.03855412633652895,0.007205379198757838,-0.03441741266945621,-0.002806755657433598,0.0515800738049305,-0.0024618728078112102,0.08927864265318405,-0.02192196840947513,0.035864853416879235,0.006662737451926643,0.054644940291024555,0.02876707572356444,-0.02371766716468776,-0.0166759484330533,0.065128900870516,0.0418270129874415,0.06562370148879805,0.030204854092910925,-0.0797296370454658,-0.04491626659527352,-0.0731662481705481,-0.10307057325382835,-0.03864985081652157,0.012946096270127608,0.025883529223701233,-0.010875722636714288,0.002794982966823449,0.006685514336134551,-0.020901550750447643,0.007870912285419581,-0.0036573422938402066,0.05032576559491848,-0.03813701382281349,-0.07335049779925018,-0.07668686111608153,-0.02319857624240062,0.01039902746250079,0.0028503493769083156,0.051365985803662514,-0.0018482480916070072,-0.0029022280025315242,-0.02799789248361625,-0.00709141394079309,0.0004978463828214294,0.04643335445873452,0.029211428096488204,-0.01952609576697102,0.05578312116513659,0.05966969819463012,0.009743801587800097,-0.015181033947427583,0.053978870883516356,0.05077126587071802,0.034963062498098635,-0.04516000155790622,0.1292746664752732,-0.004896826760310666,0.01909213965715783,0.010212238240410083,-0.05511737781343777,-0.0335849469527957,0.009570070907496876,0.01718673012494946,0.012709677069407968,0.048857644988390264,0.13065862625372673,0.17239792277146798,0.06233558534296842,0.0018225404422540085,-0.03538995657688617,-0.01973498801057683,0.02454630589687251,0.04368880932502148,-0.018723259413056113,0.040435607325630965,-0.04123995792508853,-0.012051861522644869,0.03807939927794155,0.033630536234447256,0.03856085796710679,0.003204754127988532,-0.034464616994069205,-0.030337241336066724,-0.0020079543419531313,-0.009304152767108363,-0.02113206887005056,-0.06524228489903115,-0.05434633457849386,-0.01850542790951267,-0.015207358188962572,-0.028058691368831212,0.012208086550649623,0.0653524481974282,0.08881939034347583,-0.010754974049846554,0.08244443548180781,0.04720753218090523,-0.0007696737047224322,0.02116907631146168,0.021222926526189477,0.03199072031645877,0.02868465474013135,-0.024052156857841095,0.010695735731898264,-0.07343812907936423,-0.01934695946450409,-0.04422328408300557,-0.07165006802826082,0.04564410274542231,0.0799931511073632,-0.031127053030790573,0.03565239102111661,-0.038984059295679205,-0.04163168343066939,-0.05116384313044621,-0.02481935814668033,-0.05648863529434632,0.05851568973909389,0.027983464656236773,-0.05282947460648924,-0.06196857684764601,0.0784719378172452,0.005853986646703313,-0.031313485684783815,-0.029332824820072597,0.07263620120311101,0.03465305030870847,0.010776659228871782,0.009652182586633218,0.03892192667200611,0.022982454867074564,-0.01357957559826573,-0.05754909005382816,0.1357065618059141,-0.015132566553547,0.050539293597506904,0.002357741982209416,0.011914185683437413,0.0029419418801042195,-0.04076395296638673,-0.04572693072288449,0.07036951233812626,-0.09668318419803258,-0.1487030908939453,0.0737684285217893,-0.03497915519278102,-0.01280056764075922,-0.004218241048813489,-0.05493501315417612,0.017380703859084974,-0.000960660784742945,0.01702950593918872,0.10618054292135477,0.08110227636135835,0.06407810677778582,0.02546314060185454,-0.028212989245764902,-0.10752521524724885,0.03504620332970643,-0.009254887525993405,0.039047427197455596,0.04576237209237985,0.04045931503908226,0.05678031687662039,0.07908661745213548,-0.012979548987344314,0.032897453711459454,-0.010897568770366378,-0.023418035863900948,0.029224062473296227,0.09338444695066839,-0.038476576992475066,-0.10055681741065035,0.01871247912467162,-0.003158533103249294,0.05527514356125081,-0.004767333020669434,0.05473933160557271,0.05384578154378967,0.005646798031309761,0.07136256016606654,0.02180806112166521,0.09654441185527238,0.02269245087310094,-0.06361194926716998,-0.037772627717177515,0.05892909570569412,0.02424931427598534,-0.03317236237541544,0.04134854546945317,0.0034712372029478845,0.005286140060596316,-0.01963763754517363,-0.09419541209500319,-0.031462890924586644,0.06035373150143582,0.013940120668997242,0.030546832176277947,0.0050696631918279045,-0.025186719062553254,-0.02980126555073296,0.011580636055299668,0.036846366849631745,-0.029688723002172766,-0.07447429278364935,0.07565454809721171,0.014391381351687308,0.046122891424244736,-0.04502707642404074,0.034659870626994535,-0.09132625950504478,0.005998544638267054,0.038833717089940364,0.10484601765434368,0.046819648359903564,0.03148451224177928,0.11312134266817625,0.04131389203754632,-0.10006885527931014,-0.10988624222117868,-0.001531878439847709,-0.024779862634472682,0.0058460779538871185,0.04424428859874268,0.006271635649411367,-0.034279907492569366,0.08154024861117824,-0.006487309277806951,-0.04264717934568208,-0.1256918570265063,-0.09535265096269638,-0.07240688287721889,0.06896186101808063,0.05574209919219716,-0.013917463592209028,0.020190876023986764,0.10504561332296712,0.09506902505767356,0.043610894970623704,0.03420534890834174,0.07574130197588382,0.0966492718398884,0.037713210834838765,0.051602140563113325,-0.14000530594185742,-0.0355191086611369,-0.028412730020690436,0.01884314670406988,-0.014697643542382855,-0.006936933542848373,-0.02256764979579405,-0.028425133587843432,0.05977726826976921,-0.023071034643969975,-0.006525303350067989,-0.012012439928881328,-0.10999459392816231,-0.03391740635612402,0.00400730809327364,-0.0249577713825088,-0.009572612335590413,0.029887752395882598,-0.0642588363620594,-0.09277528838257657,-0.0034891709368277905,-0.0032376567620909322,-0.004188691692850811,0.05850242718680193,-0.022677566269659836,0.003093964836027814,-0.07300510404223548,0.07599684533375048,-0.027526729597008342,-0.0457616965208092,-0.02922423719478777,0.00009237529541822266,0.022406374523611668,-0.0548425454216678,0.004060103554737055,0.03672670312715596,0.01963331097755851,0.08061257280990371,-0.04297333943778691,-0.033584726638343707,-0.02014362010298982,-0.08023133372469819,-0.000747805279197143,-0.0637890643236684,0.0749341457344236,0.019389262069185113,0.010266105551870136,-0.03705376907773883,-0.008114171969601415,0.017312999030941356,0.00566144342413358,0.0008932778874658698,0.08204988035768683,0.0067413136312847914,0.04262330822204072,0.01098840899864234,-0.027543514439691965,-0.01812530931437371,-0.0064322029109308895,-0.0476876963115806,-0.05682065972991869,0.02323157351753117,0.020079178422155904,-0.06566614637557953,-0.04709590338234588,0.07738286885120572,-0.03460242253774898,-0.014824407778108943,0.06621247355033848,-0.07172347383094942,0.04870885239999777,-0.02920634765070309,0.06766401838892987,-0.0195224566377514,0.04829547471804212,-0.06944044642922946,-0.027740176483758698,0.0025011236737276133,0.0870374425123728,-0.06669609885447889,-0.011183333441602985,-0.02619991879289912,-0.09051731012463154,0.06915211209978368,-0.039634318383290686,-0.048844935694134194,-0.006841017778195607,-0.040542958784031996,0.00025598397405666,-0.04328208234749832,0.06240683745830306],[-0.0006665246928520936,0.024575850403340815,-0.06686520468110574,-0.05391824100825615,-0.05518251880893044,0.009317946714703792,0.007913151012269696,-0.04516683634978526,0.023148666368488377,-0.023089120986170497,-0.05473116817362225,-0.04411181475610832,0.04867133996422715,-0.039775439903121323,-0.006712849985948661,-0.09886953355431917,-0.019806982156037416,0.014397510564599876,0.06262668397737445,-0.07009853791446938,0.06159310938337854,-0.08829782018426448,-0.02306515116796149,0.019535137222064444,0.08923619568002791,-0.0816107856147092,-0.06921430891628373,-0.019702816260651002,0.022733323467464338,-0.06402777209045446,0.03668373146609347,0.11748929123387264,0.07919021927251947,0.01296430827718995,-0.08335473444941999,-0.09150719563445853,0.01570333384629083,0.013056631781192839,-0.01942920707009511,0.01806993308092748,0.013289512274333967,0.07361350584418618,0.04353215811985828,-0.0007583477681220496,0.0232489878448982,-0.04130157259584735,-0.035619369980550784,-0.00027635375796168486,-0.030446070985599698,0.03051321521451768,0.020983235024567067,0.06838008198615526,-0.03893673143150659,-0.039607452539929866,0.056560050698464245,0.014330801606078568,-0.015820593006251354,0.029285782914530864,0.018793038394731874,0.009535642862148301,-0.05115133371719361,-0.04265674131234951,0.0037778112002756297,-0.014250335796778523,-0.05369261290408732,-0.013394896046581282,-0.02091092564318872,0.027822110382231764,-0.05019970849596626,-0.0374916268464422,-0.027545072505155966,-0.03129737297556727,-0.007209582516958782,0.10735061391746237,0.029819101916284087,0.02151532559122897,0.00550395336475874,0.030725063197586486,0.041068200736813755,0.01832438889381069,0.021989613504915056,0.00950677453228639,-0.02935796494471285,-0.06629861869874097,0.06430511398700318,0.10321158059615676,-0.007622355072056302,-0.09599384051667735,-0.09887035437549167,0.04742185333577903,-0.08036730637845048,-0.10041963881396171,0.06177396234568742,0.0742049913269109,-0.005346294466342398,0.032200685278614874,-0.007893608041127983,-0.038378880240374155,0.012037206779260944,-0.04649115023136167,-0.01984549705352702,-0.08048864539615534,-0.012979467433330822,-0.014950956855626696,0.03243544087618903,0.029590510071365952,0.018305650448457146,-0.018116288782440024,0.01446660233788975,-0.10244452983691169,0.002051273310238066,0.0470059209790916,-0.06505725185274269,-0.06608771395813422,-0.007490737774468261,-0.02004589060551469,0.002601010530801943,-0.02528543225340164,-0.062243428174940045,0.01294321569309234,-0.0187165503579214,0.046295717235846315,-0.0472966125747903,0.014050583230403613,-0.05092074633448706,-0.11149342745274149,-0.05785841131750465,-0.08366159243110761,0.013486605263679022,-0.09182645178773324,0.0893087695445,-0.04950806591743887,-0.029475163594265056,-0.05166994898517045,-0.0047778377039490155,-0.02845932538366073,0.08588830327798667,-0.0005867998104062739,0.03777767239822373,0.07382129939700371,0.004791206602486922,-0.03007383226315394,-0.04579677669866919,-0.004448227495454919,-0.08505074352400029,0.038227012206452825,-0.06060638089611485,0.015571784250384491,0.14422123172511456,0.02600746950106979,0.036535683499838836,0.060887127784389164,0.03584428541791957,-0.03040468237155299,-0.0021874487862624356,0.004558317019462448,-0.0446928181344662,0.030981412723802594,0.03370731112271124,-0.014321100209821391,-0.00976035759584127,0.01441009885980162,0.02084187935428077,0.07766820924592231,0.08232348966701857,0.0988612122565912,-0.016921427984182436,-0.042928084195351844,-0.042435622330037066,-0.08141122397151629,-0.010915930924502387,0.05418326416135936,0.0039899773154298285,-0.08478546933467918,-0.029260679815942492,-0.014207893302652118,0.06844959958993886,0.06061984507459431,0.08420559452091546,-0.03928170328999512,0.10096398748515097,-0.03199714490564464,-0.07572230999181115,0.0358197317816648,0.06929269760656863,-0.050939561472865644,-0.03742663660145748,0.019524431881161913,0.01789147106726297,-0.011068060643676384,0.07314509355200553,0.025762963941882936,0.12495294768214418,0.021813775055528943,-0.010949392674931072,0.01792257147595143,0.03798338112655705,-0.03872866044330915,0.006263413398272734,0.059108311264778925,0.10162300700491593,0.10214953673451965,-0.007451108080606922,0.024716894212744703,0.14341716052298428,0.08834153544483395,0.02407541060826352,-0.09697060803403992,-0.04363220637141445,-0.02854241718255753,-0.052692238248695795,0.13249588534826026,0.09049633599404595,0.030966988160081695,-0.013781489163368186,-0.010700241634342177,0.027211027830793644,0.0609329155592413,0.0415775364854901,-0.03779568144015609,-0.025968672536773676,-0.03292528612414779,0.00671853594776244,0.02723387279185389,0.0032902556745730296,-0.024565249503748835,0.07564677994494293,-0.032517927942252306,-0.06054645761155622,-0.03015968144139317,0.0675613752190945,0.023240195883811977,0.0263628057936296,0.11680535584178328,0.04400123929212931,0.01784311878596411,-0.06236701783004481,0.09431858817001876,-0.009161313535816671,0.019580998012352628,0.01809203418411628,0.07937748148230164,0.07141127160912988,0.1049831290130835,-0.01647892034304897,-0.08199224481812568,-0.023360564452434156,0.01989805546013137,-0.009572769957500251,-0.04086999330920221,0.040382646110501734,-0.07124319147566095,0.0023892243763400994,-0.018663755070349557,-0.02811035485519089,-0.031908101914189885,-0.02524957504946263,0.00041200395300730787,-0.012552808799277587,0.03966821698883186,-0.01692933978554179,0.14544671899817757,0.01348641913580412,-0.0390984946213323,-0.04667987119786248,0.0025815903331922727,0.045235705625635156,0.06864835370431505,0.00925965912186105,0.09775621774448674,-0.0588379236503334,0.07752256132208338,-0.048588389377282985,-0.03009175181009301,0.023969584193374305,-0.1031270070005393,0.025949776403420877,-0.08661697584997514,-0.05425243609772906,-0.0017464864854873792,0.02525650134312522,-0.08487173966053231,0.06397326614783098,-0.024590995505289693,-0.0502431594370853,0.052351926231664875,0.019655755787462894,-0.010556422984269655,0.08467903721399964,0.03929592742339954,-0.0009063977039551464,-0.09864927765957009,0.016207855229751142,-0.035159470911269565,-0.10467479846194866,0.03505533518887823,0.005820464498823611,0.04226951945132374,0.02461640883713306,-0.04294895012044234,0.03425657521926646,-0.08997879121765709,-0.06438833287875687,-0.06059247329110016,0.06522639641485124,-0.032686824052828335,0.03758670758980085,-0.0392753225818622,-0.08559750758065264,0.1412038848979618,-0.02587989457335413,0.015568533729664755,-0.026441615947264675,-0.024667673236898658,0.0174149416217808,-0.001526328047552261,-0.04283647592150969,-0.013471361452994745,-0.039526816582321225,-0.07003486802076224,-0.10373810772428588,0.01231222543657943,-0.10354247306092107,-0.02719334502855534,0.03554168255679017,-0.024169955919135164,-0.009357895518056412,0.08763692629988383,0.055744509209583105,-0.12119262777778987,0.04013210335636624,-0.0866829165356201,-0.06167203392648245,0.03951830434163414,-0.012942467836291669,0.03574579369885327,0.006000840563754879,0.06589157766017562,-0.005494494139881374,0.0017931698685917736,-0.010878867367515423,-0.02049203738376492,-0.06706895612679141,0.00876503964398611,0.06173792982492503,0.024076645109603164,0.05310877349107222,0.006141125995825972,-0.09603624977859723,-0.019746051175371024,-0.12687623260115352,-0.11782943988849832,-0.0774598134627089,-0.010739793698048668,-0.004969972497606819,-0.13612363618644632,-0.013656886428356163,-0.022957386995745066,0.049913656382280305,0.07677889758044287,-0.02669502859014499,-0.04301385397775018,-0.024239931665772117,0.00012728699584976113,-0.06391368532885915,-0.02164982337214205,0.018367058341404285,0.01667595526458462,-0.03623155841786307,0.02271824252709473,-0.03593480032962388,0.09823160810308153,0.0022020912686647343,-0.03270346823050095,-0.0676619369498698,-0.08068584092703908,0.049586762909060125,0.0032754964234802822,0.001982265767542612,-0.07073090162985624,-0.007454481361436267,-0.09593811965370592,0.002104746013921861,0.041374687158480104,-0.005399641282230048,0.0185113096678789,-0.11142537422406582,0.02531115303573305,-0.019613905097965824,-0.002088264554372907,0.05738839042532484,0.07327457547368027,-0.061642223607747966,0.0036132844181075803,-0.02577837137584378,-0.012656250139338656,0.04124465161833143,0.020694786521332047,0.0002773814140714171,-0.026569068468636787,-0.013418533604421565,0.05611509100791402,0.07732133976878798,-0.13162625332422914,0.021710940691619825,-0.04680155180081731,-0.05494402592434886,-0.09318079781144177,0.03765018706970518,0.0011164860641208981,-0.17138980894582523,-0.034675785670693154,-0.021316656385699875,-0.07418246022415978,0.0027667407640677858,0.1534258709843264,0.11005389845664988,-0.06857319457809402,0.020044942408763096,-0.0072511322237452935,0.04524531135228677,0.02200389034037789,0.09467591890867808,0.0053628617434211,0.06450380581097599,-0.05452010446196714,-0.04602359839739699,0.022000241244268394,-0.013272703540603968,-0.07428239091237794,0.04936609634502588,0.012912820958580016,0.09178347462216259,-0.012156685142116687,-0.0893529361588171,-0.000024646612373648962,0.04436320079789901,0.022705046773897952,0.02823707973690183,-0.06379849602197984,-0.07811303530365832,0.018741028527610528,-0.03425320907846564,0.0432218778513598,0.01759999891630962,-0.04328164958996741,-0.046987363170704136,-0.046309474583555256,-0.06089465827445498,0.0073031841503238114,-0.015512378733818647,0.06709276227703483,-0.011691814037992644,0.03014931527749798,0.04778737156033308,0.09095699346719902,0.08103554551714079,0.0314847248820374,0.07108108284258537,-0.021413779009699836,-0.045946950354278634,-0.1221678849697132,-0.007399466126426455,0.01724040893780382,-0.05453701491143377,-0.027146228824222508,-0.012481369808987092,0.020327793299525217,-0.10734409467395241,0.08791725328906001,0.030574390560870884,0.08519246527413463,0.011131592928876216,-0.007946964082024102,0.030233176980370254,-0.0374341433380302,-0.06962605953118944,-0.12938140864787057,0.13948443668584493,-0.1023009512457467,-0.009107140999917215,0.030399923884059012,0.040897463490994955,-0.032024371698566374,0.007048218086044783,0.03494625746327101,0.04896090711473878,-0.054891243489566276,0.017662806012970798,-0.12098439010842726,-0.034451463425194485,0.037687718209999915,-0.15981760180579363,0.01139620414226319,-0.04737458585853493,-0.04269115117899011,-0.024241601650572018,-0.030547957136636206,-0.03439848886488962,0.04431642243092524,0.004428563229849457,0.04479212432794249,0.02397566622651505,-0.11473088249806106,0.022635035635672235,-0.032838384898212045,-0.024445969534412266,0.0902040453750631,0.031721538055225804,-0.018362539913399773,-0.09743072364437842,0.024173131301733077,0.057265449802030785,-0.03684779688561069,0.018463130488673794,-0.04560695969889283,-0.030359274427486104,-0.04084928265984762,0.011382443661590346,0.03093437109006604,0.007215743134320947,-0.013428748702604399,-0.0039246995205015015,-0.006996078705996368,0.014804602210048872,0.06894901213967118,-0.009305608295194735,0.07880248283098493,-0.06948367194879473,0.008513160960116907,0.08033251203836946,-0.07054621407939225,-0.10461722609679111,-0.03342545920234568,0.06767046627557463,-0.03382595302585569,0.03655186118725386,-0.0034530901599716824,-0.0801613315706551,0.013590504684002606,-0.0021709737470275575,0.07614366453956714,0.06955399994160277,-0.005438882024819803,-0.026037779369727298,0.06733137571263859,-0.05548444795798184,0.02562893613257227,-0.03995321549451528,-0.01539824238842598,0.004872098360087223,-0.025605802939078978,0.02199676152575528,0.04762157136182262,-0.04064829470020113,0.04484154199230929,-0.012575214854256991,0.02005595895897467,-0.06835837375607876,0.0065452689680432176,-0.009320025536635924,-0.0055477838543612126,-0.04318158290940827,-0.011772812295409838,-0.04211739334457643,-0.02592173339489028,0.012887378220771885,-0.05458147742637796,-0.007878203984037014,0.05853186941441231,0.016391480800337036,-0.05903827234061603,-0.013535348413865613,0.14258216637948617,-0.002297163257796574,0.08780275048505641,0.04515288148264543,-0.02766002210865897,-0.05929410842109083,0.007447309045806968,-0.011407703244312093,0.0027188353863279602,0.02957078206260387,0.004034713595522939,0.04846771013354152,-0.008840400625934686,-0.03175682175386898,0.030264195122482733,-0.015811309788349746,0.051691803096746244,-0.13637228936792944,-0.009679149947307003,0.10027405273935294,0.020714285590101373,0.05349811253653035,-0.010895628836120975,0.05020392647808443,-0.0023705542746643602,-0.02682367880782206,-0.0023303070649167714,0.07653816019207704,0.06276410927623642,0.031119393521979483,0.06081911154054278,-0.02518433683063551,0.052395096043034536,0.006983707289988451,0.03610691790524002,-0.0287472545790168,-0.0060781909721769455,0.012597368540552862,-0.0009373951921593989,0.032132196424593744,-0.0098453177843945,-0.014064221322818815,-0.027199383705442153,0.01355440320785062,0.05982815575207101,0.005329649853948143,-0.016205192472133,-0.06867126139612323,-0.03826387588580323,0.1596004692613603,-0.03276369343584436,-0.0034870536299810516,-0.019237942433633998,-0.02805699418262341,0.09844886585852282,0.09151914294269056,0.043650975122235335,0.05476800297548727,0.015549036328620631,-0.01307675059037385,-0.052388403219774615,0.0571175558396694,-0.013812415451943134,0.015436114447702941,-0.04491673755148115,0.09877310106069334,0.09477246270071511,0.09196326714419896,0.0015107925503784734,0.024615652116200315,0.051953932259575446,-0.02808368364815501,0.018803553232750656,0.03868983223577287,-0.07687198210143352,0.025313102330707174,-0.04600167395910063,0.027394235650868834,-0.06343762989315298,0.014179830801148742,0.024251832718345766,0.01349856234308836,-0.046008871905834976,0.061996844307456236,-0.0443195063789808,-0.0022594017658121427,-0.03177103840959518,0.07041003765832927,0.06643508478517841,0.01713862947622021,-0.05184999404413969,-0.0058391562730879315,-0.02103826936045743,-0.06810782031339906,-0.057871050267911665,0.08826537284830306,-0.02226743153403945,-0.0037351897225480816,-0.020072892660643098,0.021552999802543556,0.04696564164131029,-0.013341744800138618,-0.05296766178747481,0.1404893078320103,-0.026277322116186982,0.008212882670370973,-0.09160322562138289,0.03980437312380354,-0.0042810644018736735,-0.02507034671279879,-0.09409039542203732,0.016879549331948455,0.03828670246455018,-0.035817488392413624,-0.004107424949827723,0.10057031153663748,-0.06626823762028237,0.05146994513640885,0.07882497538805915,-0.007837726493650918,0.06233510539004899,0.04192453341152952,-0.013256065263809574,0.08689549843582037,0.0006662480054498835,-0.0404721457373023,-0.012356236704111864,0.06852708196922007,0.02822682868111844,-0.035834419319862205,0.0586506057738817,0.1145745665091475,0.015733598055348064,-0.05527480050350302,0.06253142902381813,0.04767982304037881,0.06651424051426973,0.007740537093253892,0.013304891557106993,0.01460049940178603,0.032606258397175195,0.1000796081268389,-0.01290474730461988,0.047133297174100794,0.021763095687842605,-0.04464200363189241,-0.06567654500515813,-0.0268164169199843,0.020368019289859682,0.07063973157373828,0.029253887882671546,-0.021782125060617975,0.07049964856182088,-0.044549095172392604,-0.010622452168247917,0.06525551973347683,-0.039286000479003276,-0.024905871807159714,0.01838257020460466,0.04384181192221818,0.035858613378036315,0.009031379317650945,0.0625240204495208,-0.09686036158486755,0.09797664032289273,0.08172417906881857,-0.01963975140508677,0.005455149011811274,0.06222782490351018,-0.045494200919385004,-0.04000143794539346,-0.039536143588931906,0.006987507926028489,-0.021397075074378484,0.04050098206914494,0.027704346900997174,-0.07193316560949871,-0.02974834805513621,-0.00023366359634369963,-0.03905004162999497,0.016135450803900903,0.02436097918764213,-0.04284588672055786,0.11627896927511087,-0.04899294058461677,-0.05669052625052304,-0.10159039547054709,0.018989970876368372,-0.03780480648939308,-0.0373898148120752,0.0018901056486073414,0.011199055497904287,-0.10799143728298277,-0.01437405207934998,0.05649699338022556,0.030366150096944385,0.07864229682013135,0.06076796354202419,0.01093825718415184,-0.021324394171534106,0.02058026832758882,-0.00747771951032844,-0.055007358320332024,-0.0432935671308721,-0.0544503123143778,-0.06968322706563963,-0.0062610831086864415,0.016811325006733078,-0.1262629364728985,0.00018404689460246157,-0.044012265965167295],[0.0400047257855396,-0.04697736731985225,-0.054245192347251815,0.052940795165827274,0.016753732649373736,-0.03744552446084649,-0.0032034422376519263,-0.07189614426249796,0.006367041917717123,0.015938285343201224,-0.03452233150522875,0.05646090904740332,0.012971800935199028,0.06504208030901441,0.003600151379259867,0.03709905332789578,-0.045765602868741706,-0.04176832757948537,-0.04320193062297717,-0.06197078390219726,0.13181828575068433,0.06387826413736075,0.040936286200692555,0.026472983855714165,-0.09340006939509599,-0.010922757115127135,0.0477679940652324,0.0629438976440683,-0.03683619057378436,0.03733091011434352,-0.08326932442503578,0.07801245487418478,-0.04781529433121822,-0.01937067454672738,-0.10625883522239954,0.014560820039413966,0.04031203784866375,-0.0777832828542773,0.0348102043318214,0.01775332535895294,0.03890788885121378,-0.07023147419982477,-0.04420782824395874,-0.019581488235613287,0.010128738307781162,-0.023325945991396133,-0.03705381810427946,-0.03308142752057358,-0.03616578900669339,-0.02109432225671143,0.053352406842755336,-0.05029653172921304,-0.0944446837466377,-0.047323457214272925,0.0629445981045064,0.03952172073631018,0.010665956284708277,-0.08396934454560039,-0.0048586444357054314,-0.043689388316035846,-0.010021246071553606,0.06806302974284524,0.022108664956872803,-0.07526221728095066,0.05591265136245614,-0.08074910271396202,-0.02215840756329529,-0.037962984650689945,-0.003806288426692179,-0.0026506538130303594,0.02298227457453897,0.07539595966299281,0.008052986147868407,-0.032602713621555174,0.09629268738073822,0.05871957947235396,-0.018237757548447583,0.04428018516870343,-0.06496670011763378,0.06503596934333178,0.05107930040547187,0.010933195972212165,-0.13717421542163075,-0.019335697459243913,0.09073033443697155,0.030169640764942364,-0.023506549576034493,0.0034923596474280894,-0.029356435706131744,0.003380540354484349,-0.10159196611141773,-0.04318790939697296,-0.004812976119204136,0.037803437238838604,0.009435820343010973,-0.043440188898357636,0.041146927077232213,-0.011955028044210217,-0.04525215555839376,-0.01154641744107993,0.018321695007741973,0.013520262184832882,0.06800561121403127,-0.014287915019676793,-0.0034095810975108987,-0.06613254467102335,0.017368935315069733,0.026139720789819635,-0.027336815404070555,-0.09313807995843958,0.08043859101434364,0.04331337562281602,0.012493200411907346,-0.031235453002790545,0.003027113349537845,0.022428135563023515,-0.053881549902445106,-0.07190380622195165,-0.056768383019800674,-0.04578538670346241,0.010724405110674448,-0.013976060776521467,-0.04275095833234507,0.028856920952902498,0.03795990955575146,0.006861444874129884,-0.03311067960914676,0.02026713302414293,-0.0477072474987222,-0.06142111398304435,0.12726331711354963,-0.060367532136231465,0.007575666096993071,-0.022165899370658614,-0.045118203574621936,-0.05898384831489623,0.04068550485839705,0.05563133083830058,0.03539086650704634,-0.014786507768787973,-0.0036387877771957744,0.016905716977070197,0.0048245976068729945,0.0305293968192327,0.07955481032005272,-0.039787456878876366,0.002558608069286906,-0.024430185009712956,0.01743540628223114,0.0015566039637696378,0.06187453190798721,-0.03622469336312943,0.004771272442845275,0.02060568171755884,0.10381940517467574,0.12004633556412116,-0.0023384577425499785,-0.09691415903620489,0.10435730693942245,-0.15686201286139456,0.04790427668801588,0.05994354193055759,-0.05589900611086457,0.035752167252525946,-0.07599164786981956,0.06921568913327937,-0.0708180647491605,-0.09161139465010862,0.031128952416384605,0.06116861657039916,0.07356836896977823,-0.0617055742589823,0.03138430026931687,0.004157003624101316,-0.09984271552251606,-0.009252397024969083,0.020157285701393052,-0.04002418388422167,-0.007754703148616988,0.04920259814071941,0.13247395347547003,0.16184827778735422,0.055408478908065356,0.06331537343190015,0.03195566312979438,0.08477234783506528,0.010920758164566531,0.01161085731561768,-0.003782413861140595,-0.12764923358905375,-0.022278115681199275,-0.034688547185611256,-0.09198754431952103,0.010097768094454083,0.0233027159877598,-0.00021002327230935716,-0.0019765054310532807,0.058312347998651634,-0.01647903698664109,-0.010901159019895235,-0.06055985254601253,0.11326160320927979,-0.05341046922155209,0.01762210234729921,-0.034467990639178006,0.0015931172074326425,0.061892741436611345,0.04056394708554126,0.04078423936758156,0.04980883578185157,0.037445360205199806,0.1130800163721928,0.08259473425572958,0.011206478227752921,0.047544619467006034,-0.022398972189405363,-0.0044066298292447,-0.0607202262633072,-0.0062806895725616724,-0.10484679911701872,0.008770951860226207,-0.048475746723225015,-0.0978160016850638,-0.005784685992362928,0.002026345297636995,-0.034646428956350464,0.022796485634884206,-0.012366401904408408,-0.023143375680746217,0.04822534150230467,-0.01374880105016964,0.030471230557738812,0.06705349881481132,0.03101063147654497,-0.05093681207682711,0.10397721118283877,0.004790717905259544,0.08766631589082105,0.11173669317278667,0.1372295395193516,0.016569404187510593,-0.009660995497999656,0.07372643200019702,0.087886501485534,-0.027872519891884173,-0.02649820598519352,-0.06984194574470587,-0.05129578673031413,-0.0405726420125129,0.009006934443951028,-0.032227308909897195,0.035854848791769804,-0.0548135992462005,0.016528116026429958,0.12629639656305716,-0.0009515443769110226,0.017557343657508873,-0.03863095584233774,0.05892207782309805,-0.07681944454982557,0.015147176160441042,0.020250675745575288,0.0354879221070138,-0.012634389582269989,-0.000770221840084476,0.04926417238588028,0.16023872790110044,0.12235329700432414,0.08447243906600684,0.18268085799804779,0.017737998232150887,0.023640696772072346,0.06146288506147232,0.0027194753677043495,0.038958285891580784,-0.030213014936812724,-0.04591762346740957,-0.027318686047248276,-0.03327686512039625,0.029781513651141744,-0.07537204791376674,-0.03985598432964827,-0.0362358078229,0.07196459163070401,0.009882373222248324,-0.053532082804383964,0.09369204596126018,-0.06914263716170196,-0.009668924235791795,0.09857348027184226,0.07382571814624865,-0.016305158156463568,-0.012406481324995795,-0.0022397257430316364,-0.12280951623915484,0.07469175129244995,0.041544545687071395,0.12474661059334496,0.021350778197580446,0.03265852712389756,0.1871620467504262,0.08473442544900764,-0.022473997175654466,0.0849851133367985,0.11039856262234851,-0.04581586998408614,-0.04137015178247837,0.02027088693185975,-0.07160008513994119,0.06971243326409905,-0.06959082405446143,0.043571658267797034,0.025427980246530955,0.05166469602180208,0.03617680519049409,0.07888872515894056,0.055338055051085126,0.05072225039507695,-0.004635207707401311,0.04544231539774298,-0.016078784481690932,0.08888863676831461,0.016075123699877864,0.09681735507843849,0.06735481093104519,0.009322624359696297,0.08230178740300105,0.04103337046455127,-0.024348905821603054,0.047871762409650985,0.004361941330059016,-0.006233652750066826,0.02763143204321433,-0.01966825279479777,0.031631989144566365,-0.033961955551607796,0.11564549574774723,0.019344807055309603,-0.004226933558964964,0.04685974997426561,-0.018568942027041024,-0.01630705742916564,0.023644559043838984,0.06397370207082151,0.02069314021481377,0.0543492761498886,0.004630549026926131,0.016136823989641527,-0.05412082280212254,0.03682572205856731,-0.014082791013884221,0.03664640918525147,0.12975957353844544,0.10797487782646221,0.10307008425571271,0.07063850495974873,0.08239205833883914,0.009204652620964371,0.12169313072190309,0.15170178794059988,0.04147506399928084,-0.024135886547923167,0.01770935446614616,0.0685473669471063,0.007145533784022328,-0.0562886567428695,-0.005447390233077824,-0.025456010044708252,-0.01920950265932696,0.10960668461228547,0.03355128431631776,0.027836833038134348,0.06160733288294771,0.028016525635772404,-0.03763143714395791,0.04756573653445363,0.03296467816710258,-0.08883279785314786,0.01091600551714234,-0.012544853350120982,0.0924399495345233,0.0595134090602761,0.0032976976010263056,0.04333655306709489,0.016020146045763857,0.016620343656364604,0.06036201632738421,-0.022766026435502403,0.055368996766101845,-0.0904335707583529,0.02809735260641856,0.04654781808604884,-0.017686366534757202,0.06326637015481781,0.02126082536729554,0.07263108920860155,-0.04255794129373199,-0.009896946335745333,0.06488686258675944,0.008117524990798037,-0.03018035626748906,-0.017148692878239648,0.00358294078105825,-0.033701305313718045,0.01234455339822553,0.029594499794701037,0.11155250586086024,0.040192754436420584,0.10394148494186485,0.036677785217368225,0.09456772343756661,0.11926883742839309,0.04408933121287589,-0.04180833637827526,0.06028988459833204,0.059778621637292084,0.07107622233400884,-0.08706270737102437,-0.028437787683872163,0.07716144447730734,0.016535493527059627,0.014784642439134176,0.04246686281793326,0.0628490471263096,0.026065195331531583,0.003574644198154986,0.042354493485265585,-0.012338589948055449,0.03637072198355714,0.04862969781333447,-0.006222613507522824,-0.013278619902223156,-0.00452787043136026,0.0534221535127934,-0.026558892049430113,0.03805655027741049,0.06671550512231494,0.14626761217662024,0.049635105850997195,0.06848058973052822,0.03698377272338266,0.04665452350020279,-0.002775995530828333,-0.039110336381427066,-0.025130247765414872,-0.09971144456302515,0.004639873758606641,-0.04395994015965755,-0.0410709561187155,-0.009108780457514716,0.0006415747941082686,-0.07059281131046843,0.022786743939784748,-0.05713422462265734,0.014990534975810809,0.019989294060785843,-0.07173474348803217,-0.011890513791495336,0.05473631951838193,0.04766126858813664,0.05863221210554374,0.09280694903588572,-0.02097567420941268,0.043378054413423274,0.023679770156464962,-0.014840822131640872,-0.06641482105885911,0.04307119066311194,-0.000632317615271632,-0.021353265784864312,0.11003386513048588,-0.04152395584162203,-0.032510391695197795,0.011163186587797481,0.0203864304243156,-0.014578926303802378,-0.06675811935490639,-0.08522906551569859,0.02829020389995024,-0.003688603469616282,-0.12053527411113002,0.011289119810412451,-0.0580225960822835,0.03418444906047648,-0.05394029956301188,0.03686995855326071,-0.03351580989991281,-0.017228817047332447,0.026195935614700353,-0.04531342323445465,0.07124609978891935,0.08629963582368948,0.06652025649567733,-0.004572130026443134,-0.023556457963061318,-0.032076051076913886,-0.08350415598575228,0.011814373426012246,-0.03346277794552441,-0.06406054941841868,-0.08983522713489409,-0.03532232740511987,-0.015050516659797529,-0.054764850506219355,-0.016780443311950007,-0.009214315671218646,-0.015208946044015624,-0.017507572942614517,0.061494601518883134,-0.045729575302329496,-0.009315989305659219,0.06901827512011317,-0.017641912168216946,0.02886824730814266,0.04453794434121739,-0.08804984239515146,-0.002298824597239476,0.031766038659520615,-0.034024548557752006,-0.06363193007688432,0.03386032400133086,-0.033807192220368536,0.049749956919859555,-0.023488441615238723,-0.013321097254519638,0.014284344879481796,-0.17308060719989826,-0.00882307491963755,-0.050172140484285116,-0.030011737776867924,0.03989226698832763,-0.027095946954368077,-0.02429483252820376,-0.02269526198925195,-0.08299652447887627,-0.06085820335326917,0.03337760378595823,-0.02273854853304034,0.0002797728078649048,0.04677790395753323,-0.06856250599155,0.025620552048005497,-0.005325379593232264,-0.0006042710155751732,-0.042952535357948955,0.0418863126501497,0.02031831318612356,-0.10917027594312646,0.05535010353090807,0.004664444825874309,-0.008339002188491934,0.012423972614419663,0.0010299553588958767,-0.07515409733908356,-0.06485874463501716,0.007678974388551035,-0.14426469084419696,-0.017834929920046528,-0.0740154068035903,-0.012612747418007443,0.11963042841034179,-0.044620291399485396,-0.05331353837968951,-0.06228584417815981,0.014329183716594165,0.011244674378505131,0.0025964574198042017,-0.09516398448458388,-0.012356641531800244,-0.025578978916248704,-0.030985126303750898,0.13842526482862114,0.09939010520708258,-0.04824644223542031,0.054866284123604135,-0.06836069052569203,0.012217546175200744,0.03575411863716978,-0.007116885394661037,0.05167053596510067,-0.008583590698866043,0.04919001397646746,-0.05052138576894991,0.002235769516989362,-0.012173154611920454,-0.057737700380493986,0.027001208267015315,-0.04377216711297208,-0.07955075946915122,0.02667657682285952,0.0053798015231851255,-0.050478593775367016,0.044115953917064514,-0.025561277226257072,0.06934483643462461,0.05153703005781316,-0.10295127143093193,0.024446463825478774,-0.0032622298328554124,0.03329918977751791,0.11157978354716332,0.029883040558176616,-0.010510273029157328,-0.015610663477970282,0.013970673032461004,-0.03396439314472893,0.0017753231061398368,-0.07514245560093036,0.017196483218512762,-0.09749124041919081,-0.0104339634740784,-0.03164761376690763,0.12006329890904455,0.009181359341742376,-0.0213875484942305,-0.020359612343175966,0.005788908320865699,0.08547455309099483,0.006599918353182287,-0.033459572859988886,-0.12924919915057778,0.010275382297712651,0.03220015175230933,0.07378576007675988,0.005092696644253703,-0.025450347434668986,0.019029984273162003,-0.0240894945345615,0.07711381347564635,0.02301902706224407,0.1369534158800121,0.036432148816296805,-0.044139442759908665,-0.0017811429891691642,-0.005891341790263596,-0.0889367834047415,-0.00961344685767258,-0.03555212289591169,-0.016397161544672585,-0.0671549698638656,0.03449152600469654,0.09345646743626422,-0.0051356134949895665,-0.03978731188241915,0.002686633130327482,0.03817863452876324,0.010740261434638175,0.003898761584357369,-0.04613250979668738,0.045612830359781205,0.01259787343284793,0.06486904865136899,0.014685611338026157,0.036851515333950195,-0.07995285744949826,0.04492147437238738,0.09789103809139058,0.08144998748645907,-0.023985365199164884,0.06837428834184668,0.08001264588141435,0.02112272742783159,-0.014921140813062951,0.07648117665302916,-0.12332107409890557,-0.05693457706556686,0.030977005101175834,0.055295652910619074,0.011170361221142506,0.0249055756424497,0.0008525196181707438,-0.03930813725536068,-0.042513972582183694,-0.023032081672068303,-0.015342463915341486,-0.03070504044543351,0.01264879372157252,-0.03605120931684953,0.0013202391708508556,-0.031127135639194992,-0.0022192495855667144,0.004504526988387532,0.03448352214896184,-0.04519165239211749,-0.043594266447627913,-0.059140397223593655,-0.034822973587602044,-0.0922564418227014,0.021727477052437782,0.01602712619196196,0.04616219678533191,-0.02105483372212469,-0.013404973942825542,-0.010826445252870097,-0.10205028050695894,-0.03665096389163739,0.01077896181406183,0.009439084904302578,-0.0063836970921881415,-0.0487094662579398,-0.05401444341132983,0.030831436694674363,-0.018419290824703036,-0.03612535965056867,0.057730943662907125,-0.04241806823556969,0.06725639857375391,-0.030633398203472027,-0.04388091438347398,0.030360687750681955,0.009126860382050685,-0.0900412629580853,0.042435651141446484,0.032669332159850586,0.05122766496946606,0.013775602085588883,0.047557344016556126,0.1231047886907855,0.004509305565068884,-0.00007253737306525715,0.009693092885912238,0.009495274554311853,0.049101460808626304,-0.030399467066737303,0.18536382596680798,-0.05841117661290366,0.03218006094451026,0.025618597976372982,0.012851587655232031,-0.0254337477080201,-0.07665056111046444,0.03851286126294652,-0.04813251146971532,-0.010147782503475424,-0.024681760312438853,-0.023167260493353138,-0.004830952337007854,0.11143689635960125,0.02442903272437381,-0.07521352028232951,0.0764584092406636,0.0046536501743312435,0.01578093237403807,-0.030695327679402376,0.09993961368266788,-0.002056815261735684,0.0246457955403373,-0.025111661500968774,0.058899543854867994,-0.0416513123936124,-0.0074516547382804076,-0.016854619862374874,-0.050459186931982564,-0.14025829323542405,-0.000696560522924395,-0.016937734745549375,0.008254022943076388,0.030557804025667448,-0.10282258097674701,0.024797131557029964,0.03746225890907707,-0.027503860647389917,0.06134529422173042,0.033492980018228834,0.03781918351723561,0.020907230005704255,0.008952687096558356,0.09777501022224125,-0.02931762554171129,0.005235901469680944,-0.035873714520714466,-0.0213597647475162,0.0040628199222705235,0.0034723305473533554,0.011685327874247291,0.04690331749590297,0.03589312836502788,0.035346378872807734,-0.002033776728109196,-0.03131767778817024,-0.00784568612058426,0.06285550382330465,0.0622112810749879,0.02395885224814524],[0.07522422189030666,-0.008699595505116347,-0.016792009975324387,-0.005269807386795659,0.0031933220121350483,-0.03190599296151539,-0.007056958736712948,0.038899417953017476,-0.039240918011649646,0.018912675417957013,-0.057506013939033034,-0.021946655764049465,0.056965910552789316,-0.06336838327014656,-0.017898264774697213,0.014406297373540171,-0.04815195325104101,0.001303926863231624,-0.0568374965155398,-0.030256031708993034,0.07312895310827495,0.007435952944109035,-0.006450786588770572,-0.0420391563890689,0.006701853311546369,0.03993733916728818,-0.07631291234227332,-0.004111689442193342,-0.0000035185095417863283,0.023980749743821136,-0.046200260780796545,0.07515065193072577,-0.058984910221223784,-0.030778209795434056,0.036899500211814075,-0.01403998272293091,0.0040185855299104045,-0.06694240091028988,-0.07649017850872063,-0.003973527848343785,-0.023904901478206664,0.008813526685551982,0.013830907091018646,-0.05252842158610004,0.01606361392262412,-0.0014944707937684786,-0.0662970294024055,0.018641518863439344,-0.03819561796810621,0.008178944737542188,-0.0347780942350981,-0.04075887874816616,0.07286032627495861,-0.015981477206353605,0.01890093719750175,0.019426256127161107,-0.058993323005371905,-0.04873676326137751,-0.02517103814646721,-0.07042741472923723,0.04168293348350644,0.01479353594438362,-0.012861690417934534,0.03814317403676636,0.05392597474562066,0.0009854156968866984,0.019570728330173225,0.00454032686821052,0.03332005321865608,0.04954288857063848,-0.015597911476914838,0.010530218954742328,0.002291713793118044,0.1106529635469698,-0.032488670875271464,-0.011204393926051647,0.021161521808018904,0.07899942830772932,0.04161502583747613,-0.011163366834011191,-0.021065123656817498,0.02161857756747459,-0.026054607608772325,0.05162045595744133,-0.04366920121382438,0.06633503829770789,-0.0884204228464805,0.0475324105881664,0.03184268181324785,-0.030562248156461753,0.05910503867372599,-0.015684779637064262,0.010812411818429362,-0.032972422917358114,0.10845850653383607,-0.06136224841215586,0.07294962419650147,0.07477879317423355,0.004795606519679224,0.04568257013526423,-0.008835173317206756,-0.059181552312245436,0.020301688619425842,0.02547719378835843,-0.013408393040422687,-0.0029041020451054896,0.042108380684316105,-0.007767549494719822,0.07222250632943275,-0.021094055302273793,-0.07268718954927333,-0.008862128577399122,0.014786753322518211,-0.07794417585233707,0.04563788231389669,0.03828274110258363,0.04067368294288758,-0.05762880625778659,-0.018021914862150892,0.009002118962585307,0.07400253214038272,0.0788546431687435,0.033768043446525974,-0.015837215353354188,-0.04917387663835658,-0.08763383511394239,-0.047344345717785764,0.022696523621532835,0.07566382709951053,-0.15199531225332275,0.006697207434405138,-0.018278367709499435,-0.06081076476623117,-0.054389550155256386,-0.09527206425594674,-0.07326221981643617,0.014130526214302533,-0.02217807696557401,-0.056705059996634714,-0.03809884011488452,0.06777550281338049,-0.06679620169853522,0.1144257280810987,-0.025799215550363342,0.017507471556446344,0.005056885103333655,0.023531760105449866,0.01891299391804129,-0.00794211930081942,-0.017591532342567887,0.02695669490551915,0.044420742559931614,0.02201225056085859,0.05168759757284321,0.02000047217476952,-0.0797506375926537,0.062227260183988255,-0.03323513992193672,0.02638755406405019,0.07004515110083379,-0.06844839566126434,-0.01616799655507253,0.06056368022358161,-0.08812404540433633,0.024176259778564007,0.06389123272276406,-0.03995472394217237,0.031394049952449106,-0.10396347845081692,-0.07197869634189417,-0.025038512223946208,0.09152895776800461,0.07112699093711468,0.09953124268461609,0.035655739449383016,0.0016616620971156085,0.011449448451997883,-0.033759022864732736,0.057669933994046366,0.007123838376637898,0.032871536472425945,0.06422389753055224,0.03227116273837259,-0.08924622334328423,0.05250147034123259,-0.009887196567058878,-0.09954062830853323,-0.09375081195159632,-0.024550305145649865,-0.011491760428290183,-0.007129987167443946,0.004555523101365402,-0.12496857486082145,0.07846313108072463,-0.004524094232261088,0.10110054844020921,-0.004500899409775491,0.011604989571853467,-0.006109307180239983,0.004263078006234899,0.08110902942291168,0.020166672357006525,0.036820437199048255,-0.04811564476276743,0.05428086718591997,0.05846007778577521,-0.006077159469636452,0.09980113275018287,0.07074706385884262,-0.008899996843768939,0.010023786060578667,0.0008323224429316543,-0.06682930587211486,0.035347754995973,-0.014915992566007494,0.021979733784245347,-0.05367991789775117,-0.03837795766415781,-0.05247761644839003,-0.01184108176123211,0.06517411140595522,-0.02342656682326409,0.030389976295052336,-0.06771640778865705,0.00509955252390579,0.04204562412892016,0.017164428414790198,-0.08444837124254162,0.015933411062467193,-0.058865306677641865,-0.02251747052333801,-0.03444764213809558,0.05466061559799607,0.03616036413027376,-0.0576088329448364,0.09468127448421662,-0.035336944528537265,-0.03244734536720173,0.03767925292708916,0.004694073506715528,-0.067808911632442,-0.04733252273829654,-0.041010994760303336,0.016842215506994287,-0.006869022420488576,0.0037377519192354556,-0.051537350869921825,-0.020946220396028326,-0.015594683992748007,-0.045753898329649594,-0.04892186624756123,-0.05794802233224979,-0.05372280294755613,-0.015990458087096156,0.0504675452447206,-0.01904023340201207,0.01943816218899384,-0.1085931951752221,0.004964298661763363,0.037951089865637895,0.0031941433842048498,0.0027094089797667573,0.02796704005622354,-0.05326547502666991,-0.025279194584595932,0.12708275809664596,0.10870243659877482,0.049440476062259264,0.014897536593233462,-0.0284718913501797,0.00980096194717693,0.04938089086921519,0.09908821398593826,-0.01939373772909002,-0.11673011274580951,-0.005728175884871267,0.09156839015628564,-0.03840868805867318,0.0846703680786591,0.02991712352642017,-0.03370748297370959,-0.054821568200121025,-0.06415826266324542,-0.008646230580795939,0.02677656028966832,-0.041639584295978166,0.004471891399479368,-0.024394038887533488,-0.06662381064689586,-0.04117286692839649,-0.02572541676651498,-0.00629731070280086,0.009320545815374797,0.04635722561927778,-0.016606028770933527,0.010122805131784004,0.022840729625841737,-0.08053036856469795,0.04776594882853761,-0.055654026911277785,-0.0012210418221950188,-0.0062976495818331925,-0.0753127562611932,-0.06817180182885828,0.007916301066747003,-0.016855201685566708,-0.07675920723546573,-0.005520248317802471,-0.05023160683878,-0.0016022458080322234,-0.06794438711220584,-0.012527382415143649,-0.016261332453552754,0.02553347749385526,0.047420589886253854,0.04760717998739521,-0.053549024883970446,0.051927830777354904,0.03564291271004915,0.03821513871042392,0.0322724358417337,-0.04242610148380767,-0.11206911883827536,-0.060617144316392195,-0.031129043647481067,0.04723037397640201,0.005063686039355461,-0.05371653882105713,-0.02961502579645589,0.06256268563554561,-0.13052615550460117,0.04415417075746973,0.11019784991977523,0.03820030524542718,0.05896675606285082,0.006501882670410813,-0.12569247868030475,0.007383905089783712,0.050076297112180077,-0.01035853085508131,0.013431633191018711,-0.0771909421721241,0.05856215714523256,-0.025691591880694784,-0.05448119052596727,0.09247548823899655,0.07172772499445965,-0.0381568803335298,-0.11508921906023903,0.01691005091979683,0.0223955941970281,-0.026553866373983773,0.08343415731238846,-0.029272475305793105,-0.008699158282512085,0.03120457746648255,0.02398453211525698,-0.03263635218086696,-0.020241494502519882,0.04042263068877889,0.0009091660221637177,-0.06231114966814233,0.0630071355751398,0.0034429030187397352,-0.02303279189021882,0.008213189050163234,0.1402921032860835,0.06470878294794993,0.06966330722997789,0.0077056489218103735,-0.02125406198658293,0.07381349303545189,0.05658989758508533,-0.044241814971599104,0.09481790868742578,-0.08662539818939087,-0.017252969415604495,-0.040808697329219094,-0.02014466392131109,0.0004534204599416123,-0.12090109231926899,0.061706762834050514,-0.016232836686280432,0.035360603693481374,-0.013365048819290503,0.0457212179503572,0.013993831403803456,0.014905083530052068,0.08346172590681913,-0.08213795360860787,0.0009337470040770904,0.12733418478617445,-0.018462429808483186,0.06409432812897267,-0.011626697050362534,-0.00832867485292818,-0.006987558498094676,0.02542434098052243,-0.012001250463186832,0.03164348557979199,-0.07410012793481917,-0.04559870581349614,0.020717042009746275,-0.09663976060193434,-0.07812882341380747,-0.019968019446570017,0.038385073969017115,0.043731722074411596,-0.03614413484650756,-0.014279933730488255,-0.0821201054857192,0.10488915200318545,0.004041289999106183,-0.040659257742804905,0.06399710840494288,0.05192200973062288,-0.026970361460860764,0.013219874730549712,-0.007699792902431672,-0.0013261191892692589,-0.026763908664304493,0.00787115941687584,-0.016823931280685208,0.022764765948517274,0.014173085086847538,-0.021803702937902535,0.05957223122242045,0.010942032293500633,-0.01713668557279795,-0.011690697914813164,0.059107578696596455,-0.011736853058692718,-0.010237330565445351,-0.02324603508071806,-0.13561544745557966,-0.042361741399586525,-0.04531712713290804,0.007000223415922569,0.07117846640872058,-0.0025096424476661453,0.03500751565956793,0.07020522301350327,0.0021575042388668193,-0.040697106551875875,0.04897521688713658,-0.036847678373034605,-0.0579094239527309,0.02778208083256667,0.014750981683914135,0.030866765473289183,0.03247535813116581,-0.11123426997071148,0.033862337698562776,-0.014835423088570911,0.041694121849401265,0.0416162905632756,-0.06015409626230639,-0.007515540330520445,-0.1608612976503263,-0.05892688428433216,-0.009679452623359334,0.022168518909575264,-0.006413628952856773,-0.04364343585032834,-0.03341853254116891,-0.03643218152432297,-0.012286086588104077,0.05693262879142339,-0.008643079897577195,0.01539686736985312,0.035713652474305656,-0.035333571934247965,-0.035197646911308264,0.015306673148930281,0.0010501261246967629,0.0042110891174318025,0.028247291075485285,0.07421595239021275,0.07833491617004049,0.04131215280097742,0.054939093964916794,-0.009703222003993093,-0.04118243160859385,0.04860414981255362,0.06122104920617342,0.07718232994768924,-0.0017998272640913407,0.02563443432404513,-0.07214051557266672,-0.1005069547210296,-0.08406270742586439,-0.02207355287743147,0.036278086614215936,0.054056742821108075,0.03513796320408847,0.054815690035514855,0.06537604489688287,0.08277315684973233,0.08322304085460083,0.004498243911151436,0.029595007208678643,0.01397656939277052,-0.04163231408850152,0.025568429264963676,0.052400994397171,0.02976489802504576,0.09982472949293375,0.018617132801629452,0.08037224069453837,0.014318371974241092,0.0539713110980766,0.011630256757935808,0.00860088470913428,0.16060394497358393,0.022558813822780382,0.07707126190850197,0.09222699043472768,-0.008690013076380064,-0.07724783169428724,-0.05921705320377744,-0.02715028104573093,-0.034000995451832626,-0.04931152439922426,0.060837996468966545,0.02752097175145647,-0.0020182286249043036,-0.013879501938840128,0.06428337584718652,-0.0173039250665098,0.0471865114279283,0.06106463250425523,0.03687576392473057,0.009421465872590195,0.06089266564477915,-0.00799639198652285,0.05350862077989268,0.12851255420494007,0.008574772274151102,-0.045010031626926135,0.0452244786700661,-0.009701890340364847,0.044159835307749015,0.034031486943247514,0.019889750807575622,0.010695081911769632,-0.003867677283399469,-0.007914519317561363,-0.05924351218981532,0.02547733761034404,-0.037445230149851426,0.11465196976070643,0.09857917460632701,-0.01856682947827815,0.05556902029932992,-0.055578703056114016,0.037914224150959734,0.012204426190390413,0.018302981414424963,-0.01857482003999349,0.06253108806801919,0.10594212261633845,0.013912755446247316,-0.06517099303759491,0.05956816105049861,-0.051079847302394565,0.023125552838926023,0.08192505498617596,-0.03436717474967604,0.02564611006159638,0.029900527198866853,0.07434510082831987,0.027495639547024605,-0.05189040914226944,-0.10714732810165331,0.024440443197236223,-0.04067377732820557,-0.055758487158155554,0.008564498260324089,0.03974929428250324,-0.007236892574176572,0.04816326839199917,0.04447196264349969,-0.083000690728235,0.025530032450048902,-0.017211940832206975,0.059667930189691916,-0.020161839671288675,0.07219576743316067,-0.0640258856714249,-0.05184870398516476,-0.017044862020291374,0.030828273569691193,-0.04984856532768226,-0.08035952571597169,-0.055985737049318716,0.06469030716284632,0.00010193976544978304,-0.010213272458725602,-0.019349353459926076,0.01754226501209073,-0.0006764217419593646,0.022860003792381334,-0.0802956559371727,0.07878260466068104,-0.0360853216038533,0.11412116529672459,0.07596488747945958,-0.01549403113448699,0.08673989238249291,-0.013957936583856455,0.029303565406983544,-0.048735470895759136,0.03030432117232866,-0.00921463594901514,0.026415786193794113,-0.02595395653993937,0.1151360322352698,0.026639238810905665,-0.058268315399145364,0.05102484047565024,0.054696339231047574,-0.04290245009726066,-0.004543190630902019,-0.023231091727521965,-0.07932650837313664,-0.03359858475720763,-0.01747668541824041,-0.020513112130336644,-0.052152096403063515,0.05807463193646719,-0.03871120757994144,0.003265709341285353,0.034983800698821156,-0.026811451388347427,0.08592849920144288,0.03685348311851289,-0.0007014401415354166,0.04670061138662115,0.017435290405908018,0.08915608597540475,0.03658972345658489,0.0017548502090649104,-0.03684220541979494,0.09787775395515388,0.09011062445058635,0.0021590494723198587,0.062389694118146655,0.005127538782615758,-0.08522535532961482,-0.013070993397812787,0.015535724338902492,-0.07064652666400734,0.05108628216517611,-0.13396790113649434,-0.03671269998502505,-0.061626781374415664,-0.031426797415988354,0.0714825732728037,-0.06899621318657326,0.08191305699210207,0.03979232650089817,0.08719159581987398,0.1127211692240438,0.11292193473445576,-0.029829722659447944,-0.028421924289587345,0.020065590953670408,0.03448642256446347,0.04926150351509232,0.04866793490762479,0.08332482328267629,0.00009098541562445701,0.018798778304345783,0.015752102434202126,0.044599554734880587,0.02382306718326902,0.06108299279685389,-0.008553508453130167,0.009254877700866483,0.05440963054938486,-0.06931364427869637,-0.04061256966662793,-0.02309217741830593,-0.02457478285830976,0.0015049186041859095,0.004772492954547079,-0.009951945578660377,0.023270729175234647,0.07196484247557074,-0.005683233938621345,0.02463183860782371,0.004190185830132329,0.0030910589000181284,-0.0004936374736716747,0.0018604349167726097,-0.02279540461662219,0.020948053968411692,-0.048778061662945835,-0.03129923682155894,0.00802741974803475,0.0146752423881791,0.027661247481458096,-0.006976323763599094,0.06303231027956523,-0.03221425752222456,-0.005209123916771996,-0.031383036333063455,-0.06816439970009641,0.0965210745899226,-0.009567330035955538,-0.0019999432056439647,-0.013897377509825035,0.02364735489271703,-0.03406232743162254,-0.0056658384845220365,-0.06778433722564989,-0.003557843491039122,0.011908779524142231,-0.0043614867145337945,0.006569210222645042,0.06581519030107925,0.029500551943401072,0.08276738120501843,0.0018394762515738362,-0.032746404873114546,0.017242305429474563,-0.057770418862324334,-0.06385605655567465,-0.041508275688869924,0.0234017492516644,0.052446736018264356,0.012415757254633716,-0.03817685786998857,-0.038802898235309934,0.018409930565079866,-0.09628779488843422,0.00011275992118803362,0.008589739059537842,-0.043301092554138304,0.16374613032953653,-0.04698225808349869,0.025703222553547796,-0.043643540413302026,0.03834052010923774,-0.004833383004877588,-0.0019431303983585737,0.09207043241946207,0.0037185813510816662,0.05623725879031143,0.0777911370581197,0.042340540867059906,-0.03897037898900114,-0.00481135107054586,0.016437550843138034,0.01965845603595282,-0.10643762074609125,0.04780145800644654,0.08669274255969364,-0.019390962665130837,-0.05774678056436693,0.02910057358332883,-0.018167687105114943,0.0018294149695682396,-0.00949986525694738,-0.010728905523001174,0.005180312638236974,0.0023718095435371835,0.011613426440900017,-0.03322891331639982,0.07977752700910237,-0.029542585397086856,0.03837400795055473,-0.05284053030550024,0.06392177671825222,-0.026164728003173713,-0.011366787704177364,0.027077096471530296,0.06449133196017026,0.06683582711256011,0.03650389359308233,0.0013106002750366136,-0.024982078535540235,0.07619008383603608,0.0627454776962519],[-0.11777229518679862,0.015503962820200293,-0.035038412669180674,0.04882498234787543,-0.002612849504403477,-0.03264370453752556,-0.11251926053914248,-0.0018374389060201212,-0.029942988117723005,-0.08558691933328186,0.029390131737622432,0.0025841415755786363,0.07917781822967615,-0.006247689794375377,-0.014634541683697625,0.0048093893157923895,0.0037137997256743963,0.022354038096653442,0.04600118213545402,0.05808964707817894,-0.10589648217644561,0.0835337954691242,0.022218400513410796,0.0037533771374204336,0.059822317233951816,0.001271579540679925,-0.008905935870826746,0.01777401317087675,-0.042670466542687434,-0.01303160240188043,0.045301040669871,-0.017536528267173387,-0.04325384710425493,0.026494965608639218,-0.042194863755735064,0.022411940639063557,0.05348543307084213,-0.08593108492150835,-0.08379153881653074,0.03868490197544608,-0.04067406063826223,-0.036491608799561114,0.07655137783513392,-0.03763237983115892,-0.0405389903678174,-0.0731585865703678,0.0641589462514331,-0.008118980162739327,-0.00954465765675581,-0.01790318277591943,0.03602994204837734,0.0036158097051258546,-0.038865743005660244,-0.05736589237327546,0.12714269645726253,-0.028310228817749784,0.05968825073492355,0.051404229971226255,0.030490927007078936,-0.010697699215464816,0.025816322126136108,-0.05565008412795005,0.000047667083868051985,0.0561882852435676,0.0004567307224713979,-0.006757251889055505,0.0777520135765325,0.06805043361366456,0.015651465117321697,-0.042856112004588845,-0.023372891746009268,-0.006084032712701106,-0.13673731475308673,-0.09680644277964265,0.11075006218566023,-0.023841251518427843,0.11115371119451968,-0.02148519488133785,-0.0272360925499483,-0.038068931196885356,0.036043427609929735,0.0619280578664351,0.03394340039959341,-0.01528937256881725,0.07935806678290104,-0.025600174628963093,0.025925249703691727,0.047915212659565415,-0.020988359754835772,0.011227726607216467,0.02462770779057512,0.009384507650295477,-0.08340044788687667,-0.05336600912549734,-0.02987328933603356,0.02211951399245369,0.015433790202804252,0.04420607838692012,0.020821100775457197,0.014165783687492103,0.012515231603752869,-0.041222337593354495,-0.054161422305089246,0.04589015045794315,-0.023731582402720733,0.006691311078028234,-0.07999493223047913,-0.002576904568979429,-0.030313663686815567,0.09599924397770751,0.0072599055337442455,-0.043752589942211234,0.03416222976738985,-0.03363367457615645,0.012365775861210439,0.04812468363019482,0.05086272238322974,0.10092632564508762,-0.07435901076527898,-0.06348284586599508,-0.016781704874066102,-0.026496448516817945,-0.006325039679905049,0.02937273870499141,0.010817679316572586,0.12433936586801637,-0.05362284256015968,-0.0433020420776892,0.04407988069808935,-0.025134241080283094,-0.056473158967651635,-0.02322874587043997,-0.08116407520355626,-0.009945338508126088,0.0001536972530668583,0.023335841444918126,-0.11760453384779783,0.03269130736141249,-0.07354794053694959,0.026196104545703893,0.019796533119403197,0.03793814630490177,-0.04411271257539066,-0.09111030938412683,-0.0346908842161683,0.019194828562400616,-0.0016813242958011992,0.0016373220403438646,0.041787263455717996,-0.02631639960334305,0.04295775922446255,-0.02452838558518289,-0.022714173493132518,-0.03435832109072545,0.05297775553962001,0.014952163785670653,0.08457688535709891,-0.014197717740141343,0.05661571605084053,-0.06854638803867198,0.005890756841486554,0.08067921193796378,-0.10402389683675248,-0.010023537205370215,-0.05497680164490148,-0.010515207288232499,-0.044823565465745716,-0.05208744628174871,-0.006020169904062359,0.01613836751240149,-0.0007993778438924687,0.024154591325956317,0.03483188580516834,-0.1438085116524814,-0.048673285184546514,0.05875276822895964,-0.07885859699650212,0.03609161194198733,-0.006207734373494093,-0.012288601182269336,0.000537745114335695,-0.01954911532552967,-0.03938038707885092,0.042604429886092476,-0.0019000433746360072,-0.05318815236945744,0.0397641419794789,-0.0003804140961473693,0.011531750937447127,0.048237247296450916,-0.026469373487944124,-0.025337001601192666,-0.013937329012340429,0.001329423208937023,-0.012014408800307757,0.02921832241877518,-0.018707199326516304,0.03960208083527073,-0.0803992728349844,0.025177586806847813,-0.0032557715826932176,-0.07877086250458151,0.1198289124275768,-0.0037591546632757484,-0.03337055584406179,-0.006627154452972848,0.03388209821035546,0.06422460069198704,-0.027416799361954267,0.04549807940612614,0.047586111002935964,0.054246032078246166,-0.0606221295538382,-0.020679896658934546,0.03420165484768387,-0.05803601712586039,-0.008992674140213005,-0.027178095270547462,0.06920363120930455,0.007602126106095031,-0.03854146128798873,-0.05486459098850766,-0.011718554285502772,-0.003528360023220885,-0.01759505888157708,-0.060559444181224345,-0.1090377696288643,-0.05659775086165129,0.04727835030197048,0.0007001275972742873,0.04433110684986866,-0.01348614851675528,0.0019357309273969042,-0.06370906203982796,0.10129937769270986,-0.0054147064092496065,0.03931978856151518,-0.02094466535094787,0.033782390251373993,0.0520002300446198,-0.031393319938194664,0.0020795577833348216,-0.01256879446056309,0.07163011746171784,0.009746432322237373,-0.004968801488131758,-0.04183966848309773,0.0024183121922425614,-0.01678696865150103,-0.023479396313139455,0.06489914460562958,-0.017443874311731847,-0.0879523313263651,0.04703645037928684,0.11905790815657791,0.07554959971542709,0.039750720339096914,-0.0028716408465129734,-0.039851907081421875,0.0024309398732921634,-0.04728145801136636,0.05493002152013498,-0.051934122715371414,-0.03242862115827859,0.0398374897734902,0.04691042699081808,0.03523443806047329,-0.012763210473771396,-0.04803499726572742,0.034029053442788545,0.01673951949591565,-0.05662331156110579,0.02382703233897682,-0.06559337034224569,0.004108301935879278,-0.022205329992588157,-0.106896138667751,-0.012320126627818364,0.04525746961346694,-0.015564124275978267,0.050327053983698244,-0.015155498971209429,-0.030378141143135258,0.027351793961609114,-0.03274995788894983,0.00007996412865803634,0.038297782087045935,-0.011243777537586028,0.013547123246286584,-0.07301814768311013,0.010458062479249327,0.012804788281184809,0.09199433105121292,-0.05371155219337078,-0.01754963587923165,0.044167599413391344,0.06029685253855552,-0.004016915227870275,-0.001120541762656336,0.0046274085319404626,-0.005526455587220591,-0.01799131371124962,0.02306030644218849,-0.12315333087801676,-0.030364049472632926,0.05753915141576239,-0.09516474050543215,-0.019910384470899708,0.020160843849977805,0.016362746306630434,0.004444078278862371,0.0003204432685655569,-0.015441991776455059,-0.07910007791878594,0.019223311110265078,-0.04825290155295024,-0.110901790502427,-0.035942322425487935,-0.09039344846000202,0.02093921292711357,0.05082569263028358,0.08676823542423756,-0.0024063358662707725,-0.08395306355780427,0.08448609533055794,0.039316329022713516,-0.049428001318265385,-0.008389719951998288,0.026133525771723475,0.022153233688784354,0.024206898495686323,-0.01383477534451025,0.05319037980943328,0.037547536255616944,0.004412459001402693,-0.038146159182637425,0.03172319570358322,0.03308048372781656,-0.15011359715909622,-0.06684577289354413,0.05415387705179083,-0.004973157904296797,0.030388126326304613,0.036974272477041346,-0.044466911684754605,-0.01286079199153573,-0.027917896163170423,-0.11791779979563571,0.11386932034821479,0.024293841230013154,0.033322819107060975,0.01701712289862166,0.062247863025278044,0.07559967107974995,0.07591688752423663,0.03555602367036616,0.022990729865935377,0.03276218084363808,-0.1297973882707031,-0.07391848152307849,-0.02752694655308997,-0.047122152201502884,0.10340288259017813,-0.02715784092713901,0.041313639775606134,-0.000662757087381472,0.006678936223983272,0.017367001451660244,0.11654820719507433,0.05163299343941388,0.14728707418898646,-0.06895359042304486,-0.06257346427649951,0.0051324880860821155,0.02486234744940993,-0.07492674179605409,-0.07527123772084056,0.04114234545583599,0.01800904729051177,0.03162361945991218,-0.04136075954654869,-0.023780788478206458,-0.016419584526761153,-0.04461083758400853,-0.0040970601607547095,-0.10752982528079379,0.04210927804013088,-0.03960341665119832,-0.028630792689151047,-0.09409545455182262,-0.017550619198275403,-0.04039647647105154,-0.028893454393816506,0.030907573565886613,-0.0009951060221163209,-0.05667036607955605,-0.09480503625292634,-0.03609456610002426,-0.01229296272115908,0.04072413985032561,-0.05758666747711484,-0.12133643094553855,0.017833231168874194,-0.10956412525961573,-0.02137615459249438,0.012325697681934858,-0.06479160615754667,-0.03147451292756447,0.05716165332542987,-0.020396102389337686,-0.019438598283274648,-0.015409402905997472,-0.02043551553279573,0.016024690225897517,0.015726864909861738,0.062061647781605896,-0.000880079825589067,0.05259752563259228,-0.003267775664917452,-0.029219555808067902,0.10454978737993284,0.1012303861874637,-0.011408869780289066,0.088239224827044,-0.03910019285780789,-0.1205970425272931,0.019777431533523716,-0.06584631716883874,0.0820487863571996,-0.07869835752146784,-0.003224664708852904,-0.017935204845638635,-0.07096212383281479,0.0186884539040563,-0.0005667169545031603,0.037630868540257045,0.03502869640299567,0.005889878162166147,0.022901702315736724,0.006422774656866503,0.04969754931816529,-0.05041003067752586,0.023766782665106616,-0.027307184463871835,-0.05062241236333919,0.01172923574547271,0.07030899463006568,-0.02994321522045545,0.03652312949306726,-0.06677968911793371,-0.013271011583452638,-0.07445384248813061,0.027399495289042213,0.04997379386259124,-0.04298023714833142,-0.0558889784424276,0.06427247050875551,-0.0052316521309286644,-0.02672682145896834,0.0011304040916381996,0.03931687401484935,0.014683531199369902,0.021082469397388188,0.003847388580640236,0.0566732763644969,0.0023272770513327037,-0.005264653602313068,-0.06197437940687191,0.025120987264175915,-0.12107836415439585,-0.017952417217891994,0.03546092789514742,-0.039475288526135736,-0.027762250142610783,0.050111758242595096,-0.018108013083185926,0.028624780975291295,-0.028722962514175845,-0.002046304892707385,0.020099107944332714,0.025273987610854334,-0.030822490680922292,-0.06195673710757347,0.0035804131024087626,0.008005898226587833,0.0037654866791373464,0.06391489565729837,0.07414461321045454,0.00889729643465305,0.04481624721979418,0.060928921206784115,-0.005350948923712329,-0.07563315399162512,-0.012416491611667814,0.049869613098121233,0.0465839330227698,-0.04506018838372679,-0.019397431165817276,0.0019127418169232362,-0.0955552511577237,-0.028670027308290713,-0.0025552304380652936,0.03148791015004126,-0.02284635562369639,0.031979397861495756,0.06588739775654376,-0.023504704873463973,0.028267485546216102,-0.036978379996934936,0.03650457316648421,-0.01981815635165608,-0.05015999717667544,0.06108179906882149,0.05165685712894296,0.029366365560022756,0.0074898374247014485,-0.06552915021476764,-0.021137820426764993,-0.012101712431839192,0.02812650611545671,-0.03519978535529522,-0.012657666496326929,0.10310661672386527,0.023108148483631543,-0.03834488576231086,-0.08876465505417913,0.021346657684706647,0.010971266789467932,0.0339302615187896,-0.026791463231899387,-0.0014385446681244962,-0.04983277796380548,-0.032696630013039775,0.039219523859003826,0.04198523372871509,-0.030947676473542775,0.027161417276997796,0.08272143478538657,-0.07941149715802778,-0.10573946071366049,0.07981159563427807,-0.07752704335150622,-0.09465420417558054,0.03092564632198631,-0.052224190825326595,-0.04994288067394535,0.026043735946394093,0.017830927630439683,-0.06989377118009178,-0.04445431745357211,0.05889552820624735,-0.0944275861373667,-0.04080499387798568,0.03572676241983568,-0.008249494158348842,0.03766149336463076,-0.022013680196524135,0.02951003563282091,0.012911360877331536,-0.036014782367307666,-0.04942832971913006,-0.03124988326640138,-0.012490973838941734,-0.05409089109258854,-0.04596216237620805,-0.004936206621341062,-0.026704179857491094,-0.007451572186392921,-0.046713462613325214,-0.0188678573600317,-0.03266994817615559,-0.020151856990661753,-0.017810397142464983,0.03771881395112756,-0.09577843449132796,-0.08466048163173977,0.02096173196470175,-0.04105565407212669,0.05176622561351221,0.003220722690991448,0.021898794914041807,-0.1029927807193438,-0.031118959777161292,-0.10062205846596678,0.06579317451646699,-0.05957484609607,-0.031603355216547876,0.07293328859963273,-0.018293240130009797,-0.013761826975641028,-0.0013062090980603862,0.04200434701806374,0.06657929238688186,-0.12197366302111597,0.013451260028283377,0.012072809543506167,0.045084489487161525,-0.10069567866716227,0.02997709583072061,-0.02154619632768034,-0.005183755469150303,-0.0626497690935304,-0.0208031377454677,0.04344692110203762,0.08195434951344438,0.039846057231744315,-0.055310534097323734,-0.05548851145449724,-0.0168962811357465,0.002323563643376185,0.028979861996462977,0.09515827537042162,-0.06366276457216671,-0.04290665099335252,0.02027280397293752,0.03231845283643352,0.03236500375483266,0.012312882653204385,0.00022541641674012197,-0.004367603309754003,0.06483760932961094,0.07488073911042713,0.02828310518849357,0.11429423384077561,-0.016299379510662727,0.0223759992384057,0.002638980288381762,-0.027802569606727223,-0.04275638550463884,-0.025043554813004604,-0.06588181046967834,0.024894186561844067,-0.01889687508530695,-0.07211813230413028,0.022740597697404333,-0.08030524858066677,-0.08831429963720847,-0.007039757386338242,-0.000445487956608272,0.01307180099331935,0.06181743459230199,0.008308945831376516,0.021355632193089162,0.08747215220561452,0.07970656285203694,0.05287983300373152,-0.06166001677624607,0.02696063702302326,0.06072292672036906,-0.13761591429927852,0.009150113191462647,0.0741398690187291,0.0010734368658533487,0.0018343579274165745,0.029459346830302786,0.05260835818941667,0.027344493663559597,0.008584469626318784,-0.03954993214272766,0.037221117043540024,-0.03328302839437651,-0.022946271311359605,-0.05271360389501921,0.03164814506378025,-0.05264093250188564,-0.09092338861843893,0.030524272516984852,-0.06288480217049988,-0.01912515742651639,-0.09082447095584857,0.015416952486954351,0.0724354823585596,-0.08408214171498372,-0.03269787714415641,0.04323539551819963,0.013658747590499233,-0.022888426514245084,-0.001208911144872415,0.039729450082622894,-0.03921455701332097,0.054324663443324255,0.08935633714564657,0.01340174866969572,0.009427988678640552,0.07600812396425922,0.08550434818668785,0.09511240973183181,-0.10966016677824027,0.04819701457417903,-0.08515742323193089,0.018028746422989367,-0.010336963280565027,0.011259606310917061,0.03863311745576855,-0.031512772518096956,-0.0001371838294659397,-0.05622506052611691,-0.015613141702942049,-0.0546261740353272,-0.10450828569967387,0.017473556998724042,-0.04495351445132913,0.01540420194429955,0.07836201723196137,-0.028612619122991862,0.04888362545949124,-0.01925377034414219,0.11756094405812921,0.020399679495045238,0.11240342954817696,0.08058166065983866,0.023052202481207613,-0.044546399443214146,0.04776603160382539,-0.07477944325416341,-0.031241481634368816,0.04554621487901451,-0.06462310237186507,-0.02720475732152859,0.03823933579045836,0.015816115980824334,0.05073867920005156,0.024814917279176216,-0.0038812473442945243,0.016061840494577238,0.052432789211542645,-0.032370269479022336,-0.03992444620991025,0.09492769724277451,0.050925793566010666,0.06334486198456112,0.06326349258814412,-0.02462063835535159,-0.08935630972526395,-0.03309640267943983,0.021374186498803592,-0.043067168134962676,-0.0024620809388879207,-0.025430708087755063,0.03591769263991236,0.0085216263335099,0.08141552257222603,-0.019822259906430204,-0.0335483849251887,-0.09247156552515358,0.0023723066634290567,0.058179485538839594,-0.06328404515634196,-0.01292296007644978,0.10628620869344348,-0.017288235706357555,0.013851621206619287,0.01452380182571086,-0.0063960556953679484,-0.07495852284016875,-0.056250203222345925,0.04211879674420044,-0.006071660662255018,0.015276950166355996,-0.06958191084792598,-0.05068148106278663,-0.029010981060661432,0.018874931499608314,0.006130508420090368,0.0014146987411852777,0.01237416008392085,-0.08268117939234994,-0.06698351760151564,0.07768106255115363,-0.040340103851552844,-0.046619159604122204,0.06976888856190527,-0.05661241590876946,-0.14930069668163246,-0.01399595117773551,-0.021014374700310156,-0.07689636269183538,-0.06150789508565707,0.047921540866863094,0.01921009048667761,0.060291878209021696,0.030131280194802244,0.02315525495825418,-0.07966869362278307],[-0.06100157427671796,0.10677815281126937,0.06941515098690205,-0.02590824816495119,0.033006109900608545,-0.03679458604904629,0.14728591561147478,-0.061229673450711744,0.02547596125489033,0.0142167699105134,-0.06310795293133774,0.05510514558069789,-0.02888619747627858,-0.05785566674183007,0.022003373872606185,-0.02000312500574541,-0.023514172765460212,0.06678107949164618,0.03170086096239796,0.0100891695573488,-0.03569474797092564,0.015659944350500773,0.0289634386736792,0.01304492671815435,-0.09021543654033871,0.11455638933249747,0.020915525007324683,-0.015124631248338124,0.007332957159615284,0.00258241978301183,0.017509901615286455,-0.09750019776471651,-0.07048396076206852,0.006879740131046046,0.04423330387830126,-0.03127290143765384,0.07501237734645386,-0.011560126604248287,0.030122941719000977,0.06837606993765823,0.02845252098647377,-0.056480769189942055,0.001395430887305523,-0.022346110087357866,-0.04167735823364659,0.03855831580696873,-0.016459218811185006,0.035583392421925736,0.005232009988157199,0.07889799795885671,-0.011238325147417324,-0.016282478891545268,0.009337350985240193,-0.02239988018081225,-0.013768922020288994,-0.0227002478800153,-0.029123499237549654,0.007595372278674304,-0.09235066018869094,-0.07226133520129552,-0.034230140305665076,0.0027075830923539235,-0.005021018893404956,0.0025987341862943286,-0.07981401890551082,-0.01134904121226851,0.009978163888461549,0.059949994534447194,-0.023122154977183597,0.031606689552004574,0.05522479387583973,-0.06959520718582128,0.0706002461460556,0.10525112132398014,0.05836660752369013,-0.060172283020965396,0.016167634183044195,0.045241431941077034,-0.03926477121303677,0.07322537856119452,-0.003407853291086422,-0.07501086357881616,0.011167048457646008,0.043634245795684305,0.04432140731752694,-0.028820239798173667,-0.016860233913897002,-0.027188507488116076,-0.01765213344354271,-0.04705263769482153,0.04089850034022941,0.0049262480459683145,0.024162471111162924,0.08209009887240691,0.06716004472879711,0.020038655548674105,0.08207082480395259,-0.03715418559632785,-0.022474116420024687,0.006532124582706568,-0.011205176262365644,0.03106030598902763,0.04262514536794523,-0.06918824611799047,0.0072070147220863485,0.06344468284520453,0.02037665765834396,0.024850069921353826,-0.046722339051569396,0.037061968431321396,0.009160199583004925,0.031770202380939846,-0.05858991072504428,0.06772960042831201,-0.004342070634469125,0.03943007829386697,-0.013243180118892578,-0.05434526591076707,0.05737354300969576,-0.01821118033457015,-0.01632273141968982,-0.018004165966517386,0.01339099832474761,0.12186261475822088,-0.016519122902215366,0.05971345664722341,0.06032780618657375,0.04804667734279988,0.05783239226341886,0.09295467584969903,0.02196145329124633,0.05672610273401389,0.06505553653379492,-0.009751422590544432,0.055312990677738046,0.039873008120011065,0.05454159047537575,0.06031783239161453,-0.013820665022135565,0.001900935969580433,-0.06823446919403686,-0.05273218187558601,0.032102760878165784,-0.023116068199725653,0.02123366193118582,-0.023536321840569537,-0.06104600286588044,0.008205779607734217,0.005016221463045652,0.04038987417402573,-0.08700524322860873,0.0037703799370683096,0.06543784881694324,0.10166524823578772,-0.0387861488385212,0.03742543514535088,-0.012487193927025941,0.05517247941453236,-0.04284652206001864,0.046862432636063225,0.007010090949273302,0.08368916968994232,0.01855707590368137,-0.007035470198163269,-0.001444686774940732,0.0736560040591417,-0.06788151463184103,0.04709605560336761,-0.009535108721773773,0.0272963364998961,0.020041810828416138,0.06835013785713176,0.1032036405028185,0.04796268328280044,0.009476635203786178,-0.04868711138489262,-0.010909751132328737,0.02341082604912567,-0.011123521603059154,0.05707834226804244,0.07809596559228507,0.014695964918907976,0.09945292081199085,0.05522976785581134,0.08217955443653902,0.017264902624066866,0.012523236411592158,0.018307505085795928,0.0069039521216070635,-0.0471835143581111,-0.0491200102430256,-0.03869312266569608,0.045602870821126296,-0.002670239183344405,0.0574585720221024,0.0129611314169416,0.08944442282844395,-0.012229122378869323,-0.040943854185332494,-0.012366341515728019,-0.016522894632589078,-0.028897327962528745,0.05674747721686865,0.09061559667577095,0.059362466926948285,0.07449897620009391,0.037680707348697454,0.05935962095163545,0.06425812003330343,0.06173371786767442,0.01560624513139358,0.010341609950108865,0.04721737543965518,-0.038761112513035795,0.00711867330800784,-0.02892691815039715,-0.06979322152326448,-0.018448702669497444,-0.03295887202756324,-0.001009171324929587,-0.046842731654739594,0.04230468804430446,0.03763543821809618,0.08680669947551056,0.0010037856526092979,0.006791447176306807,0.07740463308490755,0.038394867677954476,0.04433383089382169,-0.024436079103677948,-0.012896776806380128,-0.05548683226320045,0.07671162757325178,0.0017054541248166944,0.02709264208491217,0.11026413078392945,0.1399855711494502,0.11718239486681167,0.07726104360606212,-0.061301495053787215,-0.06833002943715288,-0.13426110380599035,-0.04810024287587228,-0.11996978508054497,-0.08227979395347546,-0.043616571452666786,-0.12150363629070936,0.09464346849154996,-0.01456273757799621,0.06535410250936437,-0.09620783429026737,0.03556451430153035,-0.005399877668094069,-0.0796593799190198,0.033577507793605056,0.10567283471948762,-0.03994668770813778,-0.051325874273136375,-0.026073875864422273,0.0902902691453328,-0.00834278501019246,0.005440704226644964,0.054600356665415586,0.016587733455149207,0.03840744771244483,-0.04377888329317948,-0.08518363802537329,-0.11819405732653178,-0.055479202090524475,-0.15035348843647867,-0.08315316323701935,-0.09484079312952212,-0.10041823149920645,0.01705675939756572,-0.02869624669633983,-0.02889728375355627,0.0244359560010711,0.04826777752951647,0.07033610285965347,0.09584590995940037,-0.07747572332083208,-0.02938165068010276,-0.0018668792303383895,-0.07187157569977343,0.09401958524993982,-0.057375272626275974,-0.018811416410694084,0.0002725881265370646,0.03542569970415165,0.03039129021314968,0.09764265661427654,0.0028647282265039102,0.069962522252189,-0.02860065394339756,-0.056848874813597704,-0.1128087980397695,-0.039864591140662355,-0.060697205331934505,-0.07562106287031671,-0.06339114287868541,-0.11929947633222904,-0.08281915628449031,-0.11130025407915109,0.01006266376651648,-0.031310268112141694,-0.014758230661561707,-0.05186082473418192,0.02823702017695656,0.026606948915543008,0.10876735849487221,-0.03698558107823345,-0.07538363182070032,0.02964688079643544,-0.07605503869673655,0.003732145545762032,-0.03866276404995601,0.02066450672166248,-0.03988028981719756,0.03008962633557401,-0.032835813353031616,-0.059015146725855214,-0.04083006255389114,-0.04241681771907741,-0.16878925609577322,-0.1192542154946113,-0.013453382536637337,-0.0770151379922029,-0.11661916354704559,-0.04367921631403276,-0.11935967464394773,-0.07338881058718877,-0.06973578913396773,-0.06624024438307571,-0.02204020475018738,0.016567796004208917,-0.009905182195985423,-0.07629575913501949,-0.001545247419540419,-0.023997156005361963,0.008286449327428924,0.048546868553767074,-0.02850498609250862,-0.07690628631771401,-0.053330016047904716,-0.056543317389867336,-0.01196069189981151,0.06932187023015358,-0.04422654171562252,0.012479247174485843,-0.07769828174558767,-0.03990393398429388,-0.041985160758153665,0.005390143012005202,-0.019376137898712096,0.016013243633337417,0.027234323449549108,0.03479486089726078,0.018048436776748125,-0.028112182876147324,-0.04264769353627271,-0.05616993025259673,-0.05463583370236574,0.036198805052690776,-0.03173674002978562,0.013693456792285503,-0.0031603407896809545,-0.0839171435044743,-0.03116499788890903,0.02961070614855772,0.073944781207297,-0.0028984011428796123,-0.04343437459384023,0.01969624660540889,-0.08292089807163965,0.014697757363959483,-0.01510278853788014,-0.07019327337320033,-0.04465855693207797,-0.05341383847386832,0.012314634994493057,0.008539269494993526,-0.09117127630822829,0.10638664300694523,-0.014398222838343935,-0.037824811073699095,-0.005321603970044632,0.019671834537925034,0.005918152083439541,-0.06169103386966706,0.09831020230560587,-0.02378918061123688,0.030894326055906047,0.0037576284484835847,0.043057920967678714,-0.034561762186984084,-0.048936420392277094,0.03509855531394184,-0.010600957502150406,-0.05673420256701911,-0.12254708943893677,-0.0624251804185231,-0.018201946335567796,0.036271338211295884,0.039579792354150566,-0.054483455039206444,-0.09052456894736094,0.01155242466328119,0.0696038488438534,0.028314976806508983,-0.01048299252140175,-0.06033171211853201,-0.0076426991369802745,0.0358319825285686,0.005902114275865785,0.03548308774991612,0.10251411323334468,0.036387622109771665,-0.013789656198473393,0.01802293210465576,0.02304202064581582,-0.004365327507717358,-0.03714037378205387,0.004814649755157028,0.008133854778347665,0.02478691052010295,-0.07396715768332533,-0.062330293338290745,-0.04818186421637512,-0.05680590089810591,0.07461843907497079,0.04884123946396866,0.03788848018924515,0.029222495203813523,0.013117055235554252,-0.003794461380052892,0.03153057974473241,0.03431674921611842,0.03537940822857424,0.004392244459688098,0.09242102990853217,0.08407117159641239,0.005446291654876668,0.0011195213787172373,0.10683876271763676,-0.01214357031366766,-0.008583256946585224,0.0195578766577874,0.06170084955579264,-0.05274511258432473,-0.03946374663678774,-0.01291394141535729,-0.058936606355404576,-0.14844055767391112,0.028896333252043514,0.03263927961808264,0.05219781046553261,-0.022998693496229915,-0.0051286367839707475,-0.024665289193383014,-0.06625502935061037,0.0389794544397518,-0.014445500136770264,0.05308633116726948,-0.01277044492830302,0.015019784809525216,0.02001932911490967,0.004078287550051547,0.012201858331633255,-0.004235433516892941,-0.0014223042752064517,0.04469421115039169,-0.03011800466098273,0.04948691460838674,0.023328573395182524,-0.0072127212622537795,0.007397746237590073,-0.022924807082412527,-0.006383394144558619,-0.04646935531014212,-0.005186777675357305,0.04715417210932817,0.06349165507151405,-0.04925964751976396,-0.043187599255947486,-0.043397122261400384,-0.08227884335917415,0.013758046536249093,-0.03723546156475247,-0.025898703232781276,-0.03992685098457493,-0.06352277464691726,-0.022517411374147103,-0.09303195826887678,0.0069501378187329195,-0.0019780270823122484,0.0650004569294553,0.024984913550568144,-0.016996178113997906,-0.00025777460915508114,0.0338068481741627,0.03215237883105375,0.05277887208221094,0.02413143943922442,-0.02707641490464391,0.024425775456190367,-0.023324362078683956,-0.042363761065779576,-0.011036468307523334,0.0071198736661779605,-0.07887860653278911,-0.08377721630314001,-0.07678906768868403,-0.0038420217241338446,-0.05049230391799134,-0.03287000020017311,0.022375801408392498,-0.1127618218273429,-0.02595325075020232,-0.060676031824175754,0.0953330112436645,0.06634481707777284,0.026813108332169513,0.08393940716219174,-0.008030051334327704,-0.026673488718504137,0.07308420317122492,0.060658419299214866,-0.029936700284013813,-0.011348905753227704,-0.018592896492667602,-0.05117811533345781,0.016226880651494656,0.053632187200235014,-0.007688743209106661,0.003861832755974038,0.04505595803362702,-0.0002453608322941075,-0.09450795873493398,-0.04851021748081325,-0.016332578040568254,-0.009983573283745984,-0.07885394084322636,-0.04720934133513493,-0.053641974532348584,-0.009215244367789237,-0.02054493969216707,-0.0035483624795386135,0.05203253354298555,0.027390200840030438,0.03084321382719848,0.07701982635624767,0.009702500675416883,0.09559241562399351,0.024719944155995904,-0.0038624966103299493,0.10371677620887937,-0.010698152203074237,0.05431282141219195,-0.008554501183352261,-0.004110496402074662,0.013962790546261698,0.1270971300052429,0.01112531870411878,0.08007297007585014,-0.015920254160564452,-0.02154072606649302,0.02354167269459,0.09254364707885289,0.020203248289887423,0.0016691789494994098,-0.04300419436435388,-0.026193907238517024,-0.11513912580285572,-0.042753223931902735,-0.006503235396902853,-0.009157091304891073,0.04261372120232403,0.13536463903490464,-0.0255081953317563,0.03489765493879835,0.05797889372732707,-0.025689905018076963,0.023761076219266937,0.04450213404393624,-0.050382180607794654,0.0425945894853446,0.12551471123332858,-0.03652162316435749,0.1343257835615851,0.05960757216112526,0.026349097720204263,-0.008638934957882422,0.05325261952807927,-0.033759240456383365,0.03788963178716444,-0.04908094838091967,-0.06860439107887749,-0.009710581711443964,0.10246140676584035,-0.05613236897694717,-0.018519825900318167,0.03147244178029872,0.0221143608956384,0.1210655502709138,-0.018647108102156855,0.00263063252615413,0.06268841804419086,-0.00628768224398903,0.06867956212949117,-0.013354672139817676,0.018338470728150463,0.010776518949066142,0.018964322121058395,0.06855986255555939,0.021963908464150587,0.04399591030058897,-0.010974773086031639,-0.001249881363684193,-0.03486101089802702,-0.04191877328394938,-0.01167886783735904,-0.06427453618573917,-0.04602541840268653,-0.10196051246389405,0.058071378006050625,0.026729559750542167,-0.013823769609439584,0.010247317446175831,0.0391624862237781,-0.006730580986986089,0.05969982635948325,0.02691371250125676,0.029562269866485323,0.013153520306317003,0.04265151440192842,0.08640304519564486,0.04461344276418259,-0.0760660943853368,0.03728413203788004,0.07988516335371358,0.013830593580075589,-0.007424359200801979,0.000010707087674314861,0.019165533111713283,0.02670330449084707,-0.034878505397468514,0.013965155244903736,0.03153531065340416,0.035778704366341535,0.01919967589967199,-0.055249743120814945,0.012112560189006909,0.1117005542594049,0.02361066191627885,0.011371903018071543,0.024082549245418392,-0.007524842788436186,0.018561105994846887,0.050828784131470954,0.10147857980812557,0.0026414834731314286,0.08197280438517014,-0.01698378786162146,-0.07354846068905192,-0.008041191430807079,-0.037735601596916385,-0.00200137085090125,0.09194821700803668,-0.11189838979447936,0.015172760263497427,0.04412918350948703,-0.0034634769322120763,0.03216262428099437,-0.05761280114378963,-0.06424231410758982,0.006606912023870745,0.10070720338892501,0.018371307543731643,-0.16037566074865142,0.061564788968457816,0.00017990421724818064,0.08674087082964652,0.0397505761900999,0.08025252669376766,-0.010011437996343363,0.029903878424936838,0.05673287284914199,0.07539730927280042,-0.023240252260308705,0.129143097035216,0.02124744512059291,-0.016027269765356587,-0.033791822113171235,0.002035849835428737,-0.060298506836761016,-0.004796327176764646,-0.07097836335410254,-0.02090957605468616,-0.049392548404445145,0.017000757901375695,0.03987542644178513,-0.047873019331694584,0.05803397417519991,0.07157389212232408,-0.07234586381967889,-0.04329754363617612,-0.008558430047173023,0.00988216956596819,-0.06567010878492689,-0.03527706101143944,-0.008101119320913156,0.010155271948700261,-0.0521873340341806,0.12859686911513576,0.0030185987207946604,-0.028436718407674394,-0.11946851626158322,0.04492782168524959,0.0012625168648000605,0.08695488387709642,0.013278948562766745,-0.06138412729020212,-0.04736999766849181,0.06736903959043107,-0.09542542951693231,-0.018059345492013216,0.08192469044439869,-0.0026620270699837098,-0.0031471765387337345,0.031771434791376334,0.032550461364712194,-0.0449539960947082,-0.10271093188596334,-0.04978354431994377,0.03019563189412295,0.011608369812034103,-0.036755402769025114,-0.002524775226448602,-0.02765960719274232,-0.021575731633765773,-0.09054478786591291,0.10530424289287875,-0.012963250269468115,0.03648096004251633,-0.0004893238528004375,-0.05061778793002686,-0.025995505053800355,0.02024797424280977,-0.026226959128129914,0.03110364166270605,-0.0580668757310626,-0.12295927229567535,-0.06896296399947886,-0.019791520157004475,0.05064188177480047,-0.007947144142780178,-0.0380428144406343,0.011006531894530979,0.09904467954124727,-0.1134808611117047,0.05013205405872419,0.05575838857744767,0.07577870647449274,-0.011146224704684085,-0.06630064164703249,-0.05519948648410599,-0.027107082334912835,0.06059975515898522,0.07732237127481514,0.03197076349020166,-0.06795154767256562,0.0978230081099601,-0.037146120298026934,-0.031126018155803115,0.022283532156427036,0.005153042857001837,-0.04046248058819675,0.06166742114449808,0.00818368895191963,0.023801624087653715,0.05495360559685686,-0.0449860327199894,-0.026590856275090897,-0.0180708279461446],[0.006894033826666148,-0.02417301506178209,-0.02706643601977441,-0.004163496183207633,0.04799374155305548,0.029856782351829435,0.006759779506451493,-0.02771508302722309,-0.07191243273266915,-0.016548668183809075,0.02167560339955153,0.06452549943619551,0.02664243388095364,-0.031037237677641563,-0.04974988111356757,-0.08192492458118618,-0.04171406590485549,0.005442635042323686,-0.021507258077790622,0.0692070271299897,-0.05578463169863184,0.09491646543430367,-0.042573210326026935,-0.01701416422955627,-0.026652882008935633,0.025495531260147117,0.07220370935452873,-0.011041811003990239,0.014033952362619673,-0.03936484210040361,0.002379225768910676,-0.058662602170366444,-0.034974969986969806,-0.08517328511501335,-0.025972944488869845,-0.01287199811660685,0.023755215156602547,0.003124675282401732,0.010292180348999279,0.010233479027032059,0.06748681410626207,0.012811101495765236,0.013725259585636553,-0.07479358464353027,-0.021955785589452527,-0.024900214197655018,-0.0062255421777079635,-0.032403888108749015,-0.005544230804923598,0.07497227096616188,-0.04192847699747119,0.03148129362908293,-0.04094605983276973,0.02246473944848392,-0.06657275964621738,0.032709440676719215,-0.015849287761672975,0.0026230132747266702,0.03847963281417606,-0.05592750701532253,0.05838167377628488,-0.03229078144857679,0.015272405121007054,0.07313858122664292,0.030164620310511325,0.030430907749784422,-0.05400511255853499,-0.02372406652322835,0.006676558661966516,-0.038969999629602625,-0.011653589547823853,0.04667603648945211,-0.021242766212096073,0.10857164701517404,-0.021284236427671632,-0.052475561660721586,-0.034237895790938375,-0.09821133823121528,0.04325837495364771,0.013994861246809202,0.1440771430751688,-0.08971472285972674,-0.0909201760157968,-0.034428727213079206,-0.01940227144894419,-0.012134197886366892,0.036349336795414834,0.06946541854782634,0.010069085792144751,-0.019712165265208147,0.03130061551277496,-0.09551411648615325,0.016936723343252736,-0.05513744571541797,-0.031062249960573184,0.08569237654255879,0.09085952354445781,0.020440041279620604,-0.06756520639847488,-0.04574240741203454,-0.03222480118745172,-0.0474053268146673,0.1425361179675252,-0.004306890949429171,0.02793506327183865,0.03310634087736975,0.00763952047581513,-0.019148487987659033,0.046930732570138085,0.007748810493278498,0.021329394711496853,0.006157794466612829,-0.07560379311854638,-0.013743919771778927,-0.026550370887616335,-0.011191988345581138,0.04059135521802341,0.009704403160636482,-0.09902490820413655,0.03246582599099954,-0.018886654269485166,0.06044982271502079,-0.08486672382023223,0.08884022392818129,-0.09065263161615009,0.002616030840303692,-0.12602985547297016,0.018509879474893496,-0.07794571992347209,-0.021744409409542274,-0.0032655605096976585,0.03561175882134941,0.016096364400328547,0.0910416465484893,0.010182373095721686,0.06810602168118993,0.07376369174691695,-0.062265144906084695,-0.008491326865186605,-0.055404096241916403,0.03759998139234592,-0.026364735554932663,-0.058945446807385934,0.038830892561238665,0.0557859265776271,-0.01730137400461483,0.02247050952894289,0.006136910024949418,-0.000523845050189259,-0.037069868884182545,0.03813906824658465,0.03822530913573535,-0.07080384233752932,-0.05513445055244515,-0.09880278914595317,-0.07941685502595579,-0.01301597799549799,-0.04486345611772273,-0.009984213010796385,-0.06839941494349609,-0.03827267505536457,0.05293670156235229,0.08023663124688352,-0.06560591690271078,0.027862671371661478,0.02552428869794373,0.000779797780479733,0.023736186231737472,-0.05457783519838647,0.00554362443993527,0.016910508881482607,0.03270401933218652,0.013952057991732185,0.01762174654818435,-0.022027106566179355,-0.07624766989986462,0.029115613369107503,-0.0018849044882549338,-0.010801437311651648,-0.058954902355950335,-0.08659545136746509,-0.011335424862953154,-0.0435792311644217,-0.018609659393294127,-0.01995420214573499,0.0077492917750030645,0.04525314360179556,0.011397641519261974,0.0439701887896836,0.045552675941819054,0.021420226232421936,-0.008836678261368634,-0.10409022512775315,-0.04250228842553894,-0.019784673304957364,-0.05856936981370822,-0.08780687563038474,-0.06815601751415912,-0.026231769775354158,0.042356108697710775,-0.04606558007312676,-0.03743201918495687,-0.14143560881249592,-0.02487099207380648,-0.07292654377179471,-0.013422679244970493,-0.10769172684183595,-0.07931772389300913,0.07054431367246033,0.08947440408578787,-0.03692472897439869,-0.050194712862671624,0.09097460585724278,0.046393745478779135,0.16125954797170985,0.011045158831925065,0.0867579891889833,-0.016947271702887238,0.0920787997274908,0.029335365446425232,0.06781086446951895,0.0392784092267782,-0.026345451021526394,0.015189023088655527,0.07271869177976543,-0.05048364917368257,0.01743361670110963,-0.004147802837862822,0.0004539712414524258,-0.05484131613653281,-0.055366417081605834,-0.09127224422326735,0.0274520600317102,-0.020259399881175758,-0.10867919430329183,0.024053870661970813,-0.036752995252098915,-0.09911651861240842,-0.0023284375177378596,0.13449438286337373,-0.05139180567161925,-0.003850598114326969,0.06606527577153973,0.052207648224864546,-0.023122742080412352,0.07393050474620823,-0.028788884586396314,0.0055698077367746495,0.012518350201394154,0.05219169183607273,-0.02950228195235131,0.037237190572126856,-0.06567264245217552,-0.026050552604448152,-0.010090062945395778,0.053041308336322174,-0.0397820561860466,-0.020478752720545435,-0.05336168861457606,-0.017184148951362565,-0.07604994135419459,-0.07133125694718277,-0.08832301553067926,-0.0251888868975486,0.10434287518559347,0.038416955046491355,0.06419211515773135,0.0020324911012997637,0.07934542256511566,0.02996778174537893,0.04733212044978434,0.0433289975715221,-0.020587760182747016,0.02204045699355294,0.0009555815677407055,0.02249171951791106,-0.037332421248368615,0.01663727773235556,-0.010808945959275939,0.022630063195766884,0.10072063533810317,0.03729996140463058,-0.0474163412843053,-0.0031490890689133146,-0.03441081754318501,0.010587857204982627,0.029173842217867764,0.0297403802034932,0.010735162238693028,-0.08228939101588165,-0.09030853467363674,0.07946208842134449,0.06444806089253659,0.012643368741244,0.0015402092718316853,0.07813101912263323,-0.032576988158455736,0.08875243458571265,-0.060319917206630706,0.05680420905977587,0.10407390423435675,0.11216907678377215,0.016581131029832687,0.04607243658070985,0.04387283481730683,-0.0043942249789307285,-0.026962463619744872,0.014361605126281533,0.01533250527063033,0.09901416036102027,0.019100036493093546,0.016996229624983806,-0.015408882844068364,0.062078251816615936,0.04563868184656167,-0.028899780482527594,0.017203548270552742,-0.08076236631964312,0.08497483771150949,0.040940955100084435,0.04387604894692033,0.09115734264199556,0.11304047416307668,0.06399963558875715,0.007354807393989472,0.04116887180707703,0.07232305182077513,0.0017179708876176028,0.06646142274044316,0.006771800436347583,0.13050314631829887,0.052216928949626346,-0.059105107982061256,-0.10428615753525723,-0.06408857848836537,-0.04120578353177137,0.060087376696824076,-0.026688153581378896,0.017748894947949317,-0.027335248395697852,-0.030899203619732245,-0.0017936950597724273,-0.015333827488868459,0.041359691782511844,0.09699734281721539,0.09784010218254534,0.0811606387102113,-0.007455616604556589,0.03549465816286483,0.07913315211133133,-0.002960323229821498,0.06284175389307545,0.022879127242818466,0.008321465734703012,-0.010176602852519069,0.06739684381106482,0.030041064640452107,-0.00969353864927739,-0.08140816485472803,-0.05631453540172619,0.00425290660311614,-0.007904937238051033,0.1264963250214127,0.02037008195545988,-0.11442194482294939,-0.022833963826802778,-0.06162518525986565,-0.034023598355327915,0.08498590434153841,0.027149768300682775,0.018626229588161205,0.01951979405284255,-0.051404888067203315,0.0318086398403712,-0.09018861087850155,0.02937520991099798,0.06682610308199773,0.016243197067777437,0.028981193513593833,0.04807891200754621,0.013625136786171199,-0.03925476758738651,-0.029950037562704784,0.018101186137620077,0.009180862142220275,0.06799419963389483,-0.03937268982091895,0.004320489012415762,0.006206083164367572,-0.030876610154838842,-0.03564651080330734,-0.005090054689594872,-0.08965889638368786,-0.05375428966313314,0.07373645829666338,0.06833836214738044,-0.0410209191853308,-0.06244232805525336,-0.07082066881710454,-0.08312690013024175,0.01185550371607651,-0.013486585449789496,-0.006008033281013624,-0.06669821415797256,-0.0997505512648794,0.01018932328750917,0.04176678104832239,0.038375563238938495,0.01379852794698374,-0.04348816606349246,0.020757513066766695,0.060140365206037334,-0.031025628222259585,-0.0020557323622190983,0.032679273060777336,-0.07314671153567909,-0.03530837835647449,-0.00047139008737179835,-0.07608928871091725,0.0012821241206517977,-0.022945042658193204,0.011491207840423161,0.023616831502215253,0.05984497795879219,-0.048887646809368586,-0.02638572325617453,0.006931756480307453,0.0154534861322688,-0.014585203795063766,-0.05053855040613196,0.049725173607978415,-0.12841791796750188,0.07563575930857802,-0.019445469044648212,-0.017750598842827515,-0.03361592584070644,0.03704900738333369,-0.02494681401860188,0.02649155686531098,-0.043876341072239665,-0.00498711755454346,-0.07971226403818674,-0.02824725287092069,0.05917436297125094,-0.002633606830600514,-0.051521872853749616,-0.010305209084391826,-0.0632399473242286,0.03467039114441967,0.025963091428786774,-0.04928533521506913,-0.0759674385604597,0.019196092501133386,-0.03293194671408117,0.004014748921218078,-0.05259938314021916,-0.072272165386041,0.03285014771931321,0.06562358285617778,-0.0331384466868319,0.052349780539569055,0.05039399174767352,0.01047042328056212,0.06345075540990609,0.03482689981831267,-0.01176898960583086,-0.04736339684460019,-0.04747491351821751,-0.027082810074339117,-0.06053472011128661,-0.033983468557545325,-0.039362587528554455,-0.04530235545898204,0.045371390033144596,-0.0024839441244727755,-0.19780579544229238,0.01844101165239608,0.02795494989534364,-0.0008386437093516687,-0.029281646077073665,-0.06854538210055545,0.022721080919372905,0.016452347959522634,0.04149824126754222,-0.04962102940925265,0.036769597734184194,-0.004250521687096678,0.03660533236760984,0.04477336386264785,0.014047348984050323,0.024333542215202113,0.0018429608147233234,-0.006810424409119682,-0.06557350048577217,-0.1258104886733665,-0.042603942403037796,-0.018329660525795606,-0.0887471137638892,0.029640002854879603,0.04881622335648566,-0.066246916865246,-0.059177469586029124,0.03940578155326201,0.018970041372753328,0.011827554631685883,-0.09417146835344385,0.012461631673050595,-0.026109353920731767,-0.005488473506354417,-0.030157203196423895,0.011656861106936006,-0.020625115805553755,-0.020346226131282872,0.011609501056865342,-0.045040383709770884,0.0026583942147356166,-0.0057853299425916485,0.024193868469653688,-0.07741554747127047,-0.0786233998007778,-0.024799119388722035,-0.08263129093300213,-0.05650613465003953,-0.05004847346795591,-0.02915994527443493,-0.0693048811154696,-0.052909487702546824,-0.04564219189416179,0.05230664812429391,-0.005722890065783676,-0.10249646533250727,0.038553645104261784,0.02031796816862583,0.014663656468703719,-0.06845647930283602,0.07455980330365358,0.03106072552414015,0.0037060124424282315,-0.016727137190619353,0.03359369454165155,-0.01313359694227782,0.02107675207508754,-0.0053967219356003,0.09786955654482102,-0.042012059920446286,0.044407613801276634,-0.01717311702037626,-0.06313634417771896,0.03055953677267059,-0.06840994692922472,0.030682286742555354,-0.05034711238034948,-0.022032547062039637,-0.03727995833995765,0.056156173123938384,-0.022120213984544064,0.020661980611736054,-0.05220435971441104,-0.028971387547914545,-0.020554794097204964,0.0540116219243136,-0.036601166068734994,-0.00678565187003167,-0.00412332334085965,-0.00009534368326807015,-0.01398084821201828,-0.01173936641047691,0.08893212557927802,-0.003140621927144936,0.06069060589703585,0.03914120656075788,-0.02657818055927435,0.004596043822936087,0.0228420868068905,-0.023008581330476133,0.00440641188413732,-0.1161651969377374,-0.03452187060956778,-0.010801625464382248,-0.03911698557054264,-0.09093853734597614,0.013685676808408294,-0.11785422340549893,-0.03156524697105497,0.003793506741286992,0.0021841927722326022,0.08481199640282945,0.0015418010667113285,-0.05264817557869685,0.021656784582578317,-0.0024983747737938626,-0.09412225306177628,0.05382931987826527,-0.07187446130289989,0.037958927127606165,0.01332329628009107,-0.03624808704628776,-0.07171054911194624,-0.0741031778184979,-0.07793519716927311,0.06610491960452536,0.028044072767411058,0.018775412184533373,-0.041252330444313666,-0.03703897504386869,-0.01797669523579213,-0.02250921961951166,-0.028770872298399128,-0.056529928473159435,0.01577362145509611,-0.046273488075132645,-0.06950077748954843,0.024478430495526334,-0.09113238466737382,0.029595848502166424,-0.030836754728080548,-0.013260004563614402,0.025050396122512347,-0.06832608006525111,-0.05114977607493548,-0.07777097150478937,-0.10091033926324955,-0.0043202291046483534,0.04604045627453705,0.041731946542231335,0.021034243046270367,0.008338708828676843,-0.03311241488268126,-0.035010446991327944,-0.012211860530818885,-0.1137959170644217,0.0023356817782012418,-0.07464908229886666,-0.06678125932920974,-0.14011049896562164,0.025771242221652654,-0.01389245929523068,0.03145849349651488,-0.01827644940177925,-0.013216235571452286,0.014377105334090218,0.14779958983752733,0.015165513236058014,0.004865720230869254,-0.04025322777873155,0.022851710160992973,-0.02394925799303927,0.0285047226230899,-0.15044717070755662,0.013865887491445949,-0.02555999387651854,0.04612565739719177,-0.015259229597511649,0.0024140444029143522,-0.02384764906957369,0.03980656760649516,-0.07516974131255535,-0.02318832958817837,-0.0801539469825075,0.020046986316929485,0.012688273534701094,-0.008736142347193202,-0.12606958251579392,-0.09724500842447142,-0.07750232201322682,-0.01573932538798772,-0.09000958286950402,0.007265174915142021,0.04476922088357858,0.007406601117772015,0.045399846314550234,0.040125661828103204,-0.03799551528662939,-0.04501622727375151,-0.010293456713315923,0.0634321606410552,0.08052561124643053,0.03216306131753409,-0.03260044197075112,-0.010175017927698598,0.012541648123920555,-0.03668470220458182,-0.007173051957861911,0.042126149694351515,0.11641231673739454,0.03905101507120976,-0.04546098177277586,-0.07722853223746344,-0.09765153961718792,0.11006345526804542,-0.03255050546864285,0.0020427823017215747,0.12198827039310431,-0.025765321180726747,-0.016100848384273652,-0.021176540291448068,0.0037220327176692987,0.006267904964150407,-0.00216200790920352,0.017962815744612094,-0.03916747065641032,0.009209720865806969,0.005904150225677677,-0.0006590636477758023,-0.07421349208329599,0.022680937944635538,-0.036960648273651,0.008856610233587543,0.016750722275631902,-0.07332547239604563,-0.02849001817624568,-0.01742842358782596,0.007527626434461757,0.03175331295570398,0.05283092337911336,0.02080490639670539,-0.04804428753670431,-0.03586234368750304,-0.07658079036991147,0.10827407227146031,0.021821340690392467,-0.152766897777844,-0.024543319822105787,0.009324494419569678,-0.053849466707867125,0.013396097075787265,-0.046029161506603467,0.04709401909016643,-0.09116133576492995,0.10177020382184494,-0.10229407893837045,-0.023800103276457665,0.12115149279216797,-0.04933652253345196,-0.01960002490647838,0.0038383488568635563,-0.017373740544860117,0.046305547992896996,0.10841595291671521,0.0016945398494988785,0.04514537182096667,-0.07018412296572402,-0.03346298894447446,-0.000839268400384976,-0.01707086639395126,0.04966172573227965,-0.012073521419281839,0.02675793518659621,0.07375054423896611,0.06714383453175045,-0.04386816430374234,0.06971326269045088,0.022108871135708277,0.01846937176619278,0.027837197722241823,0.06207660453771754,-0.0734773802908933,0.03289478106357377,0.07039589261584887,0.061475194518169435,0.046612829391669684,0.006503721203359035,0.07854632782812254,-0.1300807268655947,-0.009926500561002097,0.029365311508324048,0.1128445549811316,0.008927920957986269,-0.042296730290825604,-0.00302223957178097,-0.03620447640392173,0.026880567740431672,-0.07469034396053817,-0.04724511611968147,0.0892545697463426,-0.02974106138366415,0.0010475826962252455,-0.06046746106620344,0.046039131885993775,-0.014621669805591313,0.018164560066515963,-0.029667727823855863,-0.07539375101960638,-0.011423277578471565],[-0.05304114178296042,-0.05888416187106562,-0.03263830301392937,0.011264723894677831,0.005451899165984541,-0.021243864027992835,-0.011835070980455676,0.053010586451624625,-0.06666093282090822,-0.029479081372845387,0.0015040715491301444,0.006279867679033373,0.004589212718191565,-0.09319706127410428,0.010987456579849052,-0.06836946163375443,-0.011304903560940008,-0.06670833387194568,-0.00352980364008771,0.034278628830544285,0.043605982005585,-0.03667387724790573,0.06619706641177363,0.03609208148348045,-0.14462047201026076,-0.03033205283792799,0.004812253137641074,-0.028149651830845824,-0.009058029257880499,-0.10814761792498684,0.013452796436776672,0.026428517059418795,0.01628806268016839,0.05222171937236171,-0.06906968109335834,0.023182574912860226,0.03045952034496294,0.04057385982287768,-0.0030624412830222046,-0.025003890058558884,0.03605936816139557,0.015802595720634888,-0.045920813423674656,0.0075615729189724605,0.0017135508886837656,-0.07143271432177604,0.05307458268636915,0.03330661982674052,-0.024145861722966868,0.0349716446345373,-0.049872407997649526,-0.00001307595625136865,0.022011293069797905,-0.000454027589904041,-0.0024977316180848992,0.029322835452717036,0.00797003428719604,0.06262833529112817,-0.051245502347105856,0.004057154302282619,-0.06278323954159597,0.05401409334117412,-0.01597314206558527,0.037473573127677774,-0.04259786447871807,-0.00907168869927451,-0.03431493074343651,0.0010842334901550127,-0.09193480093513762,0.011070183280728533,0.011949042017237607,0.15708124558435568,0.043996173376130904,-0.0003019040263495977,-0.06376253983044675,-0.006246008623057065,0.024829289095689846,-0.025733830560411168,0.05212736969490854,-0.03421013118911523,-0.03850804686255554,-0.0011955261212178308,0.030236701402185442,0.009344875447059194,-0.10811520165266311,-0.029851193920501267,0.005619733512628097,-0.03262392370780651,0.01603197305269175,0.010685384992060024,-0.06477472339515393,0.0012083538859157042,-0.003410396007763305,0.0506808727738697,0.05361973637065753,-0.05049189251587496,-0.00636592752865754,0.010741137959762621,-0.0026551539999394684,-0.02558745173494783,-0.060809913256322755,0.009274943048263491,0.014913671757712143,-0.03924304216990332,-0.010246478298220962,-0.0016631030180163868,-0.0010473994673070295,0.02649121261350867,0.06808649550448322,0.056125418593430905,-0.037055101664041565,0.0016050477893134998,0.05090355895639146,-0.10840817980658288,-0.020565919225752915,-0.028216493003472044,-0.043230817197436704,0.11110667010958959,0.0029567672533369824,0.04537059421619884,0.02274124659527037,-0.03410491375960034,0.07557281529970307,-0.09129380099263906,-0.022010696325549313,0.005202763513116539,-0.06862830644420641,-0.046071506704097244,0.011321589158541897,-0.017834796907646222,-0.056984785671614975,0.06892627154009119,-0.013837559999417264,-0.012279527896232835,-0.08536969809017475,0.027934903917269608,0.00922521519203834,0.0068473913734249684,-0.03525099142815319,0.03562449298223804,0.06799879453657001,-0.005261433542450956,-0.0044812667760715415,-0.04402083659143053,-0.042514668662945065,-0.022438100782178675,-0.07092274728143282,-0.045599682735421976,0.11739607080314593,-0.037916263741858976,-0.038387495566377515,-0.024949782667906217,0.04790210700221891,-0.05789857307622136,-0.04213101653063184,-0.05054307992628685,-0.011878659996827511,-0.10504995853469572,-0.027053189774027885,0.023443020067094218,-0.006281022919958631,-0.08600367908122884,0.11043510786617929,-0.014867044418222623,-0.019471858657372748,-0.06095656610987189,-0.09754392061554004,-0.06650917615417408,-0.02640207463813907,0.023187265778167557,0.03502732009494567,-0.06819132104326132,-0.06452170067160087,0.052473583319437626,0.02827414913917791,0.0763669595203924,0.09960958679722871,-0.014989060905049386,-0.004096247843233784,-0.05239395965585814,-0.0020261144857093853,0.093005747332476,-0.17966715251382082,-0.10203735140833604,-0.011234855156637821,-0.1756061261231078,-0.0183337714928223,-0.1021092115577966,-0.09007479120865416,0.00037110664717990267,-0.03542490432815708,-0.07194499771024676,0.03738576823330488,0.0374127182608756,-0.048840573681501305,-0.013542422489082157,-0.05164188090350154,0.032509448090867483,-0.01515893255841112,-0.03099196508397691,-0.044849420546446514,0.07857394207351408,0.14407709508401598,0.005492441021920255,-0.041926689589169515,-0.02566327903964067,0.009529484933946534,-0.013275792066713352,-0.10762690417012787,-0.08531701755282982,-0.15940264146175853,-0.034795461670162633,-0.056918505566977126,-0.05571430665449438,-0.09164936843223268,0.01320201140101927,-0.006774143011175151,-0.04809925857432402,0.023329433062270404,-0.05151187298234879,0.04454131549255166,0.02421919387633884,-0.02421116251236684,-0.05436518650842039,-0.02546275855302737,0.005926439950236228,-0.046768577861942884,-0.015677869236111405,0.0908081939011187,0.038236587744230235,-0.0371013627178153,-0.04498660588870125,0.02357669115847485,-0.009073367118589895,-0.028772434325487085,0.0060223654079629395,-0.03270004891344263,-0.04232817036017429,-0.07610273640625823,-0.12720175462077776,-0.09211514361551593,-0.012993088809118732,-0.034130253051458136,-0.08740821483483759,-0.03665874926445556,-0.0068585739620586825,-0.057942091696877855,-0.01282853941904039,-0.03659076410680106,-0.06003411244860183,-0.0016507451923946242,-0.011151942365578975,0.0358777051935004,-0.019216187033887094,0.03611541259487921,0.025762759524520337,-0.08330186148676404,0.024686444965362164,0.01939741934496128,-0.016290775282226687,0.06763097186408319,-0.018181364346793242,-0.012238518343683983,-0.008343317523782564,0.09645739065079612,0.079303818303176,0.04634744729458415,-0.013543582326728119,-0.05684164478878138,-0.1604813430243663,0.09499342617173129,0.06432510822382646,-0.011907308482880245,0.028237527259706362,-0.034691136877615505,0.049832757503553975,-0.054766657362741125,-0.052763950272618355,-0.01001868046153056,0.013413918774636708,0.012711888371672442,0.09112652123728493,-0.005737796435395088,-0.05315564468478481,0.11550083859093095,0.03817769850702928,0.005617142045679761,0.022398726633516813,0.033803536046650276,-0.0303758767070629,0.07048283420728509,0.040177900185719526,0.09264947674320859,0.06685197579526563,-0.002274098896964501,-0.053683466602126514,-0.04936273446624611,0.008605336713872222,0.03273678268936261,-0.03458057760874303,0.07248060534301318,-0.004283984552150851,0.057733975008501984,0.07419486582547974,0.012477597545954164,0.00038581799948033513,-0.008147752083549394,-0.02371909024907205,0.09284785719243102,0.14005460655696708,0.0007189893831105885,0.06396722944309034,0.03185464149321834,0.023882966466907057,-0.02502045133245455,-0.03313216969192177,0.024403295431823176,0.07000000566242931,0.01703516684216116,0.15915186078239849,0.11196579335364598,0.06715755110844095,-0.011491730804260714,-0.08976872497717318,-0.004266895448627687,0.052352928837272786,0.05405312177226949,0.08794917406639477,0.08211170505964217,0.009437638190992644,0.0902069473936837,-0.03411121254269656,-0.039750597348651405,0.050886632131507716,0.029760757955247963,-0.0008027941215757386,0.04877226841845582,-0.02036447299494104,0.03407339257688448,-0.0071292035647134,0.059472425357145205,0.03552429237327983,-0.025950910468752225,0.03430019675864128,0.03487692346591918,0.08318448731645656,0.1533225606092396,0.09939835783942262,0.016435918136934523,0.06274089901733632,0.0002641642437911799,-0.028101604886477147,0.03616436343253618,0.09096542832774063,-0.027437749238122287,-0.02231356577484787,-0.018041914475162263,0.09400419768390493,0.036299270956712655,0.08175308016595169,-0.02621484684963731,-0.007892508961722418,-0.018719522811997666,-0.06963848174723161,0.04869592618585602,0.03364198823618782,-0.015637167464827195,0.10362778774747017,0.05552830579306559,-0.0029226553855211134,0.06900172042671174,0.0801632958351855,0.10140575346347863,0.04646806054839452,0.14141578339888303,0.01934514182058272,-0.029788571866800582,-0.043968965204097446,-0.03641160392605449,0.0040384181122298,-0.00036805242268531574,-0.05243106215634384,0.05925823946211832,-0.002116028456920057,-0.046410778326822506,0.008391895630433912,-0.007540886730532672,0.024448690230297367,0.004103540768250028,0.011828907480836788,0.06426642855743413,-0.045692404332323154,-0.011894367376673494,-0.0242326972339743,0.00935044659390465,0.03885302170278719,0.019593202785886336,0.07334973971373218,-0.033831048814916546,0.07331238301024876,0.12762848799799295,0.03975818073913822,0.025972887287514488,0.014461575460379949,-0.05661257618935656,-0.1311687684997336,-0.024789774601510738,-0.00000719067661031135,0.044317747630212616,0.058041251883796295,-0.06585302645609342,0.029351342580374924,0.05878321765048257,0.055571515500018966,0.09962566902107489,-0.013473561573756513,-0.09594500794871777,-0.09742196239609927,-0.04954628339522429,-0.003979275309194223,-0.03834442505778715,-0.03975995892641461,-0.0012810839306789776,0.052553973800594955,-0.017571323195203253,0.04439127023462479,0.13543852670463125,-0.04692758414414032,-0.04937548717980741,0.08174549874183956,-0.022704365450233726,0.021198218866685152,-0.08935790424190396,-0.0862376647045918,-0.025214994661195745,0.05712962960539631,0.005132262553155098,0.05412245092599,0.05727863577390945,0.06941489412784656,0.07480594313936574,0.007182958854728793,0.0839175780391112,0.031259256541587725,-0.030944264329164094,-0.05136873965490811,0.03457151700211883,-0.0830369248326624,0.0072865374168970525,0.0153672138498444,-0.1272516030708512,-0.03479411375754611,0.024234757412111466,-0.026730817201707203,0.029483311540638494,0.030770451165323714,0.06210270448682884,-0.08164793222121454,0.011978730464685767,-0.1979552183543395,0.016834957290105354,-0.058399474347001844,-0.009207683811564947,0.0027444060869603534,0.04664778888418811,0.001514148200093603,-0.015209044421592885,0.02579042219536344,0.06377677668231979,0.06723045206188988,0.09469765633420889,-0.036601586104617646,-0.06340389941472811,-0.05756450842406657,-0.10469179920332572,-0.036228499893175455,0.04612203888916689,-0.030540827307943042,-0.03775378688643536,-0.01367752450184136,-0.038913381530550045,0.055128635506675225,-0.005616096520098147,-0.023164970014220965,0.0062947221726228665,0.008927525150710016,-0.008369667069053227,-0.0936380056914573,-0.18082695460407075,-0.03204719424449152,-0.024776174237521913,0.09507659166888129,-0.03122318593701655,-0.027332510749172232,0.02242471224252599,-0.02589268454597475,-0.030292624722098316,0.04642997592427564,-0.005547016767102885,0.01882804855902073,-0.044368966434152474,0.06070627062336666,-0.024421898129651794,-0.027956916233995953,-0.07571817920032337,0.010087291860549946,-0.0294157684600728,-0.10472252148840208,-0.01657654646903418,0.09405621463559562,0.008411887763979312,-0.03766529914842115,-0.026489302541048,-0.05998485344067758,-0.10553111304977758,-0.10452517575500123,-0.14288189681177196,-0.04433172212405385,0.05797873124352472,0.08390727454450086,0.06936685331668938,0.0605868104486707,0.008548979908446587,0.0727420292968695,0.08293111436025982,-0.053218874947163174,-0.025449543419422828,0.001957644124482212,-0.026149742833835084,-0.004749272877274174,-0.0635067566979151,0.07663074420069939,-0.024711967453442975,0.15248156716029446,0.0011449531415623608,0.006891728326576706,-0.010396235362190568,0.0006327388597426015,-0.0023239111674719635,0.00042982452008591675,-0.060383203095666645,-0.014912532298847755,-0.05895270226746197,-0.1620796745890765,-0.01961604896200959,0.09210272206783113,-0.012226529227113992,0.07796545752854644,0.06258256559855371,0.09455400368508847,0.10633157043424232,-0.024944141933525326,-0.020159232091756338,-0.044288815785011405,-0.07396778989494182,-0.10351323493109629,-0.004247907564056386,0.0017089352863182913,0.04035625247615632,0.07097494100246565,-0.01363785624039656,0.024972459939289853,-0.04446929199161094,0.060494570352473166,-0.07439905052061063,-0.07154677812927615,0.08316700961205621,0.010064262023707762,0.0078973847351771,-0.09272252885116358,-0.10564784737844608,-0.018670266144831766,0.021178036456230304,-0.008984292324950295,0.0509464953172575,-0.04175146623169095,0.07220975845585409,0.019295614780329744,0.05504674395730433,0.048821886262637504,-0.08460997241516896,-0.12905918588711848,0.026993143640228985,-0.020433718629894584,0.015099504288507867,0.09944095386274314,0.13417410037288097,0.09321765374809758,0.023000466519348117,0.0963989110891157,0.021718961682416407,0.0076713112043683505,-0.04907687690939442,-0.057410873834720294,-0.056850419231096815,-0.07116843072310028,-0.0096034488182703,-0.06584855119184226,-0.09925603180770604,-0.020099348608168175,-0.06353950301671059,-0.0669856312201059,0.11358972548534817,0.09384635902435433,0.05601626763932355,0.04963501005005373,0.021002350278310256,-0.03643456454052589,-0.042329441953336336,-0.04897144327466325,0.1328671773920986,-0.034123009584864784,-0.0458835340110356,-0.05437294185893241,-0.000823702037409778,-0.05193398858651972,-0.005422250284852816,0.029970652820666775,0.0626856338602891,0.01927075463608884,-0.03481970410325464,-0.04286251796682725,-0.12182453109121716,-0.014751655914256215,-0.00574025886677855,-0.07961717546355711,-0.05522896619707605,0.011237781088500296,-0.0916848599830433,-0.027269803911823567,-0.08201337821716204,-0.002061346866985568,0.07689349797732568,-0.014478906979648482,0.08607291562290859,-0.04383057037188167,0.07573993642836276,-0.03919725085680131,0.07593079598083328,-0.04529579515406169,0.05203129817532185,-0.028656733263206936,-0.0312699008951727,0.03998048626453306,-0.08615025396679586,0.03006743822494154,-0.0871525505593109,0.007395680029501702,0.017083856743463435,-0.040924990491698766,0.032554504121129896,-0.09268099867730496,-0.01837849939856259,0.06562041060278095,0.051061148508498085,-0.10258088648855804,-0.021393170699630537,0.008268698821838978,0.028623815463403545,-0.036604523485952487,0.011244819074783169,-0.005820320021665719,0.046436331943510656,-0.06323061889731443,0.059286480076716046,-0.019963240482541465,0.02962457937234206,-0.0015536820809388912,-0.002980368018456306,0.0592506893262353,-0.050943487502661824,0.05889064147356105,-0.03206640851691995,0.03841250294184541,0.036351264774576536,-0.009178572239399097,0.014318325303172449,0.044695104457479456,-0.012484565496259243,-0.12105355298676491,-0.014798701692797246,0.027141895051787986,0.034034159456420125,0.0017533924150650497,0.02399960654651579,0.04625751361536239,-0.037197514770871146,0.05198302018633677,0.04948679551642927,0.1065936318366184,-0.04623112043399572,0.007979744677364628,-0.01343649512876525,0.06359393905058791,-0.008197877317934919,-0.01160079276980791,-0.03767050302607697,0.03376789793506541,-0.03322589990545262,0.05640091275142134,0.07516603471545372,-0.017327126362925674,-0.004032167126415306,0.014073443744719066,-0.014409255579921279,-0.0353799495513536,-0.02488379485821969,0.03549843405416205,-0.032259678408215704,-0.01501692176412796,0.07031096597993484,0.0008572167325375819,-0.04129847647420376,0.026209313772603604,-0.01618643049024941,0.04672025688482273,-0.0393094848353034,0.022140049552049807,0.02469300917778303,0.03850025327404124,-0.014929928226780194,0.022320502081824657,-0.13034193197283345,-0.025576561218946983,-0.020079348215502335,-0.09006523644907916,0.06786112888186549,-0.042577896601181345,0.015635661591540104,0.001053734666171871,-0.054216353763512026,0.06233284377060517,0.05321341474580611,0.033159698516843916,-0.0030604209108761734,0.0008578222656658577,-0.01056891480523975,0.05244405214047577,-0.050215149295351605,-0.05727802933445587,-0.03175726980175365,0.05077335812278458,-0.02230436882706722,-0.02288621187977588,0.046912595342482384,-0.0614504932714986,0.04476234005464672,-0.03480730642553749,-0.03470899188309998,-0.04190505114166434,0.025549682912716663,0.010394077072142698,-0.04331471367606188,-0.004150986719925383,-0.021191937344207934,-0.07668691261470283,-0.05597772158364266,0.061052298909744965,-0.04979900072148974,0.0001581021813973564,0.0036533464518523997,-0.01545127684361625,0.021566693720162143,0.09985356256019925,-0.02079886641039532,-0.0021176902906601624,0.13687198713060025,0.051763658600284077,0.01909731876292108,0.04515285560009739,0.04555143864223972,0.01903926640993698,0.03865608592176608,-0.02480645353847672,0.11144770144282981,0.018725035312990586,-0.025728551556610937,0.034707457796292224,-0.030113359700979225,0.05650267964717298,0.04035987300284617,0.014056814821728979,-0.07347894921294791,0.02977985450275102],[-0.036921883786471425,-0.02814090335798133,0.08833880055722945,-0.07917131537276649,-0.001894265282435444,-0.010210811712286515,0.06593186339830447,-0.07273224872614678,0.0021407674098509145,0.04869969315817089,-0.06492672608928256,0.05176796093571657,0.013972536135976899,0.06228390066683105,0.008250418824989888,0.07424286333826889,-0.025749275369442354,-0.022286180410560297,-0.10202314918052638,-0.06413416007243884,0.018980599682963485,0.07196570580509795,-0.001342039571633836,0.0018034967633828315,-0.037282365588261,0.02428786306157939,0.09901255318694428,-0.05485938971398891,0.06925771527847306,0.0322738833438266,-0.06189087554836908,0.004487199142188968,-0.05321371846306022,0.043935831178878566,-0.005051449617093617,-0.0694794529214299,0.028005075677451387,0.0018962783995257113,0.0015867480345591828,0.03392271920205747,0.02891572158504136,-0.108925675711768,-0.024682403853666064,-0.07789097345619568,-0.0007421084081169093,-0.03352185846632447,-0.06876950198805427,-0.011877642830715851,0.03305258091514387,0.022778849155312673,-0.038501710053673664,-0.03487624574370471,-0.03567406005445902,-0.018461944119474674,-0.0571449008357471,-0.02157075067646507,-0.03586716974109876,0.04319157392070786,-0.010657005058882707,-0.056546944718028194,0.0006322586455082921,0.02921545938479727,-0.0497172547193608,-0.022475877531430904,-0.04282073921325725,-0.034092700298693,0.014764184401666318,0.039440483371214405,0.10491627834166109,0.026904678315936563,0.07786064515236867,0.030834534595902456,0.08104082919158219,-0.016112489454929053,0.03869559595371849,-0.01976888711867135,-0.12796229563495254,-0.09966549975005942,-0.014079840838928279,-0.05500272220666272,-0.01597895960289993,-0.0528882440331593,0.04802176983407765,-0.0823680825935268,-0.04485120797098908,-0.03155598971881687,-0.0011081156811684548,-0.04519786002981349,0.010640936553577226,0.042124915666091965,0.08209300108704476,0.07291726561688136,-0.00486283645102813,0.07505932431271924,-0.0038707277628229494,0.02808044592312116,0.08145786986085814,-0.03216689161703127,0.09233342711975404,0.04428472057103118,0.04028342010914417,-0.05316878501106912,-0.0031104249039234522,-0.011940511426724601,-0.028686816477728923,-0.017003087928553387,0.0902047971450914,-0.006339702577667284,-0.03724368794163131,0.061564392586459876,0.045507790598096454,-0.11222599774694941,-0.036767670714411727,-0.04406672144683033,0.03615670588879879,-0.007590830626815726,0.02235375688367345,0.0149055230368434,0.021744803109689393,0.054096003467323565,-0.013052985470899992,-0.03832255015416031,0.01883054689359271,0.08780903286506585,-0.05847513983690909,0.01592231023811216,0.02258046391386461,-0.0727186576400244,0.02999635016536518,-0.008883479549438621,-0.05480114921178772,-0.002175150282032831,-0.061597873392162085,-0.03069803398413799,0.016517253366003997,-0.027433792680120094,0.07940224540094289,-0.09477727724509373,-0.0035860535554486715,0.02355208241583006,0.0028387748374062182,0.025306008749892143,-0.03789208735734296,-0.045506416354639326,0.018166423136109815,-0.027324777858451228,-0.02593341738297814,0.05373497745651348,0.015651986908938396,-0.005087386087254836,0.11862903199159835,0.018400373650160052,-0.02079246433017542,0.04112761910812242,0.01889637636122923,0.047784022153171214,0.028042460275138605,0.038942039975011854,0.08227969430960624,0.11884135494372103,-0.13860084067677186,0.01733748217863431,0.09369646670773134,-0.006450195409189583,-0.03259563121898324,-0.02291114294735503,-0.020638554741943014,0.012858783356382224,-0.006611987430123237,0.01708602629868207,-0.01738633655887839,-0.04380158116688228,-0.02309804065062437,-0.06999857504090536,0.049213532537997,-0.1274120294410079,-0.054385772380838686,-0.07738910354492305,-0.029982306798490854,-0.022778255298105152,-0.03986625343443286,0.0119996995220299,0.05411977569313889,-0.0051976724669922795,-0.0018711506614941943,-0.03801922049980574,0.0430157235203711,-0.05300645166021665,-0.007561296935549752,0.09520278866181126,0.006989548127585213,-0.032020273848167524,0.000244353602489638,0.11113141855287202,0.02180725031255634,-0.10810336722482626,0.029431554347327596,0.020493819615792608,0.05526364521337728,-0.009324640791578248,-0.00278809676490851,0.003018494921543853,-0.040040939814358446,0.0061113083322965455,-0.032287006510766145,0.052034761147119246,0.019365267576483297,-0.03692628948847144,-0.08545518059517372,0.03462232680280699,0.10749567869923263,0.13921480149530374,-0.012542381205137596,0.002565117489793166,-0.03827027143750357,0.0259052265190203,-0.08109095091697217,0.03680559334363647,0.009603211501610334,-0.09619075172421762,-0.050749578413773096,-0.03369418152053709,0.037667368031611345,-0.02542490506088146,-0.003708958296010974,-0.019868900703690948,-0.029359941249233152,-0.02524921104481456,-0.03284460755000391,-0.007053424794823928,-0.048096425604294044,0.023186611903535465,0.0013631551993885313,0.008146989867965393,-0.03804046156634586,0.06779812688436909,0.016682818434760247,-0.07715179358662042,-0.10186943453795777,0.004996738885446846,-0.01922910130207522,0.021951169255571473,0.01814587256675455,0.02973901823687017,-0.01977470876682549,0.033876925877215226,0.05548081407297636,-0.04660468249922257,-0.019020917804782288,-0.04674610253877104,-0.020960597679066224,0.04960468855818551,0.04236162711160175,0.06380355222086535,-0.009935282237754903,0.018859040840745314,-0.053415227349066285,-0.03597478920678806,0.10145682845294635,-0.016871242038737848,0.06724854132870649,-0.007201990726822416,0.0757203211782843,-0.03440885524996062,-0.07379201480643044,-0.0006688154561376966,-0.11779121064204666,0.05866461040544143,0.01451118195326072,0.10912886053217995,0.08033875710748475,0.015903154071866776,0.03698190960059603,-0.04279521432536299,-0.000688891935299939,0.08344561498336456,-0.041221358257559355,0.029055567877401222,0.05319869660984941,0.0328060316301981,-0.05231807452401276,0.03709734492439297,0.03935174664368678,-0.0524819104823997,0.013356445481921036,0.03657027944064418,0.0003288664171813286,-0.12453416062703683,0.023933042015887945,-0.05477771936584208,-0.00978196226548201,0.030153557242718686,-0.023633555972176836,-0.11839058923316766,-0.16646430637622928,-0.012743037612525593,0.0061067826902457475,-0.05163829450426557,0.10025275710457639,-0.017970443510344852,-0.013348789881112618,0.0036822576274528557,-0.031782740472986765,0.03638476342815218,0.009916240462328902,-0.06079959776808042,0.026344840296718137,-0.013571058519979303,0.03307385072608768,0.005912096404455256,-0.06926552244845602,-0.01637190293569286,0.04950703947329073,0.03820166651787698,-0.08313551024651669,0.01302627994210832,0.05793568528954679,0.011829980186046562,-0.07842739416242339,-0.0749870062513361,-0.1514917784349057,-0.0890397514584869,-0.0072145603970244975,-0.002118644787003612,-0.0726690760304595,0.10329339526950544,0.05108321945228872,0.12055959153540906,0.04340375804983975,-0.04622550955569024,0.0971700484307616,-0.00478107574137357,0.053880887825366014,0.023080007389097025,0.025271684466049268,0.0433962754502265,-0.014567861225670109,-0.02659414470314065,-0.039464865140029844,-0.016382798851825968,-0.03643626230321877,0.020829300267589373,0.04796326381799188,0.003741162853237981,-0.056590862594688686,-0.06690973343616283,-0.018224444247071973,-0.1048545434125097,-0.11578430641304595,-0.00792605542580911,-0.0632443673556326,-0.06139976882275337,-0.0803127120661547,-0.023504115444544175,0.0012723601548290779,0.057312234873866566,0.15256399982510194,0.04924724137225561,0.044432512135202606,0.058973010557838164,-0.039129081676932916,-0.07603105762520987,-0.06103938480571506,-0.0010165948159218,-0.04952107729826614,0.016499305301740808,-0.0699762508040893,0.03422455184108077,-0.06077407910660889,-0.05635235790278766,-0.025061394972107395,0.10591170205010028,0.03005864313574011,-0.0591283269357513,0.027039256258394616,-0.07468469680177695,0.02009397994137523,0.02669270362466741,-0.037282183536591185,-0.01780770560993252,-0.11353311612274852,-0.022898294964335597,0.011319856735182952,0.09561932803158602,0.09092862735818757,0.10290711810064965,0.06617409663205129,-0.013791261909944062,-0.07735106186123734,-0.01754210284235979,-0.009440960953100383,-0.08224346921506581,0.025562652530088978,0.01634169487237548,0.0004099211632119791,0.02877178562957502,0.0671244830292065,-0.02514248672775001,-0.027455758700621592,0.0230562924205403,0.12747424018786555,-0.03566900571649086,-0.10535887153966075,-0.0803626319271913,-0.0327498898326732,-0.013341246309951859,0.13877001548639142,-0.021871748398076454,-0.040965547796327995,-0.075020077947799,0.09135751762753695,-0.055882453979718257,-0.02756055666963454,0.020114244649874925,0.024450738615815235,-0.008501061555579437,0.01987869977685072,-0.07589235669987607,0.0169310006700612,0.04633006551851273,-0.11471384002422838,0.011112413270168424,-0.018230341664597177,0.01301665904428822,-0.034677215235899686,0.03160937567728748,0.10444828590554459,-0.010680655096460101,0.13110302907439628,0.012053815710277265,0.003996230456055394,-0.07455371637142763,0.07386474763901522,0.0014959276005873635,0.03739020683921677,-0.0453962582023568,-0.02958333071508017,0.021063159130646093,-0.055676062982501495,0.05161415558393773,-0.004331182708412087,-0.09802084272030662,0.07199865433803167,-0.031247026438553666,0.07604410141341053,-0.010499644010469966,0.004378618031756417,-0.021528528807207466,0.030787111657358653,0.14176908811867317,-0.04061858894394327,-0.023586998084642038,0.06201297227087558,0.04690568792827297,-0.053172288337749396,0.0683381849165243,0.06345807154062479,0.022316792932155598,0.010470553082565502,-0.04865051889329076,0.008726035181405079,0.02734809207775607,-0.060173776098052884,0.04690119067325048,-0.06514653039942019,0.035082736893230916,-0.02057850992582616,0.03778166949151575,-0.02703097893656859,0.0063672818566768855,0.004762968238238101,0.032795672555437916,-0.13283098473380542,-0.015985361411264096,0.06849256949409564,0.0011602351302728363,0.00344588211696047,-0.08265776224312323,-0.02441458853946504,-0.0034891383125846527,-0.009446367289245847,0.0030705708465145736,0.029803866527839274,-0.006283194929771008,0.014675603968097303,0.05256064755288148,-0.059483607427044116,0.02258132624004619,-0.013600977945754548,0.07295848911026209,-0.09092710937821183,-0.08485472039537079,-0.03697434194094005,0.05793005059516121,0.08262193978636101,-0.0040998866702920056,-0.1132322713297034,0.027712511374417093,-0.029180121538815225,0.017557949519736687,-0.048508799965475954,0.06461833001343928,0.04128736480804988,0.023188727562084233,-0.028967910156700652,0.024779816098480824,-0.015732044788296748,-0.03749216058024256,-0.005410856244423624,0.04056141115285983,0.08388913482176022,0.036650526207567966,0.07572632606739686,-0.03139694316286587,0.012411302094769846,0.1114096303882848,0.0105817595986662,0.024607152219417908,-0.020642955399270885,-0.01246076281498978,0.10247090282428162,0.05577309875852046,-0.06674321787820534,0.04334126317706272,0.08884700988373956,-0.03797879281372317,-0.04743006932291009,0.009666886687709509,0.02614388346244616,0.04999054964152212,0.018855138606425154,-0.023746060972891374,0.023909784771981874,-0.054491754925084325,0.002548811235332694,-0.03231875342645605,0.07085141269056712,0.043429866407972015,-0.01763356205015919,-0.005809273001213055,-0.0003411657877307335,0.010658175849245248,-0.0036881755055329095,0.009694593555663406,0.055562167701216046,-0.002480812326515475,0.0038373170505394644,-0.028681078857694362,0.11535231394341079,-0.0005365093154652114,-0.016833795802948293,0.0003217935072029111,-0.08289258574969655,0.024760386611738006,0.016394415162611312,-0.009378321624307158,-0.08168197471088574,0.03340131996676918,-0.00980415895072986,0.0738303436106253,0.05806875366140152,-0.031350143450954875,0.04962212883665957,-0.007799401995366749,-0.011199637891638787,-0.0666427525859192,-0.05563509866894148,-0.01576199438987574,-0.018119889928114377,0.002902659488986205,-0.04060116825593768,-0.05451576773003022,-0.03290938789515909,-0.05577635372390852,-0.030050763646607973,0.08088359744012355,0.06764058504365433,0.02060812878557671,0.00431259694489065,0.03706177899222525,0.04727595169890409,-0.017508456917221887,0.01299233658313914,0.03779859616839736,-0.009834900533103789,0.05399367558367591,0.08852239279799413,0.014194545389875773,0.0028379882306730415,-0.011567368001366716,-0.04580524903774709,-0.12094674395848509,-0.00040593187618844813,0.004785609255407167,0.10737780843750253,0.08285139162427291,0.047567866823688486,0.051161838220615076,-0.007459742409491594,-0.0041330926659854045,0.07020596007362265,-0.02089786792649314,0.1822476696677481,-0.06221480839567106,0.07644977640917412,0.12624133928686432,0.04899578341124908,0.11771008610086442,0.06864929565578808,-0.062390437010085696,0.04405828342387731,0.05559615618504553,-0.010146561539044951,0.006011671388909548,-0.09958582613168346,0.06911445950531539,-0.0353670394759422,0.0163809421760607,0.010134149578649604,-0.06926889678089014,0.06948151195345623,0.03960574807421691,0.030935489106841824,0.056604381775009,-0.0295175625866053,-0.02674513707457573,-0.04201505555612647,0.05913804669090357,-0.058162777771664884,0.01674241933818394,0.06927942916175132,-0.0017661834789326283,0.04063932613512587,-0.007966965468818428,0.033064225431540424,0.013876638153940869,0.04655539037673238,-0.016648552801089504,0.023334698242685047,0.09342112899532973,-0.0638840420908623,-0.019133276669275303,0.055591386977623065,0.008760851239501495,0.003099832161823058,-0.03420541378640204,-0.021711976313598922,-0.029326979229055337,0.002009038871465701,0.11964369976050429,-0.026420346258683565,-0.020891400972206216,-0.1192284996396511,0.06434064842875857,0.0728043515355106,-0.012138189406714557,0.08241320840488915,-0.027911655646841647,-0.02864292562013123,0.06638041942373529,-0.07373749280864637,-0.011760551470782709,0.0240566966812834,0.01452780626166332,0.01439144084568658,-0.03521877805986335,-0.04258112687723107,-0.021050998605049567,0.027847141354133017,-0.07186840509227987,0.023276291349435308,0.03800772766280282,-0.019329687954207416,-0.0037441302117095458,-0.05995964689113414,-0.05734217612659779,0.08829012854221707,-0.037482142903355394,-0.018772253259545426,-0.12413740968724625,-0.08591348540176989,0.08312722975562024,0.012178717803743942,-0.0021552943710648645,-0.011809274569955546,0.15541376538954846,-0.018448485181735027,0.011321354746770778,0.020440520371691924,0.017405398336525973,-0.02051848518322241,-0.11354822396295956,0.06483215086767824,0.12378252385594352,0.048167497779225965,-0.05908513726922015,0.035313509952429004,0.021291370612449956,0.09030647321458897,0.08532852484964554,0.0851626380023128,-0.002112072288035343,-0.08329468429531849,-0.03718049560320436,-0.08095752390089855,0.06203441888282125,0.023619241898730704,-0.049912902777262694,-0.044722886969214816,0.019302202558500684,0.06610720888408037,0.06075062762119588,-0.03703762766808396,-0.010788059593579908,-0.03402989254867148,-0.04253529309228755,0.021304031027886167,0.031700080040126914,-0.005117238634828692,0.0888693151249559,0.008967533188800907,0.04625041190913756,0.0076603890598835045,0.03830949304801512,-0.028361994173429852,0.054900701338766254,0.040697350842239216,-0.033730799522025096,0.0695783970516657,-0.046915373018025196,-0.020586524956979536,-0.040217307900253366,-0.07627896418642652,-0.12318960663684832,-0.09152597375867039,-0.06662701589092346,-0.0048500542224920295,0.04246237197092533,-0.04958575637681238,-0.04831473432868255,0.04844158480613477,-0.006599477554049784,0.08186895990936233,-0.10630382757869127,0.013942421264725918,0.016467514185685213,0.02351747211156856,0.02148420781570332,-0.09125278912032105,-0.012200666951159022,-0.020225239260781663,0.0601709088937659,-0.015813049465339717,-0.004667289766129822,-0.06831411612306772,-0.0008396158287729303,-0.10906046298500789,-0.060990911724046734,0.07777541203115793,-0.05514306132681968,0.013526386756957236,-0.08530992295439158,0.061915323834537024,0.03618094777873286,0.06168894611316151,0.07327532829302263,-0.04997158543316622,0.0003379359584833612,0.04282090378686512,0.020660108590262172,0.05901348899728612,-0.0495740656856811,-0.0007041119713609406,0.020943149526405663,-0.0008564089528037377,0.017754923802464448,-0.012012206024904716,-0.021601057458937468,0.031147665615652288,0.0029162593567649457,-0.02932376004316015,-0.006771348553968379,0.07874856935727602,0.07364016080079927],[-0.09588836280663365,-0.02252947957268855,-0.0030244567925825786,-0.09432031302914984,0.022468681629186596,0.07209565807399033,0.0505497356764552,0.00819826282322916,-0.0016913630401163178,0.008617501354138385,-0.09144139667416944,-0.04633788621471362,-0.07257614842785852,-0.038255783396234866,0.07519739583439827,-0.04852236391897074,0.0007864167593478673,0.10492022950465424,-0.07023929056580741,-0.10603220461518115,0.02664465548641468,-0.016699393974233354,-0.06452548889107045,-0.010991997281386136,0.003273240593277551,-0.038783851540858824,-0.0324987329017504,0.023908787103917216,0.029290770772770616,-0.05387598525065259,0.005987821177339822,0.07801160947811554,-0.09780712102421371,0.01186676863835715,-0.057123365869189494,-0.04170377143147095,-0.02606534069222414,-0.045822187022862323,-0.014345468149351729,-0.01348885787022247,-0.09884580889341059,0.05812318761523551,-0.030961952566664994,-0.019877306579037156,0.07190490148126762,0.0935233544922102,0.01263863585040939,0.02144987319995178,-0.0027530535939284074,-0.024545179345992166,-0.03430127937016726,-0.10265570758024302,-0.014021110040760433,-0.02263962902680038,-0.009107084694363587,0.018818001989919314,-0.02199616904802923,-0.01991635984761052,-0.00011487226211319917,0.01617211025869939,0.014618911653605451,0.09082545703813065,-0.011791057824680089,0.035630381807058034,0.015747163106868245,0.029498554113292417,-0.08802346345551569,0.026478716296559717,-0.02898569619209894,-0.03552186355690401,0.006582701181112969,0.04045232666798738,0.025325323686753453,0.058518851113992854,-0.043689594021751606,-0.01114131674387147,-0.003627984605606415,-0.024758259099047334,0.056610412792244096,-0.10176272498732822,-0.03961264522076184,-0.13101189281574502,0.02342964712434617,-0.1057696944500886,0.08819058828140486,0.017283548240406697,0.03482495779646197,0.013459844155739595,-0.030633162557372775,0.10063259412611943,-0.04702107715585754,0.0719518327760454,-0.0234742193630639,-0.05787766950933106,-0.030267448461364234,0.08020314845646562,-0.05941166390269077,0.00824337442345127,0.02747309978685662,0.05300773064019568,0.05885844097086372,0.011755787343968808,0.03406116275439053,0.004362317806973213,-0.07365421796508678,-0.06706863518801144,-0.078299180370827,0.052221339585379695,0.031258796071392196,0.05348890876773213,0.0453986865619284,-0.04315126502327067,-0.05391184613967252,0.08092130874394343,-0.04829990739825848,-0.075171149424566,0.023980863728992368,0.025344663338583134,-0.056869594551656355,-0.05402161618387227,0.005698646810981802,0.0541403265609492,0.06110443289742343,-0.006178793072291631,0.013556356391894564,0.10090391239325176,0.05243638587770859,-0.05280672366655839,0.07238629712505473,0.0026321431089186102,0.004009422894489127,-0.03493039957133217,-0.04846447889047563,0.02440203036371775,-0.04951004313183557,-0.07238476512112503,-0.02015097055133452,0.0507020536519049,0.04284506570055289,0.026071348721349644,-0.026625722964647557,0.03562956463342605,0.02625229747543865,0.013208514758825422,0.0004871227323456842,0.012589753770247286,-0.06555796905948347,0.08078128057524309,-0.07939694576526324,-0.045066864993756166,0.01859932826500057,-0.023445505009812687,-0.036869488438237716,0.02604453066818421,0.07760497456065668,0.07866064902701649,0.06330586966835539,0.09513846970307396,0.032042552242957045,0.06047707687979051,0.023163561477152362,0.003787010833662987,0.04250966560785738,-0.008121339189789568,-0.07303740443476119,0.054192185537499354,0.0039906857059112425,0.09536672323565643,0.08579423167712677,0.03131786325175666,0.07365649932377447,-0.10602070409223957,-0.004778557790203488,-0.00834263476909748,-0.02415302553629021,-0.07819129657752134,0.012266118913429828,0.05916564421035289,-0.021462190636750214,0.007214108282936862,0.03495058027571001,0.01781970185330218,0.05656755088496938,0.18591974362699512,0.014270083246326304,-0.024945952597117075,0.05501664404017804,0.061459867214038774,-0.029332875066665196,-0.039265322342724375,0.01263702292662349,-0.008428265737190601,0.015559907592040236,-0.09096909586015371,-0.08333529715813628,0.05614724549725815,0.047804242696106496,-0.022574722895162908,0.07484563813275276,-0.0007024550388785815,0.009468889072003578,-0.03256692006873063,0.05992380045152568,-0.03393469935547346,-0.01879548286489325,-0.000935554815028735,0.005188085913114937,-0.00920777269920264,0.008196555965633037,-0.02724027119901662,0.08669104458749413,0.09515575558551109,0.06783968475833899,-0.0009986409317619275,-0.04627592604979696,-0.006884410818095749,0.04489416622761394,0.02620018540163327,-0.014456956368611806,-0.09351566342133628,-0.02933589893948975,-0.024371851329355737,0.049982341243599224,-0.01798254260083109,0.00693197617959827,0.07249305917195388,0.03799995099257925,0.007520895468686095,-0.0003412166655417973,-0.09654569037796527,-0.07356958567956302,-0.041246223446311396,-0.12098767394273095,0.034008809728130265,-0.04618791688255495,-0.09368566831361566,-0.09140328204606707,0.05127849433071733,0.10847304413234658,0.1249058183008962,0.04750133047218049,0.01877015751076874,-0.029641291526136464,0.04620175788657104,0.008332502375314662,-0.05866711536162271,0.018097798554634437,0.013009733032854362,-0.020573678961252836,-0.07064374847274989,0.017055598417861775,0.048201220632483784,-0.0073519230922221,0.015375343092931216,-0.01647739661442936,0.0029231372637262957,-0.025946271282201894,-0.1260545373918751,0.011603941520420347,0.05325755352120745,0.04209595152942068,-0.09840594688090457,0.04962499081597386,0.05304347579259291,0.051944043367186984,0.0515870232704391,0.06761120775899597,0.129099589471571,0.036095365621377454,-0.06945523290478321,0.04811319172360749,0.03854957138959488,-0.05437237804046473,0.0016729621287655172,0.07744277198009224,0.049098097679825814,-0.027409612072991658,-0.052313182778081266,0.0036779758007847163,-0.02029844132636257,0.08676049841417363,-0.02595959675424573,0.02767038705070767,-0.07264328980853474,0.006442162777482337,-0.046213744284239223,0.03519785948775424,-0.0009753215431193864,-0.009955858421444736,0.02291467797958976,0.032846442978190664,0.031035851942839178,0.07329981330806076,0.1074792297837538,0.1575791593733447,0.14647571100922305,0.01827473135283429,0.024083623669304954,-0.06816062778436377,-0.04283755266756291,-0.10983750518350718,-0.08538072581589842,0.0007864784844964242,-0.0019669324720056293,0.040985917629573494,-0.06388938356451004,-0.059501849904823156,-0.03092842612646338,-0.06715504639253259,-0.04531422808978812,-0.009304945194465104,-0.0760466777956749,-0.03180936614784863,0.05473164837802967,0.10781797659351076,0.0009984687183118312,-0.015802608832757095,0.037846898994253475,0.027455959815701463,0.04341172498920346,0.055956660714628424,0.09846307187285981,0.032642736930142455,0.06623690310329038,0.016593444154369204,-0.06369283335879002,-0.07219423987152165,-0.0792677925729407,-0.033312564991803816,0.04823312474171789,0.032987109258781594,0.021093331608937272,0.047459139608805705,-0.06854789997861122,-0.004168837256504734,0.02382508242016543,-0.028773409514784697,-0.02810287251886585,0.026020740200811528,0.024147928469737064,-0.053156850039111816,0.02693339316783711,-0.034271087631997314,-0.0000046298323444481835,-0.027764034195196765,-0.035590362066774225,0.08893962865789413,0.03784242558888211,-0.08412607812461909,0.1537378157706833,0.11488322762256016,-0.043271046975518083,-0.005830124171880473,0.0803116218569255,-0.057396053360399546,0.06048754230187818,0.00440874971710953,0.12152180847459759,-0.004329018443418166,0.012459754805426208,0.014529073174855913,-0.04577981010082129,-0.01186735847614834,0.0689505696630301,0.00507408449614382,-0.0015359175195108678,0.05264831003685986,-0.03308052592015562,-0.08415816507497016,0.04520571443095646,-0.0260093358643256,0.027691834888362736,-0.046713744348093784,-0.05534344512488276,0.08630415933536294,0.005593471717681506,0.08944483085889486,0.14964277803111245,0.13757736210961885,0.1524701579411821,-0.05028522288826585,-0.02554514637257229,0.10975398708919626,-0.02666060899580226,-0.031107812137991492,0.005530709522558382,0.023588928042080747,0.08191033043881951,-0.034523847038464645,0.020162408319057915,-0.04526052416331615,0.024650141718693196,0.018173811134503098,-0.06187192635929565,-0.07221456777677668,-0.05962592608937008,-0.040979483504275986,-0.018587334563096285,0.04938338960832483,0.013612121422490069,0.032466746794182974,-0.011846757157936616,0.03108261407967189,-0.006334714249198329,0.04772467237491511,0.1688330283235163,0.1120479882244581,0.10918187079328236,0.034645663538813716,-0.06186236710291594,0.041481151240682,-0.07382528930045826,-0.032834770607506635,-0.018470233040295318,-0.030158151931415775,-0.012084239233912632,0.10460332215452654,-0.015297609289041957,-0.07323703359931806,-0.05132286444546926,0.007991840730637356,0.0012901676956066327,-0.034059130590159165,0.06360880880057551,-0.020770300579209606,0.03069653510597566,0.06557979402491622,0.0010832630208477108,-0.06543995847203872,-0.018523020013378758,0.017927945000590396,0.024500023243362923,0.11222968992390019,0.08920712052720361,0.07425361716026105,0.05741102237041524,0.01598595150350909,0.0349797756204268,-0.022218646142233452,-0.045819744171592965,0.047481592474486925,0.028414950022835967,-0.09677801470922816,-0.027762843750412332,-0.054235444843313003,0.06364148546863414,-0.1091946033689305,-0.09247511235973911,0.01698869916186686,-0.10070251823469305,-0.019395035004836896,0.08575018489308024,-0.05221732105309101,0.021294987740430805,0.0057355673008347985,-0.011081236567096364,-0.0185533127522225,-0.0006890235966218729,0.03393409713422924,0.008888746995516141,0.08949896201442964,0.11321398424064502,0.0765825299480065,-0.025128725668792443,0.032895922492717417,0.0018627174303339593,-0.06913964088995883,-0.07784423394345666,0.033482712052053436,-0.05143541451759075,-0.12713251559793587,0.02204813152014887,0.011510318808200476,0.04117099841578981,-0.011808751507509511,0.05396928923511505,0.03556320983578229,0.03229410774587819,-0.060157859973371364,0.03069529764732353,0.05630391524459641,0.03837778160653314,0.013307920078188838,0.08492704018022079,-0.07419203023051553,0.016813292861763463,-0.04561505368030237,-0.02317713467183186,0.0007776061936726684,0.05220619972381114,0.06516111408064074,0.030215873487008164,-0.006891983109706849,0.0007701657694917159,0.07233210827809425,-0.05316540236724452,-0.03638566729148876,0.009422706429867542,-0.006155404853354517,0.021210410696257294,0.00943677451930014,0.014984493288863475,0.07559934317166031,0.0216805470678766,0.02757099802360096,0.02781356718708596,-0.034514576643569814,0.007601799071596234,0.048828332317448646,0.055152736896849575,0.047589939487423114,-0.0006221274176046968,-0.03659040599645095,0.00418447015357641,0.030065644577414646,0.10673974337379077,0.0304896206526765,0.017905104366341414,0.0828311361925116,-0.03548771364281262,-0.016451664258436704,0.056059574257941426,0.08191142377625797,-0.010519947338857019,-0.08208846853340351,0.047792885768497315,0.010800895252053704,0.0010704803949204626,0.038649571398129065,0.044345640047781035,-0.020701533837995778,-0.014395404540574462,-0.04425841379095209,0.016119829617045393,-0.02254100514654686,0.052868095727557844,0.026108265277650974,-0.03603268851077953,0.04081927038911643,0.07700930922473985,-0.030564596636727344,0.10924004765601086,0.016850731077092132,0.02771687954309786,0.055494956856056696,-0.04251444636415724,0.11412585681113162,0.07229667151284228,0.06262490334025407,0.029171912121774533,0.0025894978686123635,0.007571258359119023,0.046923645901807906,0.036110530488270516,0.10075586647252088,0.014416682890157663,0.07832258619704709,0.00046677543033901177,-0.052787618606703834,-0.013197784188840373,0.040193924238115616,0.0655845168772981,0.025185988838130245,0.018335097504880552,0.1276115721710161,0.05647826658250175,0.10005022690132417,0.08224738595097207,0.06629517073986367,-0.10806189493370817,0.03776177080918754,-0.018033958194593466,-0.0017500894728587964,0.014432988720235875,0.0286422580803869,-0.01069875550795671,0.08070679625815733,0.07586343658062267,0.11657242262360698,0.014756808930361343,-0.0015338066308064637,0.022363338378672628,0.1450741678841829,0.005547099063744384,0.0120111593059408,-0.00041297868621566994,0.14288224052846632,0.024192495759939623,-0.029493032895447843,-0.10038173152715733,-0.03110775997676677,0.03405972216947069,0.10543332160902413,0.03743064003579758,-0.026890926051030564,0.08345751851056395,0.049870565170800615,-0.03499725439215843,-0.011185035757369798,0.0714476963031831,0.043998687193545785,0.06835096571287437,0.09527823382400295,-0.09076766964335387,0.08476783469251091,0.03754980206822604,0.10729458185688867,-0.0013118699092160894,-0.027216637388298652,0.0918334121250456,0.02009556848302002,-0.03541008037930337,-0.05473050982616194,0.09420090102655475,-0.04837970663442714,-0.04261180363029322,0.05523510827522263,0.08699938545811109,0.015225392699386197,0.02709477338739179,0.007462957656992781,-0.018526492974882076,0.03041519244240863,-0.029333223450467218,0.06426499046264393,0.0482336680759167,-0.030821947781952696,-0.07398097214669928,0.02381188679974667,0.05216855147984757,-0.04231708763599856,0.0008890089021524151,0.03663649683691586,0.061499515484123794,0.023403151426367588,0.01899204349844692,0.04263317458744443,0.08038565894625048,0.03427062571656431,0.05953162995257382,0.006461172041390354,-0.11882628869497797,0.09620939270533699,0.01639784922419969,-0.0398339726401196,0.0023852880618667224,0.026208461764674403,-0.059845257684497714,0.005946552381278796,-0.004379725975290266,-0.05755886254415666,0.006088326473776604,-0.06462669448793312,0.03476040961547382,0.0008491958297502111,0.0411740886175069,-0.021189738281133852,-0.003137388186976502,0.020479788998162815,-0.005905918075345221,0.0019536735089493856,0.015729634129442293,0.08919992981960145,0.10050934653788443,-0.02497382283921221,-0.040530872629173306,0.028938127144133803,0.009477126716235958,-0.018146371333033182,-0.03307723863419774,0.014963056446676396,-0.00700003018469202,-0.0221006148157968,-0.007345910252885966,-0.009679352557682788,0.06576383679327077,0.06532917933579732,0.03140206508848385,-0.06023873399485789,-0.007131066387014932,-0.0862185148418508,0.061818916970967606,0.013738853121033588,0.030709829349801668,0.07864100629767475,0.025997847938182616,-0.03891042545301289,0.06303235521876466,0.06243605937785182,0.043661763902332375,0.05013211423481184,0.06062651544875797,0.03790901601994721,-0.032829103702615804,-0.045482633484873615,-0.0528712323768007,-0.048937189880558805,-0.003740928084646321,-0.022505577783310894,-0.027078912208722623,0.03550353040969495,0.022006194542951184,-0.05185560725783573,0.020459853732564655,0.00047101864119195134,-0.012602584490244054,0.007491810056253095,-0.031159008531182905,0.08113963962056958,0.015890568695427452,-0.04265619054703167,-0.08127246224258326,0.029015676548622398,-0.13744335961702484,0.034230866535968726,-0.002341623919355608,0.06490359685860121,-0.05309235217650744,0.0906960111612674,0.05118524880146625,0.015449634770568817,-0.03001587274894312,0.030911033732540352,0.0031559304804600554,-0.019503056639229115,-0.034429989065607874,-0.13678078733293592,0.001366769619623865,-0.018193217570730388,-0.0648687397542055,0.015160624589748626,-0.025464117956191513,0.01095597166392939,-0.07807548661855318,0.026827873306107558,0.047897932072224966,0.036080458513423154,0.07809400964291044,-0.10401385305034591,0.057538665057089836,0.01537503760681363,-0.02609887889744203,-0.04752563413988807,-0.02832787092107039,0.022735399602062382,-0.004703254643224366,0.05134712456568552,-0.02215050666550692,-0.0362315094260894,-0.00019389414105472157,0.03329551350910548,-0.004686271607199635,-0.06780140408163086,-0.02015597015787223,-0.054967389734621286,-0.04621286217170108,-0.05610630591576201,0.06779858137707138,-0.025502419688081264,-0.03567780520196167,-0.029914702195056472,-0.05542714314729797,0.00865731565549172,-0.03846418507348067,-0.08838933317909244,0.08100400953102264,0.04179254885642411,-0.04599335450201293,0.014857101492468298,-0.038806986864498,-0.10996948570871896,-0.004315597682789475,0.03732633683141156,-0.015894411958976985,0.01693119182229282,0.038725384923280114,0.033426660469917685,-0.012623276673708533,-0.007002886428908217,-0.0425118021309735,0.09478009989702826,0.03205287742826402,0.043988494020352396,0.002364893199666209],[-0.0028194903396248916,0.03223361667936975,-0.011770452071353923,0.029100399388349383,-0.0002899723364207799,-0.05870579488748214,0.07794583491098253,0.11495137147738162,0.07970349504231217,-0.039078344853595376,-0.02915512847514507,-0.05633329543580606,-0.03616856515098994,0.09637113011506729,0.011197342798326071,-0.012145528934523945,0.07650117910365836,0.031494455553024686,-0.05967545441122631,-0.056939921272016705,-0.12054048693770102,0.02420695223109188,-0.002719699144398927,-0.020605739545810905,-0.008002972644897445,0.019402905980317322,-0.015815049324927073,-0.0004591891105566532,0.04381924073662287,-0.03940100021135286,0.06719061075539304,0.02850843038640229,-0.06472034301056526,0.09204928497615097,-0.0027841709855482687,0.007425530752300494,0.07619344703799925,-0.04747499785102824,0.02648906691122875,-0.04111172321430463,0.08749185826318956,-0.07855603701698001,0.002110962939149343,0.017025534947746623,-0.04004208285981661,-0.019946962157514098,-0.07473277630060339,0.05710357412606325,-0.07347235297429568,0.003130336927698634,-0.06461688060351961,-0.10156019813266347,-0.10307640890461847,-0.002157074902854952,-0.07774262266165613,-0.04753608559744462,-0.17340099829244596,-0.08731842867166342,0.008913738057753659,0.03023892265614187,-0.03237030611623156,0.052348165390494666,0.06289858611246442,0.03079553877590867,0.03684154912250854,-0.011285489753292565,0.10748134816950926,0.09052926316650732,0.054914570684206736,0.04985267417231829,-0.055372904698619836,-0.09397733933378274,0.020759377661403997,-0.010006252017604371,-0.06756473579561412,0.04904744090986543,-0.05061495991648488,0.03985846395720397,-0.06373982225259991,-0.0569581833321073,-0.1893150828279358,-0.025039541082309887,0.0020305718715275646,-0.026367850491840435,0.0027678182754083008,-0.05624087425508491,-0.0011167132703902593,-0.025257598476541885,-0.04538912428991233,-0.06365457280244213,-0.05351945400030577,0.05076120857678474,0.021019528089211578,-0.019891755152113094,-0.06820544766019189,0.017156646730393934,0.003978242828337985,0.034745605476777755,-0.03239872772934568,-0.11809940267468673,-0.02170608692053512,0.014373889941263958,0.06343246719688417,-0.01788979765998552,0.008946830817765782,-0.00690569056322792,-0.09189484602241817,-0.06428179121835542,0.011631362647765306,-0.01351522498252031,-0.06497586600888876,0.016956347205178263,0.023114441982183487,-0.033121549340512035,-0.026668037314699196,-0.0028299459683232514,0.020770261741289146,0.07588324970466902,-0.009509763807205421,0.03247860652921495,-0.008560163114990782,-0.01006914410445013,-0.03574046815041361,0.025267696616116577,-0.02563737367398181,0.15326617045795488,0.03986537585186607,0.12476847319820536,0.050756967069404364,0.0636799663989095,0.0066329562643013835,0.017159407646170556,-0.05296178152242736,0.029489400627827487,0.032551307115115606,-0.022222530348127992,0.05755912736684667,0.0007942486065565333,0.042728508093726296,-0.05876157946288414,0.01225234218000849,-0.03346762334051134,0.046799511663004736,-0.015494265566927722,0.0023122607043722285,0.03711214425538854,-0.04221798373840717,0.07375007543540818,-0.0015387499486040814,-0.0133465813106989,0.057430191952266084,0.049259026074290724,0.058445429047073554,0.08824413388730663,0.0795496679795191,0.033641941056936214,0.1087360057991031,0.08788614701078665,0.048640913164015684,-0.07140871467513443,0.045643823841565234,0.02253264240604637,-0.003068257670748416,0.006702802971707548,-0.02799543753342897,0.08704301750559894,0.054438832135838375,-0.023498245104434254,0.01572137523858053,0.05876865659897539,-0.003407842507156079,0.039946965644895735,-0.024076749505955886,0.09573411976448556,0.01612060770138161,0.10914676470765064,-0.07228510169292604,0.037899556688123434,-0.01650858175617931,0.00200390011649811,0.03961196198818312,-0.008891407901216012,-0.10424561557531163,-0.04665598106509782,-0.01793749587390758,0.029564662688940726,0.0874433808130299,-0.011699111742916884,-0.04735340698297852,-0.06160471826929082,0.014870564064189533,0.061546726340524036,0.028723566747088997,-0.026680048339243752,-0.04273249120967094,-0.011474875086371081,-0.03881100583389443,-0.03639197127888561,-0.001471225180418951,0.0000887426821712743,-0.014249051563419548,-0.03762606641499949,-0.00454897360749192,-0.047985574119992984,-0.03577916080620838,0.019964992581649268,-0.008500064975808104,-0.00037252028597590343,-0.05050430986464078,-0.05868907114550417,0.040963951392803864,-0.034315472716311815,-0.07652765862799399,-0.030513123733367564,0.004407469565676303,0.09013547641744069,0.001784839262302548,0.05284777527741336,-0.003948971799232553,0.05861408458668087,0.0074464882038789105,-0.010905131795667293,-0.040161479781213455,-0.04610291021470467,0.05218063481993353,-0.05392652761337305,-0.0158009407204745,0.08401330341264945,0.032766213555789084,0.0139152860029405,-0.052486886172495494,-0.12067502691417928,-0.02828963432192667,-0.09260075623770779,-0.06869127075354965,-0.11418203917585366,-0.0010135663522809425,-0.04564561251265155,-0.07818798938104085,0.007741629781927806,-0.01671348754435066,0.04331858982085854,-0.0016958914413916168,0.057739600277645714,0.03315542642745325,0.02275608576257619,0.10264722498568128,0.03570389272934293,0.015484238829698817,0.054699030117333486,-0.08230908434030182,0.043944732466718296,0.015132946403387098,-0.02598406886732636,0.0901441511709254,0.003990794795595438,0.017245749281997295,0.0105930746760557,-0.010998378279784046,0.031115132901420938,-0.039694871505105124,-0.0028205818391110284,-0.06664307956723838,-0.024939977623963393,-0.059857816905018756,0.0012390332689481986,-0.0019076351503938742,0.024260954357383114,0.014240219842457276,-0.021536438724864583,-0.027105980251599885,0.0554747953135213,0.005586447855822621,-0.016861518616221788,-0.011168962173288511,-0.046567933748482386,0.016592202330754997,-0.03229264473076258,0.009046674723510891,0.038479653193399806,0.038263512743321425,0.033714027812950846,0.09239036265491722,0.02476881578682907,0.03302387391360322,-0.020222704139468695,-0.12444070960398432,-0.04710767215937704,-0.021124717397026913,-0.027497027661222962,0.052425432083224636,-0.033651378632426274,0.014084890519920842,-0.11633094110111859,0.06046009137887226,-0.06262114841740646,-0.02765489976303131,-0.07049474758544365,0.07319925261187721,-0.057183301563486416,0.11273596108230785,0.011123984641772331,0.042297915065461385,0.030586746618426267,0.0178254236371055,0.050664886239529715,-0.07604194213248047,-0.07511044181090695,-0.0069466104995445565,0.03756923256557727,-0.0165959735378171,-0.05852256885114084,0.028791202272131725,-0.023817361881635045,0.044941199096032294,-0.03928528265399227,-0.05929429582519784,-0.027311048786649902,-0.009081786187627165,-0.006948808473932329,0.12092689055173007,-0.07107732006074992,0.027007292593814118,0.07892270725992719,0.0006671673727486346,-0.05120304774396158,-0.1380181685799413,0.05989516830128628,0.05089772899283602,0.12388825543745642,0.08528261213312253,-0.011529078366321596,0.02105078154658745,0.00008143072575440038,0.0335587285333055,0.03445409112198476,-0.031542725750421004,-0.020965051965074942,-0.047301335566482784,-0.03903887447819234,0.004051060701676427,0.05588436639317225,-0.0063973382460097575,-0.009141799034733644,-0.015254632563983026,0.12638962814340213,-0.04783513542671279,0.10011116862450266,-0.005115269059182431,0.08951983533719785,0.0077215571219135925,-0.11047471037916576,0.016717930384818207,-0.02771006359894522,0.04004101498965432,-0.03644830684641904,0.034542552477887095,0.061735581452296795,-0.05589370797690163,0.05733161600181754,-0.0007898390545353459,0.001112376791240549,0.025200417400507318,0.007401587673985066,0.020451771199734917,0.1476453881680843,0.04764062520733985,-0.012772164367562273,0.05989002559114474,0.011883031991379907,0.01680811235184912,-0.02116146379301476,0.03554150811066545,-0.03853948959857224,0.0742395756547838,0.027208509834099247,0.009664473361953788,0.0418897931612124,-0.01805934935130921,0.015162971014403519,-0.017831177911861958,-0.02728109522057324,0.006104910539401888,-0.03362646114100517,-0.0065358878106567,0.01833629267985798,-0.023335104093535404,-0.03139265022530831,0.02769915550409824,-0.051184418942856656,-0.033871668148937946,-0.0071782258574925265,0.08445791164048141,-0.027934990730165612,-0.051434963484340644,0.10735911037894788,0.0022824885761420274,0.0011809437707459263,-0.0539923198137101,0.00392997908010941,0.03649350579830788,-0.010676864885822595,-0.11314890134115982,0.031102999557682448,0.044251341507320185,-0.06227985076751281,0.005271597001290365,0.006012082900147366,-0.06299171643799359,0.0002767252588247877,0.04217527537974508,0.02484642021782432,0.011937273924637854,-0.03645255235543015,-0.018727161405225394,0.005830900100702507,0.09715305123516729,-0.003686951876813408,-0.027365464501112116,0.06050120889747768,0.02707114449460896,-0.030007410128913357,-0.03441306539700293,0.01673186820418581,0.02464305218207806,-0.01544803448511714,0.08404835921357696,-0.051830287683387516,-0.09106273716271834,0.04336713324751923,-0.06407913863819788,0.06283830907832552,-0.025210859230510353,0.024032578402614965,0.03394181603259208,-0.06988702099797746,-0.027694786962389587,-0.04291342553181185,-0.046392071820378376,0.029614002442027245,-0.024875138050062057,-0.020133496354135184,0.005939183923768901,-0.07658223901110073,-0.017458756742169918,-0.048434273239082455,0.050605257645329714,0.08313261249193646,-0.010700691980987576,-0.023493947768723593,0.03270478354110437,-0.07850879289102677,-0.03955985460388375,-0.08467464824957628,-0.06297343420574908,0.007717246607392749,0.025531892176959045,-0.04807492077158782,0.03768973601253121,-0.026834087067339363,-0.14631958794532185,0.00584566460357406,0.0040156856091280195,0.06323570267868617,-0.03497562194439831,0.1330877825623711,-0.008898167264968221,-0.011808370263034336,-0.03528287218071511,0.0333572619192532,0.050202431746032006,0.003124669538434881,-0.0758963954279383,0.025223778835639938,0.018423270934156993,-0.044693442765596614,-0.061043724149603774,-0.030514747904395553,0.0010438676505182857,-0.026164565183714433,-0.011613845964648326,0.013913275712505844,0.03487170276974419,0.02624982668908518,-0.002214818956200839,-0.0026029745845626644,0.00621096605574356,-0.06328186588473453,-0.031113379424341153,0.03388549495002503,0.01813233743069165,-0.08166314454412206,0.057369707633291786,0.06170024192447344,-0.06831334342948747,-0.06416419919857717,-0.008356419361706008,-0.017547299119512347,0.02378934581577947,0.0013508429122350905,-0.017071850140647524,-0.041023164674964016,0.03247085022085601,0.002530702483313253,-0.08205808287894545,0.05826101596974743,0.018616132601085644,-0.014645643810212647,0.018355200797909223,0.010079576709574604,0.043444500313649784,-0.05666543854984921,-0.026014856863271114,-0.019180581363923057,-0.11773726302213385,0.02449829345470498,0.003799910435868442,-0.0470264891733255,0.05213093405110522,-0.0319314585834203,0.03163478143123115,0.018194918914230727,0.03584487229964002,0.02660246300861444,0.032075509083378785,-0.1236022397268106,0.06734030166827396,0.024961685695935668,-0.05570648016876362,-0.013792411411265441,0.01115103266087396,0.050437462714470756,-0.04682393898115119,-0.044297450994122294,-0.04945759169575727,0.07923889949769938,-0.020213165530085817,0.08571395784334325,-0.07829527458096058,-0.00755775372530078,-0.042086544974858774,0.07869219015733986,0.021490249205831004,0.015029582133649131,-0.06337027220592098,0.059464821663706875,-0.045887205479325816,0.043076843547130365,0.03808773153388698,0.04674508881667182,-0.005229062522219585,-0.012979165119396063,0.06627889587243047,0.07321492528131647,0.07195709787171514,-0.039317653763629896,0.09427328700086139,0.045990586046070384,-0.003853058341839225,0.0593416563474569,0.03455339372569278,0.030966480022746816,0.024960463761551477,0.032418309747636286,0.011563852814672846,0.028186385771304216,-0.0009872382050357981,0.027198975019773863,0.032628040888773455,0.06930022955481406,-0.01465180796538759,0.08985213183417098,-0.04278849015030769,0.07720987068295301,0.019348988714430942,-0.0064053022227060115,-0.00928615912463259,-0.09868129644623007,-0.10396899027070793,-0.02067717965978045,-0.09310731674332207,-0.03903705903823984,-0.13396284334750957,0.015037585305234934,-0.0238309531144217,-0.018523684637238833,-0.026903638449262454,-0.1165776175988129,-0.013290126369303601,0.005320196201972758,-0.022245126390450433,-0.01502526503848178,-0.03134759609924106,-0.03431360536726163,0.03368033735732921,-0.008330677635965457,0.061068417633451375,-0.07479147548489053,0.0008764189100880982,0.04710845507435079,0.014863149905925204,0.0050921094794460905,0.06608408407008176,-0.10401526729272602,0.0036080491645277338,0.0710014668532022,0.012495563571773113,0.0771682656209248,-0.026767887141712077,0.02375879688621639,-0.021416747172393346,0.018663461304494467,-0.03241078714694004,-0.02323836348381367,0.04529491510235733,-0.12506735656378104,0.01029362202302453,0.0657106804230816,0.044985608024142955,0.014678443282618027,-0.027672212970484056,0.017479642280807124,0.03480177649800094,-0.03221651536631116,-0.009878717834225066,-0.01189920880913457,0.1376257088042536,-0.05816070125777454,0.03967982333618213,-0.04359945596296013,-0.010761687072061361,-0.04027162226574907,-0.047675383967019216,-0.04524034224743721,0.01753803842954926,-0.04832597406487949,0.020192177399012107,0.05811425096243431,-0.014884339200301468,-0.08674450596779698,-0.020397721219495162,-0.002229806358249101,0.02770955327411445,-0.08029008472583485,0.08906690730779429,-0.09242296539691403,-0.09629714512166523,-0.007903397600054159,0.03058309020864774,0.026739918405288537,-0.018665721291232878,-0.05009482296436493,-0.00896213212106953,0.04500490268590651,0.07013456421465541,-0.011945392889429288,0.05749451355825683,0.008875879590204685,0.11055215519035844,-0.01008085310077227,-0.08232444728491448,-0.020759981777094264,0.059274608677742105,-0.01468295486963941,-0.036563197882228754,0.029384462874509458,-0.06710589355131476,-0.040518478891081726,-0.008068209023667925,0.06141054789142956,0.07396479382516748,0.010488525184778335,0.06537122910634033,-0.062115891242794076,-0.016130664881062136,0.04311530946206575,-0.00250626477154511,-0.04175180586589296,-0.0374428270579702,-0.03183711553696111,-0.05193002230892429,-0.028133200514515646,-0.040977426021888974,-0.07529924578990725,-0.016795396572145516,0.0531236853348582,-0.06816561358594124,-0.036430626611605746,-0.013216624488268708,0.04405140062788102,0.0202642723322742,-0.07491323080036302,0.06741974361707943,-0.07387118667032648,-0.0037499223496160585,-0.023302829412577077,0.014056617047223,0.01889649157916086,-0.033142005024288254,0.0054440834694841,-0.016387112372031786,0.004087624649948389,-0.005612392550069036,0.06838670136204406,0.06061185910552691,-0.055164219609414616,0.022687630010020516,0.0337332410292708,-0.07961538728055291,0.038631868318296396,0.0730594579455211,0.03687867224048332,0.010367480446166845,0.015912301454161566,-0.0012131580755667607,0.0029345966482355393,0.04027014192792385,0.017732532275013105,0.07414717050785603,-0.04133963956078998,-0.01959194424611833,0.05154189756395402,0.03120189542684644,-0.04061659418823655,0.03336428482302991,-0.06641714939203211,0.03780293951750451,-0.015018913454927426,-0.15075063941093492,-0.04685870235813406,-0.023007238541052383,0.00027003310099736025,0.006755969030199721,-0.031189833746018438,0.025087783495609767,-0.0002486055874022445,-0.01941723097821071,-0.07423739580586253,-0.04226117164897828,-0.13493500374977896,-0.013629010283448241,0.01020125157758503,0.08919624331975572,-0.025223164188478843,-0.008140114604167057,0.007281721763903306,0.011935871466905045,-0.002639928482442781,0.05933336461577726,-0.07356508749731949,0.005448705788815408,-0.024903379381958204,0.04004486218658465,-0.06306078007883566,0.0036410670690937936,-0.0010277888124406063,-0.010253843082566733,0.03416484652221679,-0.021672998610701814,-0.008671905122488457,-0.06672919746738595,-0.0036868547295139252,-0.05643010935605834,0.012281166809420754,0.04652342373567964,0.005924859804546124,-0.07208501926283786,-0.007925832659367589,-0.06547726917376681,0.017697325207184523,-0.002184949700655883,-0.04230573558710132,-0.0047631435016484355,-0.00015703432733041967,0.04963572714024964,0.0907864319316219,-0.04788420948409276,-0.04195329916145235,-0.026344425820102237,0.022299733707715996,0.10146540874990438,-0.012572544522578588,0.015503469897513122,0.0566871267473449],[-0.011005334508574459,-0.0054756530780068246,0.05632993132028469,-0.027732863066672435,0.048762837817568634,-0.025816010711862066,0.012690812985471001,-0.040336412569882206,-0.038388233071827885,-0.033911089998126726,-0.003493200986344001,-0.008190525082887774,0.04538331626934275,-0.04828478344532717,0.035465630905722835,-0.020429235330147226,0.01655382521925793,-0.010438935264004138,0.012677596346659922,-0.018759569803871612,0.04205969902020672,-0.009969600296697276,-0.016135612110382325,0.08237450458189424,0.0044090224941366225,-0.0216100448500473,0.06416418773920067,0.007308145944053022,0.1219805387728763,-0.07613201586102925,0.042811330946349105,-0.028746867034043378,-0.01759795107361064,-0.06804846368017771,-0.014382624001562672,0.05209977199331852,-0.05277001386257728,0.00040825498010607604,0.043362049714349885,0.004392573857263293,-0.0012149882352704895,-0.018277053015975285,-0.04365437033009208,-0.0402718118684481,0.0036318928017548165,-0.08252287135487114,-0.0002864834142985251,0.046918534492638005,-0.03009344092177938,0.06769856726110911,0.017700299718608425,-0.0490098431276115,-0.03233536675097141,-0.00032665918313982154,0.013417718524635634,0.04133249122702707,-0.055075526852488614,-0.032159996950433395,-0.01679196866140316,0.06528520767443301,0.05503621627104855,-0.049049979374859304,0.10197861779702444,-0.044538385321088184,-0.047451997535474494,-0.0018200760081057191,0.03888862107224414,-0.026736121714565818,0.022594817053635356,0.053850810413588364,-0.029387667261744913,-0.05170897363847514,0.013661163693435716,0.007810316596319974,-0.09484157258459272,0.006518829878982987,0.055443777394668055,-0.007996919472059086,-0.038476246416469385,0.04941414946977443,0.07930203575109121,0.03290748178231988,-0.04101273601391722,-0.033971911151433776,0.05974775228730082,0.0009965943155810359,-0.12860714398666812,0.012306173517448503,-0.0814841472196122,0.005467927382426526,0.06538851569598138,-0.021764206361223642,0.060650876052427936,-0.016270193651034697,-0.02603270704274511,0.05810548872356478,-0.028870294789686047,-0.0016137904976483723,-0.025912751201605026,0.04756252783026797,-0.008743052345115335,0.02613505361669289,0.01207879773376589,0.015382209212949539,-0.012273329355733763,-0.014451339325695891,-0.020778318716496744,0.011055118390774495,-0.04035882846265434,-0.03899896524450701,0.030125000659815278,-0.0661249178533661,0.003407759573563226,0.011759098046545872,0.05122650570233836,-0.034879587766816836,-0.03158945057162926,0.015124070694717391,-0.11075398949114469,0.04922111235903561,-0.09210018834117038,-0.03834559866619969,-0.09508051999307503,0.06917214474611501,0.0023402894434820473,-0.10728925157532476,-0.009745404470182314,-0.03414331112932507,0.005062710079295309,0.12908765998359245,0.07485294540021252,-0.02756699672295917,-0.12197873983912223,0.01841318638821002,0.003810505164972111,0.061031641297926306,0.029027173697044578,0.006593840930178292,-0.0015595601145246703,0.1452680680881751,-0.06761143389948318,0.05382848509387439,0.030004733272456802,-0.027749066416046405,-0.058422553408267366,-0.015020740258690116,-0.0035064761821055885,-0.01853254151136011,0.030191981308075627,0.012150739302880742,0.13622460261227612,0.07296691523793633,-0.04528229055384382,0.028004848627375414,-0.08054758038055038,0.04910322681515533,0.018186936197745508,0.0033866661507933648,0.03671657921912473,0.028754645889046228,-0.1036931289413868,-0.06860799644266018,0.06960938353545221,0.005586421415846299,0.02189809006539663,-0.02303697186425937,0.018665684584578325,0.013866492950888947,0.09531434201551113,0.07511298784244749,0.08300935645405902,-0.023133173321710207,0.02835968131501278,-0.012437720826199218,-0.07036964995465261,-0.00637870147863417,0.008971877646677324,0.0005085188408353884,-0.004289509127784948,-0.013098430125270401,0.08172087617420036,-0.014750344122530292,0.004817207845769096,-0.0023180879864806957,-0.04256407106470176,-0.04670301960732287,0.03412121293894223,-0.052554638247122254,-0.09619110574537314,-0.04201398380139916,0.11660754311065114,-0.05866520121530437,0.024565638109513527,-0.024227127949644604,-0.0519866792734373,-0.047149253595908096,-0.11771282689105284,0.0320878759902153,-0.0046762297672991214,-0.022432812629833824,0.02044581755136933,-0.04443986132266369,0.08113513167167316,0.0635984807626509,-0.06199079464713491,-0.005089748171405019,0.05978681455445775,-0.02635258069156405,0.012907279092772913,0.02371103254176529,0.0021527211474897776,0.10314890171364244,-0.04624845447673259,-0.02487920426141549,-0.007372682600427273,-0.03452651320464241,0.031482805879142726,0.09430165604930978,0.026784416905713686,0.026816701038907473,-0.0008088598646454925,0.06026838493261926,-0.017401330361716604,0.0021700889451846186,0.006603337107351572,0.04833587621340669,0.06946562134157061,-0.02466055727987537,-0.06833704709607646,-0.005585660822835546,-0.04256097164462866,-0.08055662420511818,0.05520906131800577,-0.03222187621334107,0.020675930475616944,0.05388328257231443,-0.030620703112934473,0.012553039805291202,-0.03585168275876422,-0.04050491224824379,-0.055969621648241874,0.007339215235203047,-0.022910507475859074,-0.022138902558828485,0.01487340231144988,0.028460020351464665,0.01330258755818484,0.001076278022600109,0.024169851694363524,-0.05714812360947879,0.06872797467743628,-0.04374617032121016,-0.048100506701002944,-0.0013174431507553186,0.03218268673167766,-0.005190979602142111,0.031207497577621885,-0.041011061966889445,0.09770959102582581,0.08079362616952303,-0.03779676115146805,0.04055208281544046,0.025524337923639374,0.0764202035236973,-0.0546123476640972,-0.04014146907274115,-0.10070024773673833,-0.04703145830026241,-0.01000493995271361,0.003455250464370166,0.0431089201214969,0.00414637457336208,0.12835550383677083,0.1258405477785192,-0.04158169213648246,-0.0180955376847661,-0.04073657933518406,-0.049227681965405716,0.02929501851682706,-0.002222911273348034,-0.02169779300343763,-0.12302222979441119,-0.022324460578681708,-0.0004215308873813504,0.01838068313443769,0.015108128450385346,-0.08148904891166539,0.04363658331851247,0.0170880583502219,-0.02835628136663089,-0.025666742644238315,-0.07098405935409913,-0.12821085425041243,0.03329306162787458,0.03269535410893579,-0.003713415895152261,-0.0813145953169086,0.04422626863942896,-0.06115087113200458,-0.039738063617405624,-0.06310865476373907,-0.0766376634536171,-0.007999510334121964,-0.06273399657436862,-0.012025705016409293,-0.02305258026063038,0.05517689865496149,-0.027416933332660882,0.08272863648824216,-0.0236900125946383,-0.032365929920426695,0.012241285077720498,0.07219471558539316,-0.01222258838776213,-0.03351411469391594,0.0034755746291024402,0.08501734457098162,-0.020095960630228737,0.05203275920857372,0.015824643694424753,-0.004127776210252116,0.0784333196129549,-0.02732302168632984,0.018328429045722447,-0.09654307588162467,-0.04677498708209436,0.005268154719206966,0.06912920541046456,0.03476395606779052,0.0070311116079823785,-0.0006667884880655893,-0.04582278946878522,0.05484736926496566,0.006616615767379184,0.047620218459925145,0.03448405290403628,-0.06818431256558095,0.04434407431923069,0.026159229392485366,-0.0053955991960880495,0.03195269119549767,-0.03527098744113777,0.07305885780504105,-0.0663917785918345,0.03599917181264041,0.03816956734196192,-0.021762392779322876,-0.11891634621884967,0.0011252987812476734,-0.08736906187509531,0.06831988420178163,-0.07114676925603065,-0.09036527177238078,-0.052357485241006425,-0.0022967766551457106,-0.004672623165911504,0.08703172777702567,0.052038169028216084,0.060843333268831463,-0.06573298696419053,0.07415119997705558,0.02031707008851836,0.04353997534453746,0.017035709211454617,0.012426187084065711,0.08490206862626737,0.0913881522394074,-0.030260643052934424,-0.002190153560822633,0.025459506422515814,-0.022590937085184674,-0.027655315604404318,-0.10146153530283866,0.002791654179635457,-0.0786490529095406,0.11642059043219329,-0.03640348713955042,-0.07308141359583688,-0.023865942280770304,-0.05791208306286839,-0.07922092962399148,0.032554459032283725,-0.036409605635926344,0.022408701620603436,0.06714315331290273,0.02073287195491852,-0.10753939123784736,0.04919505430627599,-0.0358570122798571,0.13102108984289704,-0.044358383729274864,-0.07096305899536909,-0.0364113637552726,-0.03959550302369842,0.021478221468301945,0.0171686820782252,0.13554439665283444,-0.08792735091632718,-0.06609705838154081,0.04409357196688318,-0.13455559545082993,0.025453432263030252,-0.0014679203218798654,-0.03742202379840097,0.0452020531205282,-0.03383970118320619,0.017366682421221084,-0.0998772759099824,0.02060943347679076,-0.038984709500575344,-0.01934746860083169,0.0812148181240508,0.045150395057811404,0.0613161985651265,-0.012291884344335941,0.04841672475456531,-0.0610536224207339,0.08474650508668043,-0.015854705219570952,0.005587344970936093,0.07912919233841345,-0.054235642667629085,0.03018077395902696,0.06278736419097222,-0.019111728385346048,0.020182313367444752,-0.053392423721901346,0.033002521560074695,0.05605114950432348,0.013509907792358609,-0.04166436302355869,-0.03281080900822242,-0.10073687306762458,-0.027245888651325694,-0.01736142437507169,-0.07770626373056905,-0.020235718614151767,-0.0453470595075036,-0.009828352602208271,0.06233955178129483,0.10135426419354762,0.03546994367580055,-0.02489262762962608,0.017162276585348243,0.08124766148778763,-0.008170572445542283,-0.03188989502426452,-0.041569182613960594,-0.019416580723560478,0.02690913751675242,-0.00523659836507173,0.012679921413430134,-0.0421087257927575,0.02284154177169913,0.019684012550442345,0.018315845415666738,-0.03850052145184794,0.04534087565605364,0.005498770080970876,-0.018114527953162544,0.0509221002206769,-0.07139161165104002,-0.05155532046163941,-0.0683379503237408,-0.052390053888508745,0.08213000207943802,0.07251619649105595,0.0432254030889456,-0.01767990143769069,-0.01834712519980145,0.11125281083138648,-0.009478776331160989,-0.012646447862711976,0.12012471821868499,-0.00562579943583294,0.0929869595728905,0.017294710584003753,0.08384416379128701,-0.003202372756434244,-0.015273166179477724,-0.020171142579363137,0.02043447378614924,0.010034156802811748,0.053317573154192895,-0.0589707349528673,0.08360787171772315,0.03526210019956311,0.04981487622676508,-0.1291393730323143,0.060135500358953396,-0.061226722399288516,0.046608055238123225,-0.02798053919273984,0.07688771718457613,0.03356458278384768,0.07556531249626965,0.06318430724203146,-0.04646463415597424,-0.059030453395203644,0.06050915535603191,-0.0364282549494489,-0.029954033835901853,0.07488032018797426,-0.02024156204065608,0.06517641050297582,-0.05255923462800606,0.054219178297949026,-0.018130581630066697,-0.0026467380412533693,0.06564574556524877,0.0010389330428197967,-0.04194862186346353,-0.07653867795818828,0.04619594112667585,-0.023088043219687975,0.08790895312898385,-0.04559043134220664,0.0831432968529353,0.00765610520539924,-0.050147467042646755,0.09282111019955869,-0.012885223889631217,0.09791716577885605,0.07880224225015985,0.10570115496157045,-0.01700308288902581,0.11977914934138807,-0.04900897176534724,-0.05571581032243743,0.010929460132593142,0.04452105809482989,-0.006935307857864415,0.008197334865235844,0.04156453267895108,-0.06888266543060897,0.024513692831512418,-0.03941579383765523,0.003681729788490415,0.018874057266775993,0.05469720785194274,0.07186116733628428,0.00511863090564377,-0.022859768459293234,-0.018560130672804282,0.008902394444528512,0.10479229828280123,0.10547059952779075,-0.030727236353440174,0.002068804061215298,0.050006864423604164,0.053195199029786505,-0.023120422333121612,0.01978469148387411,-0.02236692588524311,0.10278256798272094,-0.004373112309824882,-0.01796090273892024,0.004365339791223838,-0.016429792231940674,0.053684799412783764,0.054069551104265846,0.026689095791097236,0.003590168989337092,-0.008791771974784084,-0.0372353678303866,-0.02914940973768061,0.08352196319311166,0.05643832661075772,-0.06038819370698174,0.03900061959584881,0.05383842489158714,-0.05929283331147908,-0.02869994119039487,-0.059521052870243646,0.00867339722066484,0.11425710156611066,0.018387818926740806,0.0464131128759907,0.02481165525302632,0.06096287792057543,0.03162272997876918,-0.10148173210640946,0.03580527180628358,-0.018412838399362034,0.04100208589780923,0.02428737824401691,0.02632177708371683,-0.04298101870784623,-0.04736118831972124,-0.07408412551241804,-0.07935236367978668,-0.057447288842281924,0.012861965535747614,-0.029580051881405698,0.022127127172089568,-0.0012735636203927117,-0.014774279588095901,-0.016471798318291406,-0.02760606301368423,-0.026317380367293034,0.06853171104403452,-0.03461890249828159,-0.025737053508030273,0.052628270174431654,-0.06816382683271101,-0.000886757213167011,-0.021777040514777565,0.06665109314992376,-0.021194599657495528,-0.027498260327391215,0.050038327228063874,0.022240518780710154,-0.0060479963461549276,0.04084926002606507,-0.11170275870440201,-0.02623604395602971,0.009098592124889145,0.020428520013524906,0.04495673705625479,-0.06225743892308513,-0.0042249042984419715,0.07088058290450966,-0.03402447612790717,0.043140741840210085,0.033018988806997045,-0.08255530427512417,0.0702146075969159,0.030151813212391163,-0.028042437052719336,0.046623979100556344,0.03628684060570028,0.04525063420245292,-0.07330313903166673,0.02169111500228012,-0.046871096530963316,0.025210605427047696,0.004984417326583907,-0.0310115782136873,-0.004060679998969772,-0.0234684863889804,0.024806557966954898,0.08417326665125623,-0.011754266749117562,0.08534936675594604,0.0013088141931590091,0.0025233546451273146,0.02255999288170274,0.025092907495892134,-0.06448148603938289,-0.019527205955630515,-0.04408881036934107,0.06714072102411404,0.0446008859204375,0.04126739687944527,-0.04282136052035314,0.07354180318228148,0.06904708380007478,0.04392362612446299,0.043653162059776256,0.04294688444075672,0.032737878570330774,-0.0020560110252113633,0.054128784858289564,0.04324067339932423,-0.004804912285418118,0.08868176446739073,-0.0574081012672695,-0.008672205035693986,0.05046689326003526,0.0402959898490236,0.012756390631685668,0.051870983929008845,-0.008766672427028688,-0.030629573066473972,0.04000471441027375,-0.004360991005765332,-0.015199047772623703,0.04329842293205121,0.10746576497159484,-0.030169388522705055,0.09904775239888139,-0.007565373679168161,-0.007351798253413335,-0.10361930613545667,-0.013351186358621408,0.016353266378363634,0.06879891072709064,0.03337759751256432,-0.027522363110711903,-0.005200625233733189,0.007799125708757174,-0.014810855302984234,-0.0026667147690504207,0.023499813301455744,0.0012459412891234894,0.00784517717878464,0.028271168445673064,0.00976334181447339,-0.01717617742566921,0.062176615646141895,0.07804880747258619,0.06384642662133333,0.030845811235035953,0.0218768363440789,0.016386766134580358,-0.053248228534329034,0.10368607594554993,-0.0026989378469386626,0.11558818788679845,-0.021270080203864488,0.0343282910688212,-0.03420919750325942,0.04914018784656619,0.06195738796197881,-0.1095104528982397,0.10373503873527865,-0.04371438445749056,-0.029201796372216142,-0.033862362072021646,-0.04741942509583773,-0.11122809364353371,0.008520327854788495,-0.005918513764899589,0.0598255162533689,-0.08116967550925942,-0.02212238803024718,0.04917436900298864,-0.043732430276860516,-0.019357929404274915,0.03160101645512245,-0.01093005850649475,0.026944014254502376,-0.06291451264190517,-0.10738669680106536,-0.026984406062149337,0.04120139660693526,-0.04865549267773336,-0.07429516979190827,-0.014565086269552156,-0.035165699595912904,0.004310632187571689,-0.07371298304824912,-0.06983177915222406,-0.02795438933342922,-0.003434644686221816,-0.014182426574257523,-0.04080467573297152,-0.034224117943165586,0.00032114828937979627,0.058407003918202,0.022191285248595278,0.058432026228781096,0.03198297823964326,0.0507421241536627,0.046068072075253694,0.057172087048872555,0.09644231706341483,-0.03757970574885582,0.07049148702254579,-0.0768612782545258,0.0729100146112647,0.06440733172223903,-0.09875368525760297,0.017462477624913115,0.011961175627967446,0.031392855707855515,-0.06559940849101245,-0.07065585299310936,0.06564347929484331,0.09921693972515241,0.006272109427687915,-0.012816653229827338,-0.04474558611445908,0.018596268821035763,0.029305471610858343,-0.027357156788677072,-0.09547450372522953,-0.022077121337700147,0.037016827937692405,-0.07107276913796251,-0.04344228950941368,-0.1086073682728403,-0.06900936083451156,-0.08742418438380455],[0.04870092019092682,0.0931043846146425,0.006293554460530561,0.07512860571796959,0.0393871061639451,0.015496812735342246,0.013310588837990354,-0.11656403302048768,0.05451072528568659,-0.04599326749907454,0.058099424158452824,-0.009209074247448273,-0.051236691428158,-0.04802076032904764,-0.05273478193699361,-0.04513079841954018,0.06815801481370624,-0.0712471435452842,0.04829963057036297,-0.016295899509661402,-0.006127714261171737,-0.05199176378280786,0.003965058786949377,-0.042770887994840995,-0.038985461184150604,-0.01082368006518943,-0.05391653748811762,0.03423437284778432,0.06826556808271095,0.056458128151930395,0.06927837410175121,-0.028559997130601537,-0.07152125461365601,0.04846964251705852,-0.07962150786903456,0.024957523085100138,-0.0329333828522343,0.029186831849155465,0.09517298561237224,0.028433089381449367,-0.0754553683203857,0.06872482059207316,-0.031762613541758106,0.04754559135955706,0.001197119084369995,0.010095836908473236,-0.06922239235157375,0.049708708481718336,0.09057941009329329,0.04372207846001775,-0.05868767012093231,0.07939578433384176,-0.0011976454640409506,0.0024331144727755254,0.040749824899863424,0.05935139139564052,-0.015982958627665363,0.03691712544262256,0.055924478692961674,0.010771780657562286,-0.006782179368504648,-0.09924605531626587,0.06842510242485868,-0.04604270234203878,0.07125581574372118,-0.09884533762354987,0.07184212782813292,-0.04511291575150396,0.06977155802544724,0.0009130171746935061,-0.013462817347790887,-0.004189673687822686,-0.08117938438967298,0.0783941494919115,0.008931975353288222,-0.022468025593053227,-0.027459017761637748,-0.037367420049335,-0.06835952649628027,-0.10241031628008425,0.005679695510440413,0.007019274115218979,-0.03747917402738188,-0.004815077912670956,0.005089849022771195,0.019899755470326137,-0.005561429172808443,0.01587963077622045,-0.062179552441998374,-0.02411598015301981,0.07934111065319627,0.0767712523865464,0.022535355373542013,-0.07084690217130069,-0.05762852052562535,-0.026646212644696025,-0.04412328520673935,-0.005684552279984002,-0.042722930358799656,0.0387799607061323,-0.02135831046879198,0.03106807683040501,-0.04667134903450431,0.05405242444329773,-0.03994412824741852,-0.007165692166086058,0.04314418494795279,-0.02847443459397149,0.09972996699924953,0.05813299226854319,0.015310749928615704,-0.009506795550923425,0.04315118590301045,0.09628798538764549,-0.04599542010184397,0.03881800654476961,0.025696351656503864,0.032347534370977885,0.03697458514069345,0.06615664544207588,-0.01917178208670096,-0.09481974745528897,-0.08241982935601991,-0.08711258244534295,-0.0024280067396472878,-0.03566488949183428,0.10378803560312393,0.0011314341139126408,-0.025775896823448587,0.0609366777833554,-0.03376141335525955,0.009637410770521274,-0.043004898882678326,0.004687776991118708,0.020823000754560405,0.04498030215409223,-0.009934074240730506,0.027885286330488465,-0.001065227354523386,0.015329058013515655,0.0906654856910702,-0.04151083640263524,0.06684695629288119,-0.000001258202138594045,-0.007351958522091478,0.0049972234100511105,-0.05246971925108444,-0.005248683585056779,-0.014805669159609272,-0.06912002878111174,0.09664635325879964,0.023733838912078933,-0.032399911297771665,0.07052497199978286,0.074427825320074,-0.035469676510758795,0.03594494955373107,-0.025439642666731956,0.018805704401668878,0.03580232602603223,0.003689535542149554,0.0681025837155851,0.06016333844885605,0.0020564820926060228,-0.050031087172393254,-0.0781730697718982,0.03652132854128357,-0.015765392903124335,-0.06968897315570471,0.023017263108441426,0.01462356451485465,-0.025632868579428418,-0.03272231117205515,-0.05430442333799905,-0.0002159579296136388,-0.08671833029953376,-0.056130831193759466,-0.0126775845653372,-0.07779834629298311,-0.012530983852151146,0.06838912184408963,-0.02509853438460196,0.09065790000014186,0.0389784366840339,-0.03866315122748309,0.03426072647913799,-0.0024775304313089373,0.07995902194696881,-0.0010033553276983006,0.09756659190422466,-0.01984398742577106,-0.043857283917529695,0.11424810952400467,-0.03105597380180474,0.10703746439337695,0.03644868952826347,-0.006319880405242015,-0.027905483944326636,0.019806999050822435,-0.0012496827144629211,0.011260401197388832,0.004852371174238059,-0.07779306753537432,-0.05034802832903842,-0.06514143026810723,-0.03771608140924209,-0.08507100867954927,0.15754520606216424,0.050118043021553614,0.05519269075944275,0.033333497190072094,-0.11395005377878296,0.0064826674507695355,0.09185013730424435,-0.05159009660469218,0.0456242401836212,0.02334130804414256,0.039897555335459974,0.11390542007492135,0.11545900707595633,-0.012861454606554341,0.01425457604074147,-0.032560579155626726,-0.06265836402570805,0.06929144285094259,0.02331644030242167,0.03865284462814631,0.057682057486933176,-0.0329916409644609,-0.03798110701331823,-0.04475592070479615,-0.04912394370523335,-0.026190138952661465,-0.011921460533666241,-0.04850652576854915,-0.05506313693032157,0.021262594653524255,0.007151849353012217,0.09575411672281542,-0.04595937973120424,-0.06834627001942103,0.0012953134446021229,0.057640922706692944,0.012125188936515423,0.08609046638913183,0.06658128894467265,0.04011864984987067,0.04256711861494821,0.04801477393196984,0.04774923239557093,0.034104099836133606,-0.06184214281857526,0.04281492776499877,-0.10031891628846046,-0.032359147209105356,0.04158830890172369,-0.019312594250413238,0.01672875977715556,-0.09144843328267976,0.053935501279471235,-0.05058424552291812,-0.024713396289510504,-0.0378153185248842,-0.007492184617259389,0.07576978898493417,0.03777431224670785,-0.023480024554302266,-0.1321460465851182,0.024505786498204545,0.055198316682577526,0.01220988693892426,-0.04479426913978923,-0.004241173879255485,-0.09091129139561337,-0.0029472568527039392,-0.07826057837175117,0.002358796511603264,-0.08748620762366226,-0.060515681303228055,-0.04038815059976488,-0.044851072052428276,-0.011543201080035008,0.010811689139852525,0.0017209856573765542,0.04158762648281983,0.1429047547177718,-0.015145168092910208,-0.0668228578758423,-0.03833857721430289,0.020463282103745924,-0.02332191241949353,0.017264227522757435,-0.032795433332201994,0.0038064299326346714,0.0293377086137035,-0.010512058187627732,-0.09576386326124993,-0.07874430105255772,0.0048202495941617905,-0.08310877818757391,-0.06652873738494891,-0.0489311810311259,-0.05970686019485592,-0.01897254220424612,-0.03776764652246883,-0.0491173079208659,0.017081057613726896,0.05888366274388499,0.017727777330048263,0.05020316152503294,-0.06978193506304708,0.0040517339463183805,-0.06041666175479328,-0.12537138745322401,-0.06339577071460886,-0.03584970257970724,-0.032617627640326795,-0.019501352604751998,-0.02967838907147403,0.007600082358225933,-0.07231559853326275,0.013078828183696965,0.08712557746614694,-0.02096093836522797,0.03822967197374229,-0.19078985896525713,-0.15139565046390507,-0.06262745116670661,-0.07984251301052615,-0.05474009088992967,0.01875157251591734,-0.12013613704039654,0.02516082040581025,0.05582830290197117,-0.050736152126150805,0.12062308523604022,-0.03360873570085994,0.026235027526902155,-0.003882579549052201,-0.03682348085453758,0.012000208389454384,0.013862383862234507,0.0093235369121643,-0.04077203113997527,-0.08733859237752314,0.08934178345754812,-0.0506424624876766,-0.02523897188549052,0.05756875687509279,0.04740923418328291,0.04036398910682139,-0.0374258685408372,0.03331580518763012,-0.029880051715220745,0.03795242911145029,-0.08462836250912241,-0.08526544125992884,-0.10420130321346091,0.01581147969560758,-0.03694790351765567,-0.03381619849866257,-0.013332947534315853,-0.06876526528226508,-0.005427436739021151,-0.03997244274591348,0.10655672400670758,-0.02559596040073579,0.05965237576392864,0.05173153429641664,-0.025694556007157074,-0.020965710066645032,-0.028935152427229997,0.007691330388263155,-0.06460991756036717,0.0073975370443978795,0.0018251535599028332,0.048082277769636125,-0.014834041079248442,-0.04783583360920247,0.06318771162073049,0.09163481785305781,-0.04692543528890008,0.01846566252537874,0.06172376282824829,-0.009668880372265204,0.02739626238845053,-0.02486268780972777,-0.01321435061674517,0.007122129026076684,-0.06263850296152554,-0.024547960407979613,0.0015062883128352806,0.08385633681447009,0.11334533452989203,-0.11767349932402504,-0.014839372634337534,-0.06398756292602827,-0.01665719253039502,-0.06684864466878683,0.030270263884738757,0.02505180383983701,0.04365988901199563,-0.036273047893149495,0.03287388247222117,0.009035759993282632,0.07643664365265368,-0.013095776794516097,0.029853426791094786,-0.04294420126534313,-0.003904443251706406,0.005421266584400053,0.09234427820715688,-0.007383062292873018,-0.14166984610536484,-0.0729093654507949,0.08404072473258678,0.036478309421941864,-0.03298193080804244,-0.02407863415722366,0.019255818549997337,0.00807796468004969,-0.006265414683501818,-0.020244590749236527,0.020696402765199278,0.010750345248313418,0.025726485887340465,-0.037339271141643426,-0.028317997705803725,-0.03981030119224746,-0.05974877595547253,0.014436344944030656,-0.01617488785052667,0.08125814588060268,0.10056907517158671,0.04616505380319375,0.03483257467676676,0.006511665698233241,0.01450256081357275,0.07444196195485688,-0.03053703442173415,0.00351344488929916,-0.01555696100894353,-0.04473369991566843,-0.11206800395655685,-0.001022161780221049,0.009629726598809027,-0.04857828992088391,-0.054765838978384294,-0.01422858768893913,-0.089864628676637,0.1303618190401177,-0.0663564400923489,0.014478257871305168,-0.018750659989060607,-0.002431945989053442,-0.010466818387671972,0.05902850816875521,-0.00750745215953768,0.04113895542949555,-0.07522193309491307,0.01053776447840645,0.06121149340038716,0.12225024518092223,0.010466794053580714,-0.06938999012936144,-0.03103260386865798,0.027549334243406273,0.01298431925794311,-0.04731330598199037,0.006012741732712147,0.08786383745990771,0.058209167270462304,-0.10562428184987446,-0.018598896220647875,-0.014138101449204072,0.015052325546325898,-0.018906364390202903,-0.034201809977350575,-0.051130839559075054,-0.014464118709020896,-0.1473680667681073,-0.04163514988455121,-0.02931849560051597,-0.07430537739315574,-0.01780004359326003,0.008599653109548222,-0.047567728488574205,0.014401201341297354,0.10252140172343896,-0.051212464607173366,0.008043529529976695,-0.06214970916651162,-0.10002110653025269,-0.07913512193326153,-0.009997211084157982,0.022191348346879494,-0.028410100966854708,0.025278821212517795,0.027801632548427508,0.030261102578307792,0.03199954240790179,-0.02138641627117876,-0.0030928790410604274,0.0010708111420072517,0.02817151315987842,-0.025489155246693793,0.048185420346084286,0.035920421437349005,-0.003225765975929941,-0.031553971819009194,-0.01861347517215772,-0.07915581987118284,-0.07985224267063303,0.046950576679879626,0.035489733361841504,0.06641727472757587,0.03792236241322815,0.03564606945926945,0.002007166484044687,-0.043397838941441134,-0.04142601919356892,0.057576489644004684,-0.004030118212124661,-0.04983022247920234,0.009928173105761405,-0.04745958801787814,-0.06900376477438049,-0.061169336283933645,0.023125148268531095,0.008732266865248852,-0.031020008067871925,-0.056822575201348674,0.056846098663225104,0.00035360478573697666,-0.017455848449704527,-0.02929133300665057,0.07822162534450187,0.012481704503956451,-0.09131374035423956,-0.014769703633552848,0.024871245652309724,0.02408203634614654,0.037563346987469645,-0.0468672863064198,0.03243345140490015,-0.01462739367288739,-0.009039807340047829,0.04401421906358662,-0.08008565557626236,-0.01589415941923519,0.021654713191623286,0.031927167964169764,0.005411661414711418,0.003173133423901708,-0.08605841118252507,-0.05276340471404134,0.05244408098704003,0.0022128454896835083,0.02529075622595378,0.05360105306639808,0.03862032488960051,-0.0686916764520951,0.004478046925412,0.013976014682733526,0.06892167345819268,-0.018681962265603803,-0.0012150948997262183,0.09161206613772002,-0.08925224068921832,0.006749527790817061,-0.022575250215924193,0.07051031328265997,0.06225617712967262,0.07973812651139839,0.042522951595159654,0.03236361735372061,0.08778779956649896,-0.0624988232937873,-0.004854339147180723,0.05776047651050218,0.06378187748944654,-0.03148694226366229,-0.015825937175397608,-0.055567542294192904,-0.022024334832103847,-0.01738263321383602,0.02006069399844864,0.06266139065550688,0.06559933100649033,-0.062242867217897915,0.02665230746793326,-0.0672264103970171,0.12196974327739377,0.0117916989946594,0.009221694912898844,0.07055775283702191,0.044772147334641896,0.010874839753064301,-0.03537977741131414,0.07560579349237295,-0.09013910645058043,-0.04780000565256468,-0.017735261996087465,-0.008336454845287717,-0.01888637908047105,-0.024771015830978287,0.03277812729949094,-0.025155344107761265,-0.014194273125295774,0.08823335298155718,-0.017813921700134235,-0.043367215556848145,-0.009622980237793257,-0.017519308867314988,0.04485738619330075,0.10325512454460943,0.03691300484391722,-0.01554586800531483,-0.026900713308700176,-0.03721143438457946,-0.026689421013967613,-0.00029786815894447695,-0.01786014234859167,-0.09204410857649503,-0.03447857728528511,0.04867683236507801,0.045337005047476495,0.0055007030094884135,-0.06332136495066765,0.024662317837034257,0.09211763488156041,-0.002719959123523239,-0.010607087821750379,-0.08427509371316194,-0.043325725742033555,0.019781068529957153,0.056297445685092935,-0.0644246629017495,-0.0057212432527608175,-0.04058217452206191,0.08887245343959013,0.03181061202866754,-0.06017314400559665,0.10951294367504617,-0.11730396099433579,-0.03670842532460692,0.008722116299749358,-0.013477237051667437,-0.02314061898165276,-0.037792731368654825,0.03539233563326928,-0.06641434358988521,-0.08720630975840542,-0.033943100665219494,-0.004624493859799145,-0.05371771551228877,-0.07604964977862136,0.03163609030301766,0.026645932110716117,-0.026519035159700548,0.09385242834689288,0.020204755115477823,-0.022992127648187498,0.04727919947359132,0.06097230126341822,-0.06760631729874571,0.07898253592881004,-0.027306830534200393,0.02178709072813756,-0.05987513840088388,-0.07503854992718914,-0.08566782586130586,-0.032174261940136194,-0.03853536857961956,0.0017313890682563028,-0.09494021712605753,0.01636902807303398,0.053405572161389525,0.07461552610666468,-0.02900273035862978,0.009903881901873237,0.04944889887278715,0.0937740176120614,0.0514084259183905,-0.03999135274724945,-0.08375913061266783,0.0029756110469906106,-0.024737956957633204,0.028577393099858822,-0.01798607644737826,-0.08174219283038094,0.024527545875427673,-0.04933079449286831,0.058858877794698616,-0.07021141323746614,-0.01252916139983872,0.033672603135733184,0.020391779837562657,0.05370193065287201,0.09360654825129462,-0.006093831840464177,0.04002075827635792,-0.09585614553417944,0.04328464796125667,0.0004259197310623652,-0.000498788079556276,0.024883738987525536,0.012554180217189308,-0.044938553595528105,0.03829067420409464,-0.035573529823623586,-0.000910861463226687,0.031005011080537905,-0.11017122093013673,-0.016987555497441846,-0.0003199979260816217,-0.03227624300528986,0.016915942976301186,0.1863998327777215,-0.04259630489209261,0.04046032794888038,0.037714580103426855,0.05051359768658698,-0.020817081883264605,0.0012086803219913567,-0.03169581768264455,0.05343263497808698,0.07475526845775678,-0.09116300928455717,0.016315744959280214,0.13339130712427036,0.09807713433220565,0.08489918346360993,-0.06757260135549428,0.03993888474125503,0.010410999356391516,-0.019013157755893528,-0.0770584718995802,0.07583693719762642,0.01997773592791894,-0.03875895436283526,-0.06530369852253982,0.013775060327830671,-0.06616080260682496,0.12730921913754895,0.05370040253865715,0.004390963347070451,0.01746903724650216,0.06329867398834473,0.11445343382826799,-0.10108563140199524,0.03828191517210002,0.0006514247205238012,-0.0012310765724298574,-0.06722699947293984,-0.11717559220086485,-0.09630130930041848,-0.03696482343726848,0.05280624908652027,-0.024092221254493795,0.016301490128455033,0.08054367265619973,-0.031185980695636606,-0.07009665768714321,0.011595084497712774,0.013126761188469902,-0.021752613186013355,0.03433260730480614,0.04570958492271367,-0.011722831705305066,0.034678229944775305,0.05934023686871163,-0.07816199186602572,-0.009510657808905303,-0.013981190905394394,0.050194169269250674,-0.061089546877094204,-0.03142888172883234,-0.04732426893566164,-0.010754203691053,-0.1025555962937006,-0.04917616353006871,0.04734239476685423,0.026148683068832012],[0.025863337950979257,-0.01080023606704666,-0.0012094298815412176,0.04478014012343225,-0.066309212712177,0.0109449794187356,0.04812809554022598,0.0036954860885312,-0.00929830393989713,0.0027993331634916215,-0.01930819680617197,0.12491205445172122,0.05288557491363964,-0.006266057470284819,0.0070675449753145715,-0.049557363183281924,-0.00835503938422517,0.06212305235537864,0.020563312938132603,-0.11092006623932148,-0.005716061609285019,-0.05060218151724467,-0.04112675089134335,0.10645057073225868,-0.06132425020383023,0.057354865043482195,-0.019751857825245807,-0.05629533210643494,-0.01192293997836593,0.0382955432032565,0.014984352899668069,-0.03954133805431398,0.0003410816059297092,-0.09671921953045516,0.05392188304140451,0.039441681484630606,0.013470698292094076,-0.03847777428657541,0.02286062692826062,0.005564365249930372,0.032947733505910105,-0.06021906612304765,-0.02193459229704528,0.03163528421973731,-0.00020802090096496204,-0.0407650382813167,-0.08802990134088443,-0.03354902421183633,-0.005398881316507224,-0.020992967922992368,-0.0494348187495584,0.052667751838670854,0.04360068031063719,-0.0703088772296162,0.031691742270057076,-0.12975918132274286,-0.020845755636068237,0.10751844655855411,-0.0438391928704217,0.033983010490284814,-0.008471215656819601,-0.04891215768874201,-0.012821694779016568,0.03368381020776064,0.057104559811199884,0.018979937487014868,0.013331273228304135,-0.09474050469862097,-0.0516633378928887,-0.02638574850227183,-0.027250525804464208,-0.011712023768781525,0.0308368957101778,0.038859900721133524,0.03198468235931087,0.07876670981584624,-0.055187719987399596,0.014404403443768886,-0.034612468781536766,-0.0909039234487523,0.006177271593039991,-0.008767552116561413,0.036733073320824795,-0.01707081205577709,0.06720558869811327,-0.0663108743633551,-0.03401348819446686,-0.026764364785022667,-0.07823718958329187,0.013504948999208592,0.0022594794693677773,-0.04412286828368637,0.048758103977203024,0.04349904715758428,0.042132527154420424,0.05779909352156322,-0.03389727599830841,-0.04683455002842872,0.0022330429766940214,-0.006078837828107213,0.029660497145963836,-0.017605449259263956,-0.004868296788919185,0.024432381819003656,-0.0021550784718298976,-0.02781201291624656,0.03219980461929405,-0.05166596916952533,-0.08804330539583656,0.08603128342702608,0.04220012720741837,0.02894061449531185,0.03219660414487413,0.024782845564654484,0.02350336898808439,-0.014127182975234931,-0.008882248061964741,0.03822301723557857,-0.04934101033265574,0.12471799420233268,-0.030635779184280315,-0.004748318389235871,-0.021065784026066264,-0.04138200715144987,-0.012617559380124226,-0.12224282824096773,-0.022421313881419633,0.1413754654823541,0.05744236647370932,0.04622388808213963,0.004897029127246561,-0.02361072821482716,0.027576340877130363,0.08856024012419159,-0.05890712115512032,0.08345150566813836,0.04433792779657936,0.02089107965719338,-0.05264159601539281,0.03168933385760862,-0.020544883527358376,-0.0030709008294929883,0.0009133346002761464,0.020598311839551558,-0.019367327221658966,-0.08605780710615538,-0.09535360270246689,0.00001464937004385291,0.031867574734391266,-0.028500230829628912,-0.03692353189128853,0.0544762573673775,0.040450341152615095,0.08773887168608817,0.035165333713391346,0.055810088523139366,-0.012991860751046679,0.04429449034947002,-0.05239488617534018,0.03059629983291941,0.003748638825191704,0.032938896049966006,-0.024484956956189827,-0.03969980007055749,-0.02669318671467381,0.06398932825999022,-0.013566437361531045,-0.010450806169263098,-0.05387651449005048,-0.0945225206150875,-0.048796364119759114,0.04383139349411224,0.0654494096836139,-0.13004438327985837,-0.008816280777460423,-0.013524474440178347,-0.04017682392093475,-0.0016197193124361364,0.021796706783958317,0.005631255649757865,-0.0026384748190440336,-0.022298234407295878,0.08023777529438873,0.009028154710757188,0.0007667486501618964,-0.014732753553826323,-0.02213653451717195,-0.01119802926084066,0.02095681297575972,0.06096625130884041,-0.009574093231765533,0.07547502622865293,-0.11991361887155966,-0.012044099736258581,-0.006471569747393451,0.06412183028900639,-0.03465344068283369,-0.015658072514931717,0.03307557524579299,0.036683441799504966,-0.06271333487992967,0.021048394137016566,0.027132570637176008,0.0029224168628847118,0.06248109802439459,-0.05302741391991712,0.1343074515610602,-0.03087425230800818,-0.006128930249407163,0.05997213274142945,-0.05045841669312153,0.02053664670058922,0.05885429584395644,0.10014399654568962,0.02989730929518246,0.06468797947255214,-0.001545274973828428,0.056271368459330486,-0.09346829414106099,0.05137573483234973,-0.04436232126942879,-0.029649735311676615,0.10297318579352899,0.03043630314927279,0.004384792938207232,-0.04370182093669752,0.007374612391000822,0.03370551179684795,-0.046177063522122905,0.028660735045894767,-0.016417929747246797,-0.010116933064603586,0.02922643509142908,0.0792513781059591,-0.018548124494959975,0.07302613215736149,0.07539771736048352,0.0052547224627648055,0.002760796470901939,0.019072155603055654,0.05259161836410201,0.01585022354317311,0.046977842521532684,0.11286421098795796,0.06165765851637658,-0.024681328696518644,-0.03200238386128933,0.09878293203080105,-0.010933060535071737,-0.11687202116199918,0.01648553172032289,-0.02654781177128413,-0.05769376491486571,0.038668437952064615,-0.011662027884491114,0.019199045535480103,0.05600990273939331,-0.006681565504063178,-0.008759270062640418,-0.06325311171043166,0.054604909170062874,-0.024035723982007175,-0.04482574396530437,0.06492087589686982,0.04134491077208338,-0.11176287468684368,0.0843420482691394,-0.1106800272705004,0.022325712034092015,0.11151790826050412,0.05391560819496714,0.07110568892072204,-0.021513151634127006,0.02351777341688332,-0.012942707322500536,0.08454504927818564,-0.0288613880876583,0.05249492098446476,-0.035510476187080135,-0.015192158494098924,0.09752681856069645,0.06576777633030663,0.09125459270281283,-0.09133500968661175,-0.00972225793667257,-0.0017559459031577789,-0.033325019658733336,0.03149383593031703,-0.002000178122410349,-0.03741739936870104,0.16545388852036638,-0.0540963600075651,0.010544509547540168,-0.005954516280742357,-0.072279562680465,-0.018932811112491753,-0.027204245827220138,0.0034521233357613004,0.03775621926770661,0.01409080615765987,0.04767473289198105,0.15626530273219907,0.039822494169277946,0.08349837984006471,0.09870887172957817,-0.06787683982603882,0.03136031475731145,-0.06619356490926324,-0.025774634369318008,-0.04167832067499689,-0.01150004207277145,-0.07787720452417259,0.05046750043375974,0.08759636809539129,-0.02376565175378204,0.02612165806830813,0.11844754085980846,-0.019380590571622086,0.011807087042313745,0.12236276660957385,-0.017235807561145476,0.0870864490558134,-0.03153359068099494,0.08257720562130422,0.015335648233739892,-0.022326836643235485,0.08533081425082556,0.04780428831104773,0.03383055541540745,0.02395180249791724,0.06395944102305551,0.0691154131916265,0.08296496512650846,-0.03470374638895415,-0.0052550334750552374,0.06325912636321744,-0.07770889937504005,0.053155485600250255,-0.03736876395412647,0.04006252664777435,-0.07428439676355134,-0.03904218044254221,0.09989742610190627,0.04001465671552089,0.08853043513090998,0.06889671321320223,-0.0744427487488718,0.06725065486537475,-0.04343507870628061,-0.030624757483171776,0.02191122546593826,-0.08043030752819552,0.0990087843897587,0.0605237379753053,0.013321056760135605,0.030871725306831053,0.02966883837132805,0.07521483971470266,0.04290916481734128,0.09042411244452414,-0.0713257420693471,-0.05294922177767935,-0.05326899824706021,0.0390530434589123,-0.03364282969428334,0.04253460818792508,-0.12716783508939922,-0.02283136512952077,0.042267383533810675,0.07748666954545173,-0.04498799467368824,0.08242930669407543,0.07643391381435027,-0.008220347441020957,-0.0050165873100251526,0.06641973925634781,-0.047426845362781876,-0.0527076253900522,-0.051429768588129324,-0.008314527009012506,-0.04044094349394542,0.0858922071431209,0.17776155696626772,0.05222313448936662,0.008236180994987626,0.050161802267954775,-0.022346682589830705,0.04158333684836957,0.0886711819251879,0.009838261062460838,0.03127583235862901,-0.06579943764726184,0.09972521487379428,-0.04126528254039773,0.017940117159087245,-0.007752050976296527,-0.058249010680069935,0.15074640052684699,-0.01931163818801247,0.021120063728245726,0.07123740173115294,0.09208641155626072,0.020572342599059552,-0.015452544695794799,0.01934749704822529,-0.03668538528184352,-0.034494513410448575,-0.002993945492822899,-0.08781497000988686,0.09303581237616097,-0.003463088805793419,0.0905738084423778,0.08602275984910318,-0.01954155153597075,0.025353434542963287,-0.0077112413831745144,-0.014837246755835443,-0.0779855509268311,-0.00264885504157348,-0.03436418620290102,0.050305869065936745,-0.09864468039400302,0.010789835057977657,-0.055919382810328516,-0.04572090897310699,0.03212330436697876,0.013936856381770725,-0.0069672805787705135,0.045126574302338684,-0.017424063816903493,0.003634463517312956,0.011515529851057738,0.016714689764281424,-0.028098538705790068,-0.08761322204884361,-0.002044891120187579,-0.03252047266597558,-0.07329541364935815,0.07904169248794665,-0.02756123893505649,-0.009408858780549308,0.03456683586667663,0.030892955022783816,-0.05143492577831643,-0.012635417290180632,-0.08522301447775166,-0.08789630832083918,0.02483704207983078,-0.09193168585307704,-0.024951085286616596,-0.003864374217875519,-0.03547560621342155,-0.02685582980540675,0.08602243724982273,-0.0480233828072877,0.1674833532248542,0.06906470121596617,0.021207150577919633,-0.030677836310168672,0.040097259787722314,0.021240230560124657,-0.07648168550565848,-0.060841086290928915,-0.010911122161812923,0.07494406051253509,0.09521804586620894,0.02957621051789808,0.033154176505298394,0.00949430023290117,-0.1427233548569961,-0.01862700235873875,-0.0235491280890332,0.027596697656656916,-0.05685542207723118,-0.024601149477041864,-0.013796585408544617,0.013411048069324737,0.03510377596403329,-0.07095528103234532,0.02316829743519966,-0.011448721790977853,-0.09195267134682664,0.0005539561222958146,0.05369661569620543,0.07113810109683975,0.14915442895885694,0.0017074013578152279,0.03317224363553937,0.018846612842069007,-0.006243743025227927,0.03070316882056871,-0.037982763935768146,0.09405789989728341,0.01127005353498129,0.00924032585403219,-0.052125135606324174,0.024722325980407096,-0.07008274512510747,-0.10735062219789304,-0.001364222603119166,-0.06663374322385833,0.038824598671165084,0.04306368642484755,0.0014774559325507614,0.03802984148785348,-0.004653566852702283,-0.0473445606377827,-0.01212124968227151,0.018192870049290353,0.021501224006555842,0.14638635072942066,0.043312677415046456,0.027107977519494827,0.1037913574990452,0.0909866854245472,0.11327476263118519,-0.0074482608804204,0.041764661567624324,-0.0313167030379622,0.1120639255950539,0.07631850850700712,0.05129617744390177,-0.03717960098695188,-0.05080702796803599,-0.08729339036822817,-0.0866219803318919,0.04583932579949425,-0.00021826583715025167,0.004214339275479053,-0.07894369361275495,-0.03506570213565874,0.08754680957552574,-0.008781370787089104,0.01027979774022674,-0.028440496274888843,-0.005366206971604296,0.007119609900210611,-0.02591433420757722,0.0019218278377310333,0.09108492803664543,0.043833383761071903,-0.003790868004505787,0.033782619935717136,0.052621555479309044,0.0539888213385082,-0.05797786112430932,0.013740519770213445,0.06975170659119698,-0.06367074752814517,0.060018036345471454,0.0852900787268361,0.0581407645275925,0.06692325399031145,0.012867623886667637,0.07947862244639134,-0.018961903776406403,-0.02649332766536198,0.05787832760848541,-0.008862248042911865,0.03853316059462595,0.050388018702762605,0.002403117217267193,0.10268843514221371,-0.004565422977900632,-0.05818377349508528,0.03734081379674217,-0.0042783528707719025,-0.008262954039924096,0.019725804642327486,-0.019000964067281384,0.0865993077151763,-0.07828699866936444,0.005768934295126378,0.02850894122947453,-0.03774690034974787,0.019818178028965766,0.04163014867390981,0.003547174026153505,-0.016429731755213076,-0.05024859565330691,0.020670670927730284,-0.0006703811657248103,0.02630227816799482,-0.009417143311233825,0.04234735494308255,0.04179173421492337,-0.015460649150190561,-0.057971350380877154,-0.007223760568757958,0.030170436236401234,0.006432742648856465,0.006623664797839085,-0.0705348943313982,-0.0491209335015493,-0.045189271391026124,0.012618686673929562,0.08684821156852099,0.0022467757778645873,0.008919609185161124,0.08736331531565188,-0.021624075916956784,0.0341103456142622,-0.048654002392543826,0.10706901210956288,-0.08071522540478955,0.010701260753145246,0.000007435416603894875,0.07001933668914302,-0.036023630460861475,0.01812681160165082,-0.0864124165752927,0.009244306024253662,0.0036140070725768315,0.014477316735344739,-0.0282356841594762,0.002118495520243667,0.022450515090196528,-0.047728121074077715,-0.06989966700807208,0.014407414068059624,-0.01854306053172216,-0.0030362419455380136,0.03622511318337607,0.10610833166226896,0.004648820054124301,0.038349440851724384,0.10351952822612286,0.06587847973331308,0.09054019874661141,0.07132996658499567,-0.006572592042089364,0.07468974873659456,0.13137257122114074,-0.03851828031105698,-0.017083492020253145,-0.015866228663230102,-0.055268526081427474,0.028528509481548087,-0.027853961369611074,-0.013361796854024891,-0.06653082840154688,-0.015928600882185444,-0.07707670249385581,0.06483547136470427,-0.0008004252606008319,-0.03960202324398757,0.0006282957002114375,0.0816761549551913,0.004192809033008769,0.04603764859424982,-0.01646270377481667,0.060391686809375976,-0.06928951745219977,0.0856920211762487,-0.014376989439421856,-0.044427775297738,0.029960799747079905,0.06073173454909991,0.11874333253666293,0.0064586774507799,0.02071363996764176,0.060162046885933886,-0.0011337641194200786,-0.12090934418426252,-0.023854465967287214,-0.00016946100756569924,-0.035985801799038236,-0.0065035303987679835,0.028803332883264192,0.02050750607294354,-0.022709314943990172,-0.019572069898220162,0.0655192426792319,0.03215805621344883,-0.025144003012229073,0.02150641397533947,-0.005659949414666395,0.024846970139930737,-0.0021246894178581573,-0.006173195993815584,0.04067196735237099,0.04633881801455622,-0.01890698485651433,0.020362559839384994,0.09006616133790314,-0.018683861045312857,0.03624920226780925,-0.003687342532077646,-0.002606744607592103,0.006672037101154712,0.0016460302062554256,0.020122241443225185,0.03745151342020541,-0.03877967815249211,0.04527370669479411,-0.01910343075252989,0.0367601034882608,-0.08821161864173695,-0.016941422726598782,0.01780884422966141,-0.03684754469634233,-0.11113627915458361,-0.0007779878442431595,0.025334126895513655,0.04308533588903934,0.047656048476476184,-0.014127308896994768,0.035599023700260406,-0.08722732406843227,-0.1358705140782016,-0.04988790520099362,0.028812610126169463,-0.014252175878618292,-0.050327847216018226,-0.09347679826698241,-0.03199144516406485,-0.15631334665320695,0.014149961053252702,0.07579587494477706,-0.02951176762513215,0.013895674670104205,-0.041057061873127625,0.0807002253490559,-0.05704850593035425,0.08094052348088568,0.039407582096159556,0.10962086789701043,-0.029929568116736617,0.05168724726624547,0.010264896335278403,0.00968201639200584,0.019839151401208194,0.026310690608088157,0.06268200850666308,0.050090865390580545,0.02526675363445271,-0.020059584456347895,-0.0909480310380506,-0.005476993630110806,0.04378616751735651,-0.00875894950956778,0.06309605901877399,-0.003951072055532977,0.009249232275000829,0.08294837784894428,-0.09049553937597953,-0.011300253531581914,-0.022720528502319905,-0.008269103226645967,0.0138934537911329,-0.06902908675701536,-0.07267578699714777,0.015829253481461174,0.07484132119760119,0.013863930629578457,0.006918881150681553,0.015530636578963532,0.040388385979875374,-0.04248219190622408,0.01384378430056266,-0.019967322925529895,-0.03416338213330797,0.09894148803246015,-0.03226836289074666,0.06017909617733684,0.055133947151325004,0.02238629774001682,-0.01577969851525382,0.06544126068407291,0.0057757827574599725,-0.07074973036668396,0.07482141100745904,0.014037209525496941,-0.007043563551445679,-0.025863650438646125,-0.06472309279336524,-0.007939748310733165,0.021667046655207783,0.009609450382552173,-0.0011246883036989462,0.04631244209598429,-0.04207903378861558,-0.06997776471912805,-0.004407070433599516],[0.000842979269634734,-0.037187602804993704,0.06919958240428399,-0.03085317344715181,0.006265720296756675,-0.005782408856732023,-0.04421978462532123,0.019881099734869227,0.031800322523072695,-0.0563461405497752,0.045366298657466664,-0.050526991176392984,-0.012574295236152555,-0.08771651735349904,0.07497027021586487,0.024656671794466376,0.02954170570073029,0.027382043398065374,0.043245625030735396,0.022374186094316562,0.02214351082977258,-0.05165896991766726,0.03586792107056449,-0.009007601344282409,0.05017275563747843,-0.013094578782220175,0.012382350821347666,-0.02279325949490794,0.046868793248979204,0.02899566210338398,0.020715585856674445,0.0835305119928568,-0.0016508486516098248,0.0010351011648474851,-0.03048179466120847,-0.11518367067277249,0.0332047956194436,0.018164252238664205,-0.06238989027398011,0.018600315272954224,0.03154381100728249,0.025240195386312815,0.025115529454382588,-0.1130593173001201,0.00900657842151031,0.12524493363041156,0.027871804598454827,0.05694584807299482,0.08334116600956612,0.0167667712794342,0.04804979029240346,0.025923429942042334,-0.042312508941010775,0.007703278325353086,0.0007365931135778329,0.05234152491616911,0.020066823903117564,0.00359760536089178,0.02142236500905393,-0.023714357058221548,0.10276097232622296,0.049733979113044426,0.07047203933800374,-0.010352093808993544,-0.03308159232003531,-0.01082791635332016,0.0013221437832358308,0.009608708919634406,-0.07818964926929602,-0.0097766104630535,0.006569741104827223,-0.05491095878831081,-0.019469927272468147,-0.012683153773251955,0.05689399660623658,-0.04680874656055191,-0.07313125679083313,-0.05063833567935114,0.0203002442147515,-0.020544917655274792,-0.016221089199941596,-0.043170203443665005,0.015717509255928755,-0.04505624363190415,0.02770879729111803,-0.009442290202584495,0.08423626893191805,-0.04542412342352914,-0.057507622241841416,-0.06330154447373246,0.04432997643943144,0.10706046067406769,0.08963702101079207,0.04122997794186393,0.07167719154733077,-0.027725562499666245,-0.11548675604392718,-0.016778896154008984,0.0689414191009708,-0.06931077685776978,-0.0006691427691689084,0.08521196857587761,-0.018790598572581415,0.00557662423129544,-0.10245345165220197,0.031384596334266546,-0.02743579591931163,0.07129710613727233,-0.008829247241907893,0.029405223124580188,0.015952289216566877,0.052808088490102066,0.017369107841550546,0.07078083514205194,-0.12346568955232168,-0.08106460999968106,0.027106007989513892,-0.0637147689453963,-0.01727933467267346,-0.10820640647668547,0.11869278922202454,0.04134462800553808,-0.004330392734605571,0.036846457534796234,-0.01065535223025714,-0.010550663121532867,0.06417296715386174,0.08230300293504887,-0.04275847989449609,-0.04231308907689377,-0.09522499641603908,-0.01758580230944707,0.042640019062311726,-0.014936714456644245,0.009318910028138552,-0.024960743319347868,0.011205933175244612,0.026786900563509672,0.013980949345419028,0.001651378408808458,0.028654426435546446,-0.006924636648194369,-0.040562161222698775,0.015005145797199316,-0.06971338964396197,0.0633296874329338,-0.057337178969013546,0.009305484004114115,-0.030977334242018897,0.06074017696982581,-0.019046884026007124,0.09844771971906273,0.005164502558244502,0.003102445093458076,-0.04766780770999507,0.03841025449755258,-0.0548604410644136,0.01594432754124899,0.020315025629789478,-0.005724955223453649,0.07436012116655613,-0.039853624102990114,-0.06562792476279966,0.02590278132402524,-0.042914195533815834,0.014851226408011042,0.010810838590851319,-0.0023637106144147033,-0.0712258323634899,0.042846126196454185,-0.07762969977418205,0.013661336810414869,0.05815574192659151,-0.0036366086993493405,-0.04264743441607459,0.057358443631164914,0.022461969088432655,0.018036912647691587,0.0006817799041122353,-0.007649070604435884,0.0049426376733934605,0.0725379190050487,0.02282162312971153,-0.013957950795958492,0.004114812555442097,-0.020361100054862157,-0.007194392474595115,-0.04811471285600172,-0.06431206667273685,-0.10453176774414512,0.013870302359783978,-0.027615118485181504,0.052103894801500565,0.03999842748457881,-0.040383005109363976,0.014011536340147472,0.06427307131659113,-0.004630395166045467,0.008280818962829778,0.06489570677116652,0.00882932979594195,-0.009160450751879386,-0.02650824883352262,0.041243467475534125,0.0009294497525425328,0.02924019082852153,-0.09282666309289354,0.07695054907063564,-0.03050700540018697,-0.008040464492629086,-0.05889625567776674,-0.023647201664558762,0.07380936086742736,-0.10893460052519353,-0.11736197160567925,0.027009148311791038,0.040044314982251174,-0.013375066188110843,-0.06372605239721321,0.05180056858481129,0.0037511277236888154,0.05093163541934626,0.02616157166016394,-0.041968578815729726,-0.016935254045757415,0.0026685378438034042,0.06445508989174928,-0.05341928016720336,-0.030648797649738737,-0.059048797314714706,0.02112257271783377,0.1058457782103017,-0.012385557327511131,0.04163996883467602,-0.04725508428597583,0.037379816098122416,-0.03456633005873251,0.046910740816714876,0.011987492731446251,0.08685010403613393,0.023384440823046027,-0.06241826518117759,-0.021519279467388668,0.01226942758882333,-0.0244730155602749,-0.016589064226493682,0.061837471183930764,-0.05040811589320265,-0.0018014817117171502,0.09980188445169036,-0.08594133120705552,0.050210171844931,0.03283184112961461,-0.03686623192152233,0.12794651730369572,-0.003294613468884689,-0.037132223593777866,-0.07377747180319591,0.006927638486549189,-0.0003281635126855742,-0.023226919797878054,-0.048567816604090666,0.010201486320028378,0.05775576261504129,-0.08748973595648887,-0.01802643980787616,-0.0004809834289155764,0.015271168433311008,0.06533503505545646,0.0827496465950145,0.012887251432655846,0.005010279012645401,0.00852003590666387,0.08306848252984292,0.05388487982900512,-0.10931077526503748,-0.10520128466421576,-0.06819231645566841,-0.09654186043178399,-0.09971328991811326,-0.0016456195450243365,-0.012115780350489033,-0.034486320833696994,-0.017968388355994805,0.023589223833285922,-0.0507788563022645,-0.0065938946209818505,-0.0020586229552431875,-0.043747968085572006,-0.042723713186686677,0.03310911288364568,0.05683893201007541,0.017703811826506845,-0.05634703415966281,0.03283106813658031,-0.07028616834059373,0.03495187196755752,0.05286237175662921,-0.0427042308977655,0.02621420305963473,0.05284257327030737,-0.03127729133067632,-0.055728664632699355,-0.04640916766722202,-0.04414038786791402,-0.010331225306276278,0.010192329901089205,-0.0648779669410543,0.028128083258750984,0.08703326271408794,0.0005461819167063857,0.0049312909577740255,0.021978600528825543,0.031291846683163364,0.02958902881165741,0.03421616134014899,-0.058126168495010816,-0.0180315657836576,0.1462456027929776,0.05263205394190308,-0.005446895760000099,-0.024539896785553194,0.03910647781906328,0.039780446231583375,-0.005207403285081466,-0.0009670418942825655,-0.09472172670675351,-0.044763983339537496,0.044554950923205154,-0.008421001506066646,0.031139041197141473,-0.02231748927863407,-0.020907022000859202,0.009911277821720584,-0.06762047531875776,0.026467809034974272,-0.03934918635100911,-0.0021774240973325793,0.0201452384686666,0.006592491715080755,0.007052198360956563,0.031559320323973065,0.0009368449546751005,-0.019218375285494332,-0.05789492417829709,0.024190726699149748,-0.07311278928779903,-0.012472471409840482,0.006830189611381284,0.07585961852319875,0.0174913755076961,0.023586912315748432,-0.003639817600815435,-0.08520898942865904,-0.004416518635318032,0.01671779068874758,0.0189957396542812,-0.0164478463114101,-0.0695402166285205,0.02573225276700125,-0.06939282919780473,-0.006273266933227153,-0.0303647673687401,-0.06284019450038927,-0.0349682186272725,-0.00830296452638056,-0.0029295162895326666,-0.0022486821455811345,-0.09437918515568658,-0.05734500341789258,-0.04492239585867121,0.038251283366599366,-0.034578953787785846,0.028720310589270433,0.0035716562707436006,-0.074575472824139,-0.04995570865754904,-0.06620771814016733,-0.030875902882604094,-0.00478013745122471,0.11909142900652037,-0.002646116095695256,-0.0326373264067681,0.0486288079221875,0.002944662495365996,-0.022245459763012183,-0.034314244009348294,-0.0016451594939548967,-0.017083490908385915,0.04220140871908494,-0.0027386758740477867,0.08686312845162086,-0.03368071697176926,0.03170417028534413,0.09391773116445958,-0.020835453230617296,-0.018571331229075137,-0.015390006647309334,0.06904484143615147,-0.024372598252320046,-0.018174972379596654,0.0323240998209809,-0.04459671979692112,0.06976050713296007,-0.025877496309115143,0.01301842934444625,-0.019366009080499486,-0.029143184264665497,0.020430075110778174,-0.06422766031834408,-0.02625917846108697,-0.06262442724942623,-0.04616388202805112,-0.1030162202482849,0.033257767124322365,0.015196987823573056,-0.09332874183589561,0.002516450975836518,-0.0879266348186494,0.030364471542092153,-0.01478337154726915,0.002388590068675876,0.018800061280427802,-0.047712309534289496,-0.061762012312672136,0.05916284553451331,-0.037151257513580255,-0.0246957511801647,-0.012974501424326882,-0.04309488361919436,-0.08090872070454815,-0.05869502706019694,-0.007296201937517181,-0.060509554920464226,-0.03156652496860078,0.03815940838837072,0.04528662294796555,-0.1433274006642012,-0.02565890395492174,-0.016522450064384568,0.00728757335862567,0.016670440074743595,0.07651641816035604,0.012295274695675413,-0.027747469114085082,0.008210186912968095,-0.017466158658585845,0.013396320803377468,-0.030075554726923213,0.057038970822284776,-0.017019191602623954,0.014813207065494336,-0.00969527390276135,-0.009980459714936454,0.02310946460049178,-0.1042832041855428,-0.005582014304346452,0.005683688253307239,0.023096260893715675,-0.010945223875765462,0.019875530033260518,0.08589107644705732,-0.017984593060899886,0.011198621402157114,0.013840931221017042,-0.05297263068939853,-0.02912573926405236,-0.020151493193768705,-0.0653543563962859,-0.07645766227163668,0.007779637694732856,-0.016772550807653074,-0.047248085713859314,-0.05740070646573859,-0.04859059814863659,-0.03675387542639634,0.07496732236327658,0.07004116469707693,-0.040453397723932374,-0.003338055092329305,-0.06037085289906199,-0.08944927460323172,0.02985634515529088,0.031006212215314695,-0.012689625647087008,0.01582365006080793,0.0023931942969011716,0.09575638440996807,-0.022073441821151493,0.020883150145745457,0.006463439098613438,-0.017990439955826776,0.02247480135974201,-0.02436275716319957,0.03931228396790406,-0.1001836795328482,-0.009357974223986713,0.06628761996609049,-0.02676734481593323,-0.011554226307846109,-0.009312368089722778,0.06473627154387757,-0.01861275988140842,0.08529604180889121,-0.03915476013655408,-0.024649255135041327,-0.09875371147067855,-0.021113199160010313,0.005635529967834108,-0.024127959956247304,0.006517143618480161,-0.057268576088089315,0.010606549307397208,0.021426693208112614,-0.05002262164331764,0.050824750301753506,0.023949358057170946,-0.10801635261418714,0.05012521124645357,-0.011519537656895323,-0.010627654122472298,-0.03774711161967803,-0.02990346128519814,0.03968345322724847,-0.05321504402799873,0.03292633074748531,0.012947677553076747,-0.010262237904344069,-0.025960830991204605,0.03315810187260371,-0.012059642058023385,0.03686584875828423,-0.021378974320623485,-0.05600365057416583,0.03429555114781434,0.08076078676238385,-0.027508911363655568,-0.0025579601278942934,-0.04009030748628856,-0.09071519416653344,0.015005668966093557,0.03150153315738183,0.0005395816495427082,-0.041754281827316865,0.06054322694677646,0.05604219731770633,-0.07103657069235444,0.05040385306965565,0.04554661481002703,-0.045022379935433926,-0.03539087185334093,-0.05084734623824567,-0.023212257672889244,-0.07972931146345368,-0.035844880439452866,-0.00234781927611085,-0.049693540158685365,-0.006931791600594507,0.03136880244084669,-0.04413425109950593,0.03458886889157788,0.044882937279093586,0.03139545030289184,-0.000017430356580414668,0.04197544169271262,0.05088422521623893,-0.023519262248103353,0.009509593937375303,-0.08113966209129125,-0.06539478984443292,-0.01368142949288902,0.04780052729052626,-0.027423469208929463,-0.01455308912387553,-0.04425287342062934,0.029953910878631668,0.017630141378543407,-0.0655027651176991,0.004828941796311631,0.005600602819808844,-0.024148834252894685,-0.04742755723543361,-0.04640366045971905,0.0534423745815471,0.012617402780025442,-0.0555097457668183,0.027873400591754974,-0.041839551696875574,-0.01124324306396315,0.023169259585461392,0.017138000946482466,0.07708467202372449,0.003240386434570745,-0.021697189744193674,0.045689665637671614,-0.00807787930147153,0.0657620795935449,-0.074115004567714,-0.06915018385099699,0.015104082317407163,0.09676500328764756,-0.09998150949455117,0.020982052390950405,-0.028530231923748994,-0.03288720215825107,0.026957440161440013,0.014190530504853176,0.06794824777903902,-0.09118531980131091,0.011435403834593684,0.04698570406920497,0.1619288662713675,-0.030732930990074243,0.010986885641207329,-0.07097495573919683,0.0759481172382542,-0.06428806635387521,0.007673850638761496,-0.046654033121533794,-0.07191914229837158,0.05278055070580324,0.03198525714257924,-0.022250409144204755,-0.024393500094757818,-0.048193937023757474,0.06991097809384958,0.090839307399697,-0.1321220878020756,-0.057116489613113254,0.11828485906843654,0.048229888912002875,-0.07191772283306584,-0.03616978208117318,-0.11293779036491251,0.01923439021041745,0.0007413681665616545,-0.009179920144659022,0.023750931548104207,0.062322022080852614,0.026263215498091942,-0.004414399568586156,0.0020809646460141886,0.061169352112953546,0.013381625802049324,-0.04179843230898476,-0.04298343260743592,0.05834626422665106,0.07421243112273611,-0.03948428588814508,0.039151822833058465,0.021057225222653735,0.03971354576781643,-0.06125462914451655,-0.06099782861966117,-0.11520278027039631,-0.07104079989991093,0.014744854966760205,-0.0278087418276786,0.012412597656180952,0.04323622171208041,0.007625210813462441,-0.04999578688429187,-0.009892278480989477,0.046244483952275504,-0.05115743041901811,-0.053006628449084894,-0.027622712675158707,0.03205883363248564,-0.04706849003037484,-0.007824312080186264,-0.04188661929311522,-0.028347745228339886,0.0012440831587716573,-0.024183859507388456,-0.02960465875940205,0.008684995788118115,-0.08790879621700073,0.08437132328558294,-0.04156686016214737,0.010523943597983754,-0.029113810812336167,-0.014448441285331598,0.014890156718998087,0.03659933886990357,-0.04862573564777757,-0.04809141489614701,-0.04402429222362304,0.006653496165611967,-0.025818439923884124,-0.030018739260464142,-0.003206960265548661,0.03682487194365829,0.0024764105714221627,-0.019981534227492135,0.1681294534608617,-0.007824827038237328,-0.019328530331712036,0.01570075842278353,0.042356033390668686,0.07125256654897609,0.0022536746726027693,0.05205435025121795,0.020107106935597568,-0.07412864460825563,-0.0907433872037622,0.05297830405832978,-0.00373670448428773,-0.07248984816496208,0.010908064753172231,-0.022915088017201133,-0.09155712696373625,0.05812630026158587,0.04373217851657811,-0.02575795239681189,-0.011521791858518997,-0.10668556133349479,-0.020878921058239092,0.07729188771956913,-0.022190844368427255,0.003045799104059266,0.03397681289061525,0.002605935502961898,-0.035283936188405814,0.0745812641312703,-0.03245458011852201,0.04845639909355435,-0.05931150418903086,-0.06439506024485259,-0.02054550222531401,-0.0676492580190929,0.00567431827108402,0.033002052257128295,-0.0399011024309665,-0.011808106260242104,0.08842593908715485,0.016391912678104036,0.013073249637302753,-0.07008961695048688,-0.07027802560211899,-0.00465001697206441,-0.029842210446892326,0.024890097906769285,-0.07506109593612643,-0.08172029961801368,-0.040233066312251,0.03729056982941764,-0.07252477159986494,-0.03986535617972383,0.056715876839385206,-0.06562442018865292,-0.09471556724588014,0.03476019965030628,-0.06640578967606288,-0.06233712992801028,0.0005300863219916262,0.029632410868494195,0.05021844130672803,-0.06335474400048875,-0.09886771970705935,0.021252409991780394,-0.033516062632651285,0.006153389453288225,0.01646854223789489,0.02168733916250155,-0.07772876791178518,0.019208595064819575,0.029723678765312435,-0.06616875659279996,-0.040763994765523864,0.05591344194256974,0.01826912555620868,-0.011541549002432356,0.007973488747380906,-0.020172329302683274,-0.06293668919286727,-0.09330265903827327,0.01188132576128933,-0.005299620790665083,-0.014677055091566226,0.051677055689205366,-0.007851780966206158,0.079182976876051,-0.01659252440192089,-0.10384667255422993],[-0.018674137525498652,-0.0700037724707534,-0.0720785196461697,0.14900032299153324,0.06314025651373534,-0.003518734458824255,-0.039305774543998605,-0.026200756451319286,0.1262427814786923,0.04222675670477869,-0.027965361730737957,0.0420135928389079,-0.01280027465053099,-0.015719379014763137,-0.01817711841682607,-0.021715481708098932,0.026165014086258563,0.04110777460848097,-0.03176391150348539,-0.018602088408464865,0.0016348379446815401,-0.022378917499912887,-0.031581773728771106,0.07312259735362937,0.05123398696833066,0.03373275052504478,0.022076826377990168,-0.005369528989944329,0.05987409912805734,-0.018811171927229704,0.028641024838320477,0.0888046668987724,0.005041995926246566,0.054004096021178935,0.02026086363429954,0.02265743309526132,0.021448403349605932,0.03519577529653162,0.03068367278709776,-0.023588385950731948,-0.029700436039460477,0.07934653050649434,-0.018952072687058605,-0.10033522999848028,0.07039928184495232,-0.14469379246402858,-0.0702192379814707,-0.06766407634752943,-0.014407851200919607,-0.031001068949893608,0.028835079106788234,-0.10136229647924692,-0.005528810444334815,0.0060863021951205005,-0.16045196788315222,0.04697850431610209,-0.05290818814435899,0.12705543765404356,0.06065157465091114,-0.07613631338204062,-0.008701810747792927,-0.031665767126424584,0.1276912729353873,-0.044266089739529925,-0.08241980854177823,0.056698150793604796,0.025271819470731018,0.026973096161379884,0.05997919726345052,0.028436601340576653,0.008339367451136222,0.10532210131844971,0.06331958955973926,-0.02356895570318978,0.0006865749715258266,0.05133895621166144,0.011309951518391915,-0.01739051744972293,0.014297395090068317,-0.07115067368766946,0.08587435685563966,-0.06188473799505871,-0.05329132585356749,0.0023564988720777913,-0.012266866305355692,-0.05516353662813203,0.07754114252693928,0.04471570955568729,-0.01080330166887625,-0.021188348824486013,-0.0009053137213133603,-0.06759651533859826,0.06925795855784327,-0.05060182197385989,-0.09368532606912448,-0.009618248899004532,0.0536877285522159,-0.04529447922895413,-0.06643894254935337,-0.024805401118883432,-0.037160985209576364,-0.002541188362389585,0.00666531669750362,0.03732492511429765,0.033386016967733516,-0.028458902867499615,-0.007893711099204347,0.0539205015141111,0.004572348953361648,0.013499374508155096,-0.07145404696432484,0.0746116815742226,-0.06468735021694141,0.08950300417230678,0.03379945847602007,-0.03586120486789076,-0.012313001186538625,-0.010825471363227653,0.0007301750333419157,-0.11487983378807275,0.013948144313721145,0.008554600066686076,-0.0067011944245184965,-0.07901155540074055,-0.03038599012823584,-0.034727435747005035,0.08888554048384954,0.09392053190639874,-0.01741100775279002,-0.01914842860126397,-0.04356005151526982,0.03743869024455078,0.03989464807778094,0.0756075523158556,-0.036924048008952916,-0.12174004898551635,0.05154913619956242,0.03884601206606092,-0.024471447296432698,0.011425855190917359,-0.06655120378062514,-0.0125138936307132,-0.07746337291588709,-0.003177475906529605,0.042239239511556594,0.025344297942329407,0.013803392822616877,-0.01939981130677586,-0.0822985356660339,-0.08415314907630862,-0.1123299807722137,-0.16447471226036933,-0.03003263697696108,-0.08005240526327144,-0.025600442469075335,0.02768272946100531,-0.024810350248849124,0.05043028946428181,0.06948059379004758,-0.018294146731365153,0.07430416142213872,0.004785088234088078,-0.04205744337516818,0.03403438165086688,-0.11481137012648229,0.07733326035952766,-0.024443801887936687,-0.05270400718909653,0.06777049151625288,-0.023394128455500936,-0.03180637680257374,-0.045038877671950035,-0.022259339041757534,-0.03544122148755978,0.037537521669925536,0.026950628832151168,-0.061868086663121005,-0.08155315808617669,-0.06404657355032436,-0.03277175599397485,-0.01355464767126357,-0.007949048989727292,-0.048219408181448896,0.02947408779312856,0.0014474187535984768,0.0132021617818561,0.0525846136548471,-0.0002258791137401817,0.0641434773364434,-0.041967791826070994,-0.008543934818056563,0.08215777585241547,-0.08873874758495945,0.038348878923345625,0.01891917401307628,-0.016954182673702585,-0.11231768785179322,-0.04324348371116818,0.021570843030091744,0.017455792147305537,0.04548665095040281,0.02715139812829701,0.017382365653434775,-0.08725438547738587,-0.047659571219339524,-0.005905439302307044,-0.04935980002237187,-0.02729730674654071,-0.060922990165988136,0.02037687259040205,0.006959287721706205,-0.04397584434367056,0.023824972644861976,0.0019373635269087743,-0.010293059595142822,-0.049961916539088796,0.0033197473778451554,-0.0177372439641966,-0.07198955230885411,0.08664861261436757,0.03957526897620627,0.07699342445008052,-0.01926488844326677,-0.006708124475175281,0.030357473545238305,-0.0034613626028526506,0.02312786883166599,-0.01500223223918402,0.05224234077035489,-0.06502482548302643,-0.02504915451330289,-0.035946134112803105,-0.01279415652486691,-0.12418480638438499,-0.0718800557874759,-0.08559272891650187,-0.050406850585794645,0.04798729204899484,0.0028379421499695706,-0.0018454973802344567,-0.029721935390497705,-0.027463758318166574,0.0005170896465732176,-0.05551319440213651,0.052197938113109944,-0.0366718654398144,-0.010681486404639975,-0.07273810900062468,-0.08168546475820482,0.0018179877946299739,0.014749877356429426,0.1297053290510412,-0.0541985413106403,0.010199400680205958,-0.01810134897972891,0.10236873089624829,-0.03514293126679366,0.00004736705029342286,0.038649014443326246,-0.08993304531498925,0.04502526910700723,-0.05191348012967125,-0.11879799323076597,-0.0555017838652209,-0.07480629093114109,-0.00040695406680884704,0.05487857597871328,-0.03363731117834776,0.061891003973841306,0.016798550326083787,-0.023797668036979778,0.051248100534804,-0.09858322346392824,0.06048868598584368,-0.040339338700595286,-0.00016578482112863686,0.05665485516707932,-0.023309299098876513,-0.06517237763918346,0.11640515582508026,-0.03187887226097055,-0.007608642438100654,-0.01356515491626771,-0.018044005642794004,-0.014294941788532911,-0.03582808496744121,-0.06964610506411996,-0.02232774006109267,-0.013127119799134725,-0.09227322568594505,-0.08113440368346946,0.049372879757226956,0.001253611220076145,0.02527552393734388,0.08048658153100798,0.1047433481047563,0.032937895613218485,0.006237116123790351,-0.010843955617194966,-0.03207064089682846,-0.048786342206736694,-0.028843781771746325,-0.11801635877172352,0.09971141706829593,-0.02168344487267005,0.043426836399524896,0.006861977763290305,-0.015590093693640984,-0.01545701440792246,-0.03332946962255401,-0.11064849197400996,0.0019352190330088786,0.020810829953112515,-0.012916274953649757,0.01823921075786721,0.04760960200572663,-0.008714945487185126,-0.14053932433130933,-0.08340320344234452,-0.07596836617735937,0.03270931320280008,0.07134204501793447,0.10933748026223784,0.13426254006266608,0.011844483239381122,0.03145081046824263,0.09682901830296967,0.05222122474750152,0.041453897189730686,0.06028365980918208,-0.04333305124302412,0.04054034492874438,0.09382384478766083,0.012774455381795287,0.05930541022040641,-0.04537935976544457,0.005938453763084809,0.013178195163713331,-0.033305806437723996,-0.027110022721952464,0.017088192718590706,0.0500967200465659,0.009476135532600039,0.01569897460496504,0.0168238692464179,0.024476241654173666,-0.0589144564259116,-0.05854389120752161,-0.04746460588018043,0.0699081214553303,0.08336376930131945,0.1068831059554522,-0.0462072198358135,0.06275961176715426,0.07617310338266503,0.024393695280482974,0.022810259001694665,0.012089779367465926,0.037087172081994524,0.03210554566670903,-0.039682820472112704,-0.0862686560606726,-0.04825880870772688,-0.005123059498310269,0.008612756308580436,0.07359611877916476,-0.05261858371777543,-0.0005042423938373942,-0.03282644315459437,-0.0004143124392650578,0.02620794505507562,0.029599175162269047,0.05365849130713321,-0.1572517228395377,0.048915919673761334,0.0284563962737129,0.007123927567065992,0.03914008910900512,0.09881474368949639,0.015574387386413426,0.05458618192434475,0.07510566061608114,-0.042466212698524415,0.028783726482961985,0.006519406362456143,-0.08722310460074538,-0.030562571529166218,-0.11463572626649275,0.013401323131344718,0.04099138007195081,0.013831933523725486,0.03215277144829277,-0.06309142786656849,-0.05836299895263561,-0.0011350831654744979,-0.05605676902691416,-0.010013194495981228,0.08768758494062598,-0.003979096694748279,-0.04180440953824687,-0.10026498746056531,-0.05177902961496366,-0.21315077387802045,0.07224277419156301,0.06413486353302983,0.025219093795766288,0.019646358957017343,0.037123194313971264,-0.13395501056525275,-0.05205377615923537,-0.0635552950981281,0.024387982409195787,-0.06467658435988781,-0.0509439789728101,-0.026878711876578913,-0.03314960493312307,-0.08883971216934147,-0.09031591395989706,0.03215493155207432,0.06467517076622581,-0.02634188566091123,0.025319302313620468,0.02948078319274103,-0.0036581813804954294,0.029115043510755584,-0.022764881033294028,0.039483389697617534,-0.0333019043791084,-0.06314795553098101,-0.011663602770148685,-0.015305140785745948,-0.0027164635738283244,0.016548468159209233,0.03236926556656037,0.09746036643709148,-0.03821901303958089,0.058287053467720486,0.03997620181703748,0.02108137850052287,0.048718158772255576,-0.00419696347721894,-0.04083621291119257,-0.01895347040811521,-0.03998252636862972,-0.025996630451840693,0.035060039821693006,-0.005808327930345796,0.03432897416898968,0.006668010511889315,0.07331819384278608,0.05770651810761761,0.041526663259203726,0.009979804454800336,-0.00757291997564802,-0.03650730554759547,0.030380587177901194,-0.016287889222286047,-0.07055915344828509,-0.09916428891394591,-0.028077012779459003,-0.01807439289742818,0.045787962471359855,0.0568009307345337,-0.05708614220578516,-0.07791309483318781,-0.043586373868302435,0.03900468966159802,-0.03976416020518075,-0.03868682369587821,0.018831574148293777,-0.06602643325156794,0.03693363736491656,0.0243019420885258,-0.019867157326072384,0.04071497418481156,-0.022773325996610704,0.01312933123361673,0.06929795198830221,0.03434021184233529,-0.02016723385117867,-0.012948608299118789,0.014394588975461494,0.048976192955150544,-0.03484786877211692,-0.0004618663654141316,-0.055186091354986845,-0.1395701282299432,0.001306784344654312,-0.0430735347005423,0.06963730267869976,-0.04056744082233851,0.016224395384093544,-0.12433421691317842,0.00045532823588406056,0.06238728867571231,0.08833954326752355,-0.038950523814441314,-0.13582833838207248,-0.04438304495560209,0.019080232025502984,-0.04120653873941677,-0.025492426574374644,0.0028875295393178515,0.053230505667633814,0.02173451991470337,0.06329522592804664,0.06044353892893787,-0.049997126340107924,0.015577441855010638,0.038794411707860466,0.008363317861558223,0.01052283703324146,-0.055176161800125405,-0.04142425374488868,0.033871073137002,-0.15003316380634188,0.0229391990230333,0.09726528285510265,0.13162577219175778,0.02915900851304175,0.020616466222299006,0.005532928454785545,-0.02778595039848633,0.001270061264403825,-0.061791196411851705,-0.0729483064185172,-0.015617930301512097,-0.01916785607742311,0.026508158477101643,-0.014204312927665691,-0.05718775247324356,-0.002825713192790436,-0.0456034937979521,-0.017295193448593583,0.03215083124062493,-0.008436030921638724,0.0039763438441250375,0.08958825832329952,-0.057494384420615025,-0.016654635701163715,-0.01116779428006348,0.1537536067756427,0.0047193965773561965,0.032197844147886824,0.03900481377023269,-0.0015410140262621134,0.043493480937570245,0.010423696167354717,0.010749023868203809,0.032438975998613874,0.10177938771456624,-0.02206741526804297,-0.07343263840004603,-0.09032772300392423,-0.06127266604710813,-0.02396875945355145,0.011332623078002698,-0.040680858282670165,-0.012735707906516713,-0.0551617748986628,-0.02176873569306871,-0.11913521125872467,0.09555531611255938,-0.020562304518730656,-0.022909928996573115,0.06508547057557042,0.006940032656348284,-0.04489934814854408,-0.05797495522790819,-0.08244901891136926,0.05780414392267496,-0.021951823011851685,0.09234206613373604,0.04413533103928719,0.13276519708096846,0.0037357931956001843,-0.003027517603102374,0.04590910359043834,-0.05676407588489076,-0.04478018014690986,-0.13268380651966385,-0.06666138365969047,-0.025855615702567582,0.17715895297736806,-0.024476727528836173,-0.14481480638146554,0.06492869377526139,-0.12532161632516683,-0.028299971741043643,0.018600906867518568,-0.01155394694619363,0.1116552739431344,-0.022122281022857734,0.0776984265331623,0.11878941363091576,0.11708922432209236,0.041027946537883796,0.11757390821941259,0.037513621536269005,0.03977252553226032,0.015654487517713093,0.053494500508437834,0.014001885334649642,0.06875886725929721,-0.010990084898922578,-0.04850227189440764,-0.048758205075818004,-0.08897871957520964,-0.15002841282503832,-0.051340221846686004,-0.026075216168762457,-0.03190011117592018,0.008646481342283152,-0.09799065322751681,-0.051951298851045956,0.01807955713509332,-0.019610660673638387,-0.006340309278397985,0.04967596543315805,-0.006779341845996277,0.06452761635245065,-0.029110054505120664,0.024559905515282174,-0.006780090768773228,-0.045677183162670915,0.0301880406964025,0.04016583396086444,-0.013733028212887634,0.009027420681684922,-0.05861185928315281,0.07999498214581674,0.042306414871662826,-0.11952326071281913,0.028535114116638154,-0.043983906804899456,-0.043554414254944836,-0.14063371596290203,0.0844362090200822,-0.046504492529102735,0.04008449720989758,0.03939560726875116,0.03214463291501017,-0.05064681139734082,-0.023412999862645924,0.019319463416392988,-0.0008716290153171269,0.03491243716619358,-0.07514071167495415,0.0583972800709363,0.01691247001514323,0.033542408900763175,-0.010706091936363816,-0.13361084725247172,0.04073382014226619,0.07414772949056853,0.019616027867616768,0.04665367186067769,0.06867252670381115,0.025411937518998718,-0.08718380360184731,-0.03385307243809129,-0.0078278514916935,-0.0921172587323544,-0.027090933000902203,-0.06842986965350906,-0.019611161618686937,-0.0014546852638968727,-0.022933866245218155,0.07220211011465065,0.041963305064466036,-0.01959999322211757,0.06315901728995138,-0.0527352898773964,0.009289036634602262,-0.04405136135547384,-0.0058379736079990545,0.07129536528751856,-0.03598423809081775,0.013399992985799416,0.04897687581353767,-0.05328300348480479,-0.05374946300044402,0.06979283526944126,0.0050964863435397625,-0.05264515293988381,0.00715584561472655,-0.008981044393273279,0.03226850602088511,-0.09449997046333025,-0.09312660746012698,-0.03459618075687936,-0.009106814641531699,-0.09544397062798625,0.05462310308471942,-0.04819556614860405,0.11543411390930126,-0.0329959735550687,-0.01075020019109001,-0.004399881397304126,0.04485367386286083,-0.02373136726896135,0.023689775109017402,0.08399381552739135,-0.09382639651650801,0.041737225066964305,-0.01377006277356943,0.010525986802712762,0.06026764798110196,0.007968491909274332,0.027817216370270882,0.023777212728463174,0.03193377520054991,0.015358772689875337,-0.001079578379301666,-0.05771121925404405,-0.13064207251559937,0.09151322096880772,0.022105645797484808,0.10826386036915882,-0.14502093985508943,-0.046870018220784196,0.033823460836725,-0.07039703358003789,-0.048330816155420335,0.0364773574071163,-0.00292111023800842,-0.02064831282854449,0.04323938233211572,-0.07556823294174865,0.01428963956446944,0.05443575790142027,-0.0177341752449875,-0.05348844090545817,0.006145365690616051,-0.056982284498681285,0.06099638998488006,-0.00917749558626609,-0.0885729718355087,0.05508266014271748,0.01704582189610441,0.04529252443825161,0.03684994985731309,0.00858626714279223,0.018011435710842797,0.0036279412658878096,0.047625586649346005,0.0037914834942336523,-0.02864941529525412,0.03092609066050942,0.0009363152964271462,-0.003370088188615993,-0.103505451522006,0.04138670161502542,0.021584150968542375,0.03300280820240377,0.06500830388019907,0.013531788738632462,-0.023549737936704715,0.08219813103989268,0.05239005358301192,0.03097511360261157,-0.07618830832529191,-0.02179577545094653,-0.011351371121407945,0.008418079180201425,0.03486626247575584,0.05560476385247679,0.0650153115703391,-0.010683508306821856,-0.040809271879126335,-0.016159750141905245,0.037445967155278856,-0.032374080914494,0.004595062051684422,0.04241915604944224,0.06117583526832738,-0.01962430666212892,0.015185333721705425,0.05353859862109567,-0.0280126523425329,0.026648790306741475,-0.024323487339912804,0.07163482890046492,-0.10469523582185795],[0.007413641478969231,0.019777529107114857,0.026784583948593396,-0.030223604116449677,-0.08832554330837694,0.02628757150607914,-0.01998365643727518,-0.05325642113449808,-0.05280945592531379,0.05485894737664862,0.03953103404413844,-0.06562560425682325,-0.09224371596497603,-0.04269622930609446,-0.07984298750406124,-0.01305502222353296,0.013543430315195719,-0.007297573624327504,0.008362439732405117,0.00581347594484731,0.027675200559369752,0.041764378028293116,-0.022444512873347203,0.03774720454338444,0.05780694856569584,-0.014686426761404012,-0.08598543199053592,-0.06799923898787195,0.03248651686714628,0.017081110971585746,0.0822344903012736,-0.06674373031311039,0.03547350838032111,-0.010106723570810246,-0.013323765527977876,0.05332316080878918,0.013005014046160831,-0.013207715377863114,0.03568595239317495,0.045884692772220625,-0.06178750315834945,-0.03623554871655119,0.06901825167475778,0.000315233766924105,0.00678923102742148,0.0925536875953362,-0.034661133237107115,0.06805819011609804,-0.05650407707809573,0.04147585424377522,-0.054798769390243786,0.016474745329724184,-0.026172115831669427,0.02829328074469704,-0.0034762816821160562,-0.007158182588357428,-0.06535434544498185,-0.021937704077779525,0.04692356666495613,0.018447138824228708,-0.03693880568324997,0.02854326127387003,0.02141803253385553,0.06148633338334048,-0.05903508328037329,0.0037121417907448845,-0.078426288232745,-0.05214805990031692,-0.05343579699118933,-0.10082231728479851,-0.0017317466226900217,-0.07749213322195574,-0.05715850534499594,-0.07077539657078896,0.05341274166204407,-0.019304255432952378,-0.05028449439371768,0.06369328094879957,-0.0021265603179954204,0.0005405310131181587,-0.006366518085485579,-0.06426564158616811,-0.05239081258538849,-0.05153288217211273,-0.017286196889246142,-0.0394815730885217,-0.002153661842927702,-0.054085914368875394,-0.09129636757480931,-0.0513211018536345,0.038032728687078514,0.07025275267649272,0.08919027678755756,-0.03151553608102592,-0.015091878254677447,-0.0026373582788813215,0.07044457656522529,-0.08538118236178406,-0.002425482764437541,0.0694648031243231,-0.034105452507938325,0.008917892361350875,-0.03654542051052024,-0.03939993026463685,-0.09479694641348475,-0.1712475965222765,-0.008827376449684765,-0.040020313323121316,0.006590758172182016,-0.08656173145156959,0.01784035691747632,-0.03010327333881652,0.0466521250125744,-0.039117497814526156,0.0027862316014515697,-0.008323782655882354,-0.025121254947393652,-0.006556979907856299,-0.1144340171785125,0.07990289285991956,-0.046457220072546684,-0.04031458221644816,0.07969615110203873,0.027138525675206485,-0.026959212276343274,-0.003535641090932632,0.10971630259026717,-0.04553455231663414,0.08274407647710154,0.025325660395696604,0.005607991408156555,-0.005717765682101156,0.05923755548624939,-0.0003778187947155668,0.02502732593072405,-0.011317592664426038,0.019216299798748605,-0.013765002014151154,-0.05928045087001642,0.007763501756987795,0.08720714118167722,0.007761582373363776,0.09022423085845492,-0.06977163570592636,-0.0358315909012896,0.02895658985272269,0.046065813541547804,0.058081565507398805,0.037844508366525455,-0.011353817276811113,-0.041024079675535605,-0.04607196733237255,0.05041072858586822,-0.005299554505158675,0.03990738051536961,-0.03678560259790004,0.058018788259151875,0.06874419668938477,0.022492329495331295,0.004964279910997286,-0.0558323630765392,0.014448472687653443,0.018733500209435063,-0.04748526834726216,-0.04244368463333789,0.038890671615148115,-0.028109383879899783,-0.00564449570218395,0.052380700401110376,0.038802201277121175,-0.027485586075254663,-0.008912155607917594,-0.03220133201910966,0.05245982537166439,0.012589256979130237,0.08644958408686969,-0.011029552598656548,0.019760996445388302,0.03989616507603706,-0.014423549969501938,-0.026440893379420394,-0.0015208134829801424,0.07463154958344269,0.08580643329947249,0.03346565636499999,0.06372096192098564,-0.03272321119970476,-0.038375725410302514,0.09660925925878519,-0.031466437494006017,0.11238788518920619,-0.060217186888058584,0.07540062235106586,-0.029721926769463638,-0.023707881695433683,0.0330137133855371,-0.051032923358695484,0.02523156438301637,-0.0037719922564496606,0.06083792282891318,-0.00689491182211638,0.05654032368930564,0.021194859369520636,0.008045822267195973,0.05545314609072682,0.06428664417015564,-0.07114819709568425,-0.08330750243444901,0.00845816053914257,0.021570782983962568,0.05525995681001326,0.11134446549663063,0.020459955163442484,0.06578287347836512,0.029568784490496648,0.13250718472944614,0.004880851150424667,0.036768515084250414,0.10983695963535343,0.07359431615178183,-0.07704257735646772,-0.03409695970986902,0.033666749157764686,-0.01853370827579517,0.04258659012570365,-0.06653602380922977,0.00678471766016509,-0.03288461900864476,0.0411418502676417,-0.013756902304645172,0.04768035047180458,-0.03649590406132045,-0.005174417587648259,0.029541337888863636,0.032678439368047235,-0.027547931713320355,-0.03088106580560257,0.04876734714957498,-0.06762185081349593,0.03553241394498313,0.0944227266487693,0.11065198261507728,0.02835911144389055,0.03309389015799469,0.043342469055432764,0.05045877208007781,0.032393308399021666,0.09268705636305162,0.032076587716558004,0.005175839963544107,-0.01897223349209545,0.0865006579015393,-0.044730999052181225,-0.01586919054724358,0.02034754803546788,0.017777457619695354,-0.017998293050354577,-0.004530767003885421,0.042437944284164614,-0.013994738861025192,0.02017748041161271,0.055952850011523905,0.052761824612595154,0.009424167858575609,0.020785490110682474,0.0053299051636980085,0.08202677785079748,0.04924231657544667,0.10386553897310852,0.05941430558912937,-0.010296879150118357,0.10032649331971685,0.08897080212992138,0.03169052880261812,-0.0027377940283465417,0.08391550624814931,-0.061369015038542876,-0.07304569952349618,-0.0524499393193128,-0.04845585924522527,-0.03892950312096076,0.011140486439457356,-0.00013570489293791293,-0.02550679792997085,-0.04200439274323315,0.09021494480774868,-0.047796631262895566,0.004793296308459461,0.010657780882587054,-0.03308381376491614,-0.0396812297808307,-0.0039903863485525925,0.05633349339401283,0.0310815447219381,0.036324901886532555,0.08706523980233816,0.024079445404112297,0.0122401178258695,0.1583503357189361,0.04340737547152564,0.07335051813226025,0.0881246140923605,0.12066692818730244,0.009647160689429777,0.11655848577320232,0.09005232649374499,-0.01171130143173074,-0.0244716837908721,0.00531787087536218,0.07924002967195934,0.007744884610156725,-0.028950962783093413,0.12980449844987035,-0.023575155088038004,-0.008526729154716417,0.06529499735889414,0.05290655202409169,-0.04450462360760855,0.03897817818232266,0.03664305189306073,0.05856957974897574,0.07934826376246686,0.07267122564590463,-0.059586697386705516,-0.008676909183382972,0.003640233846356217,0.010479090470648114,0.060720178113760084,0.045327346933014136,0.06589324753547897,0.09635245739339199,0.046280164301357424,-0.014123731815098899,0.027139520790511157,-0.1346220307915942,-0.06943249746520753,-0.027206383578214324,-0.0902722878331299,0.009583853130794736,-0.08650174185612412,-0.06101603576526715,-0.030644335484160574,0.09086116234641618,0.04058980871586444,0.016804153705661632,0.022068862687458717,-0.03428958579350321,-0.08082614360531613,0.09684928742633601,-0.0025631906119839972,-0.002957421683619769,-0.029850424948252956,0.002669633217468055,-0.0011013020419448967,0.027653754384911796,0.02656712096305768,0.062460942815733306,-0.009435040139300476,-0.02195435362121895,0.10132121727368613,-0.018495922855078468,0.04381374464031346,-0.0028509792904789443,-0.06533954497385856,-0.02361062083476739,0.012963151978551751,0.03699898265593276,-0.011818800086753161,0.05537420515357607,0.1111128641490971,-0.030755288540489874,0.01334761119464767,-0.08895415146022478,-0.0019472204310946454,0.06062276671562365,0.07587762540046585,-0.0006508580832329436,0.03473669960052101,-0.13819510189428166,0.008441449402450936,-0.028752776013114344,0.011504272664884803,0.052909766871256224,0.041948886346481126,0.03750467647594333,0.06656850624542122,0.02620483545125922,-0.023419211423432063,-0.028917565842854494,0.02099653391690131,-0.05856463915017161,0.03939439938692763,-0.04363862073519329,-0.03852557889876621,0.043624685282777215,0.03789226731286285,-0.0031486511459778953,-0.0352061151312734,0.05986322578013276,-0.011435334646196978,0.032191331997414724,0.08812548830984605,0.0006465150240963186,0.05593420453817078,0.08611390934022398,-0.07526824363882713,-0.03688643708155337,-0.06143912866971118,0.07856696503288893,0.1107577274843958,0.010902616789980172,-0.01410612183227587,-0.048615931046643156,0.10498860499587946,0.06635152184161003,-0.02552116119226435,0.00498152377572779,-0.050107631321925875,-0.014752370530102763,0.03632589054618503,-0.14401877862473939,0.050439710088220485,-0.004412060341514721,0.03725410536977474,0.036847124925754635,0.05347797551918199,-0.014634103620246895,0.1567172540993304,0.09858299916488464,0.0587915279450445,0.03834140036613964,-0.006806378555656498,-0.004102824434317035,0.030613320268508434,-0.03125045046930262,0.03777846140807502,0.004295020179761161,-0.003956190802093879,0.08340019778117762,-0.031611378898500055,-0.032321825447881994,0.01852019424762113,0.08838659400048757,0.03711923959399367,0.06321159423716785,0.015160386720050894,0.05404056024340505,-0.008419218455561664,-0.07482052858025276,-0.005409800800198098,-0.010445082584366645,0.05992166976011411,0.03383802912649194,0.049854374125012244,-0.0064800150374877035,0.04076563529966162,0.03508448009543157,0.0574598781787623,0.005835882523257915,0.04705762939847033,0.031932835958847675,-0.023755036472542082,0.022209705088961064,0.006134423271063314,-0.003572013404362962,0.05030282545753421,0.0106486623151984,0.022260265081645848,-0.04025351548550691,-0.0008641031974060666,0.03826496006365326,-0.00011667477861889591,-0.09481470967863677,0.01682839725126247,-0.04737395370612098,0.07315939239086681,-0.03335397225898132,-0.0852580252451866,-0.10619410473291131,-0.04837647793472695,0.07467502561321956,-0.004433632536281765,-0.04602745317369618,0.015301434298170677,0.07295540547723234,0.04975103126275514,0.04840485820761623,-0.07843764641663552,0.01619199002291406,-0.08328686040516171,-0.00634049979123504,-0.01979739219269491,0.06781482549835531,0.06573351533276638,-0.02904796093440926,-0.013967303393361049,0.05711459619318123,0.0675494126922909,-0.025565601558965537,-0.01546486054487874,0.017175896931811437,0.029225621621193982,0.019123136484292782,0.006929814359125145,-0.014799766482579833,-0.04964325627736596,0.017163316481642085,0.04036902768049241,-0.024401236000230808,0.01142214520740662,0.0642421609359007,0.027771435637142017,0.019239993179039204,-0.013063240543857815,-0.00983489409034275,0.08564262512736093,-0.027945738429892623,-0.05576190733658205,0.05460544994240046,-0.009957438086969023,0.07694450481774157,0.0715168591946706,0.06339888701376516,0.0032626992084103497,0.06156429198278502,-0.029779913251283187,-0.017961292873065388,0.0002558317624222133,-0.008320797917495697,0.0339582720305587,-0.0026240517307989683,-0.011901876155742952,0.055148453048030094,0.0032639845683490867,0.0975184072145141,-0.015300316118954469,0.03765051255442016,0.035848187333216416,-0.11348934960803946,-0.1322035749721484,-0.030593179517961276,-0.007776131640072564,-0.09173946823299843,0.05583248058957456,-0.031537272086249096,-0.09560448390053737,-0.041584590286180945,-0.0037288910617973617,-0.006939506491284769,0.02339776108146,-0.03863783580141365,-0.023203471634126314,-0.029150788644037178,0.03679669731227059,-0.021330757291760302,-0.03354758397585284,-0.055143764018380094,-0.030704300991951906,-0.06417213952632968,-0.023877007281057808,-0.024406003140304538,-0.008371779010800344,0.04384152289250568,0.03813455369094553,-0.032207001728913505,0.02349602223245949,0.05830890396190764,-0.022965677358867627,-0.06244056359306626,0.017947081038322463,0.028063287703655005,0.08081673868108852,0.00033557591195699604,-0.031200491564972583,0.028774867898712503,-0.011370404525870022,0.02934910133188168,-0.04058118988362174,0.0023172778780957376,-0.04409339031632815,-0.013689782075405728,-0.05095649670694512,-0.04975249230465717,-0.0030308316618665094,-0.02027373215611413,0.021141066577516424,-0.059318947751974944,-0.008202383728916289,0.04698373281395685,-0.03245657096497692,-0.008087018143602458,-0.027985282790844723,0.06814157008198245,0.04626236516212132,0.043646687999432644,0.005242894644194395,-0.05102689172968261,-0.10048742495239887,-0.07779933397207536,-0.08804494713241662,-0.0003844426774803362,-0.051491831968489096,-0.029364047147765436,-0.06612406211591987,-0.05315119304497888,0.0363111842621223,0.03217001892243859,0.055178279915992876,-0.08771921707631192,0.03399943920115221,0.016378906551123576,-0.05917310523223156,-0.03632749769956869,0.0993826192938391,-0.00828066759432195,0.02102334374317534,0.009462601197336365,-0.005335229232180243,-0.03675538745513477,0.023113497660998454,-0.0727879877153123,-0.017841812486118193,0.017747418316923284,-0.028261298680115197,0.0653997789366623,-0.05338740198909076,0.008324914805307157,0.005037736825483381,-0.10611805981420948,0.11777626477038886,-0.03227980414434405,0.051872309869522244,0.043373229090850306,0.02107848131186885,-0.056516907422643085,-0.019929408303307364,-0.005627748904053473,0.0027345848272542703,0.028516656456206876,-0.019779764433019733,0.07862805425415649,0.0585522354956154,0.013528507438809793,0.022435230183026556,-0.000877993604525138,0.1191334229765576,-0.06052187798263904,0.019326310947236088,-0.0005878223371680634,0.02352803590264402,-0.004652193690801131,0.026158117708902626,0.004982747124416308,0.00237379224322507,0.11152580496318565,0.05115085603324898,0.035239677602912335,0.0726613033301149,-0.04287626319498221,0.10900035299196942,0.0009891933927040956,0.026786579131030136,-0.09285918949038696,0.000040995329999390576,0.000475986034536735,-0.02229135275108904,0.023798886661119022,0.03592345859281377,0.009110769778254963,-0.021905123038632755,-0.07648479789147343,0.02382020134008477,0.06434390654500045,0.07607505550600824,0.04788888951213841,-0.009902959979076602,-0.009028719025578762,-0.05994327577721444,0.06753372583092736,-0.005010663473479804,0.015130921338637329,0.04665770783894788,0.13782089365950428,-0.053877911130445245,0.07245235331028119,0.032965137585247786,0.03722553150064278,0.06104358341375658,0.010107106687449591,0.005315296367018925,-0.03435706482111154,0.014333324166970312,0.05367136287701201,-0.00884203627788887,-0.11784225155804108,0.0016617993187283296,0.027152111111683662,-0.08272003399393334,0.02913360644466626,0.018617550256678838,0.073742727299687,0.056528551930015575,-0.0834884049662203,-0.03236795177253742,0.043310421315849064,-0.01991788813076434,-0.011752681635970963,0.08168440506119928,-0.036662092737856006,-0.03360411109328059,0.05490169814980374,0.08396676626648825,0.04644587519757551,-0.05634028264717348,0.014360379779324538,-0.0568455189593623,0.05490161572852575,0.01818788190073948,0.04803516968378204,0.013869683156857049,-0.008181851815863015,0.0861058409838428,-0.023753895096493984,-0.02151508314771578,-0.02326928851149192,-0.05545881165046951,0.07145000211042175,0.060990853467565456,-0.03663976799120165,-0.015483263446772238,-0.02190174867885794,0.03587683576663825,-0.020330342302375907,-0.04613890032866067,-0.03467099109824444,-0.009150654485573681,0.04599460477115901,0.0662599633485176,0.05357113807789188,-0.030161425300704172,0.02619754335677755,0.03633778963947758,-0.11070164883561467,0.003427325822206129,-0.047104191630308295,0.019752395201229917,0.004163967117448593,0.004141476118752174,-0.012231307424626558,0.05923945687549023,0.02606665999206451,-0.012878787452074932,0.043001928454690114,-0.005505713781500886,0.05106097184803484,0.04499088878330389,0.03833545921386448,-0.0215840035191387,-0.07028428287997038,-0.0034653382402004924,0.12931271851348258,0.027043041006972565,-0.010222633024155775,0.03053508338073962,-0.02060727699331972,0.10708316395540891,0.024897647370488975,0.004308522597982809,-0.006258098207349392,-0.03026026645019937,0.003697362497173584,0.01272873578710524,-0.06403942548724689,-0.023344222316724544,-0.08317247407990418,-0.061928841275966665,-0.012276702270728322,0.038989320052243114,-0.045023759969876884,0.09586673985264141,-0.01714831749381543,0.03641073715411134,-0.017544240149073454,-0.004630595672028407],[0.0006882728169552267,-0.04855591544526785,0.006019888575267284,-0.016595543002308748,-0.0035188616200436265,0.03535211672599036,0.001082866845714342,0.09224880523434904,-0.012075802444321876,0.0825031011620147,-0.0636753443288702,-0.04317067029836332,0.016428690202203187,0.025232453304698643,-0.07760190897382827,0.15256002994772172,0.010619711101273523,0.0409714888620372,-0.00035929092336282794,-0.008947873050348238,0.006713622687055824,0.10851873115858576,-0.010442427950318295,-0.04103414571446948,0.021012055998602824,0.09627832033948544,-0.03620874096152032,-0.042220054223975755,0.022883284676943297,-0.07284674157197543,-0.09502716897672554,-0.05992443382285363,0.00876510891873485,0.10476378029105268,-0.00878988015598755,-0.04879789912644311,0.02549889624685788,-0.0009430459323390487,0.008593522597208181,0.0012168020777060654,-0.02970453888197814,0.0024398544234319167,-0.0618134653381594,-0.029372828993255336,-0.01654917918808371,0.028116235979563024,0.035227475124232514,-0.06938277948267665,0.004313476904421634,0.036505275478406256,0.05219610250429283,-0.07170020772881563,0.027367274770559093,-0.005861448012229593,0.027793030997996796,0.07418709850958358,-0.047244455013147356,0.015013663805411671,-0.022897944024937382,-0.04734060551268043,-0.10788411681171169,-0.02136736648875488,0.0815733069458591,0.02234359159160174,-0.005064484633398621,0.0074469499446453554,0.020371084821186245,0.09405312115476167,0.002649003366216089,0.02475649793853175,0.059173288984634885,0.052700449492512576,-0.009808136264948185,-0.03906641978046739,-0.009968233688975852,0.05558065929606889,-0.00868736568940557,-0.027758869920605056,0.0031934554947272327,-0.044290885532221304,-0.10857835458265044,0.0572537252021793,0.027765563833377787,-0.013645806376243385,-0.06553200261230295,-0.0092999091360975,-0.05902581186201812,-0.008376659743497146,0.021421261852342027,0.03605177702089315,0.02928822513823244,-0.07766055871441374,0.11482369784636484,0.010021202268946287,0.03850289912867136,0.08251360226559777,0.01705288688244467,-0.017391744171316444,0.022454839600803776,0.01777127584931017,-0.0005564549209842122,0.09909531432197632,0.024368700361739885,0.020961169088805662,0.014478791388150109,-0.053308713555859887,-0.04674271124528099,-0.0441235219181744,-0.004083644815708186,-0.04985273015877496,0.09062136344114768,-0.01151969992325217,-0.05848889201894904,-0.037383779962395,-0.00673060051343141,-0.02138935143648524,0.017580337259190396,0.009953454436237238,0.007964539876519305,0.05394442545365,0.07176561218151448,0.017238523043932634,0.04160886654226635,0.03042872168613346,-0.03835544465864895,-0.01959880328613216,-0.02810670687463553,-0.08064240875930162,0.00006946562247367104,0.005550645009261768,-0.015260372210627643,-0.028080300574456568,0.005574541325654213,-0.05336625270169528,-0.02248112041915885,-0.06231133392518378,-0.01788690326758295,-0.008844585438019718,0.0034417007064503733,0.04090854653091611,0.07022434620757628,-0.043263300452205895,-0.00534586969252356,0.003616489926621064,-0.0038904930733257106,-0.058222717600882004,-0.03873280080057074,0.04526223369203094,-0.01624944516608633,-0.05645857012970443,-0.14671298728603857,0.0017255075721521987,-0.0647430280364389,-0.09668632283598391,0.030647084071952203,-0.025289995434592705,0.07153043299211481,-0.03786553189449383,-0.060376353240345446,0.020282536872838205,-0.012881659212088028,0.007767377855826695,-0.009177052304267784,0.031796071226621606,-0.04280348095910051,-0.05604418599554292,-0.06510752097813627,-0.0035525075150254245,0.021615586933599554,0.018679303662055127,-0.02919872896619742,0.030390084585043095,-0.0563822395927527,0.03330971900300424,0.061139071182300164,0.022885699114408662,-0.05400683046908855,0.012739186879432807,-0.12685301891584216,-0.09095984744637904,-0.03030919472959587,-0.030323864817622236,-0.07365307656729758,-0.0010813519834817745,-0.06399579549890218,0.006932113270242551,-0.023640334930630422,-0.15927602007427072,-0.12687097722731533,-0.0757826545496327,-0.039813359890058284,-0.004363713150552729,-0.04887879092306454,0.10887671189305102,-0.029982672942474548,-0.0439658874678993,0.013607786618608946,-0.05451556427937966,-0.005329146032343925,-0.04298436078146618,-0.0884601128468535,0.00861314751696285,-0.07385152855564509,-0.06287326401312575,-0.03620591479060499,-0.032664152386377605,0.023823967484844482,-0.040495558852406306,-0.14803988260390655,-0.03770534779627246,-0.05959133775376485,-0.10563810878181712,-0.12214690864135617,-0.06604473764238104,-0.08532530109808582,-0.0664200689482054,-0.15825340856649658,-0.10323820959007388,-0.06571185571472649,-0.10122248779532717,0.008793347346646274,-0.06405370902495032,-0.04280262704560421,-0.14754611069280776,0.0722922693082569,0.038806851679632846,-0.02803639308408667,-0.06947557982902694,0.013712315685501691,0.0027727052553140345,-0.0871173983473564,0.047267316779853116,-0.022852933152073006,-0.1400197150825742,0.03255399794165805,-0.06604499648287374,-0.1275469627310891,-0.05570013989369381,0.009237864525390589,-0.014860250201334446,-0.12700569220925687,0.024690567905091138,-0.04254886741596608,-0.05465607769179281,-0.03358477818707607,-0.07892568726370039,-0.03187217831502837,-0.015039919509835476,0.048515485851651975,0.02509823952937185,-0.015444382847061821,0.03376063908967917,-0.020160428341872105,0.0914753856961047,-0.018083042037481477,0.053025921009367386,-0.025650878723456894,-0.04630068335276387,-0.07352212163273354,-0.05891750939717101,-0.05983551354478641,-0.08106202184626467,0.010854982416366541,0.027472624159611922,-0.022203185354689275,-0.011747747579194117,0.005095292450579388,0.09450856615013216,-0.02022617340078752,-0.0033848427756673957,-0.025736675800557187,-0.06422701331790084,0.01892346735487871,0.03940091983363666,0.020867141333398516,-0.03578241546856027,-0.007651227245716716,0.10184640748026647,-0.0030874136782337923,-0.02709149739225604,-0.02514846872332819,0.05044540065618238,-0.016904459574837317,-0.040226084511200605,0.010562848514498202,-0.08437074846162833,0.0015282628299963838,-0.023456161802933632,-0.0074781345582871795,0.0057757399801050885,-0.014054331338786799,-0.023908950108355007,0.07691974156323987,0.01983911982593577,-0.05782985342462339,0.15624339267060647,0.058540721794730584,0.04674638424840219,0.01618072902509123,0.05439466891510119,0.1111913374617051,0.058386177685768155,-0.015543735308725026,0.06905009334287333,0.028160074820448272,0.016596950314079283,0.0376784414291523,-0.04198912389464373,0.06292383942359688,-0.06317715820697199,-0.02345375768179479,-0.08361999270950173,-0.07884223699337654,0.041903147346858245,-0.007496020385190005,0.03607795718516431,0.01078391288779367,-0.04003335902344058,-0.03723051804543746,-0.02549606875012669,0.004034957913901919,0.10610083709109562,0.06437639919949963,0.022829102078609706,0.10261335462958687,0.04206601232829757,0.04987188478929125,-0.025557959135876045,0.07069019880777778,-0.0371839917176968,-0.06334212519975133,0.10480290833705025,-0.04965817295556011,0.023181095873758252,-0.0797656018813297,-0.02575181202790635,-0.07450895989678331,-0.009758666641188758,-0.04008427966369767,0.05534557937733736,0.02312559991920491,-0.0683073085269731,0.014987344803166177,0.009613678008497622,0.025361880497449935,0.034409178045887966,0.00015275906336650118,0.09786585633301487,0.05503296267541025,0.10889602477417386,0.07849043502748619,-0.04532087088076453,0.011697225970173596,-0.032989490888712135,-0.00583877090527478,0.03982470814636536,-0.025935512041453165,-0.046010877521365005,0.016664843916470596,0.04014651208480643,0.05309569551383943,0.05645976191166371,-0.10668440427745218,-0.023924557378198263,-0.038848008771383294,-0.06233501570089619,0.0206407767490394,0.04699677779997153,-0.04476321506731917,-0.06649414679652782,-0.010379934352586214,-0.006612174889945269,-0.027650630575592288,-0.006237140062701821,0.09337208340842543,0.06782318148470773,0.1431952813464669,0.06766361978518338,0.014784695888250281,0.010837519494659598,0.013135786296102951,0.05042534071250998,0.02989714994679204,0.034528551245379596,-0.05236836546806879,-0.029076680245951288,-0.09406710669526655,-0.01509113826331721,0.02155476751443885,0.01923135792820159,0.1368432575126648,0.001621580220128593,0.0007974819136670049,0.01787979683095603,-0.11807928343523706,-0.01535166928366905,-0.052724946010118935,-0.015265645596629332,0.011578944071509905,0.07529156795914767,-0.039227406736713925,0.08140379150874776,0.08716306498936695,0.05802643530327507,0.05342101244257436,-0.038331915882359985,-0.0338400791253149,-0.06371632807160092,0.04873023429907611,0.06395688602120986,0.027957186722823463,-0.047435426284865294,-0.056978599397975824,-0.11050883519622143,0.022255695663136413,0.026689069342536044,-0.027163565976238428,0.00467014198439539,0.015382718346868206,-0.02937656455955393,-0.0004486546295257273,-0.018038238469552048,-0.015321050374872323,-0.013145144472850607,-0.010601096679876184,0.058954380454136375,0.025092108300873068,0.031120489923879925,0.052891768302323894,0.004779428558767302,-0.006916380127199508,0.07174923232411573,0.022272476615456258,0.016076813500958805,0.05329192454024054,-0.02030495467153073,0.058206545524691185,0.05600937983686885,-0.016036616379478112,0.03655313134391068,0.05950216308989077,-0.03973271015204186,0.02774616605509356,-0.0016391713453284826,0.09403881006912383,-0.007497981204766242,0.07855556712687442,0.0830271010493928,0.02274634971134161,0.039616848912222856,0.05447092877600944,-0.005360398666705201,0.021792168526863293,0.004249098875381074,0.016911749339182776,0.07859472496102059,-0.005225932833748592,-0.023986437595154134,-0.005057140959423203,0.04424730329856054,0.04303400792514407,-0.02196018522123849,0.061990996060343855,0.07078216500317784,0.06866334174658013,0.1105892521921443,0.055217089662967934,-0.005492469989582658,0.02381932328190819,0.038119465486379234,-0.03827052665455726,0.043675545896893556,0.015761973563466168,0.09371324396977537,0.0792185660670791,-0.10688124204700114,0.13998001692496703,0.014323883158362126,-0.03866666725134621,-0.06512263068584309,0.10622047269324358,0.10882051211964512,0.08040897171267682,0.014372272339906433,0.08647603372165742,0.08801235407865557,0.06996078668835848,-0.06439708084843736,0.06674101571805263,-0.005031180622694634,0.007338833499960776,0.07312974536666672,0.16834405050342832,0.11090279612239508,0.0880435593442899,-0.004982320624724047,0.04061703052833771,-0.009952194128154564,0.061422480614456806,0.12963343266680263,-0.10159707389138113,-0.02429615988744074,-0.020998813592638402,-0.03347163772723154,0.07530749441758504,-0.05481208597068919,-0.0018807195493366592,0.03698560764557551,-0.018158558508703213,0.02795992276976556,0.14916814302505685,0.10171427771859005,0.08568699985898293,-0.004151170963311272,0.057035668042968855,0.03304530361742776,0.04082521318666508,0.07544293097135056,0.06018100617851963,0.15090280838434533,0.0743362232384626,0.12532537279786077,0.011951096265925325,0.022993960824292156,0.02123987916941105,-0.10198226679832355,0.07119180162233908,0.059501005033663366,0.03779605180539956,0.0510063813143926,-0.00854640159679385,0.026327090951650502,0.00577849002227582,-0.07299070862874926,-0.029199661991230075,0.07430864234030507,0.09108896109506051,0.09837580837639072,0.007758566532407401,-0.0031787404342342347,0.05087969122982821,0.05897023772400916,0.038038707919319764,0.0566820460477656,0.07328614651497949,0.07259674543103932,0.1671487642790037,0.07902002577667763,0.05887220487363592,0.0050467145576946855,0.0000073194716064249205,-0.038869932973696876,-0.03382130101798858,0.04699769296299211,-0.04252857342263303,0.15254086317270873,0.06148917154701531,0.11874036255027465,-0.039440896588085965,-0.07766702086632112,-0.024028907841295105,-0.040918798469263676,-0.013487477932617488,0.014541287918484129,0.02915402767105426,0.04871745141576544,0.012152558144384009,-0.03610086712870688,0.0014322348148712364,0.056924986062060014,0.03521918387214564,0.1404108487512588,0.07184606432349452,0.013292256275997142,0.03215530938929697,0.07661484340610195,-0.008887008425728659,-0.017980372039096193,-0.005005123277606683,-0.01613089370597094,-0.0341679992928385,0.007321293766083102,0.03102561441253454,-0.007102108196145853,-0.04546549181096984,0.013947303447042847,-0.021698042223760865,0.02004778711753979,-0.029699201530140128,-0.08183437427336115,-0.09196933064042036,-0.0289728173780557,0.054615368538193376,-0.06905515484565088,-0.011040321459224383,-0.01882203780642635,-0.0038365235677911514,-0.011718970740036224,-0.047199113647014714,0.03403867069271552,-0.07146802962294613,-0.028583215509087757,-0.10646040049084529,-0.09372163422367467,-0.05427890733126267,-0.0785968015699096,-0.020670002778828484,0.0650088219088925,0.0011601298018892228,-0.053548352707017154,0.10154738342960355,0.07967275036036689,0.046634497034369324,0.00029016590762693454,0.0255179486219827,-0.045635636957001804,-0.035771538286620295,-0.04560434117174324,-0.008065203503288841,-0.03528836323388641,-0.008614733188646846,-0.08482767629015038,0.009481685569791022,-0.059073677631343385,-0.028386050962210824,0.03510300523147934,-0.08869871041100241,-0.05385024513632585,0.0025802299292777132,-0.014798708845439875,-0.03917540963687133,-0.23135647215866548,-0.020263480944731033,-0.03333811725689404,-0.06334741379963182,-0.09291559971746892,-0.01991267369263293,-0.04666142899775594,0.01559342206869814,-0.01837787391728555,-0.012171558539309868,0.007504649912041048,-0.009799280509091948,-0.0008541415012232293,-0.02213075933455006,0.0756881432263756,-0.004463094618327448,-0.03407360193053923,-0.010369903367194643,0.05875825852169924,0.05613437175593964,-0.053231181651472656,-0.0493654925882147,-0.07846936601867427,-0.020954483677482896,-0.014770366613653087,-0.09396914249599458,-0.18629369906596666,-0.13439706675361845,-0.10741915132429129,-0.08986933802149462,-0.14782719696981703,-0.09459244667679055,-0.007274015271942478,0.0008079758797093512,-0.07624352802074989,0.021809389504992217,0.04993757222597288,0.009307480157919401,0.04349929325514511,-0.07250589727034015,-0.014538410143578373,-0.04503278311427166,-0.01602942036979228,0.0803741886668812,-0.010290560491253887,0.0059150633000915965,-0.17228813851404873,0.021346406945254522,0.00047519648312326323,-0.011394657852134102,-0.07896282528493535,-0.04175764929079867,-0.029643331351596365,-0.11686532713702345,-0.055165170508759236,0.022633701058569922,0.001898215361932676,-0.05006716277821776,-0.05830373192108814,-0.07489347448608526,0.03558957293510739,-0.05796713011352593,-0.004709369902024279,0.07410270800150422,0.005699667626887078,-0.04139816349979041,-0.010056227051901442,0.004017718156503112,0.0102940331770671,0.031494407447286606,-0.05004592966727198,-0.11900702089061031,0.05614647658447728,0.05715715145853062,0.012734712363466726,-0.10497095963790264,-0.041820789123374134,0.05108226383815714,-0.11328731753020665,-0.0159235857242108,-0.02460103576387817,-0.006385957273930224,-0.103329437331729,-0.03188767441877443,-0.06311215171480337,0.06580301097757688,-0.07326406136184493,-0.08750668136655962,-0.06215701220704313,-0.017042536634652643,0.03965506570017518,-0.05046386933236066,-0.028211265263203084,0.045925629465870296,0.007832246852584214,-0.09643385942791415,0.10212126921909147,-0.027176918070561978,-0.0878896627390183,0.005968346181652483,0.02207432868315556,-0.10654050947215855,-0.017421429013698767,0.04073202976314268,-0.059329127796472696,0.0005950081989157148,-0.06890847946204758,-0.03563732273468706,-0.04852227538957888,-0.05517640682078725,0.030475138116778325,-0.05689483158021643,-0.09972012771554656,-0.12548534146649526,-0.01934651058529164,-0.013135156203134673,-0.012311334023391057,-0.03261087691022049,-0.0024988103077702097,0.11659794327807564,-0.0026073442029627336,0.0036546861773018202,0.026522856742626572,-0.01192336264716864,0.062208648818388994,-0.04275266057908745,-0.04050725395165003,-0.040331252047394836,0.011306173547357792,-0.09385422610657701,-0.0038710915132116434,0.02239778416227152,0.012023829911208886,0.01892131463619605,-0.0009713111441725027,0.05332689383645202,0.16038162117712243,-0.07669813866990069,-0.000886044824489318,0.008171208908947564,0.05752051071323199,0.0240936582735207,-0.1298824179138824,-0.0013897838856199685,0.00886666885207817,-0.060566026508215014,0.07074886123860319,-0.11374018770394709,-0.03372247300412593,0.0017163715747028348,0.010814189851260488,0.04903549316246953,0.024451136340079817],[0.08681775516636196,-0.051365806043422384,0.02360479653355076,-0.054906040710902104,0.08207323760898019,0.06459107981515111,-0.054287151830517126,-0.009092468450707962,-0.02868458562242272,0.08245907744029891,0.10716635811669732,-0.0364371490385573,0.03791504463463507,-0.01747458221328184,-0.0127902667761555,-0.011058437876622095,-0.039846344598987206,-0.017626824276436873,0.06430075164140779,-0.005547236445326023,-0.0067653506992191685,0.051945068666813234,0.07638728920891938,-0.00865719467170338,0.0024375724606158495,-0.008719632614425474,-0.042584635191556065,0.035482796061240864,-0.04733883708882551,-0.0006327327354256533,-0.011011994237915206,-0.013562808467177143,-0.051245909472851875,0.07165530462152991,-0.03365265084971544,-0.0879358384628395,-0.06075080342060754,-0.08083074022535496,0.02640275314146919,0.055147832636435586,0.10765872740114468,-0.0014017100995939817,-0.034461059163977625,-0.061998347055325136,-0.0218623475150245,0.06302762297285529,-0.031398960485155517,0.005389716732157676,-0.021552004834199348,-0.008287630955983036,0.03457119080503227,-0.006301036018980356,-0.049451503317103705,0.016698837014524764,0.021174016429567556,0.009409032842467585,-0.019515103448683763,-0.026872536160748715,0.0133090130378686,-0.02617566942167465,-0.07928377544536643,-0.012750163059743028,-0.03586949593655955,-0.04068329160022761,-0.0010866606741099251,0.09274256877096124,-0.023511526334618563,-0.0006877115879228918,0.0006905889604404344,-0.06072803082283238,-0.00823120296171801,-0.14072649729760123,-0.004667218029359939,-0.07790810486451205,-0.06549994001382252,0.08830708000609985,0.09652717017196367,-0.021859583201982297,-0.007101661523559619,-0.040771785803330275,-0.03708831372722989,0.0645319477802513,-0.06677002872440589,0.021204970749284412,-0.013059166389539337,0.007593566035859548,0.016070307230452396,0.04445423034187003,-0.027966615708560332,0.04307195934554307,0.005623814367359194,-0.05513037614194625,-0.06402242967243114,-0.03356921142400303,-0.0650177172868085,0.020331057519714896,0.009103782851394808,-0.02012332735695536,0.11664727719487823,-0.04343471789765278,0.06474456242368191,0.08682241635781918,0.14288909790605198,-0.003576411734139052,0.028134631322723154,0.05445418010891999,0.060781402108782405,-0.04108922063756371,0.013885057806021717,-0.07751611854612672,0.014578687995520201,0.12180954846173707,0.009613325889487295,-0.005087913373868691,0.021013207171111783,-0.07624823846744753,-0.0021276633053895974,-0.009813720230056517,-0.04307950153949982,0.03841838102207845,0.006633476514333245,0.053838604553584996,0.07620655395491237,-0.09557720926994999,0.0140410017036511,-0.006619735052648185,0.005954447948827982,0.05669089655681813,0.06389496392505321,0.06316722778747985,0.06629076375819602,0.06293230852916025,0.03543480767848186,-0.0023381937747564887,0.03878845014600817,-0.014155377920111517,-0.03957799339719672,-0.0491711721771654,0.017390768330442407,-0.08041447951626693,0.0707066551718944,0.06704337213104707,-0.026258264610878285,-0.03977113784841903,-0.03717441381507703,-0.003608703101778776,-0.0030429788151735576,-0.10286392764011223,-0.0030967340795980806,-0.08301492238354091,-0.018782233213976828,-0.047862713907238626,-0.06499795309512853,-0.0885028298224946,0.07189080468189485,0.007174135481171468,0.11074170616075626,0.07102661937560359,0.10482939359723657,0.022706988796019727,-0.036424752167670826,0.0807063940632104,-0.010173877877878167,0.0017463614486416552,-0.09940249982477152,0.01731891297087737,0.09642717291549738,0.010164567417578456,-0.019128268963753796,0.04701456907459543,-0.03773599542202931,0.04200755976353214,0.04660644129456329,0.006072695155674338,-0.00960107904897036,0.05584140450843063,0.04093898427661796,-0.03003227697806048,0.07144380245824974,-0.06582367798576066,0.013164306581782557,-0.062340587620784677,-0.07849345998005614,-0.00658346284821397,-0.030951764917353006,0.17466285328026399,0.1924611512057912,0.07622729470601779,0.10500442347704834,0.030515942247283052,-0.10760513936802155,-0.06445735845930078,-0.022770342435921697,-0.013733525245314704,-0.012640728313492213,0.01920175862385559,0.033178723243846554,-0.004110519906037645,0.04641166340022262,0.03095181606748693,0.009959443117163347,0.034405485652186506,0.004357271710384208,-0.05438964498157428,0.0191570065698084,0.0440939063719897,-0.01907423825071528,-0.12259755506012497,0.0009986624245385337,-0.09804500328235366,-0.08816935133276091,-0.0076286614501694175,0.04248250427936271,0.01917039138761006,0.18142529233616334,0.1227122875382986,-0.006902085861650799,0.018802246215932673,-0.0744540517299622,0.010681913720847825,-0.039917641225148605,0.03841287597857658,0.04688638080028933,0.0015571495940090775,-0.0016169192954484056,-0.09870056680410409,-0.05385267572358565,0.05502560475153974,-0.016801151659617486,-0.012054843136784713,0.061575675801850534,-0.13051817952383965,-0.023668312778262274,-0.04689320663870229,0.08341934326069432,0.07663589970307552,0.05853897416658493,-0.08005382042942857,-0.11974818237831687,-0.008549088109598093,-0.06903044486704644,0.0692337209281733,0.20721742786381037,0.08794718615619651,0.03152152131977372,-0.0356772329401914,0.01945163338055618,0.027957697169847046,-0.07694687547173043,0.009762903628325251,0.0930815103453597,-0.04925236110848976,-0.04268842127163374,0.04566936297454206,-0.03401744977347844,-0.029722583322935585,-0.03144431688127563,-0.11075551952696465,0.054369556795213866,-0.06493976838245247,0.012161687533060727,0.022608176301949997,0.046319361537455105,-0.0064700454428754444,-0.02567374908365413,-0.035358573737558956,-0.06665795975897235,-0.059549506909670605,0.10851722027214829,0.15423292788482593,0.06737185051705893,0.1091388790485285,-0.07722231662624242,-0.030193321178908106,0.000872825208430568,-0.16230366206646354,-0.0783001466359011,0.09243212866134866,-0.036803766632832774,0.034390304480545524,-0.02166860628732493,0.059780615144295134,0.017561572586193,-0.055886860172675655,-0.041882788747539854,-0.024383630079863047,0.008824165649850719,0.0970162565272892,0.07060434658522749,-0.04039349747960782,-0.08205987886104,-0.059218049879321444,-0.09623813230835326,-0.15203660888486722,-0.06321507889237411,0.05507953593782484,0.06646897308932374,0.1206445002638092,0.11242252171304531,-0.012164911531187832,0.02212950292402328,-0.015115796217812557,-0.05462590982178251,-0.03350040002935616,0.05098492125026268,0.09458748112599363,-0.008842330278049218,-0.06739251118801426,-0.011227201188369226,0.1108869551877408,0.03136690818725782,-0.03186469959975881,0.004421164690295511,-0.10163640769056892,-0.06531947252439381,-0.0244679738082312,0.05163514900520387,-0.052691194691437016,0.02714028666084768,-0.0817737525709567,-0.10781541272630296,-0.022076175227616724,-0.016702926444869055,0.013930161906207198,0.155851610852019,0.05252431837871681,0.03964762733680757,-0.040895413658020505,0.011874220411293376,-0.14074441818626274,-0.007684983468180949,0.0027041668898317474,-0.05579764254648561,-0.013643424928698994,0.08668495818165159,0.12514898595500545,0.03450955859445308,-0.037596599515061606,0.0010661026637350784,-0.03227578034009057,0.004851410959432277,0.03348066892888973,0.0026314404996636313,0.03924848200698342,0.0004664933607028439,0.029590777149403284,0.031190827365666383,-0.02652173607917704,0.008426587849921638,-0.10062754905629402,-0.048412397960530186,0.0747050039234174,0.0822231065678159,0.015222389951994335,-0.06806644359778943,-0.0690163364688895,-0.017221164233751286,-0.08886222783899919,0.011444889125775919,-0.04844953572441451,-0.01684677551610195,0.01452245113249519,0.08542204323596328,-0.06421678782469052,0.06303253024180779,0.07569217070728797,-0.0084552993594804,0.003259420469277011,-0.10512131248118739,0.007923940469590152,0.024972892958570227,0.03195948452077789,-0.052005868672488714,-0.01942099799499862,-0.014618304108800013,-0.03403812244589615,0.038695715681397916,-0.0030387940958942926,-0.06386676636216346,0.07891328445916826,-0.024817128828829162,-0.034039439653359045,0.04566406750876608,-0.08996638316945374,0.05152780198012451,-0.026215599696324202,-0.07243571091975419,-0.05881022848538288,-0.04737333437086229,0.026449654060614905,-0.08872800252182522,0.04841746883428896,0.038501236751621766,0.04560095060489108,-0.10338783644699162,0.05620278557612974,0.02585380153954323,0.0033834136502188324,-0.025332299644789294,-0.017873101994501726,0.01417186504571027,-0.008024781664133614,-0.05965113592959292,0.008762011565276536,-0.04127641276948683,0.02819764596216091,-0.07919687856550027,0.06443411198422137,-0.00558575755990102,-0.04207473654931358,-0.050503674792432215,-0.03704956044151621,0.04522138593549743,0.0029032105045915064,0.00279518938630674,-0.018575378188107658,-0.05350773666109575,0.023752914752417465,0.055418857978806746,-0.020771442653725124,0.01790497090282744,-0.07927156803214436,0.029992009907807635,0.08239944005704941,0.03804271358013231,-0.027360377292525166,0.014114772075545356,-0.020253656913449932,0.03616531226883745,0.010554511896146031,-0.05356553672113946,0.0030446295280773935,0.01012107942804505,-0.05908507029558519,0.04777868310084625,0.03345352923015067,0.018898505127974287,-0.09439817430318172,0.06429299739176361,-0.009951159027578173,0.03941934353947039,-0.02080353386900965,0.035733970000027045,0.05743849116814922,0.08386674979980371,0.00842060537797286,0.008521308905304621,0.09691341593409866,-0.05270481255706152,-0.06719557394557019,-0.02157874064582377,-0.018442078589675472,0.032689315638203265,-0.07145210445298963,0.02606698587008757,-0.04906907311085776,0.03540153547328892,0.018226758547218145,-0.024882153785807357,-0.05949759868461451,-0.0044620541333448135,-0.037824930073619284,0.018727595797563997,0.025221021282533385,-0.08047119610752924,0.05679651615727131,0.0034461413136845876,0.0930035265581822,-0.09082452233864055,0.02184272047188837,0.030138892872787752,0.014020236285831893,0.0235042183650271,0.04823946968453642,0.03508717842062054,0.08432613397910417,-0.02517183993080291,-0.04803199063621001,0.021309940324088478,-0.042630604646815576,0.027770546992224986,0.030269636721161754,-0.029822751012773423,0.011910947428676419,-0.051051434962381924,-0.03185820605628242,0.005860900959725128,0.00671859861598741,-0.06948135877583024,0.018425408572248565,0.03444639093821276,0.05105764048191752,-0.019055802701539833,-0.04824643666273721,0.11464196140988947,-0.0446661282465407,0.052846759492839734,-0.022170250731177735,0.005416889995543995,0.02545413972232405,-0.029706819638881547,-0.00051266855888907,0.02085901648243028,0.040156031704279865,0.06999094246963543,-0.08111236226960225,0.03460969315207964,0.03755009541489515,-0.08091996933685873,0.06950746017610969,0.002734313056424545,0.014940118211324696,0.038172255129941705,-0.005483211912317452,-0.0073775365442612555,0.01652277933107406,0.09887634751203254,-0.08475119214393355,0.07362001965759273,0.13031256433352617,0.02359852475086198,0.005249402881808863,-0.004652947169293768,0.025806102360880774,-0.0840986420141306,-0.12201082817590318,-0.015004606577066183,-0.03305450616153119,0.046542791833485066,-0.016489695183017315,-0.04529085670775437,-0.0020972862523182425,0.07460872032633875,-0.004446786136686586,0.009886896735652118,0.08745117499641826,-0.0240617936521832,0.04262355693728681,-0.006984699002676398,-0.016832465515802246,-0.10441080200418697,0.034877400474071237,-0.01723336278110324,0.001731810786105498,0.04761046893289149,-0.05509328757245574,0.007466437302827082,0.05986073377248704,0.06220145651676177,0.058379876208791114,0.03126095113837966,0.11902098385256445,-0.05692566601950819,-0.013264898276255783,0.002872447163707503,0.006313610536883861,-0.020967379295342686,0.0694801766214704,0.00046276650137301866,-0.058590022167390926,-0.015804870088604164,-0.016761296308962663,0.11476565123708624,-0.019481169749464122,0.001308585365918904,0.055411184991384324,0.11245841576110048,0.033851927650073985,-0.06788601152250505,0.01530024981469554,-0.06010179074026231,-0.04228717271036067,0.0038427297946305914,0.015862416808291358,0.003880820399626395,0.008251086857967953,0.011285908066989897,-0.03252935276615948,0.02077676017664382,-0.043361155072202895,-0.12964910958224207,-0.007318459661264671,-0.05287404645234247,0.028662092790197963,0.06914373325695027,0.07106018500387169,0.031238025512524668,0.05409041134877469,0.028190608712454174,-0.025752445829578377,-0.036068682505866756,0.0016217188632240943,0.02669309780868004,-0.06640392576535414,0.07029096376689364,-0.013640258419348163,-0.040352577664046645,-0.02096062323820537,-0.01576831656422212,0.049345747828105184,-0.0367930629048432,-0.06516450828350227,-0.023742331147279895,-0.008568204686516282,0.012273387110479362,0.031750698714598055,-0.05334439445412931,-0.06698646438092924,0.09590401055158015,0.032495344930211785,-0.022623901171764865,-0.024784802391795945,0.0703178636208848,0.05576713187063594,-0.04531626106005977,0.008338431340703972,0.04429615483000979,-0.004638190464338625,0.05066333247886578,0.04579679639002176,-0.030642361982417297,0.020001074900201105,-0.030958552052382113,-0.055402765795210744,-0.07041619781711952,-0.0726578669203596,-0.049831050271205914,-0.04630895312855465,0.019596515620871825,0.0924034653147657,-0.016826003515473167,0.07856678076102139,-0.0643425241077801,-0.017930993162445456,-0.04875256387864087,0.006534232717215901,-0.018340926414646196,-0.024318643830289432,-0.04953332727348399,-0.027339269922923813,-0.022742370271754568,0.06078920798563623,0.017479421694814538,0.017057779597802594,0.07395775314767267,0.013596682231796081,-0.0067159213257967625,0.02116936433354419,0.02216861957028357,-0.008247786642376555,0.08399879607619364,0.07188829978419688,-0.003232798177989348,0.032740546323832366,-0.0961304693955411,0.060290906549386084,-0.11291394944324126,0.08194093309236541,-0.041836167929704356,-0.02780963480290822,0.023198153984047957,0.08108333754970669,0.06407206058719493,0.06331720055827593,0.058266972580202296,-0.005027847397895352,-0.04999446549817195,0.024739559440473482,0.022623457518792477,-0.04501876874371949,0.01573324263354732,-0.03798667186693326,0.07876568418986493,-0.023345755088295072,-0.02722427885751845,-0.003946011076743835,0.012773286756091734,-0.0005743319704028043,0.07515628617361882,0.10759974878890086,-0.05949367507845748,0.018864027458597044,0.0403249915458008,-0.044607963545246015,-0.03276593425656295,0.0057428421980558406,0.023226319001534025,0.020996002168215917,0.040157865293965214,0.03876367071137968,0.020221062225836674,0.01611480182678984,-0.06604083389844997,0.03653705647965633,0.03999710639141705,-0.0187086953071171,-0.03536045212147794,-0.01529902173137646,-0.04592179423011351,0.02730469527168147,-0.051990188234059896,0.010361404814580238,-0.00008819122777668523,0.040347600774210804,0.09318766938437392,-0.09423741319892727,0.012366694044216918,-0.07993239920891597,0.05982690875363715,0.023667283695266435,-0.00886575566386836,0.09064522281214847,-0.018554228049608337,0.05845307133805866,-0.03759258484410997,-0.14417383530724104,0.056023760011900355,-0.12075952156729912,0.04284426271264066,0.10402609440431193,0.007948464612630535,-0.000034352621597954945,0.07124856060356353,0.014142858876131419,0.0052198664581389245,0.07884444308654884,-0.05747298562246357,0.0705689975044489,0.050642278243328585,-0.0110676988138274,0.11192655759310702,-0.016267999560492758,-0.07513999652985508,0.03515388775933866,-0.021377910750724944,0.05349746700549782,0.07093597624386315,-0.06031528481569478,0.09806254202730352,-0.04304274865460431,-0.028903808800428334,0.003782087983903312,-0.05954405028138372,-0.07978944548849173,-0.018046757847565542,-0.007690028174808919,0.11189771073179927,-0.060691931836410876,-0.10431552407329481,-0.009935452890670179,0.0371541139502155,-0.058031635992813385,-0.12543073541036942,0.032854660876356155,0.04223962121825599,-0.02111936995391081,-0.06602824364186985,0.024296855651685923,0.058416430673796586,-0.08419300043061641,-0.03204001748310379,-0.002341337375840223,0.01686870533932912,-0.035187412174968985,0.07215467600491271,-0.040069469317379425,-0.03761115850652727,0.04884117661941792,-0.10595869251680308,0.0031164009632141973,-0.08906327300344448,0.0359032895873533,0.038290192321903976,0.016174394249821873,0.05193922726727832,-0.05411575052542814,0.021776059368240994,0.05026040063952677,0.09713753931698049,0.0005857849949083964,-0.048348843428814854,-0.06357054377295676,-0.0868902545869465,-0.1118485734081485],[0.01579660151950234,0.0502077803235846,-0.01295310134320696,-0.0472047665929071,-0.0799827366660171,-0.0020720740022837293,0.030970379753633252,-0.05479938441809271,0.04672956210233488,0.028596908918228147,-0.04502743958184008,0.025647209522798028,0.0021163680877005703,-0.07513706369992706,-0.0015611302386344724,-0.03272890811290054,0.00421948090826914,0.03559862249313272,-0.00019590749860577832,-0.036041251352513,0.07317753277204869,-0.003210767156192322,-0.03287286240075801,0.03458173609448236,-0.05227809195013932,-0.06919547863657316,0.025597470150956193,-0.058290582718509794,0.003581217216279883,0.0023654321045036347,-0.010537217818567278,0.05669683406153586,-0.016134980287151695,0.029301317918659635,0.0671460931578858,-0.03590141261902171,-0.02989670527272141,0.0943971279179607,-0.030560085005198717,-0.10767925469933366,-0.09376318392800691,0.07023997220572058,-0.08606482904841055,0.044365545359413075,0.0023338761174357303,0.01232442026279266,0.014881320746270578,0.05997395572990912,0.011798115995154335,0.07381849497697614,-0.01667965088127023,0.015100124711435755,-0.004924316289623911,-0.10970289391673135,-0.05645081491642083,0.019648169800091184,0.046653681085892205,0.0413321946162238,0.0036619471573851757,0.14218348049180182,0.032263833563387356,0.02896275444437846,-0.023653295261016873,-0.01971774771875374,-0.0036831490032270967,0.03842223025628371,0.003932616048798354,-0.044668108072437575,0.0026572662482996956,0.0362837332728152,0.02984088047971717,-0.03377773133441543,-0.019020445524095306,-0.016691231938456865,0.08192022752124134,-0.07553127970275406,-0.06289750754686725,-0.029176175482317976,-0.0029618871181196563,0.01527401998942896,0.009118725316397036,0.049744546375280446,-0.04888963677415523,0.03067097619420421,-0.03427082052623517,-0.0071401794573963855,-0.08875785981047735,-0.04066451287306292,0.027207451685695848,-0.08959040504459652,-0.021465370363708804,0.09960727835763718,0.036418455260156024,-0.06705727597963906,0.05346144127270399,-0.043825106379216945,-0.1234476061561994,-0.053396637374509066,-0.05915194660629404,0.020108414471960972,0.01777954460697677,0.01314215280556595,-0.05981182570639913,-0.024549777198509714,-0.04710390029573945,-0.036401357104626685,0.010569560688754658,0.009005185385537365,0.05620890541442357,0.09013051416944715,0.056578241130316266,0.06855468666631344,0.020707367113411836,0.019506479619458488,-0.006885624235038884,-0.07173863007074849,-0.057686139940193455,0.09512157849473585,0.0008821009849394601,0.00326794962760715,-0.05082188599425225,-0.03544850160386093,0.09758225979316049,0.06000644455741121,0.03173321842791703,0.020118215423844833,-0.012565146844196705,0.02557563606102213,0.04698539301073768,0.0317414024171137,0.009115263868106403,-0.012754782654325718,0.03938644040863063,-0.0053104750835380144,0.008184997675263221,-0.05444967593913631,-0.026126756191257986,0.07186789510691018,0.026899579557226647,0.05385545452848461,-0.01147616833357027,0.011803350263871032,-0.010624127976358073,0.01518484723845045,0.07570387826859765,-0.00551709481343822,0.009682126370949062,0.03933634488810233,0.064712692669565,0.008084400326543057,0.028052972484737874,-0.009185282371076796,0.08081217965987869,-0.05047821079607011,-0.020953122810053317,0.04100929296485753,0.02054904947170245,-0.04627845710479153,-0.11216405346924856,0.009376887126115325,-0.10410378710224716,-0.07228170039355,-0.026815924075172352,-0.05667446821459646,-0.025402882406931775,0.052402804298299334,-0.031148540257552565,0.002456704244179747,0.01620843449844158,-0.01242919929342646,0.005662466148987824,0.00690658888974771,0.03017308438055837,-0.09231877608911446,0.011990814175350573,0.0520605213990005,0.03196668996680629,0.022319517149282535,-0.04256462499338341,0.10462364529528323,0.03294101215083715,0.10357177736689809,0.025877192212503054,-0.03027389967356528,-0.014880658390530635,-0.061355786468405005,0.013202793821066715,-0.1269504128628893,0.028652447518377363,0.005626156335960927,-0.0402178132465091,0.011122878972653759,-0.10384821593682234,-0.014759016417677403,-0.014588587979466949,-0.04976782925274371,-0.04642749154834714,-0.038762320491465,-0.005582121348228034,0.008718371276135123,0.018283674464624977,0.050438718637982556,-0.00703529406274138,0.02642192175696047,-0.06105361106538068,0.031374522300415174,-0.01573637669821136,-0.12009378093736246,-0.002844634009643926,0.031314335127106935,0.007622689827986836,-0.09863170829455196,-0.0036595790765329584,0.0222744380853286,0.019977632310520913,-0.016065404986289365,0.04963297795143106,-0.07297621141429125,-0.06212385342338568,-0.06651444191176951,0.049682698336793805,-0.018096538283041374,0.0063773851901887816,0.007190705664920997,-0.07419237783803587,0.04516959529624253,0.0163814525353461,0.06163559873585,0.03459104818225534,-0.06958676380539716,-0.028930741273909488,0.006960085992427432,-0.00710895556673625,-0.1060176400560388,0.10158046598569244,0.00792430827640868,0.006466268365401146,0.08000677513445263,-0.053511579635734545,0.04865235771393109,0.0326342572882852,-0.019045490013440077,0.07479946444894904,-0.028139212947396484,0.015435847326495854,-0.034196148681000606,0.02496099217710656,0.034335987297982866,0.08641186742356459,0.012552114973979712,0.03608646839564425,-0.007959201494873306,0.007617021072834579,-0.09552577095794212,0.060375292707682354,0.11675849133385943,0.027981716726952797,0.043861461575670384,-0.0622982475377399,0.02288281426678401,-0.0010173387371969135,0.027568941105478653,0.0028041602090340895,-0.002116340135915157,-0.008151646538115283,-0.01139662812069586,0.08257279207712924,0.03991804871966399,0.06769339394041354,-0.03176157013469594,-0.014594391365640965,-0.043209224807320125,-0.050836277310776466,-0.01883551472174691,-0.07384223000725824,0.026479936520257763,-0.0300609468882234,-0.038028692905445464,-0.023691836361705895,0.001999905719901034,0.021031242802422103,0.03916258980236002,-0.004819867579038537,-0.012768947105087068,-0.04105790963795122,-0.0139750528542649,0.06380279917495513,0.03478436310733933,-0.0665360222912861,-0.0522835986960535,-0.00793695249353808,0.06525918914229292,-0.04644470351069812,0.0006244101318973559,0.06610482692128644,-0.004566024766973008,-0.02056610508175013,0.0616150940877996,-0.01413208243331583,-0.025668975879583417,-0.06083793999758469,0.007627990427702457,0.10153257466753846,-0.08340314326319,-0.06338113205537833,0.01621347438928869,0.09150367048496108,0.025317206815224293,0.06170609232882223,0.11081671265114548,0.025846546954960643,-0.02717286664554637,0.00625748141787948,-0.05104488527222148,0.031171746850334716,0.02320666882737189,0.020004320611588036,-0.04911768050371448,0.005233679264948759,0.008620339114261277,0.10572843870896184,0.0722561665823704,0.02817168031270602,0.0561736627368124,-0.07895087471863996,0.09876796934461902,-0.06826835075610117,0.03407317277953641,0.01097700753877377,0.02038749641983469,-0.021778850781639294,-0.05304317200456839,0.15569221116984494,-0.01838193625422698,0.04416360271684454,-0.014593971836715815,0.03682121896113064,0.05621448120447518,0.00019413276474678827,0.03426596076900609,0.028915033540132265,0.023579493309667632,-0.03440050575554296,0.02662598852696535,0.105134404602565,0.09674411844615179,0.022668266667848987,-0.03067367841005752,-0.0030605129004469063,0.0857529755145008,0.061792213287281496,-0.037919529155691696,-0.10693352693237036,-0.005228068559352934,-0.06100504857588405,-0.04141587936896484,-0.11822551639395032,0.02136316073317717,-0.009816431834291898,0.03534077868204306,-0.005756573272133785,0.05503598691394877,-0.02047329787346869,-0.07744465732775332,-0.02426062313787624,-0.04614668147268186,-0.036131066396693286,-0.030074627846865758,-0.012902898319256216,0.051998994027007306,0.0034887141440038613,0.050077968489769004,-0.10280256859559399,0.10278975809917769,-0.04308200586168557,-0.09472861027167784,-0.011974724317187192,-0.04613362405518026,0.004049346235954142,-0.012667462188127643,-0.0008786616251575681,0.035875074494589945,0.036349644737931563,-0.013773161054997738,0.047573337508884914,0.0586175978881393,0.053471437397985745,-0.006240334602210198,0.007221064889292119,-0.023080245028364352,0.07708545665097792,-0.013338057670917875,0.04708490204048869,0.0863686133488135,0.10579108021745744,-0.07923602501288136,0.0780032608741782,0.0842346907321932,-0.13321911022700514,-0.005953283013545088,-0.004271986628743664,-0.03765199070865178,-0.047296721970943624,-0.044189848189377615,0.02722178962295201,0.016322828443620718,0.09624121126297551,0.02707537344478414,-0.06178054107830742,-0.032796661500648215,-0.0024816725095327063,0.05322728843617359,-0.01402998330621584,-0.012888381737095975,-0.017673757317383458,-0.0791464124950086,-0.027466000363226436,0.10006183752156282,-0.0191120243073159,-0.03258169886241413,0.0320403402234307,-0.0867763648106614,0.043806452373529696,-0.019873919293786655,-0.0461073891491199,0.11726647512140842,0.040191453586003366,-0.09658837646970182,0.10553724116578322,0.00731296984829853,-0.005568364218817754,0.02589650750568254,-0.06067246195891582,-0.043486142104976165,0.033136162059512725,0.07721305057329486,0.046971199550386526,0.04118178912990655,0.04776673415881493,-0.06586864754709326,0.008670605975359822,0.09298638229131218,-0.040876725392805784,-0.042661180694179276,-0.018542295765952996,0.03751723863742403,-0.004206085007237001,0.07024616336210342,0.042419904068688015,0.02968665717420479,-0.04382081529099879,-0.02556900666464964,-0.04073599891978323,-0.006949168563703385,-0.04523711485615788,-0.04846765186676665,0.02167356937098488,-0.010207661477800863,0.070078610080839,0.01505841338793093,0.02715941997918116,0.024473641812814962,0.002637413615197109,-0.0806611152838909,0.07140117613428977,-0.01616934950823902,-0.006414660825049875,-0.06925114485749694,-0.05554217828743685,0.009538212693595316,0.05928340108469852,0.008616244571155948,-0.10478548177291389,0.0853275521938547,0.15578073100060766,-0.018770500681773442,-0.06022193566522927,0.020506661297201627,0.0275934370448044,-0.11171735013542371,-0.002329582862659328,-0.005965360400657652,0.0006177841310859072,-0.04124115903422428,-0.00710373461411021,-0.015643625057344367,-0.0842659406124806,0.020379159242598154,0.03253983198012276,-0.0792464826908075,0.08448413772485101,0.0021216970458372945,-0.0039636314180639945,0.0010595834297991618,0.007191659289625364,-0.04519180784069372,-0.03695734912294062,0.008852817001339377,0.04711533864131992,-0.006203357980994836,0.06173202291347215,-0.10417225125338414,0.010644416981134747,-0.01760194135974514,-0.05145809625360607,-0.039989257617090296,-0.05512087508902308,-0.029699532905210962,0.05667790199153982,-0.08556853273625467,0.0009266200456304739,-0.019383388658395093,-0.09348329664719232,-0.05630662777183729,-0.030421113697200963,-0.020216123221248664,-0.09481606681229456,-0.030779419350779845,-0.0071733644011758805,0.06611404476879233,0.06506649795443832,0.023682069458635227,0.08035850473329878,-0.003819707762058768,0.044277687014661,0.07059439689126339,-0.06014045505047047,-0.08747966804560267,0.02016727490221903,-0.01782037345326879,-0.005955004463305482,0.019169506991598775,0.020415725428481236,0.03909908223082529,-0.06115100351835523,-0.013927020299001142,0.04406106512207562,0.07886739204013878,0.013571120888837362,-0.06747547490820358,-0.015289889017028253,-0.027825688538727737,0.04041215045503563,-0.03228605285408707,-0.026292380729367546,0.004197646803693831,-0.03303369406604191,0.018703576758438683,0.05838250760912276,0.010433377524008249,0.025030030986783993,-0.008893968667898959,-0.08602785090551988,-0.045352263237320986,0.006614384645216872,0.018858271673069468,-0.034558376005728426,0.04101442316038945,0.04579998173902611,-0.03741775315026236,0.07227238334219502,-0.02974349546965249,-0.08183726650417755,-0.026045199578719622,-0.0798367200595419,-0.04223285652905883,-0.06361053387033226,0.016379338262625432,0.003989917603154416,-0.03148444153760174,-0.08157773567913161,-0.050485155677173744,-0.018937465215582778,0.10205527497993853,-0.14812746322967404,0.009903446678581762,0.021090665981513355,-0.035367974553914085,0.05281385792872704,0.011604218521882315,0.07175173659761173,0.03609822586075803,-0.10109446377100337,-0.04547374028034843,0.059254372458939185,-0.11184735284156934,-0.03866066420435575,-0.1289789662768553,-0.013720659484678018,0.025221822104901943,-0.05130312993786872,-0.04092236794752919,-0.00917043263254416,-0.03213050967967124,-0.03773422302196076,-0.02209286177871109,0.01292167088217968,0.010606191491396567,0.05270425115695527,-0.017485578852379745,-0.05791218798755883,-0.025804242829070834,0.05036584436577923,-0.0464297531906957,0.06987727567020172,-0.005487325066738594,0.04699270246590705,-0.06016066714193365,-0.05057033230435047,-0.05486403626115519,0.013400707680709101,-0.017339350862275723,0.0006681030621526325,0.04256390217787692,-0.060678842661276676,0.02427833863458448,-0.039344640868370744,-0.01901754718648493,-0.04074063494014718,-0.07482349201965284,0.050667032413434884,-0.003845177186731491,-0.06934757885057369,-0.013641747465496986,0.02110429200455154,0.06251029093475452,-0.03223780454414146,0.02687079015197596,0.08320843502619485,0.03118363791194733,0.06615254440510988,0.07583751714895129,0.0273377770092617,-0.011741998713955272,-0.04433286835133858,-0.016185928600535544,0.06023322437404849,-0.039152121103358986,0.028306129865176236,-0.044696539861859244,-0.062431013076480975,-0.031848046465446804,-0.04909408457467544,-0.009815883832832313,0.00556547109672884,0.04304578748290452,-0.053930038456573216,-0.04466349638313841,-0.10605870255458127,0.06889296380567178,-0.03310488816627989,-0.0417667352370425,-0.0660373704514266,-0.02489204494593792,0.0011817672929514812,-0.022807495397562477,-0.0038118494188145503,-0.04887213672695808,-0.07854108321278448,-0.019961476973495516,0.07036394912364762,-0.054859405022503895,-0.0007095972896781372,-0.06777818754890266,0.0024279458563755364,0.02651919441400743,-0.03452726317567592,0.020457060370744597,-0.06463551016968656,0.005489223319856017,0.04144021915388896,0.03376282829899005,0.023139670225181166,-0.09506912528399773,0.07824340432182662,-0.0004394900147219366,0.06669996154014228,-0.049238848587907814,0.0560461216692429,0.015347190408688692,0.05649787427114872,0.01103021787978533,0.04076024140886332,-0.045241934514434694,0.06051047081687105,0.04508840964314234,0.008759048916481903,0.008660495566312345,0.048878520576226166,0.04615226431618001,-0.15855247767085975,-0.022933821364296895,0.002441885534449472,0.06234678433626916,-0.0011373782064286507,0.010686609364363699,0.05269798200211187,0.06976834812463747,-0.0049341246404807845,-0.028230166903048675,-0.006632617197042114,-0.018150582152453392,0.016052078550693516,-0.08380920765662023,-0.07105473406844456,0.023130895834033886,-0.007948065837916489,0.08218468568437315,0.07429990772907334,0.05997721489418506,0.018341208771316935,0.03941662503117165,-0.0036916917205908513,0.07451991085352541,0.006178798894881797,-0.03941006055899665,-0.05756651697812889,0.0789669740588904,0.07786758067848945,-0.08898540617550779,0.009274641373594381,-0.1413513297902241,0.05369739640238892,0.06464366702375918,0.0005921751510670532,0.12296128811979358,-0.07815570201849534,0.03254723260317461,0.026808274088464215,-0.05677937659861613,-0.004524313358710686,-0.006707646690063027,-0.008711855116306982,0.02560679639170135,0.0812466009596549,0.054338492012274524,-0.1334097446322606,0.04448499817939533,-0.04108307801034702,0.09396719267337808,0.016052766821165507,-0.02646793809904082,0.04046550053177333,0.019963168782410612,0.09874249315016416,0.05855504490496228,-0.006127069243264332,-0.03909928285075064,-0.04382683069002114,0.07562623297715772,0.01515486067614906,0.008600585690831056,0.02659639246322416,0.013381516668671043,0.11275144353569819,-0.10440013236347871,-0.06397542059425528,0.01420153240328532,-0.0025064240790122036,0.012568256728320881,0.04205742161323459,-0.011365442091123829,-0.025768250560184294,0.006511218524391035,0.011336939046698077,-0.045278195141659684,0.03684214267701588,-0.03849293231391779,0.07402872388474101,-0.03532275407706668,-0.06512906955771296,-0.0077070591925071305,0.022489523201247943,0.022831872616802647,-0.00215924377449807,0.009684189921920081,-0.008903258596068128,0.034313946371563736,-0.11493217090350906,-0.045114044994944966,0.04276363461897753,-0.03358851954587043,0.06045958661482122,-0.05152934802843197],[0.0006392927031805033,0.05188207789707646,0.03276419098538017,0.02903013089840585,-0.07947268891051917,0.005624474411960263,0.031118223597842207,0.014676366969279944,-0.03329504999307816,-0.022861149834782657,0.04265843088931398,0.035564673080784086,-0.07884618556115591,-0.009745482316375115,0.010689072718370366,0.07377448041917739,0.010780707837530622,-0.017891993479171583,-0.0007604762429608401,0.013702379694405223,0.053461927766408866,-0.004894218525563746,-0.07281123790201256,0.030993779782460724,-0.03539027133567006,-0.03761455937483478,0.026590700088026598,-0.06399052293864067,0.032052856189699004,-0.07361252086993121,0.053772997535752716,-0.023113882820639937,-0.05009598291161728,0.006219338830853465,-0.012623724416882393,-0.014477946884365501,0.009457277617546353,0.020735681658308146,0.012538767698752958,-0.0037300366450081783,0.0934152361212546,-0.005405608778092907,0.0793700347785966,-0.07734976647026347,-0.13264224141463848,-0.05867985077581105,-0.04372560402957185,0.021109847996645108,-0.003779808552404295,0.020566616481260833,0.03564582733567477,-0.04866121457677706,-0.021435061730929218,0.021639292944378188,0.044497645442432086,-0.005832734691727629,-0.05193211911928978,0.003916604532073091,0.039805528024215886,-0.04245568413054487,-0.0075640156425445535,-0.017793071159461993,-0.053065216486874414,-0.04385917334365036,-0.005745803424294579,0.10672349325307029,-0.06630496760657681,0.002994622128411357,-0.001785368064089733,0.06023387377984612,0.06517531322539488,-0.018287677260329663,0.12609997261746717,-0.028872485367810553,0.03820932314319533,-0.006536373410141353,0.0505237957603441,-0.11934576808352547,-0.01673213537745607,-0.043482482933596855,-0.0809464728756699,-0.05803733049497576,-0.01321144723056391,-0.10943590310992458,-0.021490759861216145,0.06906411610912708,-0.0322114445048541,0.0634635992321859,0.01788434026718163,-0.024857759974367323,0.020901690839134384,-0.07365988916267996,0.04005495680268524,-0.06361779574705895,0.00012898127963313784,-0.03068566432209861,0.00981820821850198,-0.06027501304060931,0.02671794408783257,0.048260425479798835,-0.032576965599743685,-0.031942749860572425,0.05870397214274953,-0.022446077327374546,-0.04888573113465833,-0.005021536032093371,0.02295724800473147,-0.07483216294382915,0.007018400151895996,-0.017444284290032405,-0.09304526364748976,0.015074793304613891,0.041187340696181116,0.01843914699772612,-0.03242240078075858,-0.017736752409439786,0.07868124621107336,-0.024795862748916268,0.0012819074254462562,-0.08962228200235856,0.05059868983556753,0.00894746488084168,0.006984104751046527,0.049303870964873056,0.01116692162929624,0.012694635226784401,0.006139874217740481,-0.0013413611427299196,-0.024476312639161,0.033719374756224066,-0.014726431764982255,-0.001583202797574571,0.032536672886962645,0.036572088456015346,0.07955101584531195,0.031035606196273883,0.02458640495819022,0.0018270828859949745,0.07273974947323632,-0.0030643843164500487,-0.06577024830547497,-0.05395446767020889,-0.0027432068921424443,0.00877711170435879,0.03884944952310502,-0.03227588573931,0.04991299478729438,-0.032248407117582395,0.003424200817331384,0.06211631855187374,-0.025740109235034735,-0.01027556759822521,-0.007898954642276272,0.07108071350898912,-0.09261770899748092,-0.06885740315655381,0.011564809691845692,-0.10089433164927779,0.013006863750415583,-0.04560492697307269,0.04656813254236937,-0.07219251919185074,-0.061734779424276125,0.08621889972830589,-0.03342854891562051,-0.06983747145820399,-0.10371612785278898,0.07334303360018542,-0.025468969770543512,-0.04235272773430929,0.010097599076974979,0.001302798385755611,0.051719728221746704,0.018933114242402203,0.00019504349662457596,-0.024367822703950284,-0.011308234748074717,-0.011911156368064547,-0.05406217517124213,0.02087734968467371,-0.11971530777909621,-0.015597582068973926,0.03289216705352606,-0.07750479491060693,-0.0475637176303034,0.04770252826688164,-0.043307913739838805,-0.06105453915308875,-0.08047846208405243,0.013408040994780143,-0.013545417023757158,0.014672738484898584,0.015473523952115183,-0.04888692970425244,-0.009634349398396743,0.05937347227332782,0.03186515998630036,-0.02533736686386795,0.021481373969167872,-0.07059821006688792,-0.08214893807336733,0.011045859127558042,0.010429919614200447,-0.06849378967988541,0.008628486919200673,0.020837963404337037,0.009621357235661722,0.09285799837163347,0.029651168320927887,0.025214675936502538,-0.041964271098713424,0.035660902416073476,-0.02033876201203739,-0.059606907924088195,-0.0960950196050898,-0.03760000955023082,-0.03391561408849178,-0.06616482022054178,-0.034545059645976636,-0.02362663902335257,-0.03211990077034254,0.06475328111085289,0.06991987279295567,0.03952668523175532,0.06519438048305252,0.04974897470339198,0.026230050140215847,-0.010938186994576242,0.03759292459250167,-0.024364438065518582,0.0684376347350008,0.08304555726364232,-0.0452320980916276,0.044421438650523955,0.05860142302527717,0.05117028313789461,0.004085558581010279,-0.008451271558224885,-0.0007804400962008699,-0.004886163021424776,-0.022313249929551623,0.03923115255921283,-0.020800577665036287,0.001670699893643638,-0.01993026329829629,-0.04050575213167173,-0.04476981961226657,-0.02961433751738917,-0.030224889016810964,-0.017474446345443335,-0.004471992132683756,-0.047184795935292095,-0.026835688955221686,0.09728268724344366,-0.025733047401651353,0.04238204701137312,0.11010444634795442,0.017367030056233215,-0.021958084340591683,0.08825822518525323,0.13646208484369557,0.0674482457647069,-0.039061755528986074,-0.07270206665887795,0.0642297737206683,0.06068614374022149,-0.006189083999891263,0.027315531170735766,0.07441047831930378,0.042008857170422124,-0.04235152787574154,0.09121638638209155,0.029033915635451015,0.06223870479635609,0.01177616939574208,0.025270105915732925,0.0037384123724405163,-0.02056925057355067,0.047334270046419366,0.029941439819773114,0.05040231363257543,0.05357410617058992,-0.04106737102708141,0.011792872955800589,-0.0019343381697650688,0.08364026125981665,0.010016245008704036,0.08413667958367582,0.02933123372196885,0.07469696672221338,0.018231020316193943,-0.08904415505939785,0.010421860765300345,0.0932694534691933,-0.010848299964665704,0.05569428391284931,0.09393429840338353,-0.015792900358111383,0.015496682242750371,-0.08890928995332156,0.08519214255776802,0.10315409074839217,-0.024614884573577505,-0.027896058789924266,0.0074162265682128905,0.12947760761808325,-0.06056165711780306,-0.06553277659428032,-0.04977077856262875,0.013702070752087948,-0.08829127328523376,0.04458800023307239,-0.1025272867191736,-0.03300145879968846,0.004759985882135118,-0.049284911139049155,-0.03301937141952525,0.05745555500487329,0.004058232656453451,0.057913637484926714,-0.009305619504276984,0.12053357321352041,0.09630924383199455,0.1516056705939343,0.13530459107745818,0.007266354311290615,0.05881987558419071,-0.00510814050115402,-0.05249964424487043,-0.06111096629644236,-0.0005611279873036978,0.03311711646018785,-0.05215336695485501,0.030084767048360626,0.10612768429943763,-0.02719484622402783,-0.0075404855766988965,-0.019425271483548653,-0.049270880027944434,0.027841288909636552,-0.03823162897627516,-0.039294795279747226,0.08185957336944227,0.002897916803075107,0.09507202583289417,0.029139734889267042,0.016878586646596576,0.007784545727417798,0.03890467593807386,0.040625552224156196,0.0519839198914137,0.11995632933574753,0.13472899570565663,0.06503432777539421,0.09390824792478396,0.025929759317287044,-0.041006407819797044,-0.05465948733933322,-0.045846659253146765,0.023302498629525978,-0.05615133972838819,-0.08760471518884362,0.08707106688470514,0.046171918458403044,0.009009835611311506,0.07180608672020315,-0.029465918288279398,-0.03523652064978419,0.03261128309630299,0.04686635834698594,0.0056834450548590544,0.012797280692946963,0.10115647533009149,0.012092426842390744,0.09483905963780491,0.026813676821727448,0.019981229744557114,0.003112071032104966,0.03139473490920372,-0.006068898120046486,0.029976514230437876,0.102194797268566,-0.016537562827505885,-0.0020736802077080474,0.07814863141627673,0.01435985713091593,-0.0030403444395231253,-0.051618973749259535,0.01909289863434371,-0.06476334180599616,-0.028741345968940495,0.0032697893801659594,0.045388474851923995,-0.03692498638837907,0.025707811207637824,0.041159264507162396,-0.03810864432101923,-0.009061570566123297,0.007983541032256899,-0.047551681447677414,0.00319459917683549,-0.008308320340121432,-0.012877125355178433,0.06939331857314336,-0.04527538841653559,0.057984037577167025,0.01609107293181346,0.056939118235568235,0.001794731652330129,-0.039692114518869344,0.07552752763503515,0.0014342957427671017,0.00597962035007222,0.0730609115791213,-0.015267589695447233,-0.10400115008054496,-0.056581291549966224,-0.09761667974206463,0.031668204986466095,-0.046638521631417136,0.02230993982317757,0.06463366436490386,-0.0776432539643449,0.05615339792863775,-0.05524380352794631,-0.013009031508769947,0.03219098029613777,0.07531998078592048,-0.02583421423762152,-0.09075623537856489,-0.06382145611472878,-0.0673528103113432,0.012710584335246253,-0.09598294108491869,0.030604895786225897,0.03623047289749359,-0.004237487220340961,-0.04377802360172238,-0.011977250671157314,-0.05448294833391666,0.05586811387158964,0.10382578644421186,0.013690543216524772,-0.02788444126118151,-0.0075510371198694425,0.007499835084043253,-0.07090923008591146,-0.053026277383258345,0.0256102764190398,0.03051160551380292,-0.0628713025154822,0.03411087946823895,-0.02174585195293559,0.0038777690260933,-0.05174849891954758,-0.009406996953342954,-0.04146591422614471,-0.07033953679742141,-0.13394716668390494,-0.046640419260099715,-0.04692146388003292,-0.001546185138651011,0.03432092789217779,0.10279172137725569,-0.059782660498044725,-0.03751013619112013,0.029198620096065376,-0.022404173479386308,-0.026958082632562563,0.024348814543182638,-0.060057332253703716,0.036247145295017276,0.036078641500752295,-0.02892773346685709,0.025381314042493622,0.03113556833433928,-0.06614148003878939,-0.004434195070753214,0.08502775858807365,0.017162639213783786,0.023037177938542295,-0.03560712574404464,-0.04764187594932398,-0.018188328008826783,-0.08856857685060335,-0.08241266352994932,-0.014040606584159274,-0.02715868616876676,-0.04374521750681418,0.06111398963527064,0.05335476563236809,-0.010036703709821607,0.04065460761572109,0.047916706008241806,-0.06670995249543928,0.05682559734543885,-0.0005571123752683182,0.022547141605346314,0.030250320496861667,-0.008516587353140318,-0.03515047404449112,-0.043733706574809336,-0.05667899214295845,-0.042589937448171813,-0.043342332072983,-0.015049053495571165,0.025809994657002056,-0.006126709598781273,-0.03954525358013127,0.0875662641281926,0.017913160397706022,-0.01754938497279135,0.016665211065149652,-0.05111617019555651,-0.05502329262405501,-0.010908688878693238,-0.0027141496872833404,0.1054126247487914,0.00010416571010151969,0.08797679357216993,-0.03895463304990497,0.023523397192846077,0.07170173272183723,-0.021670770554732648,0.031121048375853038,0.05636095798981163,0.022921547290537105,-0.12283729080916568,0.035770844635023794,-0.1129885574660905,-0.021273619511275016,0.10238209591128529,0.07526056463433776,-0.11013026201293448,0.04902324541743983,-0.007264431571370146,0.028407962706447173,-0.04720595212790551,0.09044819957385485,-0.02889363283324115,0.05435084671091081,0.003648630796089817,-0.017364998400577498,-0.029093304181839693,-0.0046276067182468295,0.0202688052170224,0.03415582209794008,-0.01189069380736644,0.05581346033741381,0.09414295557263887,0.05307468653870934,-0.04910029961709871,-0.04934266547600776,-0.027673594459018236,-0.01644991391056176,-0.007946262282151468,0.06376323358509388,0.043087276768058326,-0.03415539266363326,0.004911597117074316,0.061731702688641546,0.030359947522517593,0.026577185791058344,0.061750205131370625,-0.08448645222775675,0.037769830469683484,0.009584101390464136,0.07382265900862287,0.03891062315298531,-0.011470258742247144,0.05480512289989259,0.01211727232173247,0.019666449639856805,-0.07080723417510434,0.01786153396956211,-0.030769564532709272,0.04694033165839878,0.03631506142260368,0.06919212525745416,0.08355477418886115,0.018609967685022155,0.058923524052159226,-0.08817306647693324,-0.042730989003854976,0.0026798761078756115,0.054699645601409,-0.11889379153997866,-0.04968103139761296,0.057824036523846795,-0.06410273808334914,0.008011208391328647,0.01975711596193159,0.04031555105603673,-0.012245377886382464,-0.030258152765292402,-0.01870984523115424,0.06006047469585813,-0.00809630682850423,-0.02498957349720161,-0.028580667121439817,0.005567326412841446,0.005258561737472761,-0.06821845622609062,0.0314264436533053,-0.024066836831365783,0.06335647614536102,-0.001289946597105152,0.030957933453004755,0.052709519288153414,-0.001947427344712497,-0.01186464723435592,-0.035117404292416214,0.08389837001680024,0.03595441131051782,0.04633733659894968,-0.027101217496601986,-0.0822216261451619,0.03564912991880736,-0.003915745600038668,0.006550439320818166,0.009657273676802773,-0.04592230317568936,-0.018370972353172896,-0.0136915064210114,-0.015607205710984826,-0.005866657416921656,-0.004402581239525023,0.00006346143333226949,-0.006540586437538857,0.06564516917955902,-0.01803911791448257,-0.005873302016608326,0.06427553002568075,-0.01584289704662927,0.004861540130111247,-0.018766931992703222,0.0902688418974649,-0.09360025826439418,-0.0884066680318083,0.01123185534402166,0.0726047156759081,-0.12061330990291896,0.004470059735429889,0.13660463501449283,0.05108015015803525,0.03155556958501941,-0.005162533743541133,-0.0636509972793382,0.11144251048432992,0.07668307897713726,0.07061261929520861,-0.09469373748700743,0.05748684441857569,0.032724155887140685,-0.0008164626317901211,-0.04525645811283229,-0.08024540754870749,-0.009940034603115655,-0.06697397781076202,0.03356361394278881,-0.06149244133378662,0.013562114867515187,0.11158308212481605,0.021860706993778945,0.007114271152064951,0.030398693561507272,-0.04560082823868403,-0.006818080989102513,-0.00033007993705726164,-0.016109004445795737,-0.022579632429431395,0.006239744151518164,0.042212099929285145,0.08284000879109993,0.07817003333770263,-0.04304282606188037,0.06963143223766431,0.03287251498010821,0.08490427692792352,0.0402643520417101,0.0031476250609382196,-0.022103013476407484,0.0002042245840873513,0.016964037193856755,-0.03644055691548374,0.015871925822867654,0.05985139120154171,0.017497441183654202,-0.09183431943198446,0.08227744130282191,0.0669310803553378,-0.0588013880114965,0.018987723964242018,-0.01110081505382469,-0.025358439588747873,-0.05659774460579199,0.09569789818720777,-0.06165505040112868,0.032566204071153765,-0.03711662370901456,-0.02031802060960371,0.015192710734624058,0.03014179711764359,-0.010131076635565115,0.04327286549182281,0.011002458226208966,0.03913925886681088,0.009337700824436525,-0.011984692158920956,0.051039144352795884,0.12047227030059987,-0.015929485081129045,0.0475912487387446,0.08883664641526218,-0.046964812096340396,0.027360828402199163,0.05816263452854132,-0.006380244189802176,0.029742337544999598,-0.04214357415418001,-0.06865571337492216,0.014498391521810644,-0.054946547437479,0.04258502286078996,0.0778495731666568,0.05685421579671407,0.018940145396460724,-0.03330270203965229,-0.07023848536540946,-0.07204256625941947,-0.07383764288119417,0.0163091548341205,-0.12759060651237827,-0.005077655465944189,-0.0700655992292322,0.02674790952570075,-0.06180674178323141,0.04489567559143133,0.009919160475668428,0.11830476501357827,-0.07328103498311724,0.006229420822874534,0.01828631908096209,0.046261324934135394,0.033915603506998966,0.07411308280291788,0.011358050251763093,0.0007202196568358364,0.058512694643111214,0.07185263737503292,0.04031242704359264,0.007146521467754917,-0.03364971164501882,0.014975489175720924,0.027313437247163702,-0.0687623342889239,0.0524842735033027,0.0038445930676663837,-0.013658183343757123,-0.018403292465843057,-0.0005911706464739086,-0.008185312953617331,0.003980443986417288,-0.07730642855341667,0.04609328459492868,-0.044733921731611025,0.07783484341530644,0.06357476904833292,0.16205983894106854,-0.020758491317421864,-0.018025278019282862,0.027592739730889534,-0.0945529745474072,0.07679045155277642,0.03488243528788234,-0.04317613011128873,-0.01501602913341132,0.021012924017066874,-0.057414130822994194,0.05896776269752192,0.0365195943571332,-0.027226244025680215,0.08371252232274548,0.11118988151682387],[-0.05103140896431478,-0.13355492456442622,-0.05115402189118459,0.052834493478451615,0.010253445090572157,0.03704618470282562,-0.02567204448141512,-0.00012087986536420277,-0.08309879011755875,-0.055022819677639785,-0.059126778496090965,-0.023921334011221318,-0.12055809650948875,-0.025473637959120804,-0.03402475181530749,0.1477868371788239,-0.0038275853390512954,-0.037996071673405137,0.05048785228336188,0.011393660181097776,0.016694493571663402,0.010743863063715354,0.020149005942782454,-0.07345072926728335,-0.036966141684526936,0.03846110377508465,-0.05045701004571877,0.07003387400116406,0.0002774886977417933,-0.13137817566181723,0.07758013180788308,0.04092226570068125,-0.06139937918373824,-0.013201724366342042,0.0419141885825729,0.025908126655169797,-0.03028107539097386,0.03799610347634972,0.05841340130837381,-0.031804369932752964,0.006914674864414634,-0.017144236332588707,-0.0728955224946097,-0.031206105029520047,-0.017191805331627327,0.040609818538087664,0.08462349101552342,0.04644391107451562,0.15064109694097932,-0.037589690545357164,0.04373242955891234,0.07305570438054469,0.046746363115448025,-0.024444749881257548,-0.02145861502765435,-0.0038112391238236632,0.0037459650289810675,0.08665896396721477,0.0074139345005796,-0.028520366407386043,0.06631905047027,-0.021117481366746904,0.025685212697382807,-0.02073358692543257,0.048388734756324575,0.05677749917916415,0.014667997821745724,0.003258926735040642,0.03598886462543492,-0.06321846964737136,-0.009761953871110509,0.01994025866417646,-0.013155758472923896,-0.00025950137749459513,-0.08543124708434963,0.08186194553037737,-0.03736666150496919,-0.012922423944950476,-0.05205370521251832,-0.02838743793401282,-0.016931275813664517,0.08099929330891774,-0.01752877072348122,-0.03263934436418558,0.02414809774846076,-0.012938380671990045,-0.05954504783338685,-0.019813067662630367,0.023684558036823473,-0.07123413588178537,-0.01938113353214565,-0.07647531312887286,-0.011286607308421187,-0.049810539838715334,-0.04511217663900231,-0.09270767279611536,-0.0877385796187019,0.03635848446857704,0.00558835447931725,-0.013021511244177147,-0.024076189592951592,-0.010165587531419044,0.02969504536092545,0.0020714174665226372,0.02343689969244988,0.0627540327480818,0.03935312748419361,0.010751248683864534,0.11114764817181991,-0.0714135595657038,0.0265084045716797,0.05447206478544458,0.05330403514717039,-0.02291265457782179,-0.010657744791017389,0.0742670756229846,0.08952629818676552,0.00990159931396482,0.010812684699374131,-0.00005135643925101765,0.008482866201029731,-0.0630785803951593,-0.018306776440633086,0.032719208975234934,-0.13157301688220593,0.017310407503063095,-0.06463479668440741,-0.0029854690910085663,-0.0011146638030959622,0.07024564753381207,-0.05693192175402669,0.019613009009096967,0.004191067456982812,0.019393513037043633,0.018028561725951683,0.07681287266319614,0.013670920514483842,0.032807506365665706,0.03578350888740372,-0.02675758328076129,0.040648431694067906,-0.06680182004646533,-0.015181700970251713,0.008201290447023514,0.03388395468699989,0.046238807362250035,0.03234132172136727,0.05867375121087629,-0.03534738347080221,-0.02553235584942697,-0.034713171352732844,-0.022015627474580187,-0.013105932410080614,-0.03325588090889666,-0.13931521753231094,-0.07736397096984829,-0.009669152934802227,0.006947020941507397,-0.018958493510424848,0.000776750371932107,-0.04859875389879528,-0.04103442920779302,-0.05258000279510148,0.11724610890639767,0.049131949219937514,-0.06773254796089752,-0.049460869751265325,0.0036869357312267646,0.011793178397733249,0.05243979192480446,-0.019461088257195263,-0.015654649861429167,-0.039193180608675306,-0.028188561843549776,-0.0026444228391811373,-0.11749036816056072,-0.01978654098057234,0.00306101575485936,0.009503922801701844,-0.043340837968047746,-0.06126796689905787,-0.01213385216200971,-0.08212488366646059,-0.009111427185190478,-0.14826003284982936,-0.04386264499977746,0.038893028563152375,-0.026205898393455978,-0.029643220416134597,-0.038496465483220235,-0.007626294685332018,-0.03868891015219959,0.016801151114193134,0.06808056957463718,0.00360354819733658,-0.051727089665016227,0.005854670543180525,0.06435827507977515,-0.029484876100392632,-0.0232146569546429,0.0011034557934304049,0.023944555331366052,0.01466282667869496,0.0411717444948697,-0.04511236540364166,-0.011014680630624739,-0.01009321344943431,-0.03374019148028114,-0.016319161862719683,-0.011605569696733679,0.02656247257522831,-0.004438037097508236,-0.060242726106090834,0.02060991183926604,-0.04604647223886178,0.012551955403056186,-0.05724323742167301,-0.011243291930518998,-0.034399419982466435,-0.09237171921037607,0.040894244500579775,0.01948271152102507,0.03050586408264316,0.02379147023030476,0.0229088423823357,-0.026285302054633957,-0.09160721166891748,-0.037110972467620976,0.02125885700038565,-0.012038003400524933,-0.001972290392934041,-0.12080981529983831,0.010325356247945552,0.012404223337443959,-0.06625750401941857,-0.0568465379908727,-0.0632754510078668,0.09426138512146642,0.037884326338497164,0.06114473270686048,0.0657898082698629,0.019112811045853,-0.05961257235747317,0.09892144737246795,0.0745450644612613,-0.01595368537027127,-0.009200147638293578,-0.05508001533164121,0.019475300201159045,0.005201034761587548,-0.06431884606432574,-0.11352130367164594,0.004897102249790041,-0.05070517749904913,-0.012274010184895573,0.043512355747831875,-0.07127799940220461,-0.03660311942070001,-0.04060204269902268,-0.06762951133404894,0.02857150854839794,-0.030383327736801084,0.06705836708260775,-0.03623408820528443,-0.05965120903172119,0.014139243952260447,0.0646698950562806,0.028234658708873935,0.038567001083383894,0.09099625515199176,0.05507515375461023,0.041145144526103065,0.03157490120143753,0.07826042253474183,-0.0022169753146896276,-0.00917333332079952,0.09418368528148882,-0.07132727655970836,-0.029625732233506837,-0.10176619985816363,-0.04263096330283802,-0.06677701765279488,-0.009785949049328937,0.0900249377524569,0.024701296722833055,-0.008751167956054327,-0.018535463329778002,0.02744032876211308,-0.04263608066231835,0.003096238174253744,-0.01839562563068264,0.0347499001474958,0.02741942382559514,0.008559467434303325,-0.0424157483415256,0.05455210010109107,-0.005479549796564436,-0.028989376457943056,0.0021893813618496117,0.08320492192742357,-0.04957350346753907,0.0019408791953058413,0.054022407450623526,0.004041348016134578,0.07060217265083128,-0.014464646553680639,-0.06105790808418376,-0.03237926415187264,0.08050230589553983,-0.03617715857748928,0.03605336456188454,-0.00929124570540987,-0.039774163187447566,0.00928721515520892,0.033225740561815896,-0.05400965240572394,-0.013397839932305785,0.018447029988149274,-0.0033117210879233107,0.04810440497030142,-0.07012493930677881,0.0542088911883645,0.025287689099718905,0.024584649621308078,0.04594317564647719,0.10066028796856974,0.06307304042054238,-0.009975319301573866,-0.00477558019064144,-0.028961756611401237,0.07162132841361027,0.10235435429695403,0.016015548445117198,0.05612125480364597,-0.010926549570798735,-0.03151753585419763,0.025807668154837815,-0.0683617489126429,-0.01173182884112327,-0.033733616943040064,-0.02685391704485209,0.08213956495621527,-0.007668867433465229,-0.027741513678625852,-0.028149379221211683,0.08219948222630928,-0.02253609627598386,-0.021566475383192337,-0.013907807358081913,-0.026000930137359383,0.01577337894506987,-0.006879686135260914,-0.1593903222443023,-0.09765747422772526,-0.07603568921552692,-0.003668618721783073,0.017169554536814322,-0.002091378375860113,-0.016247190881502404,-0.024662347128388416,-0.04601931539909034,-0.00101729831648936,0.10457435049329732,0.05576550249646962,0.01015492976976265,0.0842369394958134,-0.0024466471587566963,-0.04441656070061178,-0.03505879764006065,-0.04227072001061133,0.05744862239970006,-0.015231538887072014,-0.019675607582858582,-0.009264270165052628,-0.06366818508423804,-0.011538550169329292,-0.030334207477877434,0.05370387257510374,-0.03786838920653402,-0.0039643530571110445,-0.005841392275820911,-0.05044974311075787,-0.029633859456825028,-0.04018256872752268,-0.02167501971976214,0.0035566495416859316,0.06714852735073304,-0.07893152973586548,-0.00067836325251303,0.10532348067743483,-0.06388396114262884,0.06779935662600102,0.026958751414438754,-0.008666176053217522,-0.03905036240092327,0.03587393155926529,0.04280292348546152,0.02921754499544571,-0.01636465861522846,-0.006263488140689815,0.01181712434430419,0.04109250781135561,0.033278838887375775,0.07366869761714857,0.08836122982077506,0.03722855646513176,-0.036511605016144796,0.07573784726107975,0.019210233814404426,-0.0574427933610104,-0.032481344216485714,-0.07944333859562319,0.0026415809670835666,0.009649816618962071,0.008019625361480754,-0.06356702770011396,-0.010238603622065903,-0.012814698109531333,-0.03254203986601391,0.04700787930934301,-0.09509574472865015,-0.016447811477002167,-0.013050592439195714,-0.05074134249832717,0.0041286688318553765,0.004178354272412106,-0.0669455572254464,-0.0449698651344684,0.03223142846174808,0.005782870844601066,-0.08007734646248382,0.11365539994413977,0.03474645445066055,-0.027663983157234538,-0.021745713695893936,-0.026145198236689707,0.0026920306649158344,-0.08407767410082463,0.014479681752312925,-0.04454022381507355,0.04090760667584204,-0.06753236378287447,0.021617018984838022,-0.03267603379566449,-0.0012480563454200116,0.06917461357152821,0.026002695535231473,-0.06699963032251345,0.06577963145565782,0.049683077192069915,0.0041444552629297336,0.015322862843595311,0.033120182967296026,0.048881003824065926,0.07510971989271852,0.005368707425089317,-0.0038005033289203326,-0.08795747432838665,0.08839893447098332,0.04132894272403679,0.07708438558944637,0.06050423172217484,0.042598697591043296,0.03748262729198418,-0.033740344544308375,0.0088840049264832,0.008484867609499286,-0.036095343037481444,-0.07193257823778675,-0.02318743981477089,-0.009443115423183523,0.02560148774025082,-0.020057682580627956,0.005125208519934189,-0.0017718020434855238,-0.06847958161930351,0.037997915891546524,-0.03763591130504569,-0.06880073544322796,-0.09065923669837635,-0.033552434523388366,0.025275962280465983,0.03144290392836214,-0.018286099683009014,0.03480384780302457,-0.06780498887864835,0.007274326671414688,-0.10798131563386645,0.08799846307440798,0.001436333301798893,0.01342918639948085,0.024913110355535718,-0.021722036614538757,-0.0756019586035409,0.04870934451740609,-0.0014698787152139991,-0.012133322528529967,0.029023694211860893,-0.005239239557672443,-0.12890381077993154,-0.017554328177286513,0.04577738096302279,0.04028263186154033,-0.07048990725590974,0.08078500089481715,-0.0696664082464499,0.0016155903474740403,-0.0005527248337600605,0.0033484239508857422,-0.024326693882067468,0.07349335368608208,0.03803791621175038,0.04856056219120197,-0.0612910552020908,-0.04498328820217827,0.007779806387522261,0.03311347899901276,-0.06426240204445666,0.002085903726714429,0.0008879683815350385,0.015435132207025545,0.006164957273703043,0.06890872240349762,-0.009621761228097731,0.0076862080852229805,-0.06507294464779256,-0.007008116410000864,0.036511932771993244,-0.006535853527103597,0.056546252743450424,0.02589151284618835,0.03033042823947377,-0.07666759255342871,-0.018810263558096087,-0.061665273987053626,-0.07006774840008707,-0.01705865462666182,-0.050997232188497256,0.00034404383903714996,-0.06582596616945063,0.02025427180561843,0.007638196680142604,0.030309484735675987,-0.04108644397612639,0.057280658468771534,-0.03546654977638971,-0.014179602944439642,0.03128183365038909,0.016574954478334764,0.06934438142185953,-0.019799711760688142,0.04695802177189004,-0.043753472256773666,-0.03378367141190321,-0.04764613115868835,0.0784912243610356,0.0237805755445523,-0.024564124972537783,0.015740316737626006,-0.02484739419281553,-0.04767085176164109,-0.02117568194031581,0.009760698061358077,0.037946603992850436,0.09329539843165069,-0.009448773197414865,-0.014627494584422633,-0.01569107045933355,-0.019369835195498206,0.027907569690615072,0.07844563454484627,-0.04517894830727971,-0.07175341198705198,0.0509176908063357,-0.002139775378021098,-0.04070328489065214,0.02492565496471806,0.0330994640390147,0.09246966950532484,0.07837663807605441,0.044658458396335594,0.02341360938387252,-0.08570811966036256,-0.006454902549845092,-0.09787694008305825,-0.04770368514422714,-0.022380082881897138,-0.0122365260657516,-0.12045401561336173,-0.039409104059863906,0.03977565832427207,0.06202564895814108,-0.03626297704595645,0.02769097457977393,-0.043557588336361204,-0.004504754078570806,0.048240796506042675,-0.013015359824238475,0.01877643854222911,0.02315446288538675,-0.023102824198314165,0.04274825932642746,0.05410750536815281,0.009317867923572908,0.012507587790658048,-0.0006806469794261905,-0.044440866784634145,-0.034347288438488145,0.02253351527582522,-0.1114134618078088,0.05929243127615579,-0.09316084675454994,-0.00012766565773086267,-0.039607485095970396,-0.02008587866993706,-0.0072527296409912526,0.08013042267532723,0.11100454689588207,-0.08683319616457313,0.011626780256816602,-0.007136049596769616,-0.06206942179908309,-0.08308937543742816,-0.08798360581933863,0.030162443753476605,0.02165319807753578,0.02206697304761623,0.01961402058812648,-0.09122962977505318,0.015572131566150543,0.11246257487847176,-0.05240836170507233,0.06981922720365462,-0.0681182350106337,-0.004855578264951485,-0.04518754866417829,0.021941029236425384,0.07722124662135087,-0.08468502162149695,0.04453669008205781,0.06169690383603895,-0.04740116491463195,-0.038216023938457834,0.009028488906335137,0.030031519511670827,0.05326311398318979,-0.03178253057774059,0.04861826413449946,-0.06839261340410427,-0.0012742628697931075,-0.02966758570252201,-0.04750063923019586,-0.009469837926857103,0.026318726513960118,-0.06000815278037052,0.094085840311319,0.07843856276946554,-0.004693754125047286,-0.08655588971557782,-0.006843416403916461,-0.017210457933886897,0.048176757720757614,-0.018814253454318787,0.026935466817564077,0.02917899349229118,0.009990678187106064,0.08252347520984057,0.08178232501406478,0.008616135631841241,0.05578122311507365,-0.02137923869493098,0.05191266992749266,0.010965427897411608,-0.012636423355824447,0.009333541250199553,0.036297683370738874,0.0036921451764742883,0.004120586141201656,0.032586516190689585,0.010753657376046902,-0.029068459636248167,-0.001667091160889506,-0.02425704618366248,-0.02404964504770364,-0.08149796514988042,0.07726923147107331,-0.058643666379532874,0.029608044238509615,0.018330311393117533,-0.05711080307881174,-0.05059521022485751,-0.05399916073761023,-0.03864131199906154,0.07436155586213078,0.07962449689661608,0.015094075912438212,-0.028081407393006828,0.07651399756551065,0.07020096004146803,0.0566996308688317,-0.12352523694891113,0.0038174800952160575,-0.08547241693669265,-0.02673202045402564,0.08705876872712265,-0.0535275021149956,-0.08052544039193982,-0.013642766303911253,-0.07151596604415975,-0.05926083537780609,0.05406169712671722,0.029372156553031464,0.11498113143669417,0.033451026473587366,-0.0375624904057206,0.03993523369174164,0.06290821895799704,0.08913653839710445,0.005199752501153479,0.057697510917650616,-0.002768853403159133,0.07904083596105442,0.054616557167386864,0.07304336847782807,-0.0949900487811411,-0.0032236139814272383,-0.09051864897681386,-0.031648779213625924,0.0020589077398428346,-0.012519137655753455,-0.07001607467912223,-0.020436401256385874,-0.01413446358128645,0.0004189800634739107,0.04551071723798496,-0.06505829363979226,0.08240870002576049,0.028098184364208863,-0.03404863979295588,0.05335285565542471,0.02687384548148903,0.09895094744177242,0.06980832863732594,0.04402283338787119,-0.06327813047458707,0.018826100896881328,-0.00204671626472227,-0.10175506041862575,-0.013226796132592719,-0.0037132804605995075,0.04079929314052821,-0.01850107314672242,-0.02913499408203539,-0.05530229087124506,-0.002071368298500484,0.05488020761850705,-0.04419668694999509,0.017379688931465055,-0.023887908416257313,0.028872477761117434,0.09190919509133595,0.1270166942297518,0.0698074054012928,0.01100915100848924,0.009478233227176917,0.03594286772212263,-0.031211789070143253,-0.036012765199324545,0.05653735334756004,0.06628443294887106,0.09146260692804624,-0.05740845592354938,-0.05131144104354405,-0.017160574386193648,0.014320282898665508,-0.007475422225044509,0.055964314819833244,-0.038563775065150935,-0.05844608964506332,0.04090234808741771,-0.08135943729449145,0.010623521596354036,-0.010421040420950376,-0.013394963724657948],[0.02015323608517131,-0.023136608272211895,0.030784325887537562,-0.052968792250754765,0.01009763945089818,0.015960233052480583,0.030866354750598582,0.019391971490885528,-0.04112897279126342,-0.00028702016025297205,0.017438903794099642,0.012405781866418442,0.06813423191727314,-0.0073025260929306095,-0.018493756545814543,-0.06898635455368955,0.02795778710114268,-0.032013283571051605,-0.049870854857728464,0.009107174166716265,0.05040453626751749,0.06048313090242769,0.030228475041495406,-0.004234118052618322,-0.04298867801449362,-0.019631370833837283,-0.09113932064602305,-0.03352264455510795,0.07138388777160462,-0.01407382392007995,0.0042255589812994696,0.10618303841037591,0.04990794627275576,-0.10245442158815457,0.07937239149767529,-0.039293340604929894,0.04733698898594222,-0.08139853298538056,-0.07388735630852222,-0.016183637348241443,-0.006974695016449295,-0.011117382680262907,0.06474733800601344,0.10061809630131474,0.013402911804035264,0.02636536585378895,-0.0672176922479645,-0.05024371124663576,-0.071280536547361,0.035542202220020344,0.03797950429378662,-0.053338677023870955,-0.03558153263183637,0.049188800638534584,0.07928750889607294,-0.0056783792523075775,-0.03974422876287307,0.029238563609625103,0.014824775007869462,-0.05539602129898323,0.024340888676453655,0.009202147129760299,0.03001522708028441,0.017347230742797856,0.018014467331925483,0.033936696523762404,-0.015051467265433813,0.005092059957581002,-0.013905871768983407,0.013886478208724221,-0.018082030570196445,0.0775450063645719,0.0014066526581418169,0.007041400325054663,0.12385428148270715,-0.045846456351887895,-0.026163739203302637,-0.05761524384686591,-0.03250153031369434,0.06142033786092736,0.033494207479570055,0.0070070631675924295,0.03918154362996088,0.060417453115630855,0.07504210721843774,0.0265435310482443,0.05714471865858424,0.0579496181691276,0.024061625734309738,-0.018320541649770705,0.016524592004943172,0.0792336988248526,0.069023581641274,-0.0022590445022505133,-0.00032634347056323084,0.009516911856363493,-0.0209489027520231,-0.008590723192661435,0.06357978360614011,0.075389618632151,0.056593079849110724,-0.07708497609654548,0.008952089084030558,0.03981346358366029,0.01956818617093483,-0.10287911980729844,0.04075006919217187,0.023682384217697534,0.04952444284389433,-0.026085660406046898,-0.027890302513342628,-0.0023770120314299615,-0.02680635945810505,0.033259539041458834,0.0794324884920906,-0.057335673467450714,0.01761763389448012,-0.07763850574654553,-0.0055780132952822584,-0.012791144327971432,0.05403137429765428,0.06618903133069594,-0.0672097203183888,0.016803877875641332,0.03879563007804509,0.06770954670699066,0.005480717864070755,-0.028214941243100172,0.1755431766607179,0.022183714043928587,0.059846510802386586,-0.006583194262845739,0.01942158151547454,-0.025037905814500987,0.023832279231029572,-0.07572617629771705,-0.0009727286266865411,0.038008605640246725,0.10407559466141869,0.05012614223207839,-0.052154691014710784,-0.030670969922434184,0.011765373235714952,-0.12160331814453114,-0.06110555979270675,-0.044304031923983786,0.07475707896503012,0.052309936885961306,-0.013864399429227002,0.05882313864939231,0.06179544730349955,0.05757391621598335,0.08591721723096518,0.025101385293996806,-0.006825808027129295,0.004321355588535329,-0.006354481779631154,-0.006181844194130033,0.006975119812703632,-0.022977623254314544,-0.017296811158585924,-0.04669415681576206,0.0010777716343573322,0.002041015811665345,0.00870236818965552,-0.04315070455706922,0.03323467689540931,0.07709623559193414,0.04321541711662844,-0.014497547754812901,0.013330549507103972,-0.030750436893352513,0.014844877341928103,-0.050822084352005074,-0.04506724645997261,0.013098170799088218,-0.04659425742813382,-0.014840318257626448,0.034287360888910344,0.08988241244248518,-0.020963631578887223,-0.010953405927013174,0.0019084943005165695,-0.06366146140891431,-0.15368245606003925,-0.0675048847130465,-0.04501562471674837,-0.13706883309935966,0.000988517131465057,0.002613163439154243,0.014333017698899657,0.07699231873607584,0.0560014930141265,-0.042353044456065705,0.0221199900136884,-0.0009460151629092492,0.040025059823814095,-0.061379338726095314,-0.04363105667627616,0.05740122155334185,0.019215158991582795,0.032045221292451256,-0.01865133851598268,0.007772004480098287,0.03181015622356399,-0.002779109480477162,-0.026519409174850895,0.1247132813851125,0.10840361015055762,-0.018334042422202285,0.11794298334507956,-0.200672316269958,-0.01922830199739253,-0.10194858815273605,-0.04912759059253793,0.05121224305534657,0.015401972918304944,0.048565694000213336,0.028110461091655152,-0.017791767848765867,0.0932857916255873,-0.004984446795276068,-0.10002437706482344,0.04179168973335957,-0.015367226968960633,0.02519550272801591,-0.05914950569349566,-0.05989097432106803,-0.02071351073129564,-0.05449379013399608,0.04840641376272511,0.01085908668704518,-0.033972559824444575,0.09472789431650956,0.008638802278205666,0.07188193958192682,-0.005786129460406598,-0.0816655590953642,-0.0844094567077927,-0.15032461226124716,-0.08424490950259714,-0.08932671350665601,-0.02896280406624162,0.022144126978169833,-0.0828643371945941,-0.04888552117661826,0.03529819044830622,0.003445119432662398,-0.05980953860579314,-0.03003483380117698,0.020723519104857233,-0.07589481772410644,0.011873217116125217,0.03422464421999998,0.004094417807145522,-0.0664452899011782,0.01927218822844915,-0.01901217265729927,0.020687771617835634,-0.00578841375685647,-0.03976183965025212,0.013990249041630081,0.05794626956860062,0.09808340247792692,0.048475562843881034,-0.06898082012496799,-0.15290248337930543,-0.10668514374853265,0.029639460774734606,-0.020825137282205277,-0.018734882306056105,-0.009784843713743692,-0.002304732981437693,0.04210035148002099,-0.05360481457829844,0.010042338639214705,-0.09385643892310189,0.0827368000618438,0.05049442637740072,0.020160518859963124,0.0702871567679333,0.04387952501894482,-0.018706629620212686,0.022710705055654385,0.0407159618005358,-0.05992277261360314,-0.057373300278346945,-0.039307436313842606,-0.009688149900839505,-0.014328290723807752,0.038824402145188945,0.16464638341532303,-0.003664329729798029,-0.08455415098509275,-0.11428456080512985,-0.06645463595039411,-0.06456803155836265,0.047502555360913204,-0.0020488817905077975,0.11300529740490532,-0.0173530594258272,-0.038649971834929936,-0.05239137086801265,0.02959588392451628,0.001032548322065885,-0.01736395113126567,-0.008269273951245716,0.019118857887016904,-0.005206443986180681,-0.010566554207078043,0.03190394735159662,-0.020265683667984393,0.028870592745418006,0.0009434477807569482,-0.042981968604223125,-0.014457545308437488,0.010301015561795081,0.0627642157574633,0.049028069866608334,0.12558778385329122,0.00573791107823619,-0.021564976901491343,-0.20960735037204875,-0.09849793038783161,-0.009277021714709262,-0.08977904393571888,-0.029431334544653208,-0.004297710197026043,-0.011303111249870584,0.029996815267937984,0.011634489921797168,-0.09102658786044857,0.06060259359327153,-0.01866590745969942,-0.04456793237838343,0.0781107378031668,-0.00878927658365042,-0.027130473257351056,-0.04161400620021836,0.03099616585893612,-0.004356783398967412,-0.005460251124590716,0.015855554587417126,0.07831165795819633,-0.0914947009436683,-0.0031743543500998618,0.020898782323134087,0.05200974687855216,0.07643165113878574,0.07298010959233646,-0.0258687512665691,-0.12070292378924456,-0.018865007483663838,0.03611143752953099,0.033673988854158836,0.06687814827795928,-0.06960468834347468,0.07891117622748312,0.0507823447045209,0.05044837337710698,-0.04936193589065482,0.00987676842300446,-0.10517077618496416,0.04295427843504841,0.0525432815196564,0.07357800587454413,0.09842718883143725,-0.04655860107411101,-0.055710339507408745,-0.0343703659260404,-0.021424728212240122,0.05138430132853009,-0.042395904718871585,-0.0245855177344916,-0.024388013421922917,0.021506170523210574,0.006970451405289133,0.05430971741247298,-0.0313095443373047,0.04666605046763919,-0.08754089216039576,0.014890765934315894,0.0013472403588282043,0.03110891115111715,0.05914840905992582,0.010612318655957452,0.08969569987092614,-0.045225131561312956,-0.07678702458147454,-0.06317436732710198,-0.026244130806737178,-0.00446950598444433,0.0003471296065372614,-0.09295432933975653,-0.007342888201025392,-0.04167089577601494,0.02291890773609541,0.08430375772041286,-0.05941082146433891,0.03390177890386374,0.059976517751747005,-0.019280413498809195,0.016837415723283008,-0.041918396540462935,0.06883672046649517,-0.08266349956329326,0.08383146014700109,-0.009402629312434695,0.050671872215470086,-0.07601558268810926,-0.002754186375922849,0.0042570616697391594,-0.03550001363826503,0.010683271662379298,-0.004965345938015865,-0.002665915128401075,0.15032958910248861,-0.09860105053440034,0.0032316033441822404,-0.06250729964654778,0.040818368734829726,0.053862305984514504,-0.018460639361906863,-0.032977666452256235,0.02953369594630947,0.06934131762256847,-0.019431457202419337,0.0007446933655234487,0.007206324028997977,0.03083966843897356,-0.011654875576256059,0.0011230028905185713,0.013124647002203865,-0.013397924885902317,-0.06639455530254257,0.1055940530764367,-0.02049913242645141,0.08524196499342972,-0.12952646459054934,-0.0005721952519268965,0.0520238208237713,-0.009851075483637216,0.023641673016131123,0.07975904038404094,0.013039892780940502,0.07139089109680855,0.0036519188142159287,0.041883046928724965,-0.06283499868812203,0.00045394270081246723,0.07537989746116727,0.05938199273903983,-0.05210810592132859,0.08886378741784008,-0.031068236717056563,0.03291073923299794,-0.042263108541016885,0.014434529719334153,0.03340921343224517,-0.0607553039501416,0.12238624440596654,0.0568582294132836,0.10107927788069396,-0.1022085078685105,-0.07510810160090746,0.06534553060861979,0.04656473027983466,-0.042363088149727245,0.011678780273263129,-0.008122712655536832,-0.0022475925175395204,-0.05142794091030979,-0.02307957733952149,0.016304859194394818,0.10078427821447297,-0.005695098804611128,-0.02652691304091803,0.06600303361408745,-0.1334247871274208,0.003474085406687788,0.03602696303925034,0.005982492024969573,0.060717463782786446,-0.11112302901677135,-0.04666647099314097,-0.07436867863937563,0.014917834096674312,-0.006478176074201458,0.0786952070637063,0.029378460309843778,0.0710539377516165,0.020198890967773515,-0.051806557593401546,-0.07246475934230416,-0.01997164832927104,-0.03408682501098689,0.044514335566475605,0.021068518454478675,-0.009225054272601502,0.020735218329819394,-0.033882590344091704,0.0870500624046762,0.0062534015772399395,-0.03603136444447246,0.09171530803391541,0.01268563414863839,-0.00005398702684275836,-0.15163253298611784,0.01935522832197706,-0.05890899050008574,-0.006746322266722761,0.025621097139584756,-0.05407217568425391,-0.11732984874485794,0.012551855808626595,0.08109004684019765,0.12541568975305925,0.16794533765790326,-0.02495592501210765,-0.03837204414075909,0.0005606165925561475,0.06289575654496479,0.03317248035300556,-0.034272657521214084,0.06489071573220917,-0.025442031655382592,-0.047161114779628865,-0.024081979091710254,0.05937040352892615,0.05844886514294713,-0.1255516585804001,-0.03984482757859887,0.07306435903972953,0.02260105136148203,0.022354559997360027,0.0017502282551318052,0.001190528966581591,-0.04412906958701163,-0.08759745839625344,-0.028307103194757134,-0.050446211458951895,-0.026331173553302518,0.050514520871970156,0.04776766082175061,0.06115525655581554,0.07347257503871231,0.08227257650054261,-0.013334083319727857,-0.04572981437304161,-0.016768532196470665,-0.005554095074609713,0.020135562976997215,-0.02975392567030163,0.004598984476830613,0.03221887669978255,-0.030399901078249688,-0.031892889169377325,-0.010613099066028243,0.052355058748906017,-0.052416484107081975,0.00885510332571021,-0.026008150536396626,0.016072916434619458,-0.0008803372559797482,-0.010421161466493845,-0.07230619402463928,-0.0945069982827904,-0.024243414589678217,-0.10124401977185209,-0.00929159198957799,0.06815049221868186,0.0975021317649011,0.1211819204893854,0.018755804813849634,0.08785329004165827,-0.04241145429332267,-0.1357283782599836,-0.007675915777672045,0.06416259976406828,-0.11818788982620172,0.004080008124820882,0.009542070988481642,0.011170101295403438,-0.01588122397641251,-0.08391625449790463,-0.0422706683485807,-0.035400677743860506,-0.0061917390945141725,-0.045743726579522755,0.029167510911304553,-0.009743298542096374,0.033634322852497435,-0.03316415758142286,0.09626816142253376,-0.12064564890678496,-0.009510730763128958,-0.004736431038664371,-0.02341831872689234,0.045102273373145756,0.040794754988488224,0.11609556369796865,0.06891814252839648,0.043611354363373114,0.06774745979382166,0.08106341389675746,-0.035666984914513436,0.032873443213610354,0.04349346136359646,-0.057875996415597035,0.02752136273451289,0.08000990233485443,-0.03610324175170882,0.08161867687077826,-0.09030251229749266,-0.05764270534281811,0.005817095586238587,-0.0797845383083894,-0.023284984962179657,-0.08012847181683258,-0.05217273672115602,-0.05814209805540983,0.09357972584941293,-0.0832086291914343,-0.1124646203564681,-0.0523652649611424,0.030514459732177344,-0.04611333510043512,0.03160180766948135,0.013049528329478609,0.006178556032119907,0.010837897062147477,0.008788444911688184,0.001611411591964026,0.00260420263453074,0.017529606964340194,0.011377043559497818,0.029803188752438228,-0.005639634987809174,0.04702733139928577,0.02575113307882936,-0.04772485577097596,0.08369071362062067,0.0008418117058992239,0.019260041549770516,0.10225794854511354,-0.041596331024087725,-0.029168396797627037,0.09411597410122632,0.027793602072476997,-0.09449488889754812,-0.023236138696956846,-0.04129978156846404,0.005903365564838724,-0.08091576328717494,-0.039886499857237356,0.03243651693925133,0.023275254883050874,0.0703466524392141,0.07849289560262865,0.0698682299548678,0.027007992928184635,0.03293291302052297,0.02062824365612643,-0.09199857530112412,0.05068129764842865,0.024560130684735223,-0.0020990742145190287,0.028751859966466984,0.04806412699076126,0.05634058107232932,-0.049152038833359495,0.0058346770646037814,-0.005065889698762429,0.004023251139940424,-0.024653849396132094,0.009055677497214585,-0.024550992581870296,0.08842956077303062,0.024145370874413853,-0.06031720921002146,-0.046179448908881045,-0.0120463542150185,-0.045327561483192474,0.07912297798972011,0.038460302075415925,0.005722815032970154,0.05100955576635898,-0.050376558075390994,0.058724426335474256,0.025330309506556598,-0.07122668111146772,-0.03191727801179326,-0.09855877196508342,-0.0642489790302621,-0.012652640697263658,-0.07584048663945588,-0.03237494523308963,0.046397616518908336,0.10692825978084103,-0.054077989409334094,-0.05871183984268856,-0.07541401499253589,-0.024299634495624393,-0.06188218959582432,0.003076267952568933,-0.04362399190488944,-0.035079599489803506,0.060888057656363265,0.01196384865786539,-0.009251507926327245,-0.04524395812192421,0.05125137526575357,0.07001439270706705,-0.007363307299887305,0.10310779640103608,-0.0023454083524503634,0.0637510994851412,-0.07218167856207774,-0.017107884170199802,-0.02093931115184698,-0.04351000774911643,0.04490809070344376,-0.05904737883661985,-0.13323364462034365,0.11373074558977445,0.003270150560319617,0.03398904812564763,-0.024803142331480312,0.06464578994396385,0.013778840554542118,0.02198663425661583,-0.008393371023069201,0.004606766055476263,0.03042540425772618,-0.08338090220448313,-0.009927914289131276,0.09099926957703303,0.11215723505294657,-0.030879333697763658,-0.053809856548766306,0.025208338054113186,-0.000738948359827316,-0.02209358370290486,-0.0010630483206737562,0.021104935424959972,0.1083458555113445,0.055647267911876325,-0.00020581518464888408,-0.09831722126026467,-0.04784380628306523,0.01825953812816254,0.041217416894437794,-0.005244892072499189,0.006519659307245709,0.08600469340368545,0.02439670395678998,-0.04117173571422267,0.11115783175091888,0.005441046326427011,0.03853179337559802,-0.05269435580848456,-0.051593394374893284,0.03140414621344766,0.0735288902339768,0.009128333095896703,0.0033904405981737794,-0.041573763312721994,-0.051022788160779084,0.03376087231171617,0.0528883110028774,-0.010698968687023804,-0.06658669664084556,0.012460931935007823,0.06193493933510284,-0.01630444051935787,-0.012561310274705584,0.0039532658621946725,-0.02663262065446851,-0.10336418175974327,0.03149862455524787,-0.08983645792953104,-0.011979076277622175,0.041290633950734866,-0.027213043692754527],[0.06699859355784714,-0.039400858641014704,0.03681019409260431,0.040517655502760146,0.0832320561689163,-0.05102372882666778,0.046665774100426924,0.039381821613753094,-0.10898828225914074,0.009735289831592204,0.01563463082219545,-0.049687963649225994,0.01565894867195541,0.006580406457287742,-0.0647285830218751,-0.027313031132284653,-0.03134549669265751,-0.07186677288140585,-0.10386637896537163,0.0057471155816926365,0.055941578135340175,0.05282822998151198,-0.03400454274178415,0.019337253366377437,0.09047623736432729,0.004320642440080135,-0.07650075581270585,0.019230213160258407,0.06525700058217333,-0.022574708038020704,-0.039323281392178,0.05732268439740939,-0.0934703742286021,0.031620744680354744,0.054920438281855805,0.037296953161236185,0.05397195811946383,0.04019338696548212,0.012995880309169395,0.06815183040278615,0.015887091438187603,-0.017415632511860242,0.09470263474156117,0.11110646850884075,-0.004642103929491749,-0.07424430126453334,0.025893929235691712,-0.01928434293651488,0.05850258467662021,0.03284934751991983,-0.0551742713504493,0.03850989043335885,-0.005650932842382742,0.17671957952915984,0.040926813926307724,0.008619690895795664,-0.05556381650859597,0.018705586813602508,-0.0181421419705855,-0.038219538703484046,-0.010082959156892203,0.0010301144231744377,-0.07595369568717922,0.04160288594499021,0.001438676510605943,0.019891910700782424,-0.018121369989203013,-0.07139701785119307,-0.06396870391317926,-0.026964150582085258,0.04470287086832899,-0.006579919541499781,-0.02492596523643585,0.036625786605710774,-0.1018889005449473,-0.011065111513398874,0.005338536950010825,-0.0621225868060118,0.07105706539229802,0.08354518345086646,-0.026375656039379643,-0.07429306536836185,0.022759646929154376,0.02442063232730469,-0.04206448377265,-0.018234874102587163,-0.01983378344573962,-0.006688631805530126,-0.04367567156842544,-0.035786298065842874,0.034508072585763036,0.006438230510880753,0.09070714547030859,-0.011520344164099309,-0.09681595797503513,0.004181662920059568,-0.00028240038352641406,-0.04963559082523207,0.13941456308271125,-0.048767468685538856,0.05309916679062416,-0.11836739967367682,-0.05771168879078826,0.01765513245516618,-0.0608010879167376,0.0013726639197581365,0.14465851550637365,-0.057919866279415325,0.017388252746586508,0.06137448381379376,0.146363971104206,0.0437308440861251,0.06645637621135535,0.07128856732050003,0.025482890592696587,-0.03658248828076107,-0.004514212013495822,0.027575014548750124,0.02033206779220958,-0.02482997514913033,0.10070569168314276,-0.0846753573209305,0.011556241912126876,0.0642462720566542,-0.13773595567018374,-0.06184247491624409,-0.06736987296252837,-0.09436056611968675,-0.017026291222959605,0.025506691220249737,0.0015909543968013755,0.06049560918773326,-0.11113027522188376,-0.09207595004540102,-0.02825790837563676,-0.05338776749862941,-0.03614029780644954,0.08502376439240156,0.0747065820351495,0.006792900752492195,0.09020406655120837,0.12469050436797909,-0.027107973936668358,0.06533861826234369,-0.052963739715522526,0.027284378579091578,0.014755940442141091,0.055850575571096586,-0.0011738104016014272,-0.023820002218906313,0.08866911560513267,-0.027328015998036675,-0.07774815464918404,-0.1501442727219051,-0.06951177672334732,0.02156194159989302,0.010820823439238781,-0.09901806215391333,-0.08653533498003467,-0.06775061994337112,0.01616027962469005,-0.011711830991948582,-0.09303145427494638,-0.05698370162029433,-0.027125679309443578,-0.0004536329642068713,-0.07020200523328693,0.07910986181987548,0.014121943597942903,0.06553129266988819,-0.04518864000675805,0.05295731316352104,0.01573028864077026,0.05986397028642644,-0.03463601460117836,-0.03538436481585592,-0.010356980994431164,0.0072812943026933485,-0.017498398395457537,-0.017607824459835983,-0.0035653214014411813,0.052519880071808855,0.06839574955361775,0.02193093871276519,-0.08228890908714298,0.0010448954141031692,0.0658714588110532,-0.05899357529239625,-0.11739846950901402,-0.07125559743598783,-0.04407250489756272,0.032997776029323835,0.03357194098329119,-0.01566412982347734,0.02288466015769466,-0.042235728875615636,0.04507225299894257,-0.015467396048221838,-0.009150200573444305,0.03878091155073401,0.08516659368910796,-0.057980298615878,-0.003949825084218021,-0.09880662267860377,-0.013273241897246388,0.04520076628863448,0.03972106490878426,0.10176184748493951,0.09396353738168829,0.04271815055989177,0.04054995491624122,0.1406336484841995,0.029797909993349327,0.12292719995089937,0.020127966925573962,0.04907533531130076,0.08058770909281908,0.005632554203381317,0.03872547378238185,-0.04503285204987632,0.04663850313428747,0.03569407220922773,-0.05135418351578096,-0.008453446999374496,-0.07090136959699966,-0.03337149470907941,-0.04348273776255393,0.039827167967767904,0.007705125157150996,0.009717629934622956,0.04082818373802109,-0.00959485323836367,0.01613884499412226,0.0705007085983127,0.04912462063744049,0.15139620955496522,0.07108498183336465,0.10012794344427378,0.10420785237812286,0.1558309153512801,0.11961054916738562,0.09531342335154254,0.042270098324348554,-0.0035145492494102876,0.11959275894736891,0.06632790020309816,-0.01353011792247985,-0.034218413400419166,-0.04349502401189599,0.018752194043906364,0.007869360243865054,-0.01822548132965707,0.047447050868233635,0.06261693799602629,-0.06002375759177006,-0.03384899677476398,0.030011943383922563,-0.09716338317649371,0.03279376436658422,0.0808506965808232,0.027673609984029037,-0.021794669038672183,0.11581377342424287,0.05140203614395109,0.1556406117038697,0.01966770868262752,0.160858772171344,0.11547204343902184,0.08319728837749943,0.01635858033129955,0.05555343011693536,0.018519609959627203,0.03626443438267074,-0.0388156220928831,0.054441865012714606,0.041452087074380015,0.023622937518920112,-0.0177434942113406,-0.05145778503283847,0.07748894536701939,0.031444644002081794,-0.016918357424311657,0.012184835766929874,0.016736124430925113,-0.05300284246745205,0.045014378817267546,0.0336684585218367,0.03370178062540557,-0.053360586967543915,-0.007160209420381359,-0.02629157331155897,0.09822444494310748,0.02868565295882319,0.04271862075384075,0.05526267474770641,0.08910518589246595,-0.039550683830228764,0.013975745828714315,-0.017738563480197537,0.00007807569036159786,0.046955807887921065,-0.011684290660225395,0.03887801501813963,0.07431691961981489,0.008948342197308244,-0.05537357402755885,0.008106686152783893,-0.007586935695245457,0.009934086598302028,0.1328454711874273,-0.05200772197251379,0.04779749869250414,0.08258544972808292,-0.03856441553520981,0.0021166575028851026,0.04561831971026292,0.08252368125885737,-0.011344659244804638,-0.009357989020214655,0.021196308381000062,-0.007007081264849864,-0.0652207083480884,0.006397547796858516,0.04971344431765481,-0.012274296881130471,0.0110480319302514,0.03207294347154997,0.09260043064964825,0.06493365397592918,-0.004605868443464722,-0.00149471374512468,-0.020362814196546803,-0.022134276937044783,-0.01918908564343571,-0.005666008566059768,-0.04434205110054164,0.00715835702391907,-0.026956765217706832,0.005600903674286245,-0.008409801223519586,0.06455545293010743,0.027903354386098284,0.07770758530847853,-0.0017161808395841098,0.012081115173863526,-0.06657087693790648,-0.10250150087633723,-0.11863864498135746,-0.017757502084685874,-0.09565036429274633,0.04159727224745247,0.030931209350438204,-0.01027218753340242,0.010433405443560827,0.02742839177882993,-0.059238908695311926,-0.024904097192097834,-0.055138817492790225,-0.03906870335562409,-0.11449729356450529,-0.08974384918693194,0.023370726324732752,-0.08668132850516652,-0.014088239306679151,-0.023733414036975,-0.040200957235861236,-0.02749119602920825,-0.005181080434382481,0.045704920280631056,-0.026122148215293742,-0.06272370022837816,-0.010905102892514812,-0.015964227993252013,-0.0249303463081373,-0.0353499977063804,-0.054947269407331856,-0.017558765742544932,-0.020193127009723148,0.11224432538522718,-0.027061187157352985,-0.0009188507114812407,-0.05507654480115445,0.07463729673851888,-0.018464194321091452,-0.1542829116916735,-0.0037767293882160365,-0.10412246010530803,0.022669586461845498,-0.007580378023045979,-0.01157978615495298,-0.03008841516745221,0.00839632117508418,0.0027859868257099404,0.03660080915834029,-0.03705691303618059,0.02046718312383132,-0.063483707680591,0.009046908041110071,0.019144961756756947,0.024341457508879605,0.030130545170084663,-0.05457139912376323,-0.0540452307915667,-0.09616955446135404,0.022377480405581962,0.05429520021272204,0.025749620134805036,-0.05259513878361559,-0.047974584683017914,0.05957478473411717,0.007266765587826898,-0.04636923862693883,-0.01811191060000163,-0.033526319765143184,-0.03358058991670778,-0.1408436909129072,0.07695688945419625,0.02349621739588614,0.006485814108461735,-0.00016294147091721226,-0.0038699381566234987,0.036556261688739454,-0.03932900340044785,-0.07186965380803385,-0.038811563013567564,-0.11886336374545313,0.0017092809449694433,0.08982839284509345,0.051760072328839994,0.06077728170122855,0.01956514019858453,-0.018284113082658905,0.00045930206898495824,0.03441164806456036,-0.019692298052205164,0.06649057649298361,0.03678400898926918,0.11316058471921898,0.05763746840490387,0.08173650602465204,0.04186611861635039,0.034973540907439156,-0.014374052040126067,0.03597883275213712,-0.013934581361685138,0.09279751838566377,0.011479944273991715,0.04623482937522279,-0.02883220935233564,-0.024319793701501623,-0.006143156042138604,0.024932736782395794,-0.03918071209352534,-0.10995116193089459,-0.025668123157942205,0.022022483904790384,0.039217090308302,0.010380094658488903,0.00646968968976862,0.038181940028531,0.10661836993528409,-0.02398275623846574,-0.06721045293057491,-0.07928997135859986,-0.026790051189811693,0.09914417420153838,0.079603324866124,0.0037001298131981294,-0.05233821903136829,-0.00857823706637307,-0.009514186408937208,-0.020171693256883193,0.050534122768843545,-0.005800318327675293,0.08939884639319073,0.05945569767069098,-0.02974573388767324,0.08694399605250559,-0.09062739663489337,-0.04214507387843299,0.01464834322592892,0.01469762610942589,-0.0034473696813813633,-0.02478891165634286,-0.03356270046594115,-0.029476528124165204,-0.02219824383612977,-0.12671452779356018,0.060952912509474405,0.009597948603688709,-0.023353334711245316,-0.04800370009896654,0.009910249396705192,-0.03524003150356581,0.04440325077343761,0.06711187724720798,-0.04024931192085596,0.05087076868026049,0.02003817581292694,-0.016516692040124018,-0.01719387941395062,-0.006816271161689341,-0.08363533013362894,-0.00987699161985029,0.03195767472097354,0.06271294246744151,0.029249071253414465,0.04164666258756576,0.040306659303370615,-0.07457418777619407,-0.026306576006092697,-0.014469359922461539,0.004370626166334844,-0.007736143753212522,0.09335651945878867,-0.011379523900056495,0.003103230661406118,-0.023179480890723043,-0.0016098244437103859,0.029548409449641707,0.07238505564048046,0.009662963108127486,-0.07519308511590504,0.06238726831558105,-0.015033343102476865,0.024231931165292115,-0.059840511601151836,0.049119598392583876,0.06022606128147082,0.07503040500063952,0.022171540553861252,-0.02639023540779275,-0.04323352835370208,0.0781948681407335,-0.04891412341722389,0.000592882734725415,0.008804980820410268,0.054532466808359006,-0.08990063204314316,-0.06527610679277887,-0.045098432095580794,0.01962750808006854,-0.0007809864860551939,-0.09728509095134137,-0.049917517303590016,-0.008601076110529099,0.06632516403500906,0.009436874425134698,-0.006201858651346557,0.021778707518922212,-0.043298707077764266,-0.003307011570211682,0.023354505130713042,-0.1096157498586014,-0.04961558039575142,-0.08571437323917482,-0.1312810222272675,0.03848970756535318,0.024974625974218016,0.006157552803060638,-0.06583823040644535,0.0234640099286419,-0.05270863358213864,0.08827067505331956,-0.07812125843730593,-0.01559939103493128,-0.02627690641516457,-0.21106943707160147,-0.07044716492766383,-0.017563500001595327,-0.09272787437689925,-0.0665259393805515,-0.036294965177521475,0.05383930911870876,-0.027198676024118355,-0.007863697955299063,-0.10841081976189394,-0.023973184528261214,-0.05470882522199146,-0.03154199411918625,0.006541226962427041,-0.09478722793860982,0.08218170402580023,-0.044823439404690586,-0.08827474949559527,-0.0008625430953949196,0.05168904700447229,-0.03633920782727708,0.016128966671404208,-0.039724704165887366,0.021953637986517636,0.02624343442162454,0.0026075156253631063,0.05291119770955897,-0.10737436160359319,-0.08738882160270864,0.00869603707959883,-0.024261682376412477,-0.05072999300990029,-0.1057807094209636,-0.07446813472736909,-0.024823029429820048,-0.023459702635967087,0.09000361089471456,0.008630824909618567,-0.08705158850171286,-0.028238986185420093,-0.003384648752896013,-0.02867151055317137,-0.013547820549329154,0.05979013323441397,0.016988792676439855,0.0498130005054169,-0.06114421291764254,0.03248079305033225,0.09254124235690803,0.008437331888458905,-0.002962756506472335,0.005787594276288498,0.09646690585973208,0.052336265080213155,-0.02248577651539783,-0.01989884710115177,0.017766882967888996,-0.02945882061377449,-0.018775835400973752,-0.10978187036383366,0.025816023419275573,-0.0700378843525918,-0.016526288128241636,-0.0892443825639267,-0.03608953714036938,0.01902712172035723,0.01984387683736438,-0.10114714076606031,0.035084398983729774,-0.04512683058171298,-0.0017821718068030705,0.07353117692439123,-0.04463283350219552,0.06764280637105351,-0.003932933334274085,-0.03321188669579913,0.035973311170825854,-0.0033743940730562804,0.012754002832141925,-0.030796571051443445,0.02889155259006419,0.012412840988783713,-0.05139943876686924,-0.002161178414692098,-0.017154443322375906,-0.03333428120797151,0.02630905742020261,-0.050909509992066275,-0.008679653314169651,-0.08886475281427067,0.1050961806650546,-0.048372028670860386,-0.004018570036609461,-0.048262851610190595,0.017511561156603222,-0.1264628048812359,-0.02253131501069438,0.030994991563457714,-0.009365148535029427,0.025745743924626176,-0.013078940344687692,-0.1002407562900573,0.01064294240067577,-0.02617985135298128,-0.04296324990384214,-0.012720128578568225,-0.04991781016013154,-0.010267515113044244,0.0681297110947194,0.03423943160091674,0.00900646296749174,-0.02484212568753351,0.021925252387401877,0.024214141262073,-0.07204063243104407,-0.027626784841745407,-0.035180852276259306,-0.013402011823024803,-0.042360366710961835,0.0076816734323538974,-0.0067581520536520775,0.10825925815472749,-0.07695095243223933,0.02641884457656022,0.06428342847462451,0.05253083532940655,-0.030419884127164093,-0.08512605617655533,-0.009956995125379986,-0.10848862379171477,0.03312632146522383,0.08969181345123553,-0.040433318123459794,-0.008535404494144071,0.052674156362808956,0.034088279003606496,-0.014778436003782593,-0.05741264679331238,-0.00584282212059489,0.07689693852137289,0.053541807995963926,0.0015526996158815283,0.07793891530095372,0.07736912586157049,0.1633724158151481,0.016120101900390694,0.09621970480924749,-0.050219832544313274,-0.018287166684734443,-0.033525682232533625,0.051956887855339313,0.008197271474232302,-0.08002158514364319,0.042905317400371505,-0.004005531120456199,-0.0449555335788657,0.015220159566123291,0.029525868867069895,-0.019924357830180203,-0.08891550277727754,0.02400363548084647,-0.0994976623076051,-0.026313756836493743,-0.05010086612632773,0.010374182079682336,-0.036652490092818325,0.05026609625495537,0.024462363601692794,0.020459920764569383,0.028265447912215497,0.12537249345151136,0.15572404932429315,0.06888930319711208,0.08890228462497071,0.006807332552130769,0.03606360860098628,0.059251751671072425,-0.03358360029470197,0.014892857492404026,0.07683078322719293,0.0015714938244592066,0.07882154186178596,0.025007700181488183,0.022114540723297903,-0.08424449869557689,0.03741834924437813,0.051743996491322886,0.1300239435833786,0.03843001573961838,-0.055664002342862236,0.03807603737992203,0.06399597841691257,0.03736943132212751,-0.03374837889636448,-0.012181989410260817,0.01974059643767691,-0.043337589390760586,0.003924347502730299,0.0647020077038274,0.05336222475439773,-0.04435178227695948,0.046937073845210835,0.0398449986137836,0.035992637083182163,0.07963355468177273,-0.04954899002586714,-0.025676575844765456,0.0007753092753475627,-0.05139928087216746,-0.01813394253646751,0.0127898422571154,-0.02971273580614932,-0.007043561403891697,0.008824313828096283,0.014820295112974825,-0.0007691099732947033,-0.005201976461994119],[-0.0032490054841762123,0.04333218578174742,-0.0030100796368739023,0.05604600798080394,-0.034846892712001754,0.01529155476300311,0.06978572125852793,-0.02790031905632326,0.013471855283978436,0.03825557139808151,-0.017100155073431086,0.04395772802814999,0.11666871578295013,0.04140023266607765,0.04350473509927457,0.013268376012992423,0.1054711537234476,-0.0017917039492331968,-0.05546109552895173,0.02477369721844907,-0.011536325987247858,0.027344090967340647,0.004951084983079174,0.07005431364457827,-0.09267692226130488,-0.03735900027389445,-0.03841660078238711,0.016089871474795618,-0.10678285801886578,0.011064122716649182,-0.061988582124714205,0.04118617401449507,0.04546782375814005,0.03271088256603651,-0.03999076429263179,-0.03340312216983719,-0.016529402837113134,-0.002926416435570104,0.028409182828265944,0.07277055047665368,-0.011160527261557066,0.0038660563416009525,0.09381435034877392,-0.07990016639133792,-0.050294615917898966,0.06744824084554892,-0.06523439583068691,0.0597936945173733,-0.012252247392291499,-0.04936245579436123,0.0008974221335501739,0.09710996148452677,0.026335060139944386,0.003240894764630987,-0.03680136582714569,0.0251290447428962,-0.05734007118017857,0.012735708657174355,-0.004632895426572507,0.08323614073312646,-0.056921782050142214,0.00787658519840971,0.037615161535056466,-0.052442950004747725,-0.05389637557220507,-0.03746359015927959,0.05006263536396778,0.0911855949690895,0.06686344046108368,0.11206022986132873,-0.05088741911290585,0.04351837210060395,0.0031455389167734135,0.005362213331585734,-0.08787604975170067,-0.02204964172262528,0.011854264223294803,0.07939947455751117,0.06438664971330528,0.08531705703991847,0.05120555497836671,0.07389909945833634,-0.034490482382441116,-0.035434179466023195,0.05838886002106529,-0.0508880644699536,-0.0082934945972135,0.009130768454386429,-0.040674013157557955,-0.002103995038613881,-0.02226028800946662,0.036184881365652406,0.023221769490500675,0.02592168128586833,0.008805628870821721,0.0023900725814829755,0.03543746537570308,0.046274348446250564,0.06672784792380577,0.11451464090792343,-0.03578803167562119,0.018578050679318798,0.036879241121427764,0.05402952436808367,-0.00910600925123605,-0.03077356006805518,0.004439220090890729,0.005940091055570458,0.05795643199558791,-0.07494244969353046,-0.018786443353907122,0.026313502872835477,-0.04297622541966474,0.025389721427900677,0.04763884547431983,0.022597419864947114,0.03867181708473323,0.04971763463089537,-0.027581566887037775,-0.0005946367155631933,0.048543468584069126,-0.01638287026526154,0.06297995945305351,0.12830152061536962,0.019624486690851862,0.0772500933526374,0.1528906443897959,-0.03607942781274586,0.013271420393955239,0.02280353899191283,0.04929003456145586,-0.018157026534574915,0.02477237000820792,-0.02487541134996236,0.02409738703785832,-0.017679949714477908,0.003812251450217661,0.01189220473392194,-0.007675946046852008,-0.02041458751265183,0.028942840738734633,0.04976065955345537,-0.0005127506452234126,0.044942093018122256,-0.044321684241404743,0.0700973748675298,-0.027997596907298215,0.052297432549194535,0.07141838793557928,0.0044219241737540925,0.01955579247615194,0.004500716364955285,-0.001647128147763271,0.06370452645517125,0.05972031881802802,-0.04068674257610982,0.04630223980912856,0.09658172067692658,0.08975014403434044,0.027540069013229185,-0.01333405589077216,0.054969784522139,-0.07128962943546607,-0.021060946022010984,-0.10214395033192823,-0.06454208543073726,-0.00979508455808067,-0.079475441458037,-0.056089012448622994,0.07785615836522757,0.04455874569006636,-0.060299170212840765,0.006840145530573362,0.015884593836965468,0.032744952249970705,0.04472423811152058,0.01481478929782911,-0.11089956685783009,0.04921022236076199,-0.05803410842376393,-0.016183796807771964,0.03706885306317659,0.016814862078886446,0.008122321553942113,0.0024963602813647423,0.06988111737851907,-0.01961539653734999,0.05030480765779844,0.007489577746076296,0.012438965595393524,0.06061367688107611,0.03266605671212082,-0.1418194283563054,-0.05452500581400087,-0.013365169821156545,-0.08671561414798097,0.06883075455470025,0.05498064867395042,0.015751279876918996,0.02716047573332395,-0.03434949057258799,-0.09796731523045084,-0.018525648163213143,-0.10572588256930814,-0.0657800649876743,-0.0059746651530097625,-0.1275165952493256,-0.03911446701240221,-0.07207457761330295,-0.07297707018401213,-0.02207022045603098,0.09172754892615709,0.0026496724199031835,0.11646558063218518,-0.08012941831576098,0.07970842578975028,-0.0031326179138809786,0.050740669524540614,-0.01827213326358771,-0.035341296321338596,-0.08548156323969648,-0.019988136355390138,-0.06042404660275331,-0.09276121138092838,0.02184202548820373,-0.02503586644986374,0.009286014936685605,-0.03120593222358398,0.025461501955343545,-0.07714750640662606,-0.1021883770429831,-0.03532928815055994,-0.07720338905938016,0.03625276475359862,-0.04619191935626448,-0.02833029816227548,-0.059366340200910875,-0.0820998090665477,-0.06401969581798736,0.08490329191460091,0.032494491751602496,-0.01993012517215319,0.0409638831921687,0.006771883460687384,0.0875146825672462,-0.0011533011488513525,-0.1430107136479892,-0.04009084421836996,-0.056709381132772546,-0.09255652180313886,-0.01760681887453357,-0.07197419631161732,0.03122201832246719,0.06032658092878616,0.013126900602400734,0.00171670150214707,-0.017731479644214673,0.001954974169723262,-0.03310432954601521,-0.01678975470901672,0.009593195227567177,-0.054319091176718605,-0.10855978080348731,-0.048555312227315156,-0.0618182847450717,-0.011535078468086395,-0.04501482048179996,-0.007281104382974822,-0.0753034227879012,0.01849504924390189,-0.01605024679099221,0.031081280179649656,-0.053914974231891226,0.010164877042923588,0.033647928653808785,-0.06304184808139858,-0.09656635470420828,-0.02983348939334078,0.07587207116315853,0.06610204461300993,0.03133827998599505,0.011929356053029859,0.11455070606317955,-0.02025936298552634,0.022840987095463346,0.019081379409442826,-0.00003089929573461032,0.002981516172841872,-0.11266510431899453,-0.016734027923758908,-0.15345427677918566,-0.12454121521451156,-0.09265137062849231,-0.07585371034967679,-0.17225039075135096,-0.0729477261801458,-0.0633359778666381,0.01160639666516732,0.03192262183122621,0.03471294975699707,0.008156448465468194,-0.014295348467201418,0.012517010203579829,-0.08890916927500032,-0.06105534743165147,-0.10672469407987575,-0.09289468771421083,0.06756814996378133,-0.08367475457386583,-0.05690860105878106,0.04508681059579949,0.016733013927821283,0.08417348724170381,-0.1293465877861557,-0.008078495339020912,-0.0327352534153585,-0.0009230437131559912,-0.003107102663538579,-0.008501787636837139,-0.013234911941434458,-0.06177226079986678,-0.0009198030299938458,0.01617617738418852,-0.15517568979072388,-0.04206514428115633,0.020901246944032257,-0.06150401221615674,-0.03066559424574073,-0.023213148209693783,0.13981403896144265,-0.01618796781398671,0.009485134981740966,-0.030152730180948814,-0.005925812113502522,-0.03280077834863954,-0.031203184366492717,0.046044146550909444,-0.02740926141747688,-0.006038521406011468,-0.011126397440175023,-0.006512605295499046,-0.10735789325764773,0.0287581089327226,-0.010090430853808842,0.06799366013767082,-0.027915670494988987,0.057575367042204034,0.018606282279869327,0.01795944840137093,-0.014894431733713263,-0.11426284123215891,0.015413484592661123,-0.07610542476122098,-0.05921103394541008,0.016968679208167598,0.03873196420570522,0.045689919463990265,0.033154313882098156,0.07020050861859085,0.06737684083093201,-0.0706556300214077,-0.015177807841265021,0.008915775400526318,-0.013632905340803653,0.011496561101764625,0.014223790720498402,-0.01255135041618543,-0.05601758777388511,0.028208290339162525,0.0035678848085706227,0.0230422146664803,0.05544835415392791,0.05369116749452427,0.012379890981827334,-0.01131725473896727,0.009074053636437355,0.06966254784469685,-0.03708101309975859,-0.03184297541434213,-0.062140698908616114,-0.015265043649986671,-0.05895423081826026,-0.1389658970646802,0.1127803420750518,-0.1415764162099227,0.06699526096881554,0.10825502191070192,0.05608867196996406,0.16098145015134896,0.053715627042267435,-0.0073298378289669295,0.0052756322542938106,0.07345282311020679,0.060758436559122,0.020868926253849552,0.012666725230592306,-0.003389903819673463,-0.017545370774958914,-0.0034708829066439073,0.0030834654930847268,0.06426091809789745,0.12824755093650367,0.09690907758013079,0.1581216319930463,0.02764346142351553,-0.01497349505517299,-0.07525893292218856,-0.039929872928637526,-0.12852225178895196,0.07036176982550182,-0.1422178693594425,-0.0034474461595333196,0.01964795084350621,0.10001836645649445,0.05625052037916805,0.03817789106002179,-0.010681154698899896,0.08629114053212898,0.00932267328590005,0.02678861669332419,0.03262609118273168,0.04510966497419802,0.016823019200557114,-0.09854696480304961,0.04316841063129281,0.09048974992592031,-0.006202828456107511,0.047264933340764155,0.012963912201494551,0.017094843014774572,0.101199098660206,0.12417804465478825,0.05628883716057852,0.015284983255066031,0.027238189348485993,-0.08528810629311069,0.008947486592462415,-0.051183216947140286,0.02495018749373003,0.04857789011404297,0.0721331773827659,0.049791424343947545,0.022372565855245854,0.13137405506779223,0.050765769328894046,0.03987472288081589,-0.013568649066033134,-0.027908622682591526,0.04043601909661272,0.023021983494907985,-0.043508851571437,0.002775985925627387,-0.0960686064773996,0.07839903191128138,0.06489697800454267,0.09120342399518383,0.10068748799976326,0.12029055103036296,0.09612264595197813,0.08300471057804884,0.04779510577133113,0.0028858342518596545,-0.016045403612557872,0.04543276614224315,-0.014317592026143584,-0.0640052976209818,0.10463196985722568,0.00026611009895876096,-0.01721705093743492,-0.01121548199853728,-0.02459386255992034,-0.07649272975414931,0.03964211407264614,0.02763373704996386,0.08499881188973032,-0.02387365263202016,-0.007621747431202692,0.048534191762029326,-0.10608922583543562,-0.007228821757138263,-0.04126950624077772,0.037401461059346906,0.059997521757169776,0.011050354985157518,0.060780725859972164,0.047183326846192475,0.1323099046531332,0.08591193100106778,0.05720076454274681,0.012597409679687815,-0.05892536831738974,-0.1267652287613222,0.15359949663193403,0.08288060826363586,0.02897895336104936,0.11716066774389532,0.07078708631231356,-0.0018327213405992557,0.0029991464016776944,0.0693443902173698,0.04392668248017092,0.03648004451483278,-0.006747172755591811,0.051168291888269116,0.06465483402759083,-0.010268009014270236,-0.019116052706071085,0.014197837305172151,0.054947968245879664,0.04986564623401577,0.015734934562733817,0.05927962909784336,0.03361150683794569,0.02538263574709659,0.07166724349622397,0.0028514315116146467,-0.015564920167317368,-0.06392074144521054,-0.05781205937887604,0.003050715746899393,0.09205928830585378,0.06684200936021734,0.09655639652988612,0.06271951315911273,0.023715978250344345,0.021873243419842342,0.05006257738099542,-0.021458215339707647,0.03724095535188008,0.04060479463130227,-0.027657227880599846,0.007446991558596937,-0.02034771520700285,0.10076368050927416,0.025263759642258393,-0.004081687653535515,0.03943828084227088,-0.0013669990114552376,0.011830934842715518,0.06459802295536944,0.003971122077354414,0.08383863163404594,0.08992091082055297,0.11117308244093492,-0.002657777405304709,-0.052160741141662796,-0.011549275062054531,-0.03578279125571586,0.04674708986898181,0.038944444474627304,0.12240000475064605,0.006381795990197239,0.06423133559178269,-0.020439248746927995,-0.0428660003280683,0.014763703108582032,0.019072129668737628,0.009783613168525296,-0.033262742723156935,-0.08236941755912706,0.024251372591101016,0.0083214850188715,0.04386098619014644,0.10460811675988962,0.013416749716619544,-0.05274645698394532,-0.010713562618525095,0.042289864304814836,-0.04513217208646241,0.023474648483655637,0.06502878430123483,0.01584401087230587,0.0809396436143724,0.04424311147202708,0.09342887602644699,0.06886376663287083,0.07113005278573176,0.04528632951313341,0.10193708737065256,0.03030740126388916,-0.0007766605670014587,-0.03132169501053555,0.04729092066331414,0.008746339119188717,0.017429300855323526,0.09154795149077849,-0.017093884560444573,-0.012941238019590007,-0.023626360537708502,-0.031552688631364546,0.00933747193324183,-0.05368691820961783,-0.013896314831009738,0.01789567329026667,-0.10033216199245987,0.003721659193869696,0.016435080209253907,0.06368092108558744,0.13031057722744938,-0.06690309973435178,0.021759140397496355,0.004478296631581995,0.004307440710003067,0.10547100932383738,0.07595126607009184,-0.0452327041186768,0.05150647854606674,0.05804826087266844,-0.08382180067936693,0.045401064669560155,-0.053277849073035476,-0.08469968511092679,-0.030044503191701023,0.042149142113044644,-0.07234621366508923,0.09648627760649404,-0.07448623909740686,-0.013256841387774044,0.03759788806181271,-0.0966267839937957,-0.04494558060165202,-0.04908565448808835,0.019251678619327625,-0.005246995209983442,0.04585997265399166,0.16695627727788773,-0.011332659478964027,0.006693845204048728,0.08657764357996191,0.08769906318068847,-0.027109402732263428,0.0002315889145199121,0.020462490699204337,0.04848939831620114,-0.03706019919441937,-0.08426400665712207,-0.01524639773840992,-0.029459718577909254,-0.01015399220053013,0.04158083578006521,-0.019446364565268295,-0.04468895218422825,0.03685668420549754,0.032807672343605244,-0.061876754099266705,-0.059506175055600366,0.010015184704958428,-0.018947472828947372,0.04901639753087783,-0.0953879063815573,0.024168802398514343,-0.05730608658824588,0.01139426313384966,0.08246850148225753,-0.022584433377880405,-0.018781328132673598,0.015782420841280002,-0.04523136733133308,0.028357908089978703,0.0043397432538534305,0.006813791498655249,0.013846204100202679,0.0317165689875418,0.08036426429689733,0.012702806708515807,0.005169115767485555,-0.04661781378660449,0.041809642041218786,0.042330524169142326,-0.035439317242011895,-0.006646645581807633,0.035705551122247645,-0.06881431266446623,-0.015560870986077776,-0.004559862070857382,-0.0032471239711201532,0.04477212616900208,0.06339513490387672,0.00519405873959429,-0.03576672872059256,0.011124181148887163,-0.09562242467641362,-0.07025635068517722,-0.08575044463716713,-0.008454549471509969,-0.06438328950217753,-0.04364244835974859,-0.06944336777764927,-0.08092476580319419,0.08104557495560852,-0.10616601443459862,-0.02448776248167239,0.021200278929204487,-0.04025518361958469,-0.09138316840117533,-0.04943958055989364,0.029368436473968824,-0.005525793028590346,-0.07675980014774836,-0.08987567589617562,-0.018432974475524708,0.0034775854480508447,0.014688561956011708,0.06515951085956682,-0.02465844467765473,-0.10118225772816915,-0.09942311375936186,0.055501965506259555,-0.041940784637558355,0.0172303038493596,-0.018605746397835545,-0.010634854640745832,-0.08476348790738428,-0.05869251718205417,-0.023864747984936447,0.011534351955152544,-0.07468609099756905,0.0027876224229497395,-0.06510108676092023,0.06095951824267628,-0.06838715845371583,-0.03865544038769509,-0.04042041800986164,-0.07118614208606507,-0.012331448123627294,-0.0017897231248956372,-0.0830832986430071,0.019672307698701902,0.011044195888424365,-0.047996157976686715,-0.01429271789690095,0.06682802371225215,0.0020376073644151837,0.053161728032026206,-0.022723343154313423,0.004898684477004945,-0.016671732826956834,-0.09933101830842944,-0.09127068945072035,-0.027250606818234376,-0.017026864180789962,0.06294197586934623,-0.046801062138645155,0.09057890864162531,-0.04717862707724524,0.007771427268401533,0.02383541826076124,0.013186007923513852,0.012261511874615261,0.0349269794292433,-0.04080166965483165,0.04766189847627444,0.03946390340957817,-0.03833662021029562,-0.01707490405548477,-0.06498680288575534,0.0938884370183919,-0.08548140190756812,0.014932727638808482,-0.033971883280722225,0.06188344606803939,0.10377292496917517,0.060601845639049766,0.09785031581070965,0.042491953838615135,-0.05167014268056262,-0.04524145690427122,-0.0056784213622626,0.07897518301612645,-0.05172270072652788,-0.025037895731302558,-0.018401838492608628,-0.010383975528715913,0.059179999761870994,-0.001034243201740615,0.11489973854941135,0.0011543099337487665,0.013445497519544764,-0.08243902550131148,-0.0619454641524988,0.002705061814012204,0.10511409138665653,0.017381701717670412,0.018657336508846236],[-0.022965054565203105,-0.09870890941167687,0.026131021508914873,-0.0024129820286950127,0.07203098649679018,-0.014942037667397226,-0.10681197768324631,-0.031231221696269382,0.001505546353664164,0.039026183679579274,0.055383113482672795,-0.048791256278702906,-0.032879280669942924,-0.015905864418904337,0.005339407267242756,0.014219859077914503,-0.14922101666850782,-0.06483442890195099,0.00900759841537383,-0.00576654485505112,-0.039122607828448216,0.038723494810443446,0.03251402807870876,0.011347299666147012,-0.03641378037561175,-0.005516376190652051,-0.002164053113827504,0.11955312365092048,0.0260696383762921,-0.009515356953437653,-0.013427811116356292,0.034226872283940064,-0.04156170903391167,-0.05888111985953452,0.07832851320072219,-0.07918384939649716,-0.0037054143906386943,-0.013615007226214056,0.037472979919267534,0.007007006688365336,0.03499820389730165,-0.11832878040876257,-0.010292988261442733,-0.08440169181230708,-0.10685507020174126,-0.015659895250899995,0.08165329263934311,-0.02754524786421711,-0.04229898837474728,-0.049045004349302326,-0.00619512416737402,-0.06132425280439083,0.0808424653480282,0.011347903383035741,0.12266856245081853,-0.0510474055040849,-0.08085127812023483,0.06272150267592659,0.03522790271578396,-0.08320575978726007,0.09623846363432444,-0.03696870647339498,-0.09319519366633862,0.03413675311998284,0.0299531287398201,-0.034716831270236004,-0.021377311350427752,-0.0726970830149078,-0.017243611424606557,0.01181611130349656,-0.012985587793916729,0.022275255096218475,-0.07252188364087181,0.07483361592700247,-0.03031403240724883,-0.0020725775915421594,0.008041268351268577,0.01904733659644869,0.0695482459794769,-0.06723966459863123,-0.019718678860343935,0.024160633286721776,-0.04661884813829916,0.0035859562781193517,-0.012734830923062193,-0.008528359854557195,0.056044200153823824,-0.0039711577104465535,-0.04989164186450732,0.016420530031869315,-0.048261161247800895,-0.02030304020187226,-0.04944226813218491,0.01282793395579591,-0.04973227778317292,0.040519312729371,0.0033670902895823066,-0.08702411221036624,0.06302138094281201,-0.031254029306611635,-0.1344329131314546,0.06278420365927688,-0.03283913597659918,-0.034303052149900225,-0.02461691496480745,-0.04726609400195935,-0.04129944929369933,-0.020354931817067174,-0.04597548281666189,-0.014207851841839706,0.017638175785702405,0.03841017070971069,0.05399303667431401,-0.13014867370690456,-0.08490449746414415,-0.0025562279405868926,-0.08122309646192254,0.005163338780648625,-0.009505821531920925,-0.0600517593845129,0.07507761781374687,-0.056904448701738275,0.01996680861429979,-0.03455050717878818,0.0037243850962561213,0.019748891274621615,-0.08919282699487213,0.01046648449481081,-0.07857812067201357,-0.09975005284243119,-0.031203354348514883,-0.02701424012245074,-0.04023247608351637,-0.010076719153113249,0.006241511060137464,-0.021326814966663405,0.058850122853457976,-0.001701656310873712,-0.006480444034693491,-0.1277608080233302,-0.10337076199637729,-0.05179851957559672,-0.057738491721258015,0.0011958119764216796,0.006101563924628029,-0.029829367781978398,0.07049754901968625,-0.03231139286552468,0.10599857184058868,-0.05502924037111929,0.059694125827988845,0.04199017029987679,0.01846278659661721,-0.028523921145773564,-0.013499893652353722,0.008819198529472709,0.0006585604985320769,-0.03346205112443024,-0.02092359822131326,-0.04702194272049094,0.07088019829163522,0.003655064901468775,-0.02480520163976924,-0.021914112344561212,0.014237364012162072,0.09468558649476774,-0.003577660811161418,0.11219971067150027,-0.06544257616421444,-0.07893941723928279,0.05316036347093852,0.02634743692181221,-0.061087073492066886,0.02224127476872564,0.04003221682263326,-0.0036265169202162684,-0.0652808936695246,0.037895190823217066,0.016942765771712706,0.061240992990611615,-0.047895756783134166,-0.038072704949514785,-0.007820420903176417,0.04785367305280135,0.07359820145430501,0.0323561124707989,0.030701473336685055,-0.015931086272954184,0.042879022960916294,0.02458304744529614,0.017630982258509172,-0.029255351884578736,-0.05876048272934928,-0.008762364123120722,0.014534928842603809,-0.0941390938852067,-0.02815499310596814,0.06080057988803323,-0.06968664514404332,0.03179346758978833,0.029068931417680834,0.01893075837018223,-0.03557947285964943,-0.04859367059826355,-0.05795296198974726,-0.050260865461463945,-0.0443568813585567,0.00920576658742908,0.03868927756615378,0.11113776241620323,0.03596430628130751,0.13486119078536238,0.05599682898130807,0.006630774667621328,0.07397561146614044,-0.10189955511161558,-0.04571609298541404,-0.07567266562169216,0.017459433195228784,-0.03908455746815493,-0.0811133346012714,0.0473916694580508,-0.048893264834595315,-0.11579802491755786,0.09596461288474013,-0.013167577173563906,0.07149084476295248,-0.023618634879330518,0.07409808458439153,0.007315093131508651,0.031243341473349374,0.14207624413631914,-0.015163557302765002,-0.02417539135201576,0.008857645490547093,0.028475856211943578,-0.03715996421246394,-0.011822086014503344,-0.008158606095321475,0.02918649775517019,0.00224887819497293,-0.06362237719857987,0.0005606235390019611,-0.033187531633133066,-0.056123877938408284,-0.08051138625797946,0.03286478354893005,-0.11794956023180479,-0.021802557520022706,-0.003424831471701152,-0.10310608698848144,0.0508124523346475,-0.04193695651111902,-0.020823110217407504,0.05893007961467536,-0.05299422003365298,0.08490115317234335,-0.05511180271691906,-0.0002635314319132848,-0.03738357207295689,-0.05076960252729739,-0.10415176358600269,0.014620138705612217,-0.009053167381112094,-0.05844230455941246,-0.07113401878513231,-0.012252478280440635,0.05209463083496254,0.030421888955510238,0.012534158986024188,-0.014051381302173675,-0.0017127801705223377,-0.01042471814970844,-0.07878307221669098,-0.09346147592553719,-0.0207271409190287,-0.029827231484781967,-0.021969476197942355,-0.11753626014034228,0.06677681978971106,0.03191909143860469,0.07773385874032834,0.04686331071154128,-0.027592844004096784,-0.026499593956187645,0.017440869999084868,-0.03424858151791397,-0.14348044456378853,-0.002536419888937522,-0.025780352955460148,-0.03930421244430532,-0.022382487439077857,-0.014848055321650124,-0.0365427090179519,-0.009519173744025765,0.06484304033030666,-0.012702374409801298,0.0015617238293296242,-0.0351353913901572,-0.01149897074539723,-0.026949592340723305,0.0021104920534712416,-0.017617525792720256,0.012366726639042697,-0.05461387466175918,-0.06857135848474294,0.0008752602912082572,0.04739706802116915,-0.05170005779619955,0.0005137082048471565,0.05493115883949995,-0.0044772924497197995,-0.03221294428145484,0.04735249306966115,0.048382897407280336,0.011991938623087433,-0.04028272099717077,0.05755953883468692,-0.014064340576537273,0.031721991582256505,0.0010255115363090323,0.0015973987632881856,0.0242219642710699,0.07388255916641788,0.04481423653305105,0.04244545185843646,0.06147585927775018,-0.049242230968693866,0.04994868401008282,0.001823007008123991,-0.06078136243743063,-0.01884571339105801,-0.05840119475960259,0.016475212587437445,-0.024874712950472548,-0.012885792145628348,0.03481984702199417,-0.041430946480829796,-0.004979702860186,0.039257596054625025,0.03572810634822968,0.014429104780294529,0.09019056071105092,0.011222111511004888,0.019666109362530344,0.024655088044303393,-0.012925233433277436,0.13002736158115022,0.12521858484850734,-0.04282003489641939,0.039846577365654376,0.011775747075394244,0.05832238354951916,0.019188920237650425,-0.024061065380840397,0.02704992886757614,-0.01752477153307263,0.029807534379305917,0.08938964534938426,-0.05045508777716668,0.04272132313842186,0.04406302533681509,0.014579148101439123,-0.04396607728942641,-0.0029214599997933947,-0.032447917640363234,-0.10704760137341812,-0.09070505655066481,0.05587195761186802,0.008366848817234797,0.055161107653191044,0.04979684859876182,0.12402157517974007,0.1005524750508377,0.09347786936832622,0.1241754393685236,0.044374220438964,0.07808033553602262,0.18102224938476189,0.03100399613131951,0.078667276607554,-0.025260499335150042,0.03156467351537566,0.06063222687409117,0.04927782465621259,0.06251650181263674,-0.01489440866460812,0.012746936610331149,-0.05051037914211076,0.03253206609212536,0.019019348359701965,0.021461260581226074,0.010644922710011318,-0.04976631986324134,0.02198336153573514,-0.04236812296985443,0.01007758211397638,-0.004235386684023979,0.07997941361685952,0.1120735296545617,-0.04241654273629794,0.10659959436082617,0.004893863758691437,-0.008184779202312769,0.12785534854370356,0.022414942433795926,0.048245120073716646,0.08836507932982561,0.12271965291303588,0.08460544460967731,0.09666182956918376,-0.01377922055503012,-0.003574625378241295,-0.013992156292883313,0.032496903253412854,-0.019600656952154894,-0.024838682260075174,0.047177070534628995,-0.02173165150326294,0.09552513190011892,0.0028339773159539055,0.0384871828188072,-0.002418373164941673,-0.0003702782689874095,0.09347079809805561,0.08002200030261451,0.052821750648109705,0.044234350193828244,0.08451963318452392,0.06411891181257182,0.04601117076305801,0.06455025826428817,0.1493954607519899,0.092399291563801,0.11705675169429296,0.10134395139696906,0.1193431353561081,-0.007900932108154183,0.009837263617992377,0.0022905251437763214,0.0480880193212044,0.1247311486970211,0.005703297495731739,0.008690196922809465,-0.04401891079667966,-0.0963284316327367,0.021607268673151714,0.0644927079142395,-0.029270061813826614,-0.04038451601945682,-0.019764366595286353,-0.0511382468974582,-0.02722263358019849,-0.05611329754179237,0.022059429955358728,0.06716163110050201,0.02262812232957294,0.1433564518690529,0.058459513828410165,-0.03828228468592636,0.05622957845128621,0.03561282621484298,0.047699936215810534,0.12669562604199022,0.03272081396080649,0.11653057889879083,-0.010573579917547045,0.035445759449430875,-0.008876899074368715,0.036891780137789064,-0.020341850409297552,0.048882223467483506,-0.0009503957667789688,0.014049581423226891,-0.06041057927513389,-0.007234570401436911,-0.05790887492807264,-0.10426417430713919,-0.05638868048537166,-0.0407795681486502,0.01594044391090506,0.042052758071260805,0.008104207310387907,0.02963230286955203,0.1408792235154317,0.08013823118394625,0.05417019071675487,0.06143574169961107,0.022115006686671854,0.060581304590276934,0.11307274182456027,-0.09453994412463888,0.011338601008912439,-0.045499449603035216,-0.020564067261773834,0.06895245543581958,0.04894222030238328,-0.017820571942418352,-0.01637048392363681,0.06206797765879078,-0.06598685012861295,0.06448473587435809,0.018061789715409903,0.00011669977044885443,-0.01016953748856638,0.06395635614226905,0.030107801506584823,0.04774917295905164,-0.06593364805835847,0.003071589759445397,0.00006206259394430496,-0.033834247864274664,0.03877069473016886,-0.05420734894372867,-0.034696510506511784,0.08667979510103656,0.1117508869831001,0.06315435690787159,0.032966870528813814,-0.027727897392215043,-0.009040290573007353,-0.05595018703217706,0.003956085402126684,-0.012927332061361341,0.038352033067632144,0.017212723315724442,-0.013143229103873656,0.025073720117328727,-0.12267809863133838,-0.025737630279395757,-0.020394039621240593,-0.03768876036910398,0.04549502426041708,-0.031557259704793686,0.022711951162063905,-0.01720714445191233,0.029275604689903707,-0.08679924956877069,0.01471490861423651,0.0008351661641307792,0.056243913757777174,-0.11895329150345245,0.059447195781302864,-0.04205190538807802,-0.02797963371746665,-0.015247857719310703,0.020402650439759844,0.008176824242351409,-0.04718254825391043,0.050080986236403655,-0.024104689086486768,0.0462466682237476,0.049009892138710494,0.04383821784478032,-0.01605882753502825,-0.035975956068332,-0.022462614357037586,0.009892212872596328,0.07308371108509758,-0.13744377318440562,-0.08766570268619542,0.06381466589216082,-0.06767303521715892,0.014621806529962507,-0.09217344987382935,-0.03372641367936244,-0.03485196265050813,-0.08911460995029032,-0.06881025634410165,-0.0501709242294333,0.06325611234401246,-0.028109081113628,-0.07989386760535527,0.0020193684348867365,0.02949330059844961,-0.043410862582885366,-0.05500211914125394,0.04969988466231365,-0.0022957220204812465,-0.11448919919764701,0.015724579050088595,0.025073884221343285,0.0000453746887512021,-0.08658329236764599,0.010744758315117816,0.014387156678736765,0.000549595851978212,-0.014029926426143707,-0.08006106658541191,-0.0457135057623014,-0.04939356150172324,-0.049767264152548264,-0.0643473506586806,-0.009278442273642327,-0.01255891107303309,0.05877155266362866,0.007083450189579256,0.010752735819783754,0.009848479351570997,-0.04283801691091728,-0.07569641643364089,0.10796498470782456,-0.04567231824375369,-0.005414407392435943,-0.00873231907764123,0.08738047149703856,-0.02159796291190239,0.0853494243776405,-0.06569211165763116,0.04351015000385863,-0.10650084522736748,-0.07707160223904203,0.030912198661719206,0.0019502276475666153,-0.0953089547195437,-0.06705548374697631,-0.01919450059884546,0.006031716702375657,0.0453573621593739,0.032541155269219704,0.025403331563607526,-0.0012625059070536617,0.060492956667484804,-0.011548834598410617,-0.0035845369336995,0.016889645249060448,0.08103322597408878,-0.021606081382168046,0.019451939273404842,-0.02474630656806854,-0.020119526199242295,-0.006811894927685937,0.09102156428354963,-0.018863333150569792,-0.045596249516007235,0.02677783934890365,-0.042308980358382944,0.025918464364367635,0.03805131318824455,-0.03995723852329822,-0.055396875381903854,0.029050099812509205,-0.12365931493949799,-0.08494178449246231,0.02877006289785602,0.0006246671977230046,0.038721026631437436,0.11279427430779003,-0.03711099525753567,0.01919420003676621,-0.03518281004147506,-0.045800804542191015,0.0027256498606035616,-0.09217638966594292,-0.07487848326028754,0.04567655927087757,0.031492332456461984,-0.026453815142383607,-0.0023120967402277676,0.021125448897513582,0.04537036274478328,0.05305741576291993,0.030654020551487478,0.0019883143482321733,-0.08949512202401554,0.006457228115873214,-0.037619556825376516,0.019740590763331522,0.005463249130749584,0.014416178198410675,-0.015959912573689814,-0.04789282981105007,-0.009622357292509138,-0.051324480364888694,0.08342061117778822,-0.02491585898938231,-0.014738974549502074,-0.004411507086034944,0.00006624106514918732,0.0030416622773957987,-0.06265696802883085,-0.01600435124023246,-0.045362645853415304,-0.00527445200866801,-0.060357985623509816,0.059250939069849,-0.054203183078371894,0.004904069434485112,-0.0017248193289159347,-0.04462312499719625,-0.031378772165291974,0.0759635803262148,0.017391161092247368,0.037020102513522876,-0.08259324531161386,0.013920056750616604,-0.008455756883302235,-0.030390213980570874,-0.010421346954702605,-0.010990610385832544,-0.05741637308448628,0.09238187011578032,-0.05828257858593018,-0.018120604498317257,0.008177293989473094,0.03778754108170967,-0.05748385468950155,-0.04203611077551523,0.009855424692464542,0.0358851721727595,-0.009290813266492243,-0.000042143250995717306,0.004439380945820915,-0.03848608501522499,0.05693552455505364,0.09909992813309648,-0.11000035453170365,-0.03858799524402685,0.02496399002680051,0.10505221264484232,-0.11432431408245376,0.050574237344677635,-0.057475207068041094,0.04379586282095542,0.03086664494155889,0.0273901076916929,0.004200853522739788,0.03594769001890717,-0.01754938314165523,0.01799148241119549,-0.020625637294054006,0.003814999468187659,0.16484935239700485,-0.0019235864578215185,-0.04378511922201158,-0.09776371492158085,-0.07206209403859004,-0.02135725979330638,0.03521621812937606,0.02677621355762897,0.02029069327229811,0.07081631165943894,0.05641364871441535,0.019569067733055934,-0.04228324712557298,-0.002953420158543809,0.04292504704083352,-0.042386535324359494,0.0029893887838438548,0.029576156661263137,0.11712090130415612,-0.032624450792033285,-0.02918299582111851,-0.028844256928119903,-0.012408386337831217,0.007700120345860171,0.01386289799200192,0.09043067581661894,0.045236624373983556,-0.049665811759121076,-0.03781811394437036,0.08844184244099845,-0.061431740064435046,-0.014360715794317204,-0.05153566535561048,-0.01964712687665159,-0.027186156999708076,0.01971480095508096,0.06385527383238193,-0.0292311507282341,0.09235628499584711,-0.002261076976771099,0.03501903331755382,-0.0016729980194350395,0.0822433840567224,0.0008695873342029469,-0.06252882747432774,0.06912543405823536,0.008361804165638498,0.002012317511314569,0.03623951124566792,-0.05432102699724998,0.04101858206272147,0.038918261760843696],[0.032394854340133304,-0.028328662374506226,-0.05646451461459364,-0.02618085863157297,-0.07723106559044632,0.06515642755583274,-0.023546884540800613,-0.007472469717605503,-0.018363855059429092,0.014898421923271534,-0.07835287835085572,-0.047797607259209965,0.048439259175989485,0.04127537778980358,-0.039596426067579946,-0.03295952861969959,0.03159366540975904,-0.13033687270915678,-0.022594253932866726,0.024151164503898172,0.035063799275255915,0.05648540742344936,0.020777237525713036,-0.016186011723881736,-0.0481849712239817,-0.1256492315501267,0.008782190628192096,0.03756943136470976,0.033237261114780155,0.011890797789017447,-0.026689463773666156,-0.003667995639863296,0.046699814147182925,0.03236015703453123,-0.07711478612549068,-0.05256811817198576,0.004562946704249233,-0.11635212478432487,-0.004797401763770854,-0.002038933536683922,0.02779385836999811,-0.000305056630514365,0.02019414224697928,-0.010975042169802336,-0.014726467246717511,-0.12763564218808732,-0.014028469890477832,-0.0267034372724156,0.06605397485768641,0.11245592976117003,-0.051465086596003275,-0.017699123467459187,-0.02535077219981031,0.08919795656802858,-0.03300142154745689,-0.05372040335030056,-0.02317679061377116,0.036244826830395455,-0.022976497724932095,0.08844869121017171,-0.05979231777329913,-0.03199472350807956,0.08603257394150797,-0.1081800550761427,0.029835166580936733,-0.0499222936268997,-0.03510736514088224,-0.0761957685949017,0.011263530053734106,-0.0028662160153509054,-0.033697347320535746,-0.06897235235288136,-0.0435019309712108,-0.02675929016765465,-0.05992771963551177,-0.07790337907806144,-0.01749102184439071,-0.06815661822892861,-0.014685299807329357,0.07986394836347796,0.0995805147326375,0.02355797071224939,-0.005487782637103233,-0.0026156780436569363,0.05045163570892456,-0.041577854872971325,-0.055488864203419065,0.00887118835551854,0.036555516065568235,-0.02290045859648278,0.055715798661072936,0.036587377343062784,-0.018016811244969975,-0.004523066231222796,0.03937869395320424,0.05738870188162533,-0.0016301488555020291,0.030438696978369154,-0.07982441756467785,-0.008299730016091076,-0.03072087460505074,-0.08530931633370276,-0.07084272175244183,-0.004533373166077424,-0.06328356602697557,-0.0668919478060578,-0.02978483723362747,0.027375714398141727,-0.03326136875686044,0.015122005540279442,0.06891512335551775,0.04283493600576259,0.012324235416530395,0.024762555185440505,-0.0047295541007360865,0.07703972315707182,0.08937784625690279,0.04910135141562798,0.05196238727831075,0.021194776189594616,-0.03970785354699596,-0.051793431364766385,-0.01765949744764538,-0.019928395539382558,-0.07015187842805706,0.04614353050588052,0.07818944683709526,0.044188661564515196,-0.0022914086638603603,-0.011051664207138968,0.08205410157406741,0.006896112086686125,-0.06248000180508767,0.0012158750551035354,0.08036171625410285,0.015667286464547292,-0.03988515784139857,-0.1095687909659073,0.047612446880843595,-0.05357086743269054,0.05895086013640935,-0.12032831262262085,0.04174073010358195,-0.06395689978522534,-0.04856100171788701,-0.028166874598555644,0.004697815992029719,-0.12280148757676816,0.003012707096005193,0.02249047400711165,0.019174110505880148,0.04866598328268131,0.09829604629101153,0.07900724302549059,0.08969484936857064,0.06553874728238554,0.04118032261057746,-0.059215481306925916,0.022273826440910926,-0.07719781723275472,0.03322150978146571,0.004126655233026264,0.027552932607528814,-0.016965817905061128,0.06780214427650644,-0.013553051772842903,-0.02829533890086965,0.01339941946858104,-0.025490726114885846,-0.07691837030930214,0.0028107298799339383,0.007058510346828443,0.03701435989598904,-0.09878319934500017,-0.048413993547727754,0.04897507360977942,0.017357792335954424,-0.03330483702436574,0.01967512911617598,0.12263822917514709,0.10435642404214943,0.07127544773888565,0.07234869175680544,0.0806122320727441,0.031214560079719914,0.10067343018953513,0.04326715531062472,0.11961401776544703,0.018609351089400886,0.034811605023446365,0.0023750403306070653,-0.0313767402349954,0.12278901369644529,-0.024168572959409187,-0.020394525041417852,0.03403125469155187,-0.04429219468040068,0.06957037006213461,0.0042244451897221645,-0.002149109533640255,-0.05285389785994301,0.03831972709089903,-0.018614240579849884,0.02469550830513189,0.07799131181602414,0.041912358312903485,0.08229079175647827,0.015389753700333561,-0.035050919786728044,0.10460602868283934,0.013851988340059263,0.056197515596589386,0.04643816992167234,0.04523749091382654,0.03409479761611954,0.021417753207927125,0.03052249502801815,-0.06839280001400547,0.06826890849021824,0.0036914408876158366,0.10858119135887892,0.0719710021454999,-0.03520755778110471,-0.051823299812197784,0.03502841479444629,-0.013164623087911696,-0.016209124702110323,0.060819214317336355,-0.04991607430716392,-0.02718081764174782,0.10603679235704234,0.15146267311742154,-0.005251587786978164,0.06017650472450036,0.010389415720918076,0.04194084905295633,0.18629449730135136,0.09315542895539615,0.1318777089311795,0.1290238428983027,-0.01201272184161879,0.07390314412739962,0.06620167331879276,0.004944288733377751,0.03522201278361397,0.022806584226829796,-0.017315937072414064,0.054667818949555,0.06624458949450629,0.0418891120519971,-0.02896708117070697,-0.056568015613441276,0.10864765083733212,0.027344620580799842,-0.027704845643948185,-0.0734778769345622,0.07242999483843562,-0.050719217779701495,-0.00770251643385293,-0.009076518064149011,0.0902049609152889,-0.008511183371407612,0.0019092088759393095,0.1001018405209871,0.02635850713788213,0.13761620821666376,0.0231679963099854,-0.0186083363665896,0.00467048969441397,-0.04857830959181082,0.021164948165414095,0.07849220134680196,0.07530573067179455,0.07058207370209364,0.08156428693670134,0.05965537664579648,0.18163654275970273,0.010134838436572603,0.02605206782424792,-0.01923374602952405,0.0032874065923194583,0.006849784470972256,0.07092666299467373,-0.029796626886902475,0.020061018370062723,0.10089773142557108,0.027077227911204992,0.06882381989344465,0.04048872002038308,0.007119353759553332,0.1248533309556296,-0.017724358800736976,0.09365018239833708,0.11730149515688959,0.07224567901634142,0.10511579405726716,-0.00461324728073641,-0.08434796131884202,0.021599016626201922,0.026739824084058707,-0.030768702391757326,-0.004258259544995072,0.08635448574548975,0.07031844170868576,0.07009271511347023,0.05653770363089167,-0.04637887765648131,-0.027431775564283823,0.04041123852335622,0.03290606607713725,0.04870164158932953,0.0025662012304880286,-0.004660640961832773,0.026798332247431594,-0.06488741414159212,0.02676673375670353,0.07760508575229788,-0.019674492048446186,0.001508933424734614,0.009626787451655438,0.024488452475028285,0.11243539214969388,0.17422565730984313,0.13872814610926035,0.00626495951376482,0.027012254292950247,0.04609878263775943,-0.05332979476671914,-0.046054530154937,-0.022406615445277778,0.013674834838878724,0.022836351935217127,0.019894555897381306,0.027865079918727984,0.020175690325960907,0.00850751974121796,0.028663225206353986,0.04354393424019817,-0.08524051682543864,0.04851595528030508,-0.03726867424259397,0.07086296604589844,0.05313483261948221,0.020013961639903523,-0.0696686854281707,-0.022501693309740847,-0.0556127030946163,0.06839967397237914,0.05805817219156111,0.12844703911319136,0.15810530938515407,0.0719421631140602,0.11087954065890727,0.049102105927738414,0.07335478002402546,-0.010854503816377531,0.027823267440778968,-0.07503140541164068,-0.0026154081417111225,-0.06045435451169658,0.010886535217668511,0.00038869861625900356,0.05319503233967861,-0.003748901387336865,-0.017927151866660655,0.00007737762719140499,-0.053967003316104094,-0.08032327780356105,-0.015229015082761803,-0.028357737925109882,0.020823538482879964,-0.01422914450942151,-0.07626593915524751,-0.03299053327164972,-0.02737974985743948,-0.08203933102061654,0.00155548924306792,0.0985211482451191,0.16018453195182597,0.12725130765820042,0.02012836258640803,0.020024023371595458,0.0013997921776790114,0.05897232827621526,-0.044134166300606306,-0.0849227064806731,-0.05205158784249813,-0.04589619643953218,-0.07000663843218462,-0.030861029963547042,0.017513653617688404,-0.05413416482948035,-0.025591261108402256,0.01275709944721248,0.10994921818151092,0.03625076983202284,-0.0018745606636231269,0.016946688004419157,-0.03086961679128992,-0.1579367486814216,-0.06008922938507119,-0.010289228377586772,0.05314257375315076,-0.005266891126768935,0.04218116064686711,0.051642534988633214,0.0779807636124598,0.007115339750339974,0.030786065578290066,-0.039320765517648466,-0.0548846146791178,-0.11780876411809231,-0.04780764823622677,0.04447147605855685,0.07197282291333514,-0.03530261804639161,-0.05123440189737877,-0.062220347119309634,-0.11049907564273938,0.011576601800741137,0.007690922587431166,-0.03749227018579326,0.04900354802194578,-0.046451959231686615,0.004379542057806699,-0.08144939886002073,-0.160968360022301,-0.15309860695471683,-0.17164355738763118,0.014097077773354632,-0.04328177295068257,-0.004501162889175413,0.018566012002694154,0.05958194161351218,0.08286353627831548,0.02170763880439693,-0.05100986976152412,-0.02665126108145828,-0.047922880455827196,0.016692327961480135,0.0009437184282150694,-0.08524060695397526,0.0401301083032923,-0.04445847773118493,-0.0013678692646347677,0.03480351291378656,0.0028281045380474127,-0.04545030790432728,-0.07008987634951803,0.037824088072166334,-0.054588269185842024,-0.03280883746657834,0.034101831628899446,-0.06029459403102503,-0.14519872570530154,-0.11470294227458852,0.030304865727692306,-0.012860195492890454,-0.11016870694291545,-0.09685244715529094,0.03831483430117125,0.13901055693271805,-0.04354270188783619,0.11774773892802898,-0.027290929141676537,-0.0694881581689411,0.03544242761506512,-0.003415799701817368,-0.06953433410917655,-0.0396178078124041,-0.05099549024996175,-0.009557002818138706,0.05806095144324962,-0.05514397277829764,-0.07879349810167206,-0.07195438878263509,-0.004270190413424417,-0.022967200998138166,0.011971675428465266,0.11442685154882007,-0.0822350761441003,0.06705499022275734,-0.036876051406508244,0.046235385468974946,-0.03270579904631715,0.017812348837098223,-0.06894828650935549,-0.07501074970896993,-0.023033711654115198,-0.0035841416133110897,-0.041159210337154084,0.07933189830284079,-0.031937819570872536,-0.047754632163655095,-0.040170364606725795,0.022803442925683568,0.12171641136659299,0.0719328275935376,-0.014918480621335788,0.057335834063227994,0.047611273450010004,-0.04044849457745285,0.04336927981425003,0.004274857800188762,0.011698673966948075,-0.012800654306160755,-0.03721785195622679,-0.018552617422293395,-0.044801802123474344,-0.030421604894292322,0.056837479021818314,0.030608239525405694,0.003728560818096105,-0.09157374417003374,0.034274737028830674,0.02666764846914151,-0.0057598384821010784,-0.07178794037686387,-0.07334304061031499,-0.03277069961015448,-0.011598657133925933,0.009723726353710488,-0.052824204889755026,0.037348916663657576,0.037489210711774766,-0.01123314752814864,-0.1033506508005615,-0.0054975667180836045,0.02945243910981982,-0.026515733491904035,-0.05910531697807917,-0.07292819767282771,-0.002956870948303049,0.07789325003138857,0.022818085007185445,0.020023349714624838,-0.010880648402261663,0.01560462238780628,0.026559017626456228,0.08810586577837469,0.04565849314296583,0.053030384348227384,0.06124367773908474,-0.022320031066805742,-0.09464055492111825,-0.0014722559895928061,-0.0010896294538034678,-0.028403513036327894,-0.03547852233802815,0.016092066621625763,0.04521868512483894,0.11364883692886775,-0.050394826392472586,-0.050993032724887935,-0.019890553463401944,-0.08338678549385818,0.057452420810316235,0.05505164636763562,0.06801180347259181,-0.07285118172811636,0.038908371013845866,0.11195138118880192,0.039947059697154556,-0.04945356309289338,-0.024365351343062926,-0.006347151141236583,0.059449352648915335,0.037834493430425595,0.03771278554359353,0.15994453504998962,-0.04308465062071997,0.011770712828225078,0.005065551956781333,0.005846644214415838,0.0017966131115188851,0.09151863849112632,0.04819777254554142,0.020413035056526228,0.06006632297061803,-0.02462037959362801,0.027297700323787293,0.10821090332698445,0.07908818158079825,0.03339285312123626,-0.03666429632686548,0.05205665272161181,0.0810785449920096,0.041435726785783264,-0.01893055700019666,0.027140347595311365,-0.03345400314733522,-0.10859511059109478,-0.006063907953685402,-0.009249603776120205,0.09834967980199473,0.10643725558935777,0.05364650190146807,0.07620930273776748,0.0494344402116531,-0.026101577632342724,0.006325114665233881,0.15967495746521063,0.05471727430015402,0.09227884936050983,0.07136328146869313,-0.05495410826478322,0.013941109105765718,0.03563240071507158,0.0028210676418404237,-0.05271722543056906,0.08735978376044899,0.0021952538276091256,0.03506101159999418,-0.06903639582968694,-0.007717202362001739,0.10141930838548496,-0.012429517412935487,-0.0011264292424847185,0.07452581236153993,-0.04417242411095734,0.007068932625819029,0.04785149019649636,0.08649320669852242,0.12302759732235477,0.025265391900430492,-0.05212993225185184,0.023762850172252246,0.02397475487817321,0.022519297351411588,-0.010975194156957038,0.052187996912637896,-0.031790354856150255,0.07403701668136006,0.06289584308921489,0.0459443172289796,0.02444395893263218,0.06012771955157109,0.010720072589250545,0.040450669144877716,-0.013862600422256921,0.00775104936769004,-0.004401659149562184,-0.06795646608339863,0.01890450978269827,-0.05600842292979224,-0.017349728773417554,-0.10881224404644929,-0.0013238673486068117,-0.013722996489563181,-0.019187714836359306,0.02024066664712292,-0.030470378927628092,0.16447752067722154,0.0421191713770927,0.0380550014378779,0.06663437215621018,0.08291715983869764,0.028491371151974046,0.04974410045588933,0.08084820723393321,0.13709927238805492,0.11700690505502909,0.012252228036538615,0.059604770708492086,0.01657270965535528,0.035037946439076,0.039401612885207944,-0.0400771905393137,-0.0017429886608989298,-0.044403081970844596,-0.004762617134327604,-0.061965906537869445,-0.05360391107430546,-0.06512528147115465,0.03497900958706458,-0.09271863491074553,-0.01394348406432176,-0.07100257910923481,-0.021680031392439656,0.014221408848864837,0.04269171344616073,0.060983838462930186,0.08267831589319966,0.05464155121694585,0.0024502388825471304,0.05097325036709984,0.027766093306380423,0.13248180386207448,0.04596273534726558,0.06827348396792461,0.1249572458686844,-0.013896248191512825,0.02496124037261136,0.002199219741646815,0.028212025907301697,-0.023490058584245188,0.00845232808498364,0.11624651124277137,0.004763294285642685,0.030100971020072136,-0.041373579222034156,0.03942040743672258,-0.0921832281272329,-0.0041082575168619,-0.0023365137371626015,0.027290230915375118,-0.09337721144014988,0.024408253457100307,-0.04509276158843994,-0.011016672194753817,-0.08690254139095242,0.12202350460035676,0.08509129712364073,-0.01707614428626349,0.03739412817194046,0.1340968900491889,0.015556444510189775,0.031131370894310034,0.04779005874819855,0.005094917181167588,-0.0348436513061252,-0.014466198421106611,-0.03375908085155723,0.019099370517595447,-0.0012748339275920825,0.001893236901077816,-0.0005589811053272409,-0.05156838325565266,0.010844453778489515,-0.02751962770691923,0.028428455756249697,0.0363101831611338,0.028622410130744645,-0.009597615457287765,-0.059967167060461235,0.09486707387806083,-0.02081081818557416,0.033154509897069154,-0.10113143117455566,0.028422054989254854,-0.01225564136466258,0.04770867216622911,0.026191281495623664,0.03524571456397748,0.0334845698018229,0.11156873491133255,0.0028492075298204465,0.11179759154119054,0.023667393446425215,0.057304925783161584,0.0029370505137766793,-0.08277142314253876,-0.010626715095757758,-0.06653415795734818,-0.03855757764739408,-0.03857518613754587,-0.011488307718955563,-0.01439433380185498,0.07820386209214042,-0.016847010967695135,-0.033680581739638886,0.007744280629529541,-0.06927217946087319,0.09416167479380058,0.050648918060163826,0.08096135512217109,-0.027627924197343345,0.035177618977521405,-0.02399117064191842,0.02489613233328224,0.03107408792367898,0.02199693653521614,-0.010765626016109298,-0.006824878051049194,-0.03307418793198367,0.010090137113342187,-0.052573861312881075,-0.021555248694257036,-0.005344650312882413,0.06546932909101959,0.00662695742031786,-0.05179999787142528,0.00827467911396434,0.1842233843074694],[0.06266169942576973,-0.04854018489442306,0.03315876252397114,-0.019072747850611013,-0.0246109882029735,-0.0703793633511122,0.0872782957385754,0.053071552687303285,0.03580917282607598,-0.026082498895036468,-0.008778903806307583,-0.007292414400448731,0.031085992613670243,-0.01664581008772565,0.006976059823780943,-0.09104170730708838,-0.032429871622170765,0.11476015766555335,-0.011277838276216886,0.07760836791698793,-0.010134560574573757,-0.06534118404559332,-0.01931889396472832,-0.039755999740111465,0.04112760403025712,-0.026759522986340177,-0.050316007793154024,0.091570681435783,0.03225238658695721,-0.06373827659225835,0.007993918608831703,0.02491444240353142,0.040476107119150145,0.021208215519898085,0.042582424625760375,0.008585281587764358,0.03218408329908174,-0.004429117344137576,0.016314260868872568,0.020492592702923678,0.09266755024568235,0.01152539302823949,-0.006161522116344022,-0.04862545122000222,0.03777299610720847,0.09343583240068389,0.03981067020253801,-0.07129052576680152,-0.020154563672857867,-0.05772380880704485,-0.10216999402882417,-0.019511986093035907,-0.014842014342831038,0.005635201144123724,-0.03599348754033342,-0.12047152531483833,-0.03037698702885084,0.019108569561462063,-0.015101441555654108,0.027005114822410223,-0.05628515708893172,-0.030383077363882415,0.010739701345371788,-0.006180185607233361,-0.06692499566695143,-0.04909562065090096,-0.019443863613401058,-0.014101000151002706,0.06509505600607822,0.003215663022348557,0.06773707592732853,-0.007005993903367078,0.06893601848593309,0.07364909430427276,-0.022695614174244517,0.028249157351479773,0.004700795975585406,-0.025688772859374927,0.07607812809837015,0.050854498215251225,-0.014704342385731081,0.020701392865498616,0.057647738167394054,0.03998017927864311,0.010263528556332073,-0.06572825459941366,-0.005508034966247172,-0.03823381289894879,-0.0105683431987231,-0.08897683302284294,0.031547239843790244,-0.01748890783526511,0.05674691759807398,-0.0007528874332008605,0.03994874997148358,0.12793384892500395,0.046146659883943446,-0.06493515308818855,-0.013321916508681112,-0.04224843131732841,-0.0812629334531906,0.034977246409774544,0.04918064290598402,-0.005489292499750256,-0.016197078688700708,0.10412348925189639,0.0948221202580473,-0.014625942223633788,0.03423811722841792,0.006032499969519886,0.02215270223719938,-0.0822095736220522,-0.013211656338116875,0.018137071547696716,0.017778593979756587,0.018078785984881305,-0.04292016417649417,0.025632402543265362,-0.027400249015207028,-0.026113908267894195,0.05650630426604408,0.010558380381080187,-0.10234431729777496,0.04890734526074235,0.031981027543214094,0.0647867443592528,0.0858124637002939,0.06806563159144674,0.08649314280275715,0.1310616438784347,-0.057548035789253875,0.012291066207003256,0.012869729795056076,0.0668059378366055,-0.03659620798191583,0.05047819516067121,-0.013385818336781471,0.023070425059338876,-0.03306411639562075,-0.02372903391428519,0.001711427613688705,0.004830917531188352,0.025291012053168596,-0.03781976526772921,0.03256351300809061,0.054724500242924135,0.0858738471420017,-0.05873909473636133,0.06776623591563678,0.06154649096563946,0.10122012543633248,0.020628492126624525,-0.0038712753967402222,-0.035923531504523626,-0.05906936893025682,0.004912253317976374,0.060200645745208343,0.15658108598332884,0.024050362561249507,0.11046435512443296,0.03877242095110118,0.016793861536389093,0.09156893910000748,0.02379524109920255,-0.08913772738537176,0.03369193183575204,0.001549739931885662,-0.03485226345069259,0.04345906392283752,0.12657035870691247,-0.08237875947537276,-0.03781868365043807,0.011116943139640277,0.015444283306844999,-0.05691145811762717,0.026308868868491517,-0.029575171896643195,-0.048474170480921626,0.034163224888166525,-0.06623300065397691,0.02058249634429677,-0.03722946545371697,0.022218496270421786,0.07304548225834886,-0.06053382775662755,0.04696607868096161,-0.06560268936936277,0.05874863685950839,0.026664433033536963,0.023970952067118665,0.021470799721194228,0.03914175904602687,0.07423769635950718,0.10176316581547037,0.0521237610981011,-0.027275259984540813,-0.011886702051497671,-0.0917333468283322,-0.014047271881296713,0.011012931852634154,-0.06688474236092098,0.07087863542074739,0.06713110923736695,0.011672858374460072,0.05027723228313773,-0.1500357895415275,0.07582665284350311,-0.10266204554604973,0.061159743722662786,-0.022461730750460956,-0.06081218714863571,-0.06515030533765749,0.0059281441392434195,-0.04812608830083393,-0.04606966573353219,-0.016836195063629385,-0.040993962849018656,0.011345536993342042,0.0014470979359308053,-0.004833240627098154,0.02239737864550199,0.09821281157276987,0.03811336498896927,0.014585541071754705,-0.06991752344045392,-0.08382131622338677,-0.07207374819159931,-0.025752525799283166,-0.0001914621001584808,-0.012130196937668546,-0.039303611455178855,0.03364363851577105,0.11340378192990819,0.006430642259047567,0.010968992961830648,0.04332327212509191,-0.04010414057208196,-0.025999890088092278,0.007508316134904256,-0.024833836175869865,0.03675231558242051,-0.022297118451989912,-0.15854415425622506,0.008621264552798595,0.009677305161415297,0.004098311726458246,0.08582042243270567,0.10650151079469226,0.032863574298884465,0.11528927142914212,-0.08245664515132411,0.005308873032286764,0.08100246427086544,-0.05524440309665559,0.014694982539437082,0.0605691889572142,-0.07207390010524899,-0.015202604652419375,-0.03024035898687857,-0.0500637283914901,0.013662502280534053,0.058856957097721964,-0.07391424771260299,0.004009290450660725,0.04582456012727118,-0.0836172675998843,-0.1284710202384156,-0.05427404072039706,-0.07283103647582141,-0.02679671729762808,0.0021566489483988266,-0.050511991544261996,-0.0016177570128609988,-0.021860078453514547,0.002473758491131211,-0.02112768769200334,-0.046025049493118114,0.004587901446474241,0.017773874155687003,-0.059048710803896585,0.012646198155692102,0.04222395697036168,-0.04556408415133843,-0.04278492137651964,0.010056350990804422,-0.022020367414256472,0.08906476202587253,0.06481569662937438,-0.13720640729575131,0.04140305990938389,0.0024576353047873413,-0.02305829776510628,0.04531037102284467,-0.1427777549457605,-0.06726314296910933,-0.16036362196955517,-0.04536194593389201,-0.08379231172521197,-0.0022675901566490122,0.04519361302196127,-0.08191770065261435,-0.01060172506310791,0.026297743029108367,0.003676623498216138,0.01820724695039106,0.001871898518962612,0.010167955887937818,-0.02630112888591939,-0.06537880051021283,-0.019218277152176874,0.03087169258262596,-0.015709861936761344,0.12158906488895019,-0.05972768294034104,-0.06179351327345225,0.021569854390718606,0.013413087605245854,0.06805966640963583,-0.08775933562021304,-0.0016103326086249086,0.04450619805942584,-0.011334974624231194,0.001247282329024132,-0.0441713290192439,0.0013431494543909876,-0.05257078525540825,-0.004708970532750695,0.0045474522338552845,-0.088960740785025,-0.04785462962090664,-0.03111726505291654,-0.03452147993080038,-0.00008763043272766783,-0.02537233559561654,0.03584223920640823,-0.026833445552625766,-0.020287851648188988,-0.08379327281848335,-0.03723908406014581,-0.0680391179176286,0.029738852439007608,0.10170724624237101,0.038255469483256935,0.02158677562849339,0.03948515728285326,0.08681994418022654,-0.013309877459489229,0.035917174054260474,0.06693114847447386,-0.03600525932166823,-0.09036541408073408,-0.06523785873525983,-0.02952806602871922,-0.014776879376317095,0.008974490060276882,0.019917248006990976,-0.03706784964960063,-0.13929213966818701,-0.0545406706152286,-0.03232315181190014,-0.03475806958131214,0.03327422020760772,-0.02479768736908243,-0.05155926964394854,-0.10115931590975413,0.0389185208824978,0.012898646609971668,-0.03737845112564644,0.04160965874089082,-0.012331253748634105,0.09681590394751088,-0.040806173218024565,0.024187967783229104,0.03628183694982998,0.037845730007294555,0.08250869909161855,0.12983233243748735,0.09928487164005703,0.044814787686990584,0.03646614127798927,0.034425509785613415,-0.01803307318436615,-0.02836933612835983,-0.010317792773808116,-0.02646928982170442,-0.07377621705721925,-0.05161350362604457,-0.06760568364006206,-0.02034826306941849,0.011552728370273671,-0.0007646368426205382,0.04268097235609453,0.012130486358180996,-0.06755588872738896,-0.0012395286251149574,-0.018470074634066063,0.08515334101231484,-0.007178869563068255,-0.015549524689778143,0.08502860431628383,0.0867438433619131,0.0926408693334945,-0.0404982447447825,0.008842566810959233,0.049132172330389995,0.056397914858035546,0.03137180345645315,0.13559889000333852,0.02786416937472894,0.04862026597188487,0.0895217226632529,0.05064492347365513,0.005025384261191307,0.016496133469176378,0.05458057231556849,0.006600930478663489,-0.016362217665902564,0.04151856286503888,-0.08064190795800154,-0.054545861158927456,0.004915341138775715,0.046949698132375664,0.02882678790736831,0.05480905966674251,0.04044735007990187,0.038877705888872065,-0.013663524383408043,0.09837504321288809,0.018893636192351095,0.02319069584621537,-0.02072295799896745,0.05915852036144524,0.007604471014490317,0.06375433588205123,0.03157826754150188,-0.011580220958056022,0.021395507225680722,-0.02590543459532544,0.05085828428682647,0.00702791652865162,0.01899913153504991,-0.09792108202081178,-0.0016952450366057008,0.0022403514184964647,-0.024810732644046936,0.03766892077222049,0.03958017457720672,0.07306701971502923,-0.08781333557479079,-0.011557803320615114,0.027163368379646564,0.03636494570233586,0.03479664483948052,-0.07169099926384696,0.030263417249684826,0.02845667138507953,0.09297556764949015,-0.0610960065670873,-0.05998557333850626,-0.004906010595920072,0.027702393867560834,0.06645541772050792,0.014826314064664304,0.04506768518307954,0.034498653415034025,0.06485812149580716,0.11970105061271664,0.15987424592938101,-0.073896818754349,0.0005675048667939688,0.02120059796866665,0.05269483890224868,0.01775536577515634,-0.10181375661846935,0.03837118234207649,-0.030288367789119638,0.06286160765808961,-0.11230172232274875,-0.01645782185940553,0.013081473678397989,0.04070141755976042,0.06616224558706031,0.019077449529191083,0.004341516498882654,0.04430301254499186,-0.039328056031658266,0.019946431655737517,0.008778064741920704,0.08590367027236022,0.024887811758960567,0.024352172041672115,0.043337535504547484,-0.027818911581539676,-0.12907274235871927,0.02687279429009291,-0.00023975606705783225,0.015037141081701873,0.031403884847388173,0.06826958470163792,0.05199319827544132,-0.015051733228713565,0.05094883970803155,-0.028988792601926647,0.05989635452569292,0.03292304460326857,0.05375349462108467,0.017998671601265472,-0.015375238045647489,-0.06927041901616286,-0.042386697205717465,0.12218585264855344,0.05026737777723764,0.121023544899437,-0.012990215109292585,-0.036476258922846734,0.022818856833421594,0.05249948205529084,0.09754461678276742,0.02701102168556611,-0.022159217245006618,0.07188281800229519,0.09126600359832958,0.11562696153085869,0.055007135087615566,0.03406830193755499,-0.011898134918099063,0.0018727300704908395,0.03919798344881302,0.027000874997212838,0.016053548889068264,0.05114106448993568,0.06018932439715146,0.008122115860837362,0.011112287129191016,-0.023658815578560793,0.030552602760359208,0.021834184265866356,0.11847198336828452,0.1352704932118718,0.014704640132516926,0.04054716164163631,0.04536528425281351,-0.014811564443877212,0.0035609540825476613,0.026558398672439906,0.00719835573908079,-0.024127386720548427,0.10088406530535432,-0.0005129663926916387,0.03414022532712064,0.016017132736869447,0.029529342608944603,0.0052806304388416025,0.009307184953972834,-0.0907547775748467,-0.00809028553137051,0.09334948458210776,-0.002955558862264429,-0.04190721536510384,0.000955375813469569,-0.009500703611925685,-0.00835505776932817,0.031173824308609637,0.11386379761686383,0.09654899393912963,0.08118048868261662,0.043714493064971605,-0.016689638404839335,-0.013458873869691261,-0.023526406400616286,-0.05423887952107165,0.05214014098368378,-0.039570395240169934,0.007676068656391555,-0.02073878699954874,0.046890813914301166,-0.04292526792857607,0.05359520272586628,0.07182425314818487,-0.0016578438868329658,0.10359856870100381,-0.06955795390923278,0.033263734656525865,-0.029136691187155866,0.009919189291998599,0.06439221991091719,-0.058659875843829576,-0.023893766327284183,0.04338011995424809,0.022774611852524232,-0.046527880324137,0.06013457266368456,0.030136971048118712,-0.0153107137230161,-0.10733754016310387,0.03746100477939681,0.01605747054019551,0.024474674930666546,0.0313544963974188,0.008329455205291988,0.022253237023384713,-0.019786091799958362,0.020080719284309764,-0.048786226207673526,0.06563550275191848,0.13039986314998728,0.0046191817859507255,0.0763739479776127,0.0746962750855751,0.06607544780357374,-0.04542786745380962,0.05352779687210677,0.05045611261047392,-0.018759329954173124,-0.05199164129752505,-0.06102175376371741,-0.05093854559916137,0.04674785294956371,-0.04634798268920769,0.09651785494994247,0.021969593669863466,0.013684998784641253,0.03883812785036568,-0.02423367479832312,0.004110196064449844,-0.05287032881078351,-0.0011155823654050785,0.06868207127751769,-0.020812468649101423,-0.036910181361694695,0.06796586719923263,0.12452326378273772,-0.06722553899625211,0.07032035047679251,0.024445002443625814,0.02133835322315629,0.15315721191608575,-0.034587107087640435,0.06481314171371762,-0.00813092291623434,0.09921211076981251,-0.024240151632727358,0.0798843040833095,0.02100034892261189,-0.004590497382118765,0.06990880598910833,-0.041477672360526525,-0.03652053884630433,-0.06817803119994403,0.0022611956921810886,-0.07136709728493987,-0.044417525089408764,-0.10648022839643305,-0.10947440048286944,-0.023264960805039397,-0.009961896720872918,0.021051412565592075,-0.0383944406137023,0.02736704404691847,-0.06910599326496958,0.00029505952344419323,-0.010939488521064213,0.04598539793623194,0.13752087489505485,0.02084484518805101,-0.03583386668271405,0.019706326076653916,0.0778958551229471,0.07417618761246852,-0.0032852149876081292,-0.00015072961022241595,0.01332458634959181,-0.005442123821255566,0.009248492281799222,0.04340911105160237,0.06549286835942994,0.034208884121703136,-0.043862872787546484,-0.04562857885400589,0.03704742827517074,-0.03658278177758109,-0.049551501466045055,-0.013649789173687395,-0.01888228364906211,0.011996238249952959,0.013595978838579796,0.006714599140768652,0.02943820999006266,0.06992193092823261,0.0019817043096670367,0.03461089214661131,0.055071841130387114,0.011839335743773787,0.0074173223885655205,0.006390192414621876,-0.08425606143109572,0.015812504502093146,-0.042814196043592295,0.03992971420064718,0.08032426718060476,-0.005861053790200173,0.029019399634873752,0.02102649440633358,0.04467977890947216,-0.018984188415155114,0.09338066561788115,0.028186657761760537,-0.10333570097535515,0.004189835482538416,-0.012925371050553764,0.0032297937932642498,0.0062528511381219265,0.011766395755874173,-0.02619656177478127,-0.02892149988664297,-0.022549609949586828,0.06335551413099846,-0.05088936250572337,0.031502827623346746,0.028502762372396212,-0.06794162013600209,0.06970626145288683,0.008102823478924666,-0.09661072301080909,-0.0123657518486219,0.05031701749719185,0.005095849740322529,0.006370765783403479,0.021884821146662924,-0.04509823730336075,-0.07561243011255198,0.0128523012972081,0.00025932380865265606,-0.10003385987831245,-0.018584239048026304,-0.019786560312836904,0.02544312573849078,-0.010313037323543552,-0.14888438732695083,-0.005145925845493974,0.026912353140654134,-0.02560300459604221,-0.06934968896894524,0.05300073589371187,-0.09346973617852898,0.00417355546874041,-0.03881792599541197,-0.06708166412144285,0.11055993280157651,0.012079391936942841,0.03853221629977119,-0.0021311805300922096,-0.0011344448532125224,-0.024517346809077727,-0.026093115982892958,0.030649889860319884,0.03782616075558125,-0.03003017201419918,-0.030269135475137043,0.020313191420147345,0.05173274694795695,-0.04940884721825502,-0.061175623850141615,-0.03291352716156405,0.037598883576006124,-0.024451420951230637,0.10174292102432925,0.006513547814921986,-0.0817257653965651,0.0008577567315606188,-0.05135950826764632,-0.005355235828039137,0.005038222826752355,0.052882600914617564,0.0398820433948668,0.0014794289472180836,0.031883197373351775,-0.024252196917753054,-0.11384608127925054,0.07007643529799897,0.07685689638439934,0.05426727587285503,-0.015633691998630073,0.08544795783254606],[0.050932362071779924,-0.03639385833974564,-0.009781453444675632,0.03129799602057585,0.047358393175383484,-0.008094112778475786,0.021414278194348088,0.09741847117559818,-0.014857732902782186,-0.023206458113646366,0.034918599932648405,-0.05027344850129184,-0.06957870008647617,0.01008869668262829,-0.12828013093432894,0.03236427652746553,-0.015286006004176579,0.026550821140061933,-0.08842733219152225,0.05146823773261024,0.042611854304919934,0.050409000422627366,0.07257493640183849,0.021050436675600998,-0.014435430134993217,-0.03315761493248078,0.04240812597862829,-0.10627665709724317,0.010528603662962923,-0.12411255893283127,0.05129837302142136,0.08241920898989802,-0.005118183354131771,0.03011756059614741,-0.019912119344001243,-0.014645049701063124,-0.013156122053057913,-0.04593258103361639,0.021849633743781717,0.03262125960325225,-0.013902507106817737,0.07445259350330535,0.05065975066023941,-0.09454798545688728,0.0034809979709426466,0.018479483991303124,-0.01762607342992123,-0.03962179436204537,0.009525768740541691,0.020165730856921332,-0.03852280006485821,-0.006879471940643291,-0.07315272434388788,-0.031079809092419936,0.06872772548443377,-0.031210301323806828,0.11078183251999701,0.010371853112211523,-0.0012609509645934822,-0.06088669580603521,0.027227562397780843,-0.07082756594235196,0.05885916569034315,-0.012859383744222684,0.07081871517482284,-0.021193683757699217,-0.012422724602127637,-0.04388838595902421,-0.00943423624228094,0.013817700518956281,0.012625623377114483,0.07470871108640906,-0.032003739152111695,-0.04691089843718276,0.06096803073129458,0.03389777040680905,-0.01714991226584551,0.07682564938729564,0.004349700183796951,0.011548766498397485,0.08642495415190864,0.019825380341459056,-0.05170838082796776,0.06186911922939299,-0.05774598714726825,-0.02580018677224126,-0.030110917757817386,-0.0784292313366323,-0.009019214627232085,0.0011478100254088187,0.02857991874581236,-0.029841259572249344,0.06666498675594758,-0.0366728189016524,0.11277343167812989,-0.007339289831112991,0.046393270878400464,0.011045675106728898,0.025412351417568767,-0.007760076764788634,-0.0031447519372499134,-0.02837172972269991,-0.014384053373558112,-0.02327093250691721,-0.02421029821427309,0.05688449219765093,0.0060216926230759905,-0.04391639272606334,0.012345656734703829,-0.0407966089969773,0.016790666542222027,0.019501326532922494,-0.009884918699486201,0.03656373930757282,0.03938261145514634,0.016469589906197044,-0.056176144092101005,0.07936164383109956,0.06285421857156957,-0.02239332840842236,0.020136570161331153,0.1249841644690541,-0.02961933501875698,0.0030737238409068585,0.044605429429538504,-0.025429383891046996,-0.09561884791360388,-0.04825149007629683,-0.06756233051048124,-0.08160920625730585,0.05529821970946449,0.033960131986121904,0.040395937588095156,-0.0404250507122428,-0.0886375937186749,-0.040141438196102476,0.02987760034268175,-0.01849755688324576,-0.06264738398982585,-0.02652972434396983,0.0052604668143078764,-0.12869045376091434,0.0025360672062850315,0.025289636251891928,0.007417328199796636,-0.04156003238597774,-0.02610931626077497,-0.029467752494809058,0.03266548797829569,-0.052665925365387806,-0.013753889954447839,0.05878295152995252,-0.008219138945612919,-0.001195827739204783,0.05513892504847391,0.0515321830789903,-0.07539850311347066,-0.12108673742084755,-0.014558594958725858,-0.06255087364765215,0.0971250581607105,0.013429642837216932,-0.07186800835947206,0.056271884015499055,-0.08244289640701821,0.08765123240768044,0.013843115531090747,0.06497438864905328,-0.04833130354951685,0.06908689861393745,-0.049792089437876996,0.05510866800538536,0.038703554723204046,0.06013221565334808,-0.08847000379349969,-0.003994095218689289,-0.006032473884240152,0.03398645202967107,0.031214379782727442,0.031111975624859834,-0.048742267927052635,-0.024457902166585724,0.03385806826959671,0.062393180239242195,-0.10603791320308015,-0.03307043994493817,0.04242590902625741,-0.031095468062534663,0.023565283834471738,-0.010847928344513256,-0.024931727378827578,0.0587868975516569,0.03949908776829542,0.119882425344143,-0.10440162764505755,-0.06759897130682976,-0.02262568430931221,-0.029306478046230395,0.033735356044665925,0.01778882402736852,-0.023504636620056318,-0.02492476402575882,-0.001528442603358892,-0.0052558317884578275,0.020918458518503012,0.04976642335236114,0.08217744342574491,0.0425292427098969,0.012602537000582401,0.003495659200733384,0.07097784426274856,-0.01883363357353553,0.022691134452271316,0.025880557201873114,-0.040921330243106846,-0.08908844773623627,0.01197272700690416,-0.022896491991232882,0.01144896094330689,0.09751039927270251,0.025768863717650185,0.09075819031495967,-0.07773955542968035,0.025644249240786326,0.0773328263283011,0.034800259096455344,-0.0070284659318800595,-0.0038720733314093776,-0.06025637633833995,0.04446209845730262,0.07254313737711789,0.03297036462962682,0.011389117152692895,0.05605119710975096,-0.007081200427932057,-0.10079356909915946,-0.0323046505905641,0.006217361373178365,0.042757503230852534,-0.08310974401023302,-0.047652983048701386,-0.01022121233041756,0.03878253977170042,0.04174606279818488,0.0383432593759987,0.05616555920001479,0.07488325475360187,-0.1364392585874448,0.006718613712137509,-0.02702094354890207,-0.029204786312987695,0.002624301903165713,-0.017782578062313266,-0.01656111086536357,-0.02354440930844219,0.03992360453072892,-0.024673306920609216,0.06317467466145313,0.09402968643495352,0.05889597822729165,-0.011020219162498684,-0.031111688903209454,-0.05982685243879629,-0.10742846210446516,-0.047689325685837024,-0.03679067557174187,-0.029979723479735414,-0.10398793927799455,0.03810768592817585,0.038044701722457934,0.12933008891465775,0.004534040885324519,0.06868373365216245,-0.08423821414970724,0.05064794692316791,-0.03473784657939596,0.08524784008447886,0.024945851124334718,0.008223955030797968,0.10675366134263403,-0.03238151509073126,-0.03334571177609818,-0.03622729570717777,-0.03456059253185026,-0.10177266360164906,-0.0036263856358980796,0.036484369461912684,0.11121099298566375,0.05416469575150166,0.07303515719863932,0.05646327202103702,0.000618784972074238,-0.04382216387638733,-0.02610611542026899,-0.06769066698548207,-0.020999909488072847,0.012254151295628632,0.026767600584885084,0.0501463648974956,0.060435945675581526,-0.04282636649189983,0.051110876117784476,-0.0348053828603847,0.08094238114168063,0.05242802123812449,-0.03763866498511531,-0.06120746966043334,8.157031472950588e-7,-0.005916445981771328,0.06690848001492497,0.08057252463823868,0.027533234575099787,0.060594201093954095,-0.07129121682108304,-0.04503481935024317,0.13768304901722048,0.11759682734573407,0.10011788692701111,0.004097091083033707,-0.021340443969282474,-0.12276081231603513,-0.07187236353366826,-0.032486846618763415,-0.10815712883409256,-0.03752633669575915,0.027450003029525334,0.07163287909351938,0.060203528758674726,0.07412576303519378,0.011845714816915985,0.051866980286544705,-0.03230353751833943,0.04374659241097867,0.04726333338928475,-0.040670009891916596,0.0326022452025367,0.06287327649119562,0.05884754247514222,-0.005337031940879352,-0.027529590849166757,0.01796250801118298,0.006935383065569644,0.10487066991318611,0.03041434483903791,0.12005871294359788,0.018405863707459464,0.05160593013507359,-0.01287469611550617,-0.023074247153192878,-0.04326816668265323,-0.11995391443212847,-0.12848607226077505,0.0026545680971779497,0.002156884696007494,0.002020247959591885,0.01403626957498495,-0.022219076568701496,-0.07088335650442242,-0.13044016438169587,-0.041359289003329726,0.03017991573901281,-0.010078332761595074,-0.04012806470515487,-0.05184985868535459,0.013959198007352038,-0.07570193871488372,0.018878564435604015,-0.08898154134407213,0.06683056192675214,0.026083902541523516,0.05937256702325223,0.03301812155286365,0.07528662320852282,0.13004630736716233,0.07651050753117988,-0.05980770069840176,0.09320691895080485,0.0017691433355890506,-0.10802824671766145,-0.06081421907868204,0.04265699630843784,-0.08286651659548532,0.0065822426826188385,0.05414495361296965,0.03373544710469276,0.028940434682261387,0.029871579475890607,-0.004710718254000038,0.0042868190798115765,-0.0263916843560582,0.021425286260130287,0.04066711091619941,-0.0038988830346128574,0.01605874347260033,-0.010666911812419742,-0.04877554301024281,0.044881845922530195,0.04611662946636834,0.012131557008382024,-0.02308668292436755,0.007106967951833397,0.07749940640128174,-0.013004886625441055,0.01989256505111113,0.008977780460492761,-0.00020778076650069022,0.002921271112597176,-0.08268502093041649,-0.027178876175110698,0.09995687128645912,0.05917690550172089,-0.04631680677999787,0.05240924672170964,-0.049565043994492256,0.06227086502298621,-0.019425939072971063,0.03061688155651669,-0.03225942944328868,-0.019901298975074443,0.01564312544639674,-0.01901051431216524,-0.06454692616418992,-0.0014004419967540548,0.05954304492943724,0.08507872202833881,-0.00303246820632205,0.013021333453504036,-0.03597702476835437,0.06593796436453653,0.0388486958085133,0.058614445022230864,0.054470935528875955,-0.036835155060428525,-0.10714056581562928,-0.12718182027680888,-0.0391444916377165,-0.11818663225152606,0.05491545200490704,0.03494118802140063,-0.060919853141966136,-0.020207834704548545,-0.002601058655665714,-0.058903023467286215,-0.06676270424457979,-0.023100722109529192,-0.03322713873431936,-0.006642046775967955,-0.047742501053581965,-0.06309577002774834,0.08791176178685058,0.05847996154681712,0.05791616979927348,0.1299283670076193,-0.0026334747081072757,0.026549118273945797,0.07263210596790037,0.03984172365475127,-0.07465353671166677,0.04091975338205527,-0.07751315526383708,-0.022227705932449063,-0.02509313606005176,-0.028696394198992937,-0.031118238648474156,0.07906998904058864,0.04445892702267191,-0.06487183896029688,-0.07400110864462801,0.07327574174163838,-0.04693917025528283,-0.014969193632801768,0.03583868018415121,0.02674564337127714,-0.01602687047553175,0.021831898020876664,-0.03316239436933422,0.03143445610184693,0.1377706009246291,0.07118819591135674,0.02636558299790759,-0.0027634299471151398,-0.020676689142490375,0.021308801422719716,0.051194628429150076,0.025597319292176613,0.0109236934709989,0.06525411142723807,-0.005621526661171697,-0.0562168302587503,0.00101223545496827,0.06071634199409254,-0.10811291703867555,0.005441166942227596,0.06435359483465977,0.0854511201180587,0.10997378911521312,0.05745340183803911,0.001516644279084559,0.08941196709029386,-0.10909168739968765,0.008228797634890596,0.01606490222266295,-0.005650686364423652,-0.028265590623369606,-0.14402952523016807,-0.0032339148531408944,-0.03620043919096065,-0.0008224081480678526,-0.00849335754765488,-0.03262730625349259,0.05499159046746583,-0.04045531603494176,0.07625469720454263,-0.013442734624985193,0.09530060330091145,0.00971443929989674,0.013485739626958343,0.12009785871872337,0.016907260902256176,0.05779466025668312,0.09422254955577015,0.09511222496939843,0.017829858870914,0.07742385581216013,0.04650932246793506,-0.053287969497738515,-0.01818772941447458,-0.03773123587611783,-0.049550162032800674,-0.07369386221787241,0.056778494658978614,-0.0108111913135329,0.01056601262699646,0.07219445387956741,0.02640400515888244,-0.03532878686332157,0.03820104481638818,0.014245581249352,0.10530608602512251,0.016925549162063652,0.050785949856436204,0.00863413558454516,-0.05671432353240094,0.019128310510252454,-0.019071186911025825,-0.042870614828899,0.021161537659253875,0.05603159485098241,-0.05017717333146593,0.03307857061976788,0.05716974399273974,0.031542933000234225,-0.06864247196453517,-0.0399457634923436,0.04963648512805964,-0.012223388650785955,0.039083977372821425,0.010438817760139602,-0.06642407951873433,0.03170914695174313,-0.04488295555276493,-0.004735246655778813,0.0104475808555241,0.01854938634450097,0.0021375603891847766,-0.0669221494758416,-0.0786809673069029,-0.02663432675285498,-0.014347930013311123,-0.029990839793772702,0.013099728944599162,0.001757331041991768,-0.058771023502264146,0.020755575243516698,0.03230554472103635,0.04780684551171051,-0.010990086702927941,0.0057298235346688,-0.03787274585738277,0.033038680424433316,-0.06934025098642345,0.04294680611203712,-0.05851453011901008,0.020165983042383047,0.0561362014487833,0.06712076936724001,-0.030907112930425067,-0.01024218743338895,0.1164317018445074,-0.02322409640705289,0.00038247709922553484,0.08989518002297542,-0.014310273895956982,0.017450520376937218,-0.09778076998171316,-0.07254144418165008,0.01683043878209269,0.10937446277842673,-0.008002353459177124,-0.04384864627890758,-0.03654138061638006,-0.05997473723780353,-0.04066605181723235,-0.0038459024134837433,-0.0028205275319131916,-0.026144174484282096,0.025265777740791428,-0.09095234941961794,0.07513515610545768,0.049883881313345424,0.0910188717369022,-0.014872690725836872,-0.013269992402100828,0.04154935403862021,0.036504727762486214,-0.044151671425876164,-0.04579181145457783,0.059267323003289775,0.04900382318737198,0.0811750257588228,0.004974134243443107,-0.16675543816359442,-0.10166385338427295,-0.0022983116482024933,-0.004202470686840909,-0.016955390363310695,-0.05257224161121154,-0.010685305912394766,-0.07858210404627661,-0.043500918113806,-0.04661139251904511,0.016285347674217777,-0.03698802328098263,0.02281279619180478,0.03636338823092129,0.12088725596620935,0.032541328078420785,0.0678635770023309,-0.0088657550939498,0.006014333958065153,0.000912915365005421,-0.049642665686542554,-0.04778970310405959,-0.001943786128036888,-0.06865294943038407,-0.030769573624384056,0.0046156251843027995,0.019620994504671502,0.032117536018919667,-0.04402760201560693,-0.03207332791614699,0.03597862312235969,-0.10113103500016371,0.011498167257818128,0.060963506724757116,0.05561039559616625,0.03385595975352772,0.008196817622632727,0.03278005188096862,0.07797671665508397,-0.00001143371175770577,0.0022336370780707076,0.03279563897638043,0.014644341874008683,0.0252090863714062,0.04587814805943314,0.051345917472538194,-0.022944760804674738,0.01556003275585504,-0.04474997319355253,-0.054663790731440814,-0.016991936917111445,-0.02210859524144378,0.0756112701009893,0.03728432325283198,-0.005631157982262033,-0.0721136700410171,0.0076321973574321736,-0.05683227558210755,0.030312019450199998,0.057860471110597396,-0.11041529449490194,0.019746270796775923,-0.07439877970090175,0.00432769039842431,-0.006364413376424874,-0.06760581530852484,0.014241270154223893,-0.024583835688752158,0.02334796579347527,0.06020343083559091,-0.06425838609553579,-0.02098562320765417,-0.024989032710181235,-0.03710780839302713,0.039143165562856005,-0.014945684002907822,0.014712589965982159,-0.0028299627003116916,-0.04862352254258073,0.013320604432765412,0.041990910764215954,0.027448054500080865,-0.02513463950825623,0.06712787004063564,-0.049958349875965646,-0.014343976816383181,-0.03541951245940258,-0.015591892747131584,-0.006800963738465599,-0.11526688282933249,-0.01867047264915322,-0.1048663925626551,0.07267520573228292,-0.028894652459025883,-0.03266467404739923,0.015525918941111081,-0.004040559368483405,-0.04443372535512943,-0.018025380248175578,0.059780947198906184,-0.04165422768740318,-0.08005951829183762,-0.0016304653485028357,0.045436573947896214,0.08118718082283766,0.012313866008550648,-0.01979481897088658,0.04771620606330937,-0.03853070050315342,0.04465167431616067,-0.023452690269565316,0.02988896911492731,-0.04799494229907828,0.0378974904023323,-0.03426444007328921,-0.029780574516657474,-0.026283261614393812,0.008348377425212026,-0.01641364668116701,0.032944401172335706,0.047729880655259266,-0.01710784813225697,-0.08984911050000854,0.005777261960686605,0.0020188311078750605,0.030942426899841776,-0.005856047850802412,0.0018653596012431447,-0.05292265610442665,-0.02156891796207867,0.022196809566335796,0.026906425902391784,-0.004128475033916113,-0.056323288748911036,-0.10102300576836336,0.09437194798608609,-0.017249923613922923,0.015015160150531956,-0.032778341282045646,0.04487876623599114,0.08347007520801816,-0.02580933715901173,-0.07204062774330673,-0.01863458663482497,0.006526860319300313,-0.026648107390385704,-0.129766454454087,-0.05016998459638685,-0.008339916031003723,0.08958173594373404,-0.04946866633409623,0.07302410757073322,0.01640407425258037,-0.002539594174059364,-0.12341213613336213,-0.05398444539732594,0.045184943345791415,-0.014094511172908265,-0.055226535926085334,-0.08607740630857202,-0.01814312525696208,0.06778498648424225,0.08672582395685878],[0.027119578038920907,-0.036089693215989246,0.042227195748956475,0.08312483414812116,-0.02397477452442311,0.006961601296126604,-0.0167346623055656,0.060389283798081436,-0.026584506128640713,0.028402901744296286,-0.05788777925921444,-0.021811764019066635,-0.013154766050284131,0.0238747072862289,0.10632226345608882,-0.006869483861013893,0.06249130685677892,0.00036852577248660244,-0.021471010760593105,0.00011698892900880619,0.06292952279023006,-0.02629447592928138,0.02127233151626208,-0.0011505223459624975,-0.08068916115687598,-0.04560406422707314,0.03587596940237114,0.03395325547117372,0.01229626792966523,-0.05489807664182344,-0.0026862582374838104,-0.05605273963994218,-0.03176376222374941,0.008594551813287816,-0.031792345422021195,-0.05114522214769444,0.030747678617657714,-0.03153870247016185,-0.025995332440249392,0.005747238254709165,0.06429890996781684,0.0723239307773476,-0.044308791273064516,0.03913431912075607,-0.07871931586599018,-0.017500758609804497,0.0653668449248652,-0.05149217020854965,0.029589637970412495,0.028195156760978217,-0.03820747468808401,0.016628000880714967,-0.04632345554368411,-0.07165193207805359,0.02266851273726201,-0.046002716623899736,0.05577716847814811,-0.008306551405500304,0.016017666801992063,0.09633695775818915,-0.028807210237450455,-0.036678796243243716,0.004576308547441614,0.010971819370744986,0.025746124017103997,-0.02578679303939493,0.021491091566788866,0.001573090204125532,-0.04420293057318066,-0.006604292877651076,0.08004368123954525,0.03942810735170823,0.07027840801966266,-0.010986040253742247,-0.015733225097831618,-0.049184837343377134,0.038842595480016257,-0.008970902430492702,-0.05483524805788293,0.01639384970715023,0.04789419005912098,0.00944351141828804,-0.004151112960947341,-0.0583581916888494,-0.009202701065205012,-0.1732817252421049,-0.007051762722762842,0.06595479061832812,0.0044267206365631905,-0.012787175378926284,0.01319546738969054,0.02947347661137735,-0.006667025662766235,-0.0600163477085351,0.03355147463166164,-0.07312963739367075,-0.014448818616405632,0.04835154422751626,0.043688099799375414,-0.08320416185007104,-0.06728815061146466,-0.0021548376866577196,0.03484876274998846,-0.06872586043899381,0.016607082506153822,0.04527927169763124,0.04592493387562907,0.029546297656828927,0.0427455385159042,-0.0686781887267946,-0.04701960641375283,0.07341289111808318,-0.024707381706765254,-0.09361818999910121,-0.00639034022714582,0.04109638385289849,0.053507206989582765,0.017379223176957954,-0.024046519402057136,0.040735977289573094,0.028269190911628717,0.047230806478076585,0.0008291156272946074,0.03256598199023309,0.036660834605026144,-0.13999549076644355,-0.0384942340225415,0.043820487459115334,0.02631137595731273,0.02286001770146358,0.021404462911179225,0.016019883112397867,-0.02972673445293728,-0.006602204645927878,0.15012969576833823,-0.023345565617095984,0.06814495658462616,-0.04989410803745939,-0.05147087897095045,-0.027683064778640895,0.07674660794233656,0.05948374999233784,0.0009816527178956747,-0.06058154317836626,-0.0051922496999044256,0.0903348245355269,0.03925752936362628,0.034914668929798456,0.00012787301017929274,0.04363092474931056,0.04331754888184379,0.07104557583177175,0.039714405036064486,-0.028133015011629816,0.00788310108951952,-0.15103843764307512,-0.056097215628404654,-0.09364174144440295,0.004893840368446771,0.008457907440790724,-0.05525680376099455,0.08044448481406033,-0.11675697617884029,0.03750125417256434,-0.04338249360292313,-0.029031302783183995,-0.006468143412284351,-0.009271460578664997,0.011604335959818798,-0.005560453340861431,0.08655728366528652,-0.10231358397391382,0.02072419175449129,-0.005126066697947607,-0.005713758728446653,0.14584497530295837,0.043393582202037304,0.06984095420214613,0.01750903501228435,0.03175350178444413,-0.008989097832035822,-0.03314990751008689,-0.03258864766086976,0.02073721313219193,-0.04188146923165025,-0.06988467021615845,-0.07983895030153354,-0.06475855651946041,0.03326337368335496,-0.002315399256856304,-0.06655085808572803,0.036063517949071956,0.0053603513398719155,0.01185788051449649,0.01868225173918213,0.07021387413571063,-0.0031291885683113357,-0.041107727463664694,-0.06036942436886747,0.026023100850630785,0.011216340760195074,0.06700729473498096,0.006242411386546907,0.05205231079860216,0.07768701006695147,0.03954044904500331,0.029665587503144623,0.048216542346852735,0.04160134598159822,0.003092485726987001,0.07711609026704172,0.01115366917903198,-0.0319348145718676,-0.06429186929315756,0.020559603940631267,-0.0984171808690742,0.016574680091652305,0.017765468632113226,-0.026519230841383946,0.012864156641597168,-0.057011458286385715,-0.06881212367256904,-0.06461305994989404,0.015013020269473078,-0.013973231513383227,-0.032509668935425735,0.04246297755360404,-0.0374987373319509,0.004283862911741755,-0.0027585781282832233,0.05123142777408828,0.11832992414902355,-0.035609539763752904,0.017397168910217465,0.035253962069458585,-0.050235336829463746,0.008798493874561289,0.10085638331820118,0.04451599440582506,0.023804534388794336,0.10496675316069386,-0.002618627410150396,0.08586601917996282,-0.05186848941746517,0.03921198937326361,0.09172542674577111,-0.03191466347193848,-0.04656867416986709,0.08383184331792123,-0.05314110593392093,-0.020382237359291466,0.019115249618894634,-0.013776879729729448,-0.06829486904855622,0.049716817774287485,0.049008449042831706,0.12807668409739453,0.0024593588120969804,0.03339126970291865,0.027053710586416653,0.03502244292442466,0.13497573604311427,0.05151569525139001,0.03210256104001815,0.07175850118774024,-0.10985198360398873,0.11774388347832696,0.09540536806581018,0.049337930988017094,0.06387717637715118,0.0006918486720586097,-0.06394654334153582,-0.02351248673817971,0.07004198916919714,0.022017397912632162,0.01773832413846598,-0.0025470909568016888,-0.004159878919558566,-0.06294538143077566,0.05977338634513358,0.06920210566719269,0.02391664685638241,0.06677326437930729,0.05492252646738878,-0.020422928230395352,0.021499573946560817,-0.06441240341669553,0.038807959894403735,-0.006968305198517669,0.0625598013887403,0.1241439830996666,0.04560954833281407,0.02796296355151934,0.0022649195294028083,0.11269872091158442,0.047025740559097175,-0.024504596655116204,0.07522542528034482,0.015071341959875372,0.07472014248982893,0.0017526268858983549,0.1245311740080923,0.05954157252546986,-0.027762606540725546,0.012961659928446152,0.03827345223717879,-0.07665087883363976,-0.061994814599223715,0.038718792746616264,0.03909723445689499,0.09653809288558014,0.029012201486149723,0.11592078051505203,0.002576983725575025,-0.017047599984583356,0.04313041178774662,-0.05313580130885264,0.048478077311225706,0.05269631349381677,0.08386445398493445,0.052938853635522184,0.04441186448215773,0.049022266356780676,-0.03258324153532631,-0.07115254907520227,-0.012953776056149318,-0.003750286942370438,-0.0006120787535371187,-0.03471747437962072,0.05474960403467214,0.023628151206392195,-0.02944850838641882,0.03486532743055738,-0.012672011520603446,0.042289066441688485,0.053109193735219516,0.030431604053099966,0.11598529330819492,0.009142933385389799,-0.008272063261554424,0.028274157492468695,0.05825578977311736,0.039806169073069705,0.07009546529407629,-0.006793151579187594,0.0690605427435254,0.06697781526882624,0.11881264915023983,0.046511650752299245,0.0229919208996833,-0.034413077926034506,-0.01816779086608275,-0.021213989950685186,-0.06119033693807023,0.0020517728606186097,0.13770205534194976,0.08252856234491392,0.04435451683588958,-0.05554061861765143,0.009283980660891346,-0.08810058863874931,0.0000031696430607769516,-0.014398011155049186,0.15061151107454393,0.07895266396325887,0.058519602197725486,0.06055921634069309,-0.006818007881038938,0.008646356255020377,-0.037091302026026916,-0.023551353291584826,-0.11359964662443282,0.0440621626457887,-0.0423440658858919,-0.0681092108944618,-0.07840866912075575,-0.056028457995889715,-0.07523181980639203,-0.11544162882271478,0.07410978645915806,-0.024741239859829928,0.047876824107669226,0.04257425812067097,0.04273825930283111,-0.049038019942456976,0.0586510117527709,-0.020005300630903618,-0.04542229471757515,0.08268437510961021,0.03139222903363123,-0.02673071525484468,-0.042272328105535044,0.010218376475623086,-0.026794421882990842,0.0438613501699035,-0.016581076587600184,-0.03308281457581573,0.04923819653671123,-0.05882762730189629,-0.0713409965517801,-0.1250097568069257,-0.08436007576068592,-0.08016970851036502,-0.022750937201675453,-0.12968950428454337,-0.03396389470153177,-0.033650988224484715,-0.1105122000346692,0.017904652730202503,-0.018645954728868094,0.02716658105328306,-0.025939780618203203,-0.04648111836713289,-0.008343600030909004,-0.015342575380556705,0.017428609089192665,-0.015208896610936051,0.0462958095730447,-0.02806158445345168,0.009248940334730602,-0.04479251623842056,-0.03091683570098871,-0.010737499256969337,0.036102346097772846,-0.0391209462309414,-0.028735959131710613,-0.1062712550810731,-0.0876844641117177,0.01330308424303862,-0.07787197201029009,-0.05161763731377658,-0.0782850582322207,-0.0028409294967204433,0.03822177312148605,0.08786923928042736,-0.03844255105694579,-0.09374126711274797,0.03722532582760033,-0.055789885868900005,0.013293527691066268,0.025609057774371308,-0.021097018523693636,-0.061405598313283065,-0.06880937267803171,0.010917282563756589,-0.05433558087146733,-0.1428818532091592,0.0779320886436114,-0.014901264333207468,0.034606524371974604,0.036880700302381136,-0.09592386520442316,-0.00301955448184017,0.05780645995089602,-0.060592174961310676,-0.005436453844229527,-0.08598248952687651,-0.1079848853583836,0.02739530826424177,0.004644851405694987,-0.0015182236003309843,0.011762090930044272,-0.047179198439739264,-0.04833865846667452,-0.0491392458888464,0.06372201399650895,-0.06234544247257746,0.054080447107688945,-0.012492806185545102,0.040588908972950755,-0.03687922703907041,0.028860452863495544,-0.033992850280060605,0.008138480438057618,0.010680709473649129,0.021489569204273574,-0.1368605668722432,-0.05951148389384756,0.0006538978245319228,-0.00896579169936578,0.031095576174643164,-0.0631075263514222,-0.14836457719736562,-0.07785988849203933,-0.03333710727293259,-0.07661906921758115,-0.00381345046280642,-0.13364763571485597,0.026023891547745884,0.0040406525822938855,-0.05133327860021573,0.00030064154749700404,0.051070921367545916,0.06102316783544853,0.0064478983849241885,0.07206080438273492,0.0902287795119648,-0.03281217706754694,-0.01716478173468262,-0.05481118854910847,-0.07908461200112639,-0.04603476313907876,0.020566138266452455,-0.007881090630108225,-0.08610737140911277,0.07106295018295405,0.008441271770258494,0.062352965731592026,-0.0019026843737599208,-0.01239291054739879,0.020809459823332453,0.018759651782550797,-0.08632601443513441,-0.1293291909200153,-0.04042848191055594,-0.06573061151005717,-0.04848670788635522,-0.031155014204800182,-0.03316820443014883,-0.023704270729401306,0.029837987240201595,0.021954101523449312,0.01896623258793757,0.008767323306897645,0.0038102237135816982,0.0978941136958658,0.06484367513965894,-0.015223060162028451,0.00717075376494581,0.05438545078962998,-0.07570964815789409,-0.05353848077066889,0.011906265462934653,0.002026276113921885,-0.04712028548981108,0.04069893818827834,0.012629720052513083,0.04900349198026896,-0.09441916887636037,-0.07742547983550349,0.08128194010710663,-0.021624562576375538,0.0006723901985422177,-0.03363293876253028,0.10457289465955663,-0.026707224178265317,-0.009586759946846964,-0.012556687197878346,0.019167931082881503,-0.05523978625161999,0.0332811972150196,0.08556557965708679,0.12719519061075807,0.025119223019149987,0.02306420463582963,-0.0016159866256482936,0.012271861686434897,-0.05590939055467417,0.06123997427134077,-0.02890588552981391,-0.014252067697851476,-0.0027274675016654253,0.047802272431496005,0.09987520412473232,0.039177498716815314,-0.017963855264106075,-0.02529383875403091,0.015644993343455413,-0.025291074000461447,0.03580459515658651,0.007537917968783344,0.016721227140165627,-0.06299617718082187,-0.01620719506229438,0.09477623189042761,0.05236971720191268,-0.009082248172107855,-0.002809417470468328,-0.00007167511022414231,-0.05038021952124363,0.013765289681146235,-0.013687407281724018,-0.04832553920761196,0.029764693040222254,-0.041446858094646266,0.048576526078831915,-0.03202205588083616,0.012728022134902187,-0.027096031919947666,-0.027808455609277905,-0.00817302486010882,0.061491427008954484,-0.04970015022087111,-0.049029878632898226,-0.0006452025670324317,0.026708878066428122,0.02690226044040876,0.02508828858419138,-0.03152992351456316,0.017976674444495345,-0.051944625564156244,0.10203081131881368,0.062407105368336956,0.038782913004996755,0.16738720454377323,0.006196578834116892,0.10059190506523928,-0.05064375398917244,0.02057663683253972,0.01758162513606387,0.009871405638208576,0.016285670234664682,0.022313838660362222,-0.06306143331101004,0.02967504715704165,0.10003926303155854,-0.0007402677924650191,-0.018479271043799653,0.038912881305372446,0.010337064722754648,0.009538959913606548,0.0016084424167018053,0.0732877506957291,-0.03579683237912884,0.03565210080998159,-0.0546999251336717,0.09469964502355263,0.0009775059453431822,0.057651062660656796,-0.07048643698904458,0.032111987561191956,0.05200932323247459,0.06018829032547437,-0.015101436639851201,0.06830020302891844,-0.03067822326343087,0.018387961503537525,-0.00567443379177077,-0.015215979097268486,-0.04610480300344931,-0.03475793635598713,0.04560204779610945,-0.030785591687718977,0.1157306796981261,0.04900160686917981,0.03838700148042686,0.07627461897861088,-0.01676933255321558,0.0071330272577732135,0.0095697046876456,-0.010341290817232677,0.04538328671606737,0.05375414222575533,-0.03605128361839125,0.09251207249802404,0.13270897217421754,0.057995437750293914,-0.04246389291230268,0.09570679450681553,0.003565715037513194,-0.03884384942617546,0.03050242656668154,0.05115890098013501,0.05825694621176432,-0.05807791386683667,-0.007433790645621004,-0.005568790681417732,0.021720957848142756,0.06543400162638001,0.04040146602973282,-0.029826514197456307,-0.057053070097044425,-0.053077167515623046,0.04152346390900575,0.0694728255756916,0.05021272974690995,0.0561570836635392,-0.004245131059698463,0.09053460303882715,0.0045291134566672235,0.06651526227529478,0.01931778519530061,0.023294151613671953,-0.026483384937069143,0.054037885566733314,0.12278335516325428,0.027315867057666476,-0.04418051878389806,0.09421818002455914,0.024353926412454777,-0.017678563274535104,0.014574672775946556,-0.057966859634255304,0.09159294447722671,-0.02328228404296604,-0.024406002435456618,0.016508407017353524,-0.0722770967654221,0.006370733169594464,-0.03982925328171621,-0.0328668317746045,0.029113197208032286,-0.014457362314349619,0.0012255823659464316,-0.04090792381502816,0.033540173990409476,0.007192336600178023,0.01711547942305816,0.019013410723753985,-0.04874861242023661,0.08314767426222697,-0.01832466680361414,0.03928433206419106,0.05519671122274547,-0.014752060213469666,-0.011052256280898938,-0.054634832372444576,0.11753594568641282,-0.01332076408617418,0.0037244579509140853,-0.0708948750943075,-0.06009530350495827,0.009637715359213171,0.054342500533945855,-0.026881907852371822,0.1280496223946428,0.03593206185982093,0.0814569707139709,-0.09137303228624619,-0.0016148221849278423,-0.04172280119655736,-0.002910523250886345,0.019451575282860442,0.019487357314009662,-0.020218191992385042,-0.007640412819990013,0.03636936544842401,0.03879078791552992,-0.05704102350795001,0.026778064023154004,0.020870042627495256,-0.027830897705102144,0.054588057081955126,0.03577249287612006,0.0019004732129219504,-0.1361616524343002,0.0052619386398620295,-0.004208136925487972,-0.01610166784977515,0.0656208724507556,-0.058843457192651306,-0.015252484929541132,0.09513008393267951,-0.040534831593885226,0.07601720920764152,0.02282782654957061,0.014609590421350151,0.015167291064685926,-0.02485803451723205,-0.0219737881707522,-0.03210286702381801,0.043850767126813246,-0.012904569471900013,-0.003828098714799499,-0.0510771351893906,0.05902599449662961,0.027904661990859697,-0.029259829989494862,0.03858837519610895,-0.00029727801452930413,-0.06933838458447487,-0.02248028005483266,0.07830907215557664,-0.05018495967996653,0.01570253273917623,-0.04295870649819416,0.030270171614104384,0.06570578192871844,0.019870478325942468,0.029306401444947082,-0.01883372413306114,-0.06587029944933769,-0.02495153154479893,-0.053535641724974],[0.0012039809826655528,-0.0005998779679833855,-0.011817504692316606,-0.03323518103988904,-0.05207125030474069,-0.05611891985335991,0.035796122865700546,0.052328617479379,-0.028949550854962126,-0.01598403705472444,-0.013808087425305782,-0.015826031882378386,-0.030732347407353637,0.020907445056647163,0.0558933705696571,-0.11426119594864674,-0.023681634659027086,-0.028971072458341407,0.06538559635443442,0.017875004657542732,-0.0008533213228036737,-0.0585332945556018,0.05123404696420832,0.04120535734842769,-0.052568212235899206,-0.029030441081762087,-0.000967033933677816,-0.0008471069181111001,0.018152674564814737,-0.00500051656837528,-0.01334356055174672,-0.05780612427934469,0.0039725092025640505,0.06614723210698216,-0.01177277242697633,-0.06057863069364058,-0.02024401025159206,-0.015089724163332013,0.08944151038369416,0.00492075925535278,0.10380871418052759,-0.002616307392574526,0.017146059057714165,0.004611962606102219,0.06580058171062665,0.07707162187827847,-0.10115951556224914,-0.04914802611923583,0.03476715521471209,-0.03788283043156942,0.019209738273226654,-0.023869719248686812,0.052153179161867146,-0.049887262198690045,0.07772950393964777,-0.007888461147140109,-0.0960646839806458,0.029304822200448322,-0.019008110837931063,-0.012989128718383433,-0.01577063146802596,-0.022705375345373993,0.0331370726823615,0.03013462175505033,-0.11822004618875964,0.0772271738917833,-0.018529235599593904,-0.11345847274117743,-0.018654917422813937,-0.049123767729411606,-0.08924711700280605,0.05703615791938867,0.03757653138303712,0.08306033647419528,0.09153685427268131,-0.007414629054690971,-0.017985395244043436,-0.018309558380163682,-0.05086714039296826,0.11523077520885393,0.014681019889870917,-0.013024567733981262,0.015155375348483604,-0.05485644060781223,0.053848655876128276,0.008406215831893042,-0.016411363343735354,0.0326681583203184,0.030126513743294732,0.04286664318399136,-0.015374643417322021,0.011319797472453225,0.11961202784024548,-0.0019242531570100511,0.038459458869664766,0.03581394101825078,0.02693816687999422,0.09960038412338534,0.07920259079508452,0.0681745528364105,-0.03156605028326556,-0.018029695812723547,0.018827519518144487,0.018726211974753604,0.00492264825457515,-0.07467555936983986,-0.04144881112019323,-0.011848826426405378,0.11024707289138591,-0.011246009256475634,-0.04625733024661144,0.06165381628037465,-0.008820125104648573,-0.06671523643178555,-0.09729836246134287,0.05806683090752084,-0.01117447559309332,0.056133526130689754,-0.04870992970091521,-0.040574289522861566,0.021807632496006594,0.01710227444624547,-0.010390496629261298,0.09658069994702058,0.014362374019161985,0.004352060150160437,-0.06593888560821959,-0.024649819227336025,-0.043209462999163645,-0.15275081722415995,-0.07678718553706754,-0.08515951887013273,-0.08563226292948485,-0.055441240455006764,-0.041734316662278434,0.031664580616713546,0.026443157023967732,-0.017169659420967265,-0.07369095741749514,0.004549430250314832,0.06915975102992247,-0.011299926211087817,0.01800407094384921,0.08223335332076777,0.04521934192711731,0.11168683534759634,0.025485071363874758,-0.026472809517587858,0.07790498705826979,-0.027791222684575925,0.023324020295877494,-0.019730016533942844,0.04495210951228494,0.019049625269167515,0.015957696711376645,-0.041791739770942984,0.015916071917594067,-0.025077381121295213,0.007191022113266482,-0.05405540480997709,0.039778510456753347,-0.0900795896592703,-0.061580785742064575,-0.10348077935522186,0.03535618790585868,-0.04534441731667962,-0.011545987444289184,-0.0255965406226122,-0.03615533331258755,-0.05781521090388594,-0.013895047620960962,0.10351118434315633,-0.023684267521295873,-0.03832206070932031,0.06289555485686485,-0.016912166840114637,-0.040526920321063954,0.09187031734089526,0.11386650271817382,-0.08268263298379551,0.015834626869890036,0.04587657556300957,-0.0646721872289275,0.04533488750106859,0.018436795806093916,-0.04744276065228591,-0.045946670143017655,-0.009274454731793454,-0.0637276720294541,0.000185449743040726,0.009194014405805999,0.048223500348602816,-0.060430604027970736,-0.0763460107985247,-0.039136406396047874,0.06316509354191259,0.03387428363872086,-0.0130886189821092,0.05600211385062935,0.0529557752365422,0.06749804250623768,0.06999550380281001,0.07701698036660862,-0.009615019870710428,-0.02585125888818777,0.0565808960104408,0.04216630893381178,0.030895687197454585,0.036314473133993316,0.07941155009207017,-0.06228345681880119,-0.04670495028157103,-0.017654807443858896,0.007998674790195668,-0.07620376512901307,-0.010563952080305734,-0.055993244092146094,-0.10366216113403412,0.014856803396616276,0.03608159531500605,-0.03747252026756557,0.031231240331798273,0.011549052035954637,-0.002049722077950338,-0.039741735029193946,0.05613617391339317,0.05531387061368663,-0.000441698746010382,0.0949731080246789,0.0455913503697682,0.08749849626202288,0.05979124259703824,0.10267721850964862,-0.006876913165076426,-0.02215405984272687,-0.016982793365238176,-0.047276934166485325,0.02528421244250586,0.033567711718330576,0.016213174059519008,0.05061684622447203,0.054611977255231446,-0.006455144673048513,-0.007204995115250262,-0.01072867906623184,-0.04668199062013765,0.0712643503424019,-0.014555343877060157,-0.11697285785919537,0.08050136471671818,-0.04061074952240982,-0.024535558836921843,-0.004481366534977009,-0.06869106725601422,-0.04457452037533221,-0.030108815854976257,0.07425538998338481,0.0011139567546393978,0.10592720369514165,0.08270133724005233,0.01516218624184887,0.0024491098474272647,0.05291394899919632,-0.01428004114407478,-0.02294254607084839,0.10495807170977883,-0.06997673649785,0.16699707736671868,0.0015442037300201102,-0.08168079250573353,0.09326358699544796,0.07884231080251754,-0.008045102433960222,0.02812800723756808,-0.04456559863755147,0.05404006764161497,-0.042302512143092844,0.0307853393954312,0.00959501247969015,-0.04678048863073719,-0.025981379820938223,-0.05673438844054606,-0.05416656661230227,0.052190456498187335,-0.015303453523843746,0.0641491931898498,0.021115264108450472,-0.03448828027314541,-0.011661331223209706,-0.048385366497709636,0.033306749985921626,-0.0956526840830026,-0.07998754454277357,0.04376208290222723,-0.02098816720133837,0.0012933976578554187,-0.06771560922153126,0.07322514438663152,-0.04895078539267225,-0.08396552436137042,-0.03946072164040952,-0.02523603016623124,-0.045982665765399736,-0.0254674990195182,0.026810313476499443,-0.004531369902636208,-0.0428544558917528,0.09126779483917878,-0.054084944273734094,0.012234679138298473,-0.025298879719550527,0.1204678466792145,-0.0500324383168698,0.02650561713784622,0.023022818165396645,-0.006770539540024109,-0.05897567610958778,-0.15824011638393107,-0.09367224934541443,-0.12328306673965958,-0.09673808392728177,0.02583302211128602,0.030174224221637673,-0.005388595365341686,-0.02141390968291897,-0.0003993757512124097,-0.06714788000082277,0.025385487286562244,0.09786789740254297,0.08935664203702452,0.07981937895244481,0.004843467605344212,0.010356846332859751,-0.10719987875268495,-0.08095341930381984,-0.042891501475680036,0.029923120697463914,-0.011380268405780752,0.010855326552188611,0.0668362556765752,0.04857015368391746,-0.04596062750275631,-0.0659330580799923,-0.039116936453381365,-0.04409556291787602,-0.1640814418030294,-0.09344833661169376,-0.09827167181296886,-0.11047589657591134,-0.023398856694832645,0.024579155073800013,-0.010648682989760997,0.052811960284599405,0.030395170354494423,-0.11563576345849655,0.0024701196135131134,0.007143398292459279,0.00910590107782322,-0.010746218027234779,-0.10547165433083201,-0.06314080101612166,-0.030570681708688513,-0.01688160333704066,0.02175796421999218,0.08142572740548774,-0.054186280112904904,0.053386712950877074,0.037925715623945824,-0.05168151005386866,-0.048994798033149975,-0.08636429002130264,-0.08794833519474571,-0.14081432254376414,-0.026671107939093292,-0.07836115274206466,-0.028125591838016165,-0.0853667661936288,0.05566354047575849,0.035073819351004384,0.017536566600477872,-0.01540451067130878,0.06500613593491533,-0.013177145935077177,-0.03474388315653503,-0.08620211817287267,-0.041525232958034744,-0.0888808462448376,0.009534358514034742,-0.05374743745159547,0.0030954256176955607,-0.0028392673244420305,-0.002853243271440642,-0.006892925473533047,-0.01321387277498487,0.03311920346766372,-0.012096978596049393,-0.07753649775005467,-0.035659988610454066,-0.05315113158000852,-0.161230405420043,-0.0312656283595246,-0.09882646935353075,-0.07407346628063934,0.07927233577860382,0.02034536598279029,0.07906437121490026,0.08838738721028215,0.04603552321453952,0.005895091747635846,0.03764619559518489,0.04406271475510197,0.05624252692625988,-0.022976948854169652,-0.04204955944851842,0.009777755620629228,-0.05087954680694947,-0.0032350951914394306,0.06126901133964465,0.0077203121461015475,0.013253900848175999,0.049388801731831924,-0.006831045580931729,0.023308055968372696,0.0463216507316382,-0.032241574682308656,-0.1350430480224716,-0.10301237848642601,-0.044316575353834466,-0.05670372015437196,-0.011627498927112083,-0.048517782712323716,-0.09615224217885972,0.01683286150143249,0.02364934211050717,0.05986861450045305,0.03813864148182791,-0.08763775091845083,0.04587854951130777,-0.047708463374161306,0.031149563165089728,0.029317756768222954,0.04311256875578542,-0.06332125270939595,-0.015571379562355834,0.001059027438984655,0.11427408945718731,-0.0011791183234050834,-0.02945455959976247,-0.013304489060973155,-0.08165792745456578,0.011752152081642762,0.051162021718048935,-0.04642032669189715,-0.015646612474144596,-0.009000294269999482,-0.019218293384281028,-0.06384879678473912,0.03400198977349059,-0.05795312950499612,0.09613704220233776,0.07144117952115342,0.10838013131875515,0.12570292529147378,0.1389586688355658,0.07357276047452345,-0.048963150262102205,0.041312150399794335,0.08229725300140978,-0.02685412010004585,0.03285462906323709,0.08861887129252548,0.007826687914217057,-0.0065609685920722674,0.006213343129201678,0.019713810330789033,0.018220739704649373,0.002735796432029872,0.0736465707515101,-0.000404120646123349,0.0012639829421654551,-0.025689479440347555,0.011381692804259299,-0.07152909537626749,0.05538950056940495,-0.02363845220523077,-0.08076136677273588,-0.07169103435293171,0.062061079877344605,-0.03572309181035329,0.039233053461990665,0.03297685791081226,0.0041111027873602735,0.0008141358810461889,0.06854747370027933,0.035658919495662744,0.03193360715277841,0.03500522555366169,0.046032673952819486,-0.02300150597066895,-0.0413879808816715,0.06207928433323805,0.048747976610051307,-0.07525926633448123,-0.08324293373840187,-0.018512024053169596,0.0780195630246309,0.026398327714430014,0.03536209464862929,-0.011984486865530249,-0.10153189512049793,-0.03973238708408566,-0.04765207036004313,-0.014950504117733607,-0.024790736967083508,-0.05555949174485239,0.0200010831261889,0.11438063665916047,0.02323860972529285,-0.030728336925597795,0.03226419419693379,0.06663166554838075,0.0982642285972173,0.02629335082583052,-0.014531889835063719,0.09152316941638064,-0.014422579279360165,-0.08662819219452249,-0.061183754336792726,0.046846884918632634,-0.047705490687640406,-0.04365143619418086,-0.04051818725692815,-0.0606912428404241,0.029610437418935952,0.03699061656732009,-0.06950177538602884,0.04403579713900752,-0.07340853882812945,0.033420036320219476,-0.11140216030713398,-0.05269814118448949,0.013853156141375543,-0.02872858077546892,-0.05749793663963737,0.020743400519005892,-0.07760293700929,0.10221147023566308,0.07931431810794988,0.043482044972630945,0.11512026969155285,0.07581909916813012,0.09084997894151564,-0.039077036057638036,0.10521403721328591,0.016521419322799144,0.057298109851908495,0.012613541660179525,-0.05241131748294743,-0.028184338520831815,-0.046602189694906974,0.005316763047649301,0.012332509216549896,0.0021063098962898798,0.00029746118092596676,0.06841623280895637,0.09846118095881813,-0.08293338684762896,0.01858432861860064,-0.09346931187799015,-0.0023460991793732297,0.016431372115479344,-0.034857336109065315,-0.004078514972939254,-0.06195491259911202,0.029692762904202946,0.09509667927791747,-0.02806513881931299,-0.06322699099978843,0.04614253659885615,0.013164116735327575,0.0714990971544951,0.004590274599299962,0.03395367482437306,0.05974282116617454,-0.03400716653242302,-0.001441841069329159,0.010990411939294861,-0.07092104490045424,0.010755621298713408,0.005114611569518076,0.019156826985408576,-0.06246726899720169,-0.057538846916671695,0.07719826515684827,-0.12463735233583957,0.010487819257859922,0.003994221967429136,-0.05462531383549702,-0.050704845336255265,-0.026651768062060783,-0.034997579927503644,-0.06547610596016738,0.030046465186984003,0.006771132598383564,-0.06003184148956151,-0.013176822493689708,0.008322842381306346,0.10143265845489399,0.09534634023414001,0.10802448138582225,-0.06563336760478129,-0.044333127561724965,-0.06610257217882247,0.061123998576495385,-0.052498682851130844,0.007249791081522884,-0.006553367210628322,-0.048382457490232914,-0.03332141817496991,-0.016845328164903813,0.004808273136250252,-0.005449610631856118,-0.013764848115134442,-0.10510701653204918,0.030753765432965548,-0.029755584968430976,-0.02005856125596038,0.011667736535118104,0.02320902007238809,-0.008840880904849066,-0.020639030595405363,-0.014809603578454305,-0.011613028047070997,-0.04390245126714135,0.03732556602431417,0.015533649546341607,-0.07190723430319551,0.003410454207470985,-0.005488641906659364,-0.03003676676906974,-0.03560241913328959,0.02477637734555786,0.06536494259931463,-0.14453563499333671,-0.022574693383160135,0.00826995800409977,0.05844930518799592,0.05249733578443562,-0.014500022477908549,0.0012095655336738975,0.006963113675510152,0.15014582747880495,0.048760309682281774,-0.0525117832249204,0.015720168993841193,0.006352735649569566,0.07136749224562637,0.032820565866235496,-0.011617728769979841,0.10179556663925714,0.031607262100848105,0.014941554416529515,-0.056766695289253086,0.02356046584967496,-0.12487935146364035,-0.0564362735109204,-0.03235841837945876,-0.009606646139334186,0.027289116904978032,0.13090292915704235,0.006047017516458937,0.0536914952523354,0.00002473932939201385,0.09108170091240647,0.06436819757214987,0.09090149063857342,-0.08124231216292717,-0.021446192917552905,0.04737474109440701,-0.07606797299698392,0.07068913322527035,0.07465149019114994,-0.004433451904548652,0.12043454727864134,0.04942568040948094,0.03189001688997889,0.03048356784636144,0.024184429501354705,0.0041895267521762924,-0.029621632778428924,-0.008672254456461364,-0.05606151345297866,-0.03967760166064799,0.022386789070043,0.05205513491558565,-0.08626945490829077,-0.051750004746698164,0.08492884503007356,-0.05639401418995859,-0.07884135510413103,0.0048098581723574774,0.03337589846293536,0.05809479963925106,-0.01617400894609292,-0.008096400045237534,-0.036532991525333035,0.01478820530268006,-0.03451716694852729,0.041911331915711926,0.044230062193496955,0.06132928551886955,0.012353683159562558,0.12407441895868097,-0.007351523550680788,-0.03108514648396261,0.03987155094596276,0.011078682418666741,0.015829296451799212,-0.027908461065707213,-0.05738433091094197,-0.03958872285029561,-0.03681660854726468,-0.07518048812586403,-0.11212300328967256,0.06400634036341687,0.013206774806873912,-0.05590040417803699,0.035668728578766434,-0.04151391243866698,-0.002777091001421969,0.07984525730213933,0.04236370385201584,-0.03237412317607553,-0.10630015368422312,-0.015621830717271313,-0.008787767343210934,0.06697888719178967,-0.022850572339838383,0.02376183174805643,-0.013160934740136536,-0.012482470948230122,0.013446630134510376,0.005096782804291556,-0.004827835489251332,0.01979725224297907,0.055702618189552175,0.05665130963457538,0.02557276912370281,0.10129708477532828,0.02036464416278842,0.0538654437034523,0.06328657407717674,-0.03397614237579783,0.06671417965673597,-0.1205380703156252,-0.005057417588526539,-0.04115734975038461,0.032873807041428046,-0.0008714424475820727,-0.0027018528009252686,-0.03876908711895933,-0.040428387181122676,0.006907579608733799,-0.012842712770401218,0.017985679986961444,-0.05861128515641332,0.07471447522960609,0.07253696197614509,-0.03071405483350155,0.06365575975870157,-0.013083474405282243,-0.056358769682624266,-0.024202479387958213,0.013646275868386059,-0.06947807867387323,-0.019752567278586257,-0.03840692535786861,-0.03267060331190678,0.008671426006554787,-0.041868819482885525,-0.05977536293346222,0.01759632769200218,0.0017283040429156402,-0.05596088506692757],[0.09966284799059627,0.013784851714976485,0.027681908802791092,0.002089429567930093,-0.025964166387441888,-0.10396001343861626,0.006213325532309335,0.10065847589533568,-0.05538951601846143,0.09830761842974729,-0.03066254414526955,0.10782910167618287,-0.011893039229996082,0.05226648887595163,-0.022840218929941314,0.042883221909861116,-0.06766903732698845,0.027795532101910787,0.049574417679688905,0.0032544409496110364,0.055189410999424954,-0.02237245301869017,0.07178318614158609,-0.04906949006057912,0.0049604542943961286,0.004126148991723276,0.040661568458233856,-0.08445860286972062,0.05281496791857194,-0.02810004123079604,0.048678595557730506,-0.10864973212680129,-0.002025980612634838,-0.013565387475387802,0.05751125238356531,0.05085767876405985,-0.0790335293036504,-0.005177933392354172,0.04301987722707366,-0.08564526306353928,-0.032756662010254414,-0.020745526602426106,-0.026380478356273492,0.018173802648659268,0.00843047464626211,-0.002886532488114228,0.01406134252831956,0.053513469108835025,0.0029202228567484245,0.03183598241213778,-0.02660329872649869,-0.016537800525548662,0.05993989951196727,0.025837122050087508,0.07963718522662613,-0.012525129588031085,-0.05383055595521773,-0.0313309803487597,0.001354755292997666,-0.009185103287953592,-0.020496081247768312,0.03572663845396931,-0.0029724889887296265,0.04648025305847705,0.025165881862222416,-0.019433510069752195,-0.0539144161915716,-0.00396856002322365,0.07089608428530572,0.013040716716622764,-0.004522708488556181,-0.06642071225749809,-0.011514022478359604,0.10748100057768395,-0.016868346486166565,-0.04538482237858182,0.08070710154249608,0.03260610863054318,-0.07395170288063511,-0.07318087707803271,0.09988461577531048,0.03596921258699709,0.032250038930593826,0.035292094201356594,0.012022508374399951,0.022200191431168616,-0.062065980869903024,0.0016182596289570402,-0.03158422464364672,0.00645662273659571,-0.01917661559747643,-0.08695305628659478,0.08545781500484147,0.04711058283201258,0.028049240720973707,-0.008138115534440243,0.08740021956061438,0.06871007108327813,0.05024532158785657,0.04154736709041218,-0.0007940558848559954,0.02089824390865767,-0.10881593194315094,0.044751064867685326,0.08384308687772928,-0.018275507808722537,-0.0414360650143754,-0.0019949258038198443,-0.04995538067899619,-0.03895484472283153,0.03351201984887477,-0.004552033178147109,-0.060620213160168544,-0.05997529806126122,0.012745534613114042,-0.03047256592016304,-0.03443483033986677,0.03920701496782449,-0.02532882458422386,0.025361320813181792,0.023888305023666734,0.08516290148226967,0.14869078710683908,0.12082535076219089,0.06018929959677575,0.04931091379738231,0.08138912001519547,0.07497890843481841,0.13829648859031343,-0.042679985384680215,0.021466637204176162,-0.08002239212138333,-0.03735256965185877,0.000280664694429168,0.059471804644447825,-0.15061016759254287,-0.0005979780558629538,-0.019024261489223333,-0.04819972554737673,-0.025027006350657875,-0.02984223035063083,-0.08526028034781359,-0.08214802703577935,-0.0017583385971179021,-0.047338891161697684,0.07829135830726713,-0.006708583729866576,-0.00201425798577694,-0.03371658703279943,-0.04062451207928646,0.03718906734719456,0.06611934547970318,0.07139768238805176,0.013782785565561487,0.07408529608720482,0.05658183335088178,0.08240188912218148,0.16838321786856672,0.04922835131232752,0.004074008378216829,0.07147977558869859,0.022014447662695787,-0.01958747993295297,-0.011871318788836141,-0.0636473798802546,-0.03808101647422589,0.005239636987431133,0.02041278650093837,-0.04683255813557028,-0.05374871120406113,-0.13745679345040165,-0.07639542072410502,-0.04220654059398812,0.023001786734345348,0.050438804591336116,0.025745211290700686,0.028534422248992435,0.02690575062714163,0.0991159152604892,0.10825132016402839,0.09895280474143453,0.08632557555294156,0.05135089666054149,0.06611240136027471,0.09634612707317997,0.0003795716028318688,0.0035949785532329846,0.029119661239050926,0.006756552621286871,0.01885522485691159,-0.05594362315347663,-0.030729521547825486,0.041984716650082105,-0.043478081622419854,-0.09201245280624996,0.03905939417928664,-0.05105665638776693,-0.007738314599634927,0.00314180175413294,0.06720860913453162,0.05976353534790076,0.025994894259190857,0.0546586467700896,0.04205993251987544,0.06542137158383388,0.04192637242164739,0.11617796243444625,0.03732833232092121,0.024659157994240195,0.012326054342288246,0.04164779467486335,-0.015330874353287224,0.008601136984150477,-0.0454174413877902,0.01935777949338114,-0.03462202388965865,-0.03614680851371812,0.07180899536890763,0.07446860771264051,0.02745226784196554,0.004433535932336706,0.07130028422498774,-0.0043225724379590035,-0.05925982651053707,0.048256878216585475,0.02344831499906211,0.06078169875040463,0.004892043584100253,0.029608508904749285,0.06707492292681663,0.07123326836564593,0.017699473773114677,0.04153746261973255,0.07411422958314788,0.00889184985805944,-0.02450150059914921,-0.022678410036375524,-0.007691785582238749,0.024831283049069397,-0.06418990142868354,0.015597501878791345,0.03695293046818446,0.10197327301332239,0.03370854516076271,0.015028684799915332,-0.01988022314533643,0.046038446027894454,-0.06392357845677384,0.007039644184177493,-0.01652550539611184,-0.01244368210240074,-0.03278601385752712,0.09431460137645246,-0.06567910575181332,-0.02987176806835524,0.04719917725641025,-0.027206574719171255,0.08582635938581082,-0.02844778620837833,0.13076158797906298,0.007756748096813199,-0.051467670771030656,0.040194002982076,-0.14586606325458545,-0.09170841324550368,-0.01251592751189985,-0.048751446967584815,-0.020217112322858978,0.08422850722403803,0.009670625077470645,-0.01691800259904679,-0.004981320531018942,0.02670224692079335,0.0023269777446921305,-0.010019689147137969,0.003419091050655896,-0.022237762655487544,-0.004765657335189489,-0.08684104471436453,-0.0282860541259031,-0.009868959576809052,-0.009181698742472493,-0.029160747877575686,0.0831502162492079,0.09799496444085475,-0.044733931581821734,0.03241951986828394,-0.08680787277392,-0.09335307719349091,-0.0531841907998892,-0.11673772070568629,-0.1056328459182204,-0.07744521031357117,-0.0522201669413088,-0.06926340226365865,-0.015962765523405018,0.051399764229540616,0.06380253608755085,0.02099674118510691,0.05661361756923901,-0.016606368546017995,0.05217509938729944,0.004034827328689891,0.016399106420162828,-0.01580021497944978,-0.01379797660744498,0.010450760197566243,-0.03231143505170485,-0.008521075334527957,0.02195141333818014,0.013916177318054715,0.017426196407881994,-0.03293591868785207,-0.035944046577093915,0.04120847753233424,-0.16238986895723517,-0.04481200982780584,-0.12198111950504398,-0.036528133972537534,-0.021146727448196224,0.012038322405850262,0.04655452853730104,0.0024754215385539057,-0.05735622186260478,-0.04108633680758259,-0.07273684335461038,0.007675757460139862,0.08383825456021596,0.0347286651191337,-0.05308268674285846,0.023222390275253597,-0.04757963562390547,0.010684312046328578,-0.026227027577022173,0.0023476977984430757,0.014100968674007565,-0.06138617262649624,-0.11562005176031764,0.08675097453800536,-0.010086084507591716,-0.02779486424665302,-0.12959712803170587,-0.15136289455877858,-0.051871742723286283,-0.08712102449567437,0.008688154244811428,0.021194035631480174,0.1306043644227766,0.10577886185781275,0.043326268392068275,0.029086285920280237,-0.10603870580311209,0.0014659590676350117,-0.03369344672696938,-0.07581063940765476,-0.0002628336295958013,0.03205448054056753,-0.0077456935081982835,-0.01896172718228293,-0.05983926715052136,-0.028182371614229963,-0.06486433884945013,-0.10688248397538622,0.044203776210846715,-0.10056666892278751,-0.03494440172952756,-0.02894851050818621,-0.14473363361158023,0.038582501315405686,-0.0382293516888336,-0.08761629680899609,-0.03756753131875044,0.006235298279224906,0.04304838776692954,-0.04634480828777957,0.0350609580743726,0.033741310883551985,-0.0009032908101201969,0.018667144291560748,-0.09316837160472975,-0.0685360711644389,-0.027482624805503453,0.08368503642864117,0.016021127526108722,-0.018972095757552272,-0.018550449160324237,-0.12541375072964783,-0.04345250111931349,0.00947789114767509,-0.021912728332260788,-0.010846306656752722,-0.04006846750037257,0.07045392614645127,0.04442758800730004,0.06697533151079135,-0.009334984200126828,0.0259622557711079,-0.06348872675626344,-0.11159909220446566,-0.09795396023228087,0.011334677428725182,0.0007632278996120617,-0.009712867278490168,-0.07749003529590769,0.0033860455764302484,-0.007362002181189324,0.0035390181020263332,-0.014552555558447968,-0.03893057121834853,0.06861243267421703,-0.031750913272274285,-0.001487382075504262,0.06972906625623221,0.024994696977777855,-0.09337257492051493,-0.07064028162949068,-0.09568250384241328,0.03761207790688687,0.0434325468756763,-0.00012956000316592233,-0.03132899012847259,-0.0020550934499653016,0.007932599058579145,-0.054201668763573865,0.06094139316909418,-0.02231919065139252,-0.053082478786461336,-0.07502283539211112,-0.12208112659024883,-0.040318553868289406,0.04285127352326685,-0.06887492359358445,-0.042460895665261546,-0.016312902454157396,0.01934946690168083,-0.06294698263563574,-0.0038834003981271232,-0.13233520217364564,0.04147364024554917,0.02200793369659255,0.031293678712413155,-0.03566660238685313,0.024439276859334686,-0.040460183448333645,-0.04472853014554045,-0.014928980195717423,-0.00529721829752558,0.04718785713188297,0.04117900568302426,0.036620736998647964,0.04174340226348347,0.05563865014403659,-0.003373802845766961,0.05912009524832914,0.010627715216021079,0.0013886124839298942,-0.11978394308733543,-0.09547916756352891,-0.035239082194003284,-0.1763898594105658,0.012709546036205483,-0.021606857067160222,-0.030968314188954075,-0.019139693465874807,-0.051427516384120464,0.01881647954830927,-0.04461623468866401,-0.02369194749109468,-0.04322770912462526,-0.001544207780455201,-0.005810894943396218,0.007252593230586303,-0.06787268725011555,0.008735527653851447,0.05737213904769425,0.04283962248929043,0.015485628562697085,0.005896527371503313,-0.046952791865375355,0.03968885703852705,0.007397246148459908,0.01221400097420053,0.005409936706048361,-0.011365399193686072,-0.09015557103824803,-0.1422813584606255,-0.033667527626807886,-0.0589914301990439,-0.08810684959537089,-0.08080622136144432,-0.06426861695387334,-0.03927980936908696,-0.006885220166441465,0.013992734201665625,0.07440081823089596,-0.010094567963030042,0.02147293172972193,0.007317706982617734,-0.0186228750549694,-0.046422867890034275,0.06132724265810772,-0.01846461913939594,0.0008788682528911413,-0.04801217845024837,-0.0268701491725235,-0.037490876792282864,0.021690941988988584,0.04640389765671329,0.02301669785160442,0.009140148242815945,0.002521044867170711,-0.023514619934358355,-0.024271802517689612,-0.051065264930219255,-0.018422843183307867,-0.06548598921955967,-0.07509629941327985,-0.12744082974415044,-0.023924918312638797,-0.020540113482808976,-0.007024587870286139,0.06479910860023673,-0.006549402550103332,0.05980944400200797,-0.003998753347440658,0.039866293092351804,0.009342678402813658,0.004792277621163271,0.05720143862458752,0.002105692588023518,0.02755308707622447,-0.05918672444012397,0.05408689019556249,0.05762833453561574,-0.053418767442023965,-0.06055489412220959,0.012214209419910318,0.08621169628697986,-0.096505971475849,-0.0009429909571354771,0.0006102566307378958,-0.07566378949083123,0.000503532741358673,-0.01477161924442188,-0.013189166059134758,0.0730159581161291,0.02439606808502091,0.02941025306278484,0.030543562479579695,0.042820538086894275,-0.01548392277156934,0.053675309765389756,0.05863030739027791,0.061900024541076994,-0.025572171419021458,0.06879393900038164,0.05364083747837292,-0.04538394909249318,-0.037932431296566704,0.061281205589309246,-0.045223433243076684,0.06529583359733819,-0.04581210335499829,0.03470621084029648,-0.003366325004107943,0.11195463361579847,0.04732633106493684,0.1105967422625625,0.09111659641533873,0.01554723174173996,0.018322654947523893,0.11930107342794422,0.07233707901918024,0.09134571902877238,0.06688401181554289,0.027846817428342736,-0.01499437827970923,0.09863861424145909,0.07329025455994609,0.06788181617795698,-0.00573698665440543,0.0008869525927092863,0.07118900980476141,0.05414800642884472,0.047481691919576546,0.03645214749958551,0.027273158531425618,-0.07968731819139335,-0.034777675282682656,0.07085323101918624,0.04012007934910313,0.039541859605460174,0.04510051808998915,0.008960494947444603,0.06448476168503234,0.04384624753056456,0.029383591319600128,0.057407682417015264,0.09438658930695025,-0.020419797502922023,0.029151672861097114,0.03467965715412636,-0.06770918165876871,0.03273787182591254,0.06796504001140156,-0.0008139401425118992,-0.018531546085350934,0.08829414238340162,-0.0006449458661596012,0.055952266815195946,0.0014611295294310134,0.06808220757817703,0.12319038431262326,-0.007096102858302763,0.03632799443762242,-0.0764861168786329,-0.07697970658420783,-0.07658904751133172,-0.07449811194086918,-0.02378089756465182,0.05516542793009774,0.020927858828961712,0.058630832413098924,0.0906271893916815,0.019387011912159722,0.07495357131907711,-0.017969224200840357,0.09009723874058743,0.02373526400232202,0.07755777902787596,-0.05518116199189444,0.05876610432110471,0.01571389616436163,-0.029898664307381945,0.12212749940749798,0.02878838571355692,-0.0812383902811205,0.07159464415725339,0.045657388569531505,0.026625566045729222,0.044645867196042195,-0.008155233100643077,-0.005935262074409385,-0.022821458656789056,0.014989270361172823,-0.0022575181606422985,-0.018964777248329925,0.07121626279780517,0.030608802021368047,0.04684751507173129,0.057770675449311935,0.03849054781015289,0.023039516121051536,0.020039851537500094,0.1152085492574956,0.042904269813998384,0.032418180590565865,0.1114715819939988,0.07214807300741911,0.0012557027360888537,0.06740275980689754,0.02648295159907875,0.07054434905298042,0.055506855889788174,0.1212534495826369,0.04775407930573999,0.03681495019670594,-0.007747381867549225,-0.02564355104375045,-0.033664428529104166,-0.058799062764137475,0.039449264256262655,0.0008391091656270294,0.05480345186445556,0.04700602448862163,-0.01916315808025981,-0.10128476073739119,0.09210821703909985,-0.04659393642023807,0.0019995207959259405,0.040331548104662454,0.045499107282093894,0.041665541555269234,-0.013867236757272111,-0.0009156566184341373,0.1071464848407658,0.07115275120089759,0.10341283401035332,0.0988470832218162,0.00023566785691850372,0.04708943218200056,-0.04532916319901307,0.02840918739278547,0.043474078013829145,-0.042146219482246575,-0.02624266909046354,0.0702922095526358,-0.04146844397410295,0.05873146301030387,-0.10841523105170199,-0.008524888363241678,-0.04096290645992948,-0.062435925706051484,-0.033865788666303416,-0.04756385348486103,-0.001415235075519598,-0.002998290883406508,-0.01129811155376015,-0.09035158393086933,0.07696493092110258,-0.025365062198966906,-0.0041463241114171176,-0.01989385888325943,0.0881632638636114,-0.010583657578706471,-0.0391947063690506,0.04136896060316911,0.02258024215167224,0.041988727309484254,-0.008006756320764325,0.10176040423112397,0.09110499161792843,0.025826344553943982,-0.029606614424393718,0.05636687917334984,-0.015388854875597211,0.011112672520359588,-0.055377211528877805,0.03483600899820544,-0.046849821101788,0.0859981549288748,0.043920964334725414,-0.023849542053107353,-0.06914529200211156,-0.011579257725949893,-0.009196802075201104,0.04985436753247516,-0.0430583215825899,-0.009382633172253085,-0.03673596646861033,0.04840745253687135,-0.026064236591795874,-0.010724666265069618,-0.04204206062229805,0.012434441405669213,0.022035860127883146,-0.050867948081940235,0.005354494889783029,-0.0074278612816684976,-0.06290494941283915,0.07098957488493668,0.08435546648289016,-0.06867271366398767,-0.02610744064500474,-0.0345131978402643,0.02492392338976828,-0.05229075812171042,0.01367984677000528,0.022604537964179442,-0.08122403527038018,-0.09967679117072512,0.12375896566334094,0.0003010490789516245,0.01962878635265822,-0.033108533280391275,-0.039673130284264876,-0.046136073454479,-0.0559167127121259,-0.06693348561962159,0.05595919194067779,-0.01992609033070532,-0.021908977666802516,-0.04233509515981444,-0.000891646476736522,-0.04713429990115603,0.027278345909865366,0.027162832749286592,-0.03778858034921218,-0.02541722116095597,-0.020330267671233564,-0.08317351565529808,0.02234320768308506,-0.08221920007816896,0.022886174990713153],[-0.0062993543038937,-0.06814353182202784,-0.07183287057148263,0.043373742683655216,0.007370370017272145,-0.10396703161237869,-0.012419190420513742,0.012271452917492908,0.020412154422654014,0.04471397127179335,0.022028703943007183,0.028601873580461658,0.004970124638175347,0.009712749305001035,-0.020517818293987317,-0.021709451268389482,-0.06057787853964508,0.022308555412812178,-0.026195976232537912,0.05036925125124939,0.07201350200390336,-0.0035511479797673178,0.017899186213497925,0.010271919669232873,0.08633905684987907,0.01219285204219374,-0.004871994452634498,-0.059383740350990116,-0.009739003207527895,-0.08075739783197948,-0.0016773031013487165,0.01603884586354076,-0.04761194370171921,-0.045469979859642407,0.027476150593656923,-0.05906334713506075,0.10314035849838558,0.04731608441498856,-0.06306475340896478,-0.009800559785558742,-0.01974543591813506,0.038882986210974406,-0.06681451052371497,0.07328852612497462,0.02129795982000095,-0.03231578148656929,-0.01597033916504605,-0.007487959034454814,-0.012238091666134165,0.007535893860426288,0.01961497345804903,-0.021132645326037112,-0.034834115580045406,-0.05075438870321346,0.03630832389754777,0.044609756480894124,-0.07487330295862694,0.052263261107282265,0.04435703117575613,-0.02143561349246136,0.03855493951597358,0.008260780093169476,-0.05426559823967965,-0.12932996339320166,-0.020958668646927997,-0.027545672685099585,-0.02833945860483513,-0.04831380460478334,-0.04946345868494749,0.028372261786511276,-0.011220342233937296,0.011792917805169474,-0.05350375280543114,-0.00937988210218297,0.047979767979266695,0.11285389441590929,0.028687548041037618,-0.011534235152928712,-0.028559894496210013,-0.05185282402660163,-0.025372923642296465,0.01535985932973903,0.013945791905097631,-0.09804546175684502,0.05049012295695135,-0.012521277222425378,-0.05441194261559578,0.045238974671791964,-0.05615401736932189,-0.03730386318462606,-0.04087238739524558,-0.10106942433911392,0.05786561979826567,0.013540900726654913,-0.04185858532852422,-0.011701176531115,-0.006613496758733685,0.036882401301833616,0.06831339767067529,-0.08128718406939225,-0.0463506225677664,-0.0019169252351967936,-0.010640322518684887,-0.08586738058741666,0.043595851261467325,0.056864742268972535,0.1104156974202976,-0.023142625897384132,0.011384202890516015,0.016016502261838688,0.01944468489869485,-0.03270389644743253,0.07989001421376067,0.013257004402086965,0.018483747780925083,0.02157453901722538,-0.12733436679040883,-0.027821137462988213,-0.006636964801600616,-0.1069137860648217,0.0063715944085037685,-0.018868974097925584,0.04262110191618949,0.076002018976054,0.06787054178121668,-0.011591137389607683,-0.0625311888267765,-0.0146419344606614,0.043721951951881007,0.05038208533589833,-0.04249578476183184,-0.01703795899913298,0.01765186940683659,-0.032480626789663826,0.0383624452416274,-0.08751594837399343,-0.012016323941779566,-0.017417558268163387,0.0814465727794501,0.011032919178165623,0.03093746471377774,-0.017828121699584837,-0.05211852180285049,0.006784750061350698,0.060046581591194366,0.12906713883994644,0.005234197117708793,-0.0034312356496762676,-0.05763704677043167,-0.04078158615998829,0.04268704861304184,0.0024689495505190564,0.01990850583817078,-0.046590373117721046,-0.012708790419018018,-0.01174028326253193,-0.055585288405090374,0.022225644182926437,-0.02751804394555034,-0.009297140373289908,-0.0005938545490972846,-0.00874891761721414,0.0223131968606113,0.04786864187710378,0.0367690301687456,0.03293043261895076,-0.037636336662326006,0.006971379895274503,-0.034890802852399136,0.031260128819146055,0.021487593764746644,-0.008046371126499927,0.0678228029962784,-0.0013847529883228007,0.12756215104576388,0.01505326668499432,0.14152259714461443,0.04894729877593225,0.029624727433566367,0.041550125312512995,-0.08539331709238358,0.029544661528105517,0.054568635412113056,-0.009897307546694798,-0.08302813247937058,-0.05312527476614325,-0.04225996076782026,-0.03754561188642236,0.050557736319399145,-0.07891078622678252,-0.10105099987871212,0.03727204812013102,0.03080130456335291,0.031081719228995747,-0.01710706204569439,-0.03092839637150803,-0.010530172814191505,0.15237571256798613,-0.0554387405946449,-0.04092071354871205,-0.010622809054297154,0.05133211194890784,0.05022744228379352,-0.060340640241213356,0.00486560033378965,0.06682014094366599,0.05847151484735133,0.05822735089677999,0.000577782730239779,-0.016146891052077002,0.026259758459654545,0.03917574825512048,0.010533396336655638,-0.06849680193275873,0.005977845396492946,-0.003166006086007888,0.010244673137829488,-0.0689416249472519,0.010099126778025587,0.026008509644739393,0.01102192344928977,-0.001078164962551171,0.07024827110397311,0.04077196811815149,-0.02624809166957909,-0.001538525942257778,-0.050297155891236345,0.0241350406701135,-0.029181410311107686,-0.03877458971150904,-0.0026630545674362492,0.009550487525352553,0.00824184333741348,-0.010223911339601276,-0.05613293933522825,0.0519064247727606,-0.05761315092889404,-0.017780276359137946,-0.03641284469284218,-0.000883915763491619,0.06384938058991299,0.054662926726062544,0.0562764573848155,0.03015085795059792,-0.07375229654600854,0.024347560929107368,0.028615044434224336,0.06262448296316013,0.03768244764067464,0.02810146649031337,0.04703618802650406,-0.021770857069243622,0.05782927786140295,0.0559532063306398,0.045776263112902005,0.002640625366926653,0.041605987488797576,0.01196515654607136,0.06806376763461197,0.05622991482682052,0.05398122989305461,0.0590248949696379,-0.04951627322627856,-0.07790748870382116,-0.014577242561476146,0.06770313953591407,0.035905037543556687,0.044941055785516895,-0.015314187880629649,0.01712593578357719,-0.05492450296858638,-0.02551155510723252,0.08337025671232068,-0.03131060034503478,-0.028337855070161358,0.06379283071389534,-0.023364613922158738,-0.014824664259219793,0.009825075884757365,-0.016718492345799977,0.04322507886108539,0.0010598786959429365,-0.020074432514831413,0.07805788377665954,-0.04761478389978487,-0.008509131420291596,0.03044313339698727,0.06703871620292993,0.034704753867388284,-0.02361545961761025,-0.10478454712230793,-0.08193807196530029,0.08755425903416557,-0.07521184850914489,-0.06905970926861422,0.02625697076216622,-0.09748217157099143,-0.002073275188598483,0.01486380364499302,0.10397745538635116,0.024910548685627545,-0.07810024293239336,0.006435862455131891,0.0880175334238935,0.12685241246419035,-0.03650482400096199,0.035951470907908956,0.033558361725746645,-0.04975834149892492,-0.005957886327162017,0.041187408568041026,0.0004595368200455351,0.03850189021450971,-0.038998191736965525,0.04523659706712003,0.03502157290696646,0.009806149480353216,-0.03818367884605455,-0.007772448610093536,0.03853455325693376,-0.10936257666321415,-0.010060927241973668,-0.05000633473243381,-0.027069143547636555,-0.07060366039618769,-0.0343581888616578,-0.07410695559509337,-0.027125307163709502,0.05570156971247378,0.03081920863407341,-0.034673980173012806,-0.01986825386410116,-0.06858728579383266,0.016017268609224606,0.03611320847565932,0.017271450033089202,-0.05274850941498917,0.08835459662868131,0.04165814103103974,0.023943804836715744,0.01585528712218975,0.004481062779202777,-0.03832504338416267,-0.038997695131373356,0.03683333455878205,0.041609824249944694,0.014747555154311835,-0.054508028100971335,-0.01108572345688398,-0.00870387403301547,-0.11617717104913328,-0.01332967264289034,-0.05299873611191318,-0.05778139061258776,-0.03405158973681026,-0.023198909852416932,-0.011196495034562567,-0.0006664612765782498,-0.07555474063776403,0.019836275655612377,0.02012479416535176,0.01661594322293071,0.03692327450290219,-0.07154978405646578,-0.045954849626126726,-0.06904992242259517,-0.09535280771357002,-0.002165115650588447,0.03290403363816126,0.08737957851159144,0.03252373864817203,0.02976337377211792,0.012848095708273367,0.04712827219741844,0.0388840358349658,0.05593214410885833,-0.012349987361108572,-0.009555646915420497,-0.07955417835845258,-0.12416991807358162,0.0001685786928385916,-0.03191624583779851,0.009428649848852654,0.02028349917344275,0.010652335284073545,-0.05079835460887563,-0.005247175040202646,-0.025620923188233634,-0.04619616954649332,0.010978387196655746,0.06097786248946374,-0.037655253663517164,-0.022624709793097993,0.00028494931575790447,-0.021697497752032016,0.02821676882354382,0.0007504541464702101,-0.06764002185178136,0.02695318784277133,0.13487497794206185,0.01165048235875504,0.06892685644803587,0.01407317218961192,0.04603763396228636,0.005442085138892083,0.025386046485287004,-0.033776271878288196,0.06076564237526865,-0.005688233552777797,0.03061215732168861,-0.04912161993276907,0.06270663339703841,0.09956625606947596,0.03891559701188696,0.004471541337831177,-0.013916704207280667,-0.027457956147144674,0.007368666960171484,0.04695420687629958,-0.03343620457641621,0.03474634380966425,-0.017839060239473906,0.06153012971907264,-0.04780360064621409,-0.04183284715163184,-0.07267435008482263,-0.01440871594430695,0.056976072987458375,-0.04990513313329149,0.024713509329065835,0.03495568785723574,0.10885871555672097,0.12123032844336736,0.08675648560783875,0.015884052809249045,0.06405965218504962,0.047607819693392776,-0.009085927142313098,0.02091461698778017,-0.0011812197286930773,-0.02522816821061363,-0.030804217726054923,-0.03794201813217795,-0.050646316580134944,-0.007996477236590194,-0.0022535775762040377,-0.01448803613517058,0.01812103359997601,0.025788462198103254,-0.018824623830719135,-0.03867533857434076,0.02292019719472909,-0.07482385410638824,-0.0003870560946201919,0.024924585570346283,0.025191726426947704,0.055005539281051244,0.03844412080150254,0.10905397925362056,0.043130497208783494,0.10473473077241371,0.0779646336606983,0.0049040825412510316,0.0743351834973198,0.11273017326458772,0.07293118432091741,-0.09892706568428923,-0.018905997943157508,-0.06309301663573877,-0.009267269708406878,-0.05487079789819351,0.026252312110449812,-0.05893959413274577,-0.018647115479069706,-0.008437169891477646,0.012501507846640914,0.0014879977363426342,0.06879676282897965,-0.006833964637607352,-0.025830553942880006,0.025262495639367114,0.010426533570702385,-0.057609864677345926,0.019048110095053087,-0.0016798577980530274,0.015644598072392223,0.0355668413907753,0.02964170930307749,0.014676281200246024,0.11124639324979159,0.06612610113336206,-0.020329212621384613,0.03722352609495198,0.02333170191338226,-0.03562465304297895,0.012488234617409867,0.005021486657909043,-0.06755564383164227,-0.004550831223292766,0.031259592342293675,0.0006184771327371092,-0.034656654330280215,-0.10498307487045062,0.09381500084151317,-0.013113544949998088,-0.015816361565645844,-0.008623633052243417,0.022385012492698666,0.04090538367748898,-0.042955234901806486,-0.02752766236779821,-0.08041734990557012,-0.009972000781240409,-0.06177484282249183,-0.007464224047159585,0.005674585847210612,-0.017312629927868903,-0.08865439011404021,-0.00899284904522692,0.02335548831762539,-0.03741383979397179,-0.08362294164172686,-0.023468755978720286,0.07200227327239153,-0.002541644644161935,0.01996314874772787,0.08322229981781509,-0.017112435339156597,-0.12753905101864368,-0.11620447511661405,0.04832865846283034,-0.048602535910733484,-0.013153335519280614,-0.10789599957753042,0.04666565305338016,-0.021298810426129376,-0.0378849011970114,-0.01926095580778817,-0.005952720744789024,-0.02268375597133538,-0.02386629997512233,-0.127629823893797,-0.019701303924572873,0.008678044265923661,0.0365888239684231,-0.004062889910399941,-0.07405979970464913,-0.11468867883406234,0.0276369752316773,-0.047726571298890685,0.03287363173900939,-0.020651805972707216,0.034856434240822326,0.07868666330816947,-0.011190999985869938,0.03443936080699998,-0.013341487969807995,-0.1077538469563049,0.0422992051690921,0.026256017959283902,-0.016092135011487218,0.03914781337810734,0.018877154625742482,0.023214535605164087,-0.018007175184314453,-0.019501313236915268,-0.010495038102755079,-0.033195657939889475,-0.011229943964241327,0.028463471917036087,-0.09919966693764307,-0.006456318114751828,-0.0677675495302883,-0.041444149714291695,-0.07997051678607639,-0.09402947916944993,-0.04802256286474067,-0.005294398217240774,0.0028414886115055104,0.059390009569270104,0.02143841935856968,0.06916999566504253,0.02087367621117652,0.057968229630290094,-0.04107982193295224,0.009634566978232008,-0.08144699983088881,0.008431790165641951,0.004075546007388925,0.0005505153812081417,0.001878028782151795,0.032640414861011366,-0.04415434329680255,0.013728299037833788,0.04842624683276206,-0.07603485622980773,-0.02298565298963546,0.0835585206355119,-0.015229668463958549,-0.038633544221636014,-0.034417116653015944,-0.023580224003623487,-0.028124949857117547,0.011251483145937666,0.033734750652910615,0.06407550402783162,-0.04218983698306515,0.024725576502343923,0.0036182183513814763,-0.03722815038050149,-0.020735140933048013,0.016047752648644317,-0.0272066349538722,0.004642913358021591,-0.01901368601491414,0.06170829058998969,-0.09093547700034058,-0.037250467121514814,0.0017915654918540785,-0.07719767259321623,0.007702908410995965,0.08018459071264475,-0.0460550207167139,-0.08537271557685827,-0.05835781526217556,-0.03340008410230328,0.005766306569931578,-0.08109374898026371,-0.03409326428870402,-0.10229609962454615,0.043249510375531174,0.05508360185936373,-0.019823722615145496,0.047412890546580634,0.03857134632004477,0.023373618409938145,0.10387643390516094,-0.02037355425534899,0.012655253966312553,0.05347491285771999,0.049376861630200095,-0.017803185033223867,-0.01953358545450093,0.018876030099528245,-0.08977597010202606,0.005993967683259619,0.06450434369162254,-0.0434125215218202,-0.010533968171052174,0.061324172784167394,0.046866389745575054,-0.04643626368344801,0.07963098261178081,-0.030608586487488664,0.05254883823130287,0.07148530055237298,-0.02117239388392271,0.017659276336539978,0.09216947268243508,0.061135905869020526,0.06952796751359057,-0.058266285944721524,0.0680403708753609,0.008610987700894397,0.061295014054409264,-0.008869568942540646,0.04014892808504673,0.05642171955875363,-0.005572602133220288,0.019437432772293838,-0.05216268556198951,0.052997986554918365,-0.001376384206652512,0.035545154696332196,-0.07760505193491418,-0.07193147056502874,-0.06240442174821611,-0.02337873466005949,-0.02836748425335387,-0.0028095233130366296,-0.020972781270959567,0.0743043910203843,0.039844375613263996,0.007326824968219423,-0.039752998061636145,0.024994943179524654,0.05250244545812554,0.14233825054384147,-0.08603569983345564,0.05720610827239613,0.010555504050733104,0.08592769005931732,0.10754079936647004,0.08788597945964245,0.07929756716321751,0.06964201833525809,-0.09573813904182182,0.04643170115668972,0.05156898943921963,-0.011948256036172075,0.019047587279634796,-0.011385183498533714,-0.013835041999225096,0.006925245592462315,0.027463004309194322,0.07106502670175024,-0.026872039871761334,-0.011755060157190854,-0.012856661752250708,0.0393737595612811,-0.05586677271019088,-0.006450454197988884,0.11946727295536085,0.07177638814529282,-0.07255376997484084,-0.07833645709764829,0.042937756547756924,-0.058290828957164365,0.06191658042421572,0.032142084984933615,-0.07499803559425051,0.026652640012988005,-0.03262607870670534,-0.03263874028815411,-0.027321650981263847,-0.046874380642572044,0.0896855047116316,0.09842465786932222,0.03202123934961995,-0.022000140171515324,-0.05322212110564228,0.007760478030335535,0.04847159295026278,0.09664325253029916,-0.1145332655668605,-0.07625406852727411,-0.00830385916264632,-0.02021949354684691,-0.1398952809177356,0.011662395198919503,-0.006476384623174277,-0.028189782741920733,0.03257626297072728,-0.02179933997583533,0.00815755604435493,0.01483228962821582,-0.0718754203924753,-0.014816896659583537,-0.06506136187392547,0.08173009927488947,0.007342892295970964,0.07253349117777178,0.02334435036260834,-0.10668847209660597,0.020075546429946585,0.04491226879622602,0.0012733935557545043,0.0689440014888407,-0.025806112681009137,-0.023148986336560845,-0.1024345212837221,-0.01156799200519427,0.043728171323994536,-0.07234248711898587,0.006002517013149312,0.002933924504127381,0.034286597880526896,0.028350381790754473,-0.039685768731700356,-0.008479038620325712,-0.03294904747158924,-0.05274433638545121,0.011259346505271536,0.010137176600198411,0.0009685997234943459,-0.09494252331477913,-0.0022787995642040895,-0.03969318894571413,0.021181373783662742,0.07308434664648275,-0.0033391473652117083,0.04400556194243997,-0.0037008401873387187,0.0927820243653367],[0.014747403003951982,-0.015317275351665141,0.017880151588377833,0.05004217559398375,-0.003207656079190275,0.059900998624107554,-0.024398487474394593,-0.042175402298113625,0.03946282981689961,0.022486854169108287,-0.002811310826143605,0.01788847835843677,-0.00398842246639075,-0.027596354892561424,0.09300036060327715,0.00880958841324974,0.04826310722106306,-0.017060679208639486,0.11785098240140633,0.029796864387536818,-0.06417838998849877,-0.021041018261288385,0.024466938027105346,0.07326789091713135,-0.03987351730673242,0.028790204945315534,0.0051970203516602574,0.07360529605630826,0.0018402791290378123,0.00841069921895952,0.021719466119279118,0.008184251151853582,0.01107453699855688,0.04547300400677583,-0.07230885418818621,0.09498746034253014,0.06738989085065049,-0.02086129807533232,0.06938470689100652,-0.01932622169846444,0.13841982953451745,0.09571585784185573,0.055855347889403134,-0.044307083816389384,0.023030317075489585,-0.09847691052740545,-0.03943043715846105,-0.09531790321189713,0.0467301132683591,-0.06652860803271679,0.03438065913436916,-0.07938137518477391,-0.05697049144010372,0.05105516960765473,-0.0037286385834680966,-0.07844052906736998,-0.05336974319286915,-0.03333806007593848,-0.041179199127225896,0.009303166755475939,0.03594850360121271,-0.006318363175888264,0.02492289027079992,0.009860345499374383,-0.0011552636290113555,-0.06818460319075685,0.005394905682674593,0.026898754103108314,-0.015014382661488268,0.03582347997532527,0.0005625583108022184,-0.057733754118101006,-0.07726350483024917,-0.005610577444637196,0.010736009735576596,-0.03235224481512251,-0.061725873040825004,-0.032657751840022384,-0.010542798037775358,-0.04992802364665465,-0.015574059942498046,0.0220331281470856,0.016886431075153144,0.05807373603799542,0.034437141879265075,-0.0044550026020408655,0.018741865771682808,0.03835964481994478,-0.008177721675653272,0.051494549205864826,0.03414115702692729,-0.028740814611378885,-0.06989058013656764,0.016929810145948472,-0.02046856868811217,0.11871495466847562,0.04982934836185506,0.02286212920604836,0.09339897143295439,0.11800279291598278,0.05602637896784034,0.10043410720128422,-0.016736979037598798,0.04303358293724501,0.03554132291939333,0.021860582522237507,-0.04223922291708824,-0.03814744698367817,-0.04085072540625496,0.04072447539282865,0.07406559466109253,0.046422420837785444,0.03511695323170119,-0.0013837613236656011,-0.04748019541364837,-0.018820650133980994,-0.08846305545227212,-0.08058291323096624,0.0926344944079537,-0.05177522469479021,0.010589447557927808,0.04547544033471698,0.04847119605316775,0.014510331810019199,0.015314148566175193,0.13510989008294783,0.06425420653916229,0.018884741708216923,0.028127227407230688,-0.028003554945366778,-0.021376075950398598,0.06074636997122772,0.005205793782868012,-0.05088389143875412,-0.09070998822893925,-0.03140841598853055,-0.05931434063165923,-0.01232415885968555,0.0031781074776214987,0.020927247045995592,0.08263617916615006,-0.03516972783311653,-0.0027554860453767225,0.02343657845867364,0.022944572914392176,0.11744830828798172,0.09894578326861428,0.004403104972411184,0.042520855928601865,0.1231881356304809,-0.059746188211677764,0.07833666791704774,0.03866016623432914,0.016896309581108646,0.046294377922235695,0.1538811748675869,0.014148277039948472,-0.053156836966535385,0.05299880709585151,0.03750032293536247,0.06961930899789236,-0.05570939710187442,0.0063950040135689395,-0.08562412601693058,-0.02562244632389302,0.039128501306919215,-0.059427940252137657,-0.04099585492185478,0.0707055359514462,0.08287122062232942,0.02417873700262721,0.005256677180350598,0.014153368918741261,0.07869900086054442,0.0025367022851118027,0.11512231078440263,-0.05828411478672017,0.04123923883593688,0.01206130492792998,0.04810699223629918,0.07449614400875806,0.11888396638536819,0.08430285456847218,0.06673233795516123,0.11083580969675137,0.051781480085621244,0.11292759080823653,0.03906167142140275,0.06563569394206666,0.05804444099598836,0.01825757278124498,-0.031392083918210245,0.042796313688447316,0.0017655931332791633,-0.02480181470484184,-0.003692815549903413,-0.06212634398979322,0.018896704839742907,-0.0208393500361485,-0.07397730841933595,0.044240343889367074,-0.002518253094986788,0.06245757105765045,0.010304142085263528,-0.05793896437590515,-0.015224917926692559,-0.03852555413608717,-0.023635577147187878,0.07649432363604683,0.05622286915433684,0.018061986101576402,0.033130034952364405,0.17579354981158687,0.13709187601693515,0.07303428989172973,0.10342977916777485,0.10023880445667388,-0.01648737998127334,0.0347812376421237,-0.017981465093489274,-0.018416417395246576,-0.07209284355096834,0.05699036605725886,0.011460077785540833,0.02747512667948795,0.07266662444022087,-0.016773662196608884,-0.05383385248490174,-0.01791725935412719,0.0664865419978043,0.013582191702109852,-0.048330028833385885,-0.041744591597883914,-0.01896967449456458,-0.06230330742568406,-0.005606729165317596,-0.0004331638815873036,-0.009559478161212656,0.1614617109291245,0.14454326090886596,0.04356505546893277,0.045091552629843816,0.10637223835007738,-0.02446620983559013,0.03933791070559339,-0.04647046744259688,-0.06874275622932782,0.006338653008032729,-0.06640042083532517,-0.016179783678189553,-0.025968269507181386,0.020119981233723324,0.0014608426830549585,0.012425415529930683,0.015524794117509942,0.06282793624405428,0.02370195877269976,-0.04569541169824744,-0.012222033853121721,-0.1427676698523383,-0.006840519575963903,-0.14824840985474502,-0.06344316134489067,-0.07934928343891254,-0.12256423028537348,-0.03382715097535562,-0.02173349518296713,0.08466473894255339,0.03531458045839942,0.15303369195395808,0.05694753295967269,0.08123288605201445,0.08816371839532332,-0.02351999215551829,0.0060298531868275594,-0.017901532668836744,-0.024169629664539158,-0.05851584807407073,0.06073182131751313,-0.024464214767728292,-0.11273794493741068,-0.04056935791593903,0.01482141756673005,0.073417710714862,-0.06139971039066582,-0.09248800098709326,-0.09332201663032388,-0.13858977953680465,-0.10608064436481425,-0.08001163733532592,0.019425620217495592,-0.02051426936152002,-0.119924018629997,-0.07901890911479574,-0.06612731951848476,-0.0073819785501415104,-0.05310984744220164,0.0944989878730152,-0.05726635588151303,0.11455638119699856,0.018361210316457047,-0.07136331623228907,-0.050030014395306195,-0.030942604191400137,-0.006487227903229818,-0.07717308534212014,0.05695881687662556,-0.022716762611766177,0.017248608528672677,-0.04188762666799968,-0.01859051529395577,-0.004971816141438533,-0.0733126292736896,-0.07649412035472929,-0.06274763040309503,-0.09728535167453778,-0.029135336291036,-0.16462947164410305,-0.08978172829168833,-0.05123150314438143,-0.1321871120967045,-0.15322925237034668,-0.03126069366384899,-0.052759713654309315,-0.033171691991887874,0.020907871871789132,0.08790673006062638,0.09660752773824234,0.07781915099681477,-0.06024306805224629,-0.05254090520322025,-0.045817620749187375,-0.0966667177309809,-0.02335848547667587,-0.036596098153472145,0.00022436397709952864,0.0483736531373669,0.045890567217565285,0.0624578182990057,-0.09038395415987545,-0.011813269250325666,-0.11263374805725816,-0.11048431402861908,-0.06841018266989189,-0.06563670956802382,-0.07380538251537595,-0.053164123707025376,-0.05151917724412637,-0.15931732454015265,-0.18971949268807276,-0.02023894072456372,0.022437502843257868,0.0878676951176226,-0.018867979193237634,0.07839991681604598,-0.00002235412866042281,0.07544932802722729,-0.10045349519415181,-0.07109659577386881,-0.08503849085269381,-0.00214397582093204,-0.0022277368737427562,-0.11764875375063695,-0.003418173885916397,0.023462376054943834,-0.12248854103426715,0.0923505118444225,0.021236229065854307,0.053992857732778614,-0.018635494654092876,-0.053001135242952344,-0.018145983305904476,0.016584888268792633,0.05303367800074597,-0.0007195567567529957,-0.03617925749328161,-0.015737028262399234,0.05329622127475696,0.08330798093208296,0.060866152611254457,0.038601944824612114,0.09399747074014064,0.11578836355158158,-0.0506205498042714,-0.03836940844011019,-0.033882428925522096,0.048040928147582714,-0.11060312754841133,0.05766664575002969,-0.004074553424021861,0.046018273927652696,-0.02211189862189393,0.020674738919709054,-0.004848381657079293,0.008460949211958852,0.057668991806113214,0.00009669531175958806,-0.04185330574710866,0.02906733658259271,-0.02841926753559557,-0.033510756921354135,-0.02772537324431149,-0.05718213769993752,-0.10520734304106821,-0.0457891403421644,0.01478464730138298,0.054332315081929115,0.1492111715544863,-0.005526859702406042,0.027034330342194574,0.07421358883551323,-0.00812489276778999,-0.013758901441742166,-0.03176349676602917,-0.10173631401603375,0.06135982405217936,0.027615420995504875,-0.09019414732901827,0.08955623310385903,0.007291004665719841,-0.04924324469398221,0.0478646320958408,0.06030471074735115,0.02738038194156111,-0.07790655919252244,-0.021049994261201608,-0.0196477564766912,0.07123249210486342,-0.05307261772194736,-0.033666047018869084,-0.0824095020592967,-0.02851521188927103,-0.13178188434717317,-0.04983218675305738,-0.04062075601570809,0.037921370014064135,0.05998832862450125,0.07828699382387629,0.03686202149404978,-0.09916757023986729,0.002441608974645103,0.040345420990499654,-0.01904855057194998,-0.11259587714380284,0.030577690659963554,-0.027691298242929128,0.004769111504641904,-0.09953298069217853,-0.05080293741796047,0.005385032039347123,0.05134645228509982,-0.008503231257288206,0.0717324076790135,-0.005682266060312938,0.02910135935411676,-0.014591257602241935,-0.14143776843099115,-0.0566334212864726,-0.16225791415331806,0.018595504304371065,-0.014741636514808318,0.061125384542403696,0.0637130253479769,0.00929516027559593,-0.02229260718608502,-0.041134315156092886,-0.062134753743894856,0.006042674803545135,-0.10042222080432964,-0.054289280338408005,-0.09272136109431733,-0.015289001242479441,-0.013668402784490129,0.040406221914214134,-0.01389319636345495,0.12114711345447783,-0.05859447337329939,-0.04184643357337016,-0.01898294935147845,0.03677452177325865,0.08846199080941881,-0.0012207063514090939,-0.05348335302441564,-0.05561199911468546,-0.01376779044678649,-0.03258643390714887,-0.025724246531216625,-0.08729127226924759,0.044348414876996665,0.047822846333417435,-0.062458027800012625,0.013781496987403894,0.031840222235407334,-0.031751831641848534,-0.08435639887324854,0.03572443918946127,0.001184006804524261,0.013630962202922484,0.03409491763162482,-0.008482789135138323,0.011228886619297091,-0.029861320472624936,-0.003942720943623634,-0.01637473747932913,-0.1066154099822512,0.026448359255527357,0.020575524030180887,0.016678949172953747,0.031532393381553385,-0.004410523169694508,-0.058993416547483524,-0.10795377217856246,-0.057543631744642436,-0.03758761532156274,0.010920664054487137,-0.024427257083784352,-0.027451697503737174,-0.006685182970795571,0.007678464808725022,0.03063722718172419,-0.05169602758653656,-0.038590093204614546,-0.029654522869271508,-0.07028513443420636,-0.02924459146250755,-0.002736044354565484,0.001337213283107679,0.004053035625043091,0.051081035644692005,-0.04609684360512781,0.005069885616354383,-0.019447449145062155,-0.09380777511093334,-0.089063004398145,-0.017259683310234475,-0.01705647925804929,0.08794221832068749,-0.018368111103606848,0.09475250015108051,-0.021657513196998008,0.011321380939205768,0.029930999791718805,-0.021429750725549854,-0.024298590847728594,0.0617596053590414,-0.04965890751468574,0.0791934899189062,-0.020692849290905445,0.005870261137058458,0.015622610692690846,0.05833515696708952,-0.05037954531913083,-0.006583568778986903,-0.02509399911124107,-0.04989038833208162,-0.022496973734262245,-0.0225831365730097,-0.0049797225641503755,-0.034772804047689156,-0.03398887536009809,0.04230884696756743,0.01591755281151413,-0.02871954808968207,0.015039619547500223,0.049023866856206695,0.08355600095593411,0.06391349721933826,0.08851912058573623,0.08420187891671552,0.003644672031890932,0.04216753726974048,0.055783686438518894,0.06591185528777585,0.04760783369191771,0.08391728803975818,-0.027071065997087737,-0.018737604651310854,-0.06945726010167048,0.08118474827432434,-0.047352663363168866,0.05599021054535421,-0.06170540632814147,-0.0018843311172854376,0.0957870122412333,0.18489501802830097,0.1067470306375885,-0.0023191301931850925,0.012771788953769412,-0.016796857928137288,0.012607604253232043,0.0011263636655250856,0.10519323639542243,-0.11992736659197932,0.019343322497999728,-0.03130361897534913,0.10778386055625779,-0.011427302934256511,-0.04241586440178141,0.04633003300240688,0.010276253216090504,-0.005992501743569124,0.05954031149893287,0.06380736070004632,0.07354199232529961,0.0764142275354351,0.06325257538908774,0.022425844547664622,0.053617467548669716,-0.0041810491310002,0.07066679109093982,0.039079689836574706,-0.0003412579460914531,0.0023912556559514435,-0.013692055371363813,0.03519209932484874,0.038158307729497874,0.08608339866833128,-0.027987883455578497,0.03728448999241462,0.12269494529126547,0.042782202985414644,-0.0030991969695880976,0.09553483361155207,0.010070332730359727,-0.012413716135051213,-0.0068752951072690695,0.05965224721141397,-0.0006717742387573668,0.01160905599984676,-0.013553783085293545,-0.05552168641334528,0.01068472088695008,0.033028074149841366,-0.08323970920871188,0.051624655601533544,0.06620295558896953,-0.05553890714303306,0.019717744754552628,0.04244172700343183,-0.00840826071344568,-0.013707846479408406,0.043057770099634,-0.07477971262696666,-0.050459578687910255,0.06770281524925874,-0.06674079451979946,-0.005871746087876622,-0.012089270606526075,-0.025593962512845722,-0.05136118711049078,0.004353062369625724,0.11101230167922851,0.0026780178802177468,0.03191070262602683,0.04784121837603842,0.05999959709871455,0.01830360184617551,0.014554231552618141,-0.04362172982879465,-0.0291950487013626,0.010183283112239257,-0.00047705840707376525,0.04558759505335806,-0.08025103306087628,0.10159726787646796,0.0028117942612255692,0.07911136567697297,0.07431282484594415,-0.05961916917186036,-0.049094117658009244,0.03570917893011112,0.04800098477826671,0.0037214954006831395,0.049277866396122506,-0.02695544442651798,-0.03674869174403696,-0.026533628061133033,0.08076660860700587,0.06441278970495219,0.10772404947032917,0.018408994926953862,0.08848586923653733,-0.02465408299177563,-0.0527042613183738,-0.008410020773516592,-0.05628893305432839,-0.05108691332813345,-0.026545095968084763,-0.0444029467341797,-0.01606116943435574,0.028764375336427575,-0.0959056409234501,-0.09907845567407324,-0.01684434890270857,0.1048883971584437,-0.07665382754544137,0.05409944649525129,0.10282680984419966,-0.02586985463597345,-0.0055527258269119344,0.023996764869769083,0.05351457390811093,0.004267657157853552,-0.007504809327421589,-0.013414842696395432,-0.005186068317428153,0.05495841974323466,0.01683659014397955,0.05183437222974751,-0.000334525667023818,0.045247207754487644,-0.041041626291716655,0.015247533643979887,-0.003683658792854716,-0.04575614278737989,-0.0538496368440018,-0.017481882588124095,-0.04292492619631594,0.00031497287901118616,-0.10276334302398982,-0.024300785344592093,0.01887589289557324,-0.11070182507440238,0.014764186417672989,-0.044032974788289866,-0.03638465615572788,0.08272348842189126,0.06326077142316205,0.04153811413650095,0.005955815882906028,0.0965774656423681,0.027593637201605604,0.006095291303881605,-0.047023745204040276,0.009312344847645931,0.012556134902432077,0.13634431218625795,0.019723421891193985,-0.05139934302139993,0.0567736524107108,0.015782893985058784,-0.025494495416567394,0.005132718557674782,0.037600176393624715,-0.022860441405555886,0.03337581110319622,-0.013305514836765944,-0.018065134034234015,-0.0020916904584132455,-0.04546250062250516,0.03498677930471819,0.11232486689630103,-0.09901102296662062,-0.02300893695623433,-0.030759525630483148,0.09313512069517174,0.08813642766473354,-0.00006994623120752938,-0.022847696203305064,0.0689945708440259,0.039314692802894576,-0.02343877848613876,0.05923108520673294,0.053876710213105077,-0.06280829240951168,0.008349315044286479,-0.012952258272228177,-0.03547822255500355,-0.0854370737245017,-0.08702122348505532,-0.058211536303112967,-0.066745154581327,-0.06112124109936213,-0.016092073571239034,0.01710124191608846,-0.03941554725616548,-0.027677344795056402,0.06004763076154931,-0.04700243827031382,-0.045419083030771884,0.02918751430696254,-0.007368984756139035,0.03385603743997635,-0.07879793690956886]],[[-0.026169439104014255,-0.028083655161408937,-0.11454359812431392,0.18048382313101502,-0.10947046971137013,0.12995467276305014,0.17389973255609725,0.00017839436498543653,-0.21599237463653356,0.36426542202474427,0.27088767259874186,-0.03220712843742791,-0.25330746230748,0.27770783184038195,0.15643860302967186,-0.4041292508350046,-0.06259257415209649,0.06457334895247357,-0.1501139074609318,0.042930014556236754,-0.023745362450320474,0.26903064423979445,0.09222126486438288,0.1928368157888339,-0.38335196947392514,0.10814760699436875,0.028572901978065807,0.07091960129904648,0.09673822668209577,0.09886603383242475,-0.29012379619175754,-0.05759903833406798,-0.020937550028145752,0.264008815189572,0.1280208636661021,-0.031099853188708976,0.01741367415982997,-0.18425310549847965,0.16560796368130332,0.06820186899385026,0.1969967228797419,-0.11063084542327727,-0.07161606642788988,-0.33919900084069565,0.06463527010938401,0.09311933949314731,0.0007965952181262601,-0.19595674093484494,0.03328630920983337,-0.0710944448077131,-0.06092114593330964,0.0950262046704163,-0.1587918462648115,0.10700583003801577,-0.12670325923478676,0.28464543200317666,-0.08731264159765345,0.0007258906070138807,-0.12029978389572273,-0.025047847277182594,-0.04948111700656588,0.014382986548105105,-0.16640964368127595,-0.2752575964126524,-0.10934680237895877,-0.25905872901863736,-0.13858682617935952,-0.09198029546011832,0.1440213244028465,0.010418672659700177,0.42144475715947294,-0.15935731753607013,0.17957704278301762,0.042326757005455726,0.09593654949824802,-0.05017147290449137,0.19640769883871115,-0.14906905377084523,0.13369943018971117,0.08539025824056645],[-0.22308107069852273,0.17267326885934559,-0.027881154080238377,0.15627572632309447,-0.026839184835450527,-0.2449160400195975,-0.2256911283805758,-0.019753250705000967,0.2465095036207036,0.26762729109647354,-0.09767066060403902,0.3500613936079026,-0.07284055979508011,0.04050737568031234,-0.0910808459670881,-0.1169833805071337,-0.15986738787399898,-0.3734733589520586,0.11700164604228482,-0.2290127361366897,-0.07433726131035821,-0.2616576636134948,0.08925284072226665,-0.053239244076248166,-0.04285088905708423,-0.03451630688047764,-0.33977824755837344,0.16687002726317066,-0.40772344711316927,-0.14745969351871482,-0.09616716161964889,-0.3171073637982531,0.04667032648692304,-0.19293677085729632,0.002831575507491714,0.16477423216939474,-0.1846825451223191,-0.01869220866915571,-0.004038535542150353,-0.14434173856243454,0.05655884258724545,-0.060444990963867226,-0.01181677321002693,0.10449558355854895,-0.056953434364972425,-0.12135579894698209,0.13664403235371808,-0.07109455442359043,-0.044277336411076264,0.18762972349178356,0.026571812605332795,-0.08957052482176016,0.1036601995854934,0.06040823404759755,-0.16296949876977418,-0.12065149179188017,-0.09648681021581847,0.08985995457532014,0.061569190030762,-0.08337506423728265,0.2500614259980081,0.041012942295784956,0.1687433332364894,0.05815849001191427,0.3372745767741202,0.06718868554604526,0.38225106114776747,0.017044613781345787,0.16507941475615218,-0.07727515364785638,-0.09919837487101583,0.17536931567398556,-0.16004215325944232,0.15429368363464505,0.2226397347045761,-0.17464904763665065,0.3314844833284579,-0.03774957032497431,0.20976949939300046,0.03258057671478431],[0.10980530470011382,0.09334217873228842,0.28564316790630156,0.045925917390892884,0.13474643629541458,0.07101849875879092,-0.12674113186436806,0.08757184773232611,0.11773261446571104,-0.06265904272813475,0.11527840638331385,-0.03884205407786895,-0.19597795745944058,0.08970174659151492,0.11538383781349948,-0.006232645850415209,0.15015972812247555,0.0835362501105488,0.1529167498231518,0.29686703190953223,0.08783595220941187,-0.15803659261106792,0.22801220400363237,0.057227984366132,0.34769301203551023,-0.2033515682382216,0.018557737855194587,0.08433687950760077,-0.04461408177082343,0.051228361947646225,0.09149321796385593,0.26465351366902395,-0.23533357723493753,-0.1543439956071119,0.10712932184364574,-0.3248361078034795,0.07394528140015139,0.041385925033298014,-0.041716895535044145,0.03834991058569593,-0.17809385582578258,0.16841085441250678,0.17317169752796693,0.11943777219081149,0.08768181623829502,-0.25821650177545863,-0.02280052196824508,-0.13067132652352295,-0.16342843121696646,0.08700235918134458,0.06532581137723147,0.4473589768880243,0.21194814044312996,0.016464316192106025,0.05357317989595924,0.04919168052517828,0.08173093830161819,0.37858490689696533,0.18341598896999578,-0.05758197004132017,0.13111239364970242,0.45054060053456596,-0.11282343081705092,-0.04471034446041544,-0.07712307362582244,0.29518338550796897,0.07831713112155099,0.1354118705606912,0.04127891593225308,0.19391816508161105,-0.11165341571976248,-0.15867074910660456,0.06606754390208865,0.059938824971805325,-0.13604674900879035,-0.15347966257112242,-0.23454311813067313,0.0766656829247373,0.13391123264608934,0.12253794504946101],[-0.29201032369341234,0.2609830632683162,0.05967514099060108,0.23497608359351735,0.01064575043387506,0.00497252056243045,0.24099249651080307,-0.06398215188671888,-0.06416445652974415,0.14770413130889773,0.19723923598034432,-0.09323820403248244,0.17729178035062676,0.03186137096392302,0.09682596688179108,-0.31603855778537104,-0.022845927525111834,-0.24902805955923582,0.3668645610143624,0.10897734799065562,0.06796159361591078,-0.0022906888679289123,0.3601921811293359,0.016172333807172264,0.5018792318095544,0.3327654312514135,-0.24928684965595932,-0.15747949711962023,0.18161528233867769,-0.057347903495981914,0.24837131886361802,0.05958794633054915,-0.38062497414169816,-0.11351766420986889,0.09241433709283865,0.0873043612375536,0.13722672240401207,-0.2618635212859604,0.1424563955717167,-0.09723846607647602,0.04186586145049059,-0.05720356502194993,-0.041076292577985035,0.2035258074664047,0.036590858415712066,-0.0524920688602956,-0.12857502647485847,0.15346803255514885,-0.10873321870672695,-0.1947670297766784,0.10854137954799178,0.11531202077147787,-0.1807667744495786,-0.16314254136930775,-0.33872585937751,-0.009377034695183542,-0.06519609687960509,0.10137026403310453,-0.07167940776471328,-0.14821799927549445,-0.043269421565107595,0.25350802445256837,-0.0870516198274234,-0.06648637255811292,0.11113007429571532,0.1142264491627801,0.2547331019973532,0.09990908547196375,-0.41293625315289834,0.06269923814591795,0.1668653632932813,0.21684265218198553,0.5020551273041565,-0.03939430323523304,0.0577311535120804,-0.02991770424384941,0.26723230788867613,0.18956717712087554,0.0601051274823455,0.23431137069255098],[0.14553130636991066,0.2317428355204276,0.00012230299045668894,-0.31014173008665175,0.1750277798357825,0.040434333730267856,-0.09871620685606071,0.04971089693497241,-0.2821944307304589,-0.02446293204218594,0.07920197597752998,0.06790152558530725,-0.0002786707536308769,0.1281434458332066,0.20515112466993815,-0.26153780389235765,-0.0015879631488828596,0.041234799930675047,0.2859962627605471,-0.03605387608894614,0.02109240948634222,-0.1660030349095732,-0.1677779789924386,-0.04049705631200367,-0.25452817944181627,0.13268690601333666,0.07454374743568973,-0.03262212148830359,-0.3339972317034765,-0.2144893586435832,-0.24412871115708457,-0.19269593890617898,-0.040610075086642265,0.29029953011541865,0.13171866076570382,-0.13073009338565564,0.33303111446083006,-0.1498380347062793,0.14034948400081027,0.14598921208710813,-0.09300102188871404,-0.15573546063371022,-0.02160510147956605,-0.29629615364824874,-0.11081530267409913,-0.045792562567070524,0.11478058899175579,0.01013526012787005,0.3751523733272244,0.042100538222678945,-0.3274487792306346,-0.0382061718172117,-0.09436175039151924,0.11731678865022031,0.03536671789297689,0.06983084428289606,0.08705475455158514,-0.0181818053413773,-0.21899664188899498,0.3826937436368089,0.1429505638550043,0.01996629305760635,0.3151671805909501,-0.05968928569779241,-0.09758947388193233,0.005221767999491545,-0.27415726208566354,-0.1474237213399415,-0.21326623197106787,-0.015642738629198107,0.2411411005940166,-0.08258937559383023,0.2671638832648337,-0.2936383908099892,-0.15689474153561286,0.018315431217680478,0.014654512022156254,0.0718647739528916,-0.17270591772887658,0.09790128866956675],[-0.008310006119825838,0.1264494938168815,0.46364042044941367,-0.056833310682046244,-0.08283228328957494,0.22994106800334937,0.1789349977221505,-0.07603789722136217,0.17468987703061134,0.1212360358259173,-0.08186655731399317,0.049608820854463755,-0.1507338498527267,0.1876741956834527,0.14984782466276736,0.03299971601298201,0.10538930722471848,0.2248684358597333,0.38484829657253117,-0.22203439476091552,0.15697235707069077,0.10748223303669234,0.3790622684661177,0.22387196147267305,0.15682635269306458,0.22397226608706625,-0.04541900991385896,0.026160832087333215,-0.02339796684039525,-0.160850757749221,0.11593392068473868,-0.24284821971127543,-0.16274810686667213,0.08459968850292636,-0.07084137322708295,-0.108668207447661,0.2316418879329551,0.1197352116761406,-0.21617233414312703,0.06679599965809874,-0.06563222031105839,-0.007499739842283734,-0.04187051419355053,-0.1575853454079413,0.2047877514742684,-0.2067868958693472,0.04677784712218235,0.10800759354602987,-0.005437530688671566,-0.24390436768642423,-0.1709977007144082,-0.11770921532035877,-0.22491255829847615,0.01456763344387961,-0.02577351423422326,0.22068075570659285,0.1633935746814102,-0.31604375009202573,-0.3462543710890052,0.1275303463304204,-0.11589995167026493,-0.18560320095929692,0.08210116066076903,0.4347624312448582,0.14798861873069974,-0.047766699168752286,0.24671285205708185,-0.06260157629071145,-0.22964313410246584,-0.15350261629199596,-0.00885771900721809,-0.11203510551497821,-0.1221143220899357,0.11023354309117993,-0.1376469686994558,0.034505289694443934,0.06358665078527302,0.01723901127990264,0.2325032244917684,-0.16009842352158254],[-0.03076948063656646,0.22382012234534213,0.1420332685026997,0.10282977950818252,0.09883871495450486,-0.2600153033696475,0.17435369591014713,0.30044169210043914,-0.1129808552455317,-0.08296102792388922,0.006815178703002614,-0.12350846312832982,-0.2943765168463406,0.2812447729079639,0.1560386883152685,-0.06906558338682271,-0.045308604124637525,-0.045184237214822336,0.08996488630987687,0.1631780362032726,0.15753953948209157,0.06467722191620845,0.11303139597610488,-0.024099092923681,0.1922893446303649,-0.050714584593397546,-0.09305503976760252,-0.11079563303732322,-0.09615063658284163,0.26742301011601866,-0.2799524713867261,-0.09062238381853985,-0.40393123721101853,-0.15559322037017279,0.029835865753434263,-0.006620230498632424,-0.3499339507990372,0.2535735332969949,0.10937305572011528,0.13562019266857048,0.2917130676936742,-0.22428734326323593,-0.057392514521550704,0.03569534240757153,0.04126754822288471,-0.14892538150846996,-0.1096841678357628,-0.3129317352524024,-0.09415662774889355,-0.1360445311273873,-0.07592841185948808,-0.11912892373770574,-0.18142772817482222,0.21802257812758088,0.1358911073426595,0.30653568405976506,-0.05987446847270558,-0.13136113872886296,0.11047465390319103,-0.07200804908796193,-0.23757403772992994,0.08143075927861865,-0.021864463840482587,0.19890566877645194,0.20643100330858988,0.0034384956986817975,0.11325174666589086,0.13624260994330936,-0.15688260877785068,-0.11666943375379928,-0.06927031199290558,0.1518778547891981,0.20839799690625493,0.01828505693635149,-0.18915646020775653,0.09663659164018158,0.09437176063601192,0.28477169355333326,-0.017014537627914685,0.0642983237732743],[-0.19392364800712314,0.10898084089331136,0.17866058640035623,-0.10720301480207675,-0.1444140356183623,-0.005156595818658544,-0.09960745853217506,0.20513060827266852,0.21107295699061207,-0.013206517709600376,-0.043693313205802234,-0.037176624574963936,0.19970590538416574,0.017810389735399227,0.006938925463904985,0.09458798850065113,-0.2674735686848863,-0.15671040475126466,-0.07222849701534317,-0.12774714936588863,-0.02319192151143221,0.06094204764427194,-0.05858039654583305,0.24189036275026132,-0.08256197373485429,-0.22269009086908567,-0.1388702970228328,0.382992134618785,-0.19927693681635078,-0.03910582783219591,-0.17483808280034793,-0.051572504804668504,-0.07769443886564108,-0.07722684559409915,0.045197024696742936,-0.11699030483103875,-0.03575226441265168,0.14538763269806051,-0.01860433126852097,-0.04998310621126649,-0.05868763632196459,-0.021306267756200283,0.11464000833109689,-0.041800308759900415,-0.00820240599239259,0.13602274575406487,-0.14702071427446328,-0.01119043141829545,-0.02668585732592776,0.019199615095293762,-0.056640160259557024,0.005718893543392871,-0.018280964408413498,0.08362367086296327,0.20635853961969772,0.07938777815717137,-0.037577981487560044,0.0042842908161107645,-0.05210391089356141,-0.06662913880923586,0.17331291745082447,-0.0829032494290474,0.07014315410186574,-0.11208546355055868,0.021680706547990525,0.09468421344519858,-0.2531520850172181,-0.15006818916467166,0.17286990230794558,0.21036837098372788,-0.22983189220669117,-0.23120544394339013,-0.14334465211204803,-0.04303310853576689,-0.19605019137996013,0.09288590843459442,0.07771241926074575,0.3429235045331342,-0.0430282524155726,-0.13448379214517978],[-0.06520551742023308,0.5772084256366365,0.013564648247009136,-0.1446028223749592,-0.024716132271873494,-0.19943400383265167,-0.25407721599464056,-0.19514141484590716,0.29268559050101317,0.10225131335107358,0.09742784894917839,0.04844333354270742,0.2539630926425905,0.5331030293685611,0.07510355701591212,-0.09664201293783435,0.1258560529179087,0.12924780238101383,0.11676282467507029,0.35639728272571786,-0.03732533770663048,-0.3471922013408686,0.22737213619639934,0.11321718002098405,-0.45376473670335493,0.10093965292463275,0.3551102643406007,-0.15624643931614798,0.18644527340807307,0.327007769651559,0.10703858070260815,-0.09491579858505712,0.14409391366218913,-0.25768763179045073,-0.14807230561698745,-0.16549368797811406,0.22220236245256092,0.29652881686879917,0.0884067785316836,-0.19893326912261153,0.2564264066785935,0.5511830866803861,0.09259170926209177,0.04208784656904901,-0.10551716172686335,-0.054466912659165034,0.14976590616765556,0.4046818217829549,-0.173996807001703,-0.08325778612687744,-0.0984438703273635,-0.026256990304045172,-0.10398168520143451,0.30060739434800193,-0.21122086729886216,-0.11480250681859862,0.008168580833878728,0.1730432310629275,0.1378091764421148,-0.05273807639872863,-0.11487467204078274,-0.22394737874412107,-0.08780590132708332,0.23201612660931184,0.09477823787519454,-0.1945044322093696,0.13477197038400868,-0.03031337111313209,0.0854308343846438,0.09178186185082847,0.3274752366481954,-0.10609897971444693,0.11513453754935792,0.024020151990694072,0.16128322115973,0.2586407405138955,-0.005943558466047688,-0.02362933564800317,-0.12554241576948172,0.3529148139145413],[-0.028964796810075067,0.08956431951381809,-0.07964966916040285,-0.024691339321462877,0.20203808732090867,-0.14800965510050348,0.09213387368645459,-0.0846995921743471,-0.04561587406141459,-0.12436458811000668,0.06738879540947738,0.20820847664671815,-0.12286680968785546,0.16753134999449165,-0.10004669382843437,0.033105028327962506,0.3179283816346942,-0.02209540445408573,0.3127005366769074,0.1610959626474175,-0.0619562924045674,-0.13492581698995945,0.17936719568861817,0.1219088450453562,-0.14685922680744742,0.08562983784397545,-0.000698713638004135,-0.08378386134155447,-0.17128310976931344,0.12332638853630955,-0.1668804184224237,-0.21643432575671206,-0.041865061644541714,-0.1615169084122177,-0.33301341175758775,0.0532405401522081,-0.06865728981476903,-0.2096136155459251,-0.011956048867356722,0.012575191925302695,0.24171094749169278,-0.09715691229721848,0.0012922953366556968,-0.02935880176309148,-0.1705187259265854,0.2518958834142307,-0.42591812154479275,-0.06890489599436121,-0.06307550193329924,0.012027205450241897,0.19655665271442693,0.04025306481183485,0.22398948551859754,0.3968782346175609,0.185190475401586,-0.04335172195848311,0.17014728084324243,-0.18269506318475578,-0.003951622775856457,0.1830957261098614,-0.30757600939221497,-0.10444006117313244,0.1774492468758141,0.00874487262887621,0.16680951322798288,-0.048563741273841554,0.1277209621940391,-0.034628312314075385,-0.36255881663308825,0.3863968899186566,-0.017358448074280067,0.07509186239413257,-0.039751259012525485,-0.08007316747804437,0.1721860565486942,0.1691713756292422,-0.08540576728117828,-0.30541130571279346,-0.13807781598457275,0.2801837081897359],[-0.06070364147412673,0.03064829773257045,0.22257246481876716,0.14269751810984727,0.26811658133939553,-0.036282155239585834,0.11828582458768984,-0.016787324691555767,0.013139147739713527,0.09891478227586827,-0.2474201015771732,-0.11302772539504206,-0.05345945605789948,0.30697794756051766,-0.030666893933829466,0.015184305347447231,-0.07438933013081836,0.1376241874416248,-0.08083630433934437,0.14618382177290365,0.09367714775538966,0.20748543994728016,-0.06819247289297975,0.009889189371913786,-0.045758054985613986,-0.3409693450218039,-0.03698699161606736,-0.043860011746659724,-0.12402323916170614,-0.04109537544815726,-0.1528226868831215,-0.03721037772422298,0.24851572628449767,-0.10375091829707704,0.001463546738920196,0.4346645041465667,-0.10439646629566404,-0.26159636009931375,-0.15531985362135572,-0.03643626769367168,0.23849372367968968,-0.23718131184421815,-0.00601572900779067,0.2566790521538001,0.22144883968009252,0.2151267238236951,-0.0933288244548235,-0.31136785402623657,-0.28087551722190285,-0.1952429129337972,0.1303296312732422,-0.1695679269051331,-0.3181553802521953,0.10077099521456455,0.22037678714855644,-0.09307433589540941,0.016595555075389685,0.15923248951522442,-0.07656348245521101,0.07762263352161064,-0.00335751554267276,0.05522509377097484,-0.07741436210322053,0.1381509457354942,-0.09837293658674219,-0.017106327173733095,-0.03866924175016401,-0.14353952717695664,-0.1629765941089771,0.014348152228359322,0.14944414142797657,0.22877511935166644,-0.09976667741382836,-0.07568465489421215,-0.3103031175596561,0.030523239622326323,0.06914470371449814,-0.05346218965953788,-0.031119904035836518,-0.20259970170176783],[-0.22647708931044738,-0.044206404620050294,0.23319911330215815,-0.024894503080356355,0.0595668739544253,0.019510926319907355,-0.0027169774984436494,0.09278619203537655,0.30201431975180165,-0.15808948450722926,-0.0920057200031535,-0.12372735024116097,-0.11184491421477796,0.07345245453643691,-0.14374690834449344,-0.08064804361243141,0.2422189196204826,-0.05707582574529938,-0.002980030881752046,-0.151875559308776,-0.23666403751080328,-0.01089897558311446,0.12883722420555996,-0.022554372733458172,0.0034079891575470346,-0.16958173528576037,0.03002551285193881,-0.04950996293416173,0.09357173207132198,-0.2797110921141221,0.015593489364877483,0.035549921511202426,0.07933770542511766,0.002808064792214218,0.01777705804083837,0.1336846652280552,-0.16894705041798666,-0.17617336599029335,-0.27424756462539307,-0.13279951329347664,0.020244131101126068,0.1112393326128618,0.15309835150788845,-0.09675449986128815,-0.5786142828785942,0.0187936143441658,-0.04708684766643772,-0.1563081398507177,0.10758993972334097,0.04741056079871061,-0.059910641509138635,-0.1247397548910931,-0.03387936789154737,0.1640042352209619,-0.18676088827252316,0.040322932870685335,0.25931754860324524,-0.41737356740745746,-0.1481409862866257,-0.12129871915122062,-0.07952127499195592,-0.21191742898867127,0.12762517186733144,-0.16811988226561714,0.08196034921313403,0.43183447753597526,0.08033674562026732,-0.005616103005251219,0.16077919593923307,0.20727522949452537,-0.09572245297274837,0.09913542433853009,-0.08818814135065614,-0.41551373557198246,0.13802867470234131,0.2429026576334611,0.13688533393197688,-0.08338811181891109,0.007915985154046352,0.35290394742917086],[-0.0011352324263758532,-0.343550718151422,0.06328494645084284,0.1604139979966243,-0.00393614054587904,0.04096559553971221,0.029467435792270145,-0.13621222969779315,0.07393744824140522,0.1274597045416089,0.2172552776892877,-0.06161053518382544,-0.27831610678501406,0.001323315788517676,-0.2693292563007393,-0.1466618126745022,-0.09566772502123072,-0.04515971530827003,0.06622597828113277,0.10999226577312327,0.1938534241889358,-0.08539315449151269,0.2998428385167955,0.07975308069985425,0.25591762668330637,-0.05230694885940842,-0.16930789907983346,0.14704755099429034,0.2151399914920262,-0.21055054804860865,0.21521088657746804,-0.02821027922442622,0.31898390294457063,0.1930241872004431,-0.27152354864850947,0.0687731598341844,0.09331750797798134,-0.017836233002169834,-0.2451643058456683,0.1819539267079214,-0.21835073761390825,0.08066105787314307,-0.09471587856787066,-0.018822125066396914,-0.3093478492369119,-0.07131751626330575,0.10357162037149664,-0.018841790055978476,0.34054642105643684,0.014774966020123056,-0.147816874591211,-0.1381465995353659,0.007762676388805343,0.2023294003961675,0.20439579280396092,-0.05764676758491204,0.012347311458268909,-0.06669500037638369,-0.27773606161475406,-0.11323035799232492,0.021174040796816732,-0.10261996121666692,0.03578015772209694,-0.06927711541853208,-0.01598300400023964,-0.08235822051506916,0.30441124908556155,0.2377010322633324,-0.3427716127202432,0.2810541640378115,-0.30417674075990603,0.23372059491701988,-0.10944065618170247,0.04281782170048435,-0.294408088943997,-0.15243536411243983,0.07468084006732635,-0.10718654988443413,0.09697433943330437,0.03579907176903152],[-0.13180962002367197,0.16922741002092714,-0.1257368707947341,0.2220436353183827,0.18220686819143173,0.03460275960807631,-0.09618983013722786,0.12923890196393328,0.02063490234876415,-0.15353403765924248,0.011933313288148367,0.03948552086811132,0.060848524111544115,-0.17074084590032382,0.34456786507730686,0.024607188895505477,-0.06078422805095783,-0.2758031609208209,-0.01616913577960223,-0.04005369902864762,-0.21317542740844958,-0.167691687298563,0.11540307193694865,-0.007595664101570493,0.25065177402319716,0.023160832337987294,0.0685604543635661,-0.2310840534418654,-0.08072412783479045,0.3117580441142185,-0.24108577251954666,0.15138998082909277,0.08147279353496692,-0.03895517649238845,0.18263433203855162,0.07357477693577451,-0.06420759840126844,0.25757732164894115,0.16556012632495018,0.08528413560543234,0.06708893067560234,-0.27074907565552325,0.06890737799881659,0.06398920688688688,0.13885361982037395,-0.029723648676468845,0.017367918512421452,-0.2927170573855792,-0.04003200269740454,-0.2983363348135735,-0.03197886801101016,-0.0647134187488006,-0.0057726442321075514,-0.10097891428233009,-0.03103965858103357,0.038877535680246926,0.17485800473628954,-0.37296939143636737,-0.09836619957351625,0.2249026636208762,0.0028610536736433435,-0.29203740927598254,-0.33119065655269436,0.0025473346253941397,0.00506699056161077,0.07649607407178668,0.062065705295695814,-0.1098045451514033,0.15066356435971195,0.15800900086030004,-0.06746838466707543,0.016054391234564265,0.10467805897099665,0.20047772052633217,0.07024222910552154,-0.15637160221042448,-0.05437278903301386,-0.24344342296224822,0.06101193253079913,-0.1568354172509197],[0.00863787567806477,-0.23314273631125113,0.016551940632219497,0.0010978221461442493,-0.1975913537089832,-0.11325926771907971,-0.22552280347687942,0.1161257163257033,-0.10215716739469217,-0.18896388215982343,0.24490995471614146,-0.10493770499171405,-0.06742101719000035,-0.2140581350728569,-0.170660317809745,-0.039607836001089275,0.206327505648706,-0.21367395119001667,-0.2353917184039944,0.22165585246315725,0.04649154819512222,-0.047913689152502166,-0.09278809637802668,-0.19182661193085837,0.16337854192024,0.28933946147684947,-0.18026795870657575,0.02132960933792559,0.047067170116088276,-0.16718799063787615,-0.07118695877054672,-0.027850065583993725,-0.2399761670756896,-0.22918253172789382,-0.08270396735581229,0.08090435298187187,0.17799468124199277,0.029720559698992923,-0.3313442413541443,0.2500296647694558,-0.02006803971452099,0.1599639736358464,0.16274860300362104,0.16034664603228443,0.11974282059102631,0.034976979895177666,0.23655002900477934,-0.0096022625014389,-0.010788759926252259,-0.17536561197202555,0.04275058694909982,-0.0834188512530215,0.14121590040281226,-0.08101372376741874,-0.0024952074922592097,-0.16202524896881787,-0.11273338666867794,0.18944063883949364,0.025221473659689353,-0.21770540786582226,0.21812869678767532,0.05528665324559595,-0.24097880006082978,-0.00993509638548464,-0.007195104819501132,0.15298747227709703,-0.4207297748764576,-0.03643642577504173,0.2684969836071112,0.08630480268989028,-0.09203202019401042,-0.07943207314798842,-0.020082567580690654,-0.2763032118469335,0.22806240701508057,0.035570298864479113,-0.005960199626645081,0.0998249233471356,0.18577566422272135,0.16239115909605747],[-0.005538737459773668,-0.054834544563598285,0.055256053380244856,-0.051757372877647694,0.08373145779064797,-0.26237415108607376,0.13244367365462428,0.0552855354809585,-0.015804090945565334,0.41816770361053224,-0.1581237746058186,-0.2207900562263189,-0.01781119007361289,-0.08549230039443963,0.16299665208130557,0.3453263439574569,-0.23208004152678807,0.002772579755950211,-0.06713369300809593,0.02008896947158039,-0.011010256407947906,-0.17013874426930128,-0.12375309289269122,-0.003664910710854558,0.29580873858877893,0.25452278882073004,-0.027027756916588267,0.15430928554525897,-0.051896988602244246,-0.24336219980864204,0.04620634820882582,0.19559737587300555,-0.31686813887221366,0.0951876008493978,0.06775555887095089,0.013912796293228346,0.26919612058459436,0.3427440066556492,-0.009725107898867592,-0.0015357233165146566,0.45119056381952904,0.07933045196535544,0.10784290272149523,0.08759096589429699,-0.09499581093180007,0.03912396873826854,0.11258222695461666,0.09987743599671488,0.03471523245023352,-0.20737485520502624,-0.048550690653156765,-0.19755344410624054,-0.01236231389469151,0.10628844268963004,0.04983670457361471,0.3141127652288199,0.04907818037767343,0.09394413654892983,0.07498011771265255,-0.07843310940014078,0.10595054648042725,0.12788129206345844,0.021595546152290254,0.25563772045213806,-0.05455580141050587,0.10899538351762206,-0.058556639534655466,-0.23420930347081872,0.12717949461186584,0.1632616631598875,0.10721938192811863,-0.1054231477322864,-0.003799924285293294,-0.0676435298206753,-0.05817610520086697,0.10254564577052881,-0.3603094128846027,0.24136161544023488,-0.11454434190054502,0.05807001932360632],[-0.06821189389004399,-0.00445718924884732,0.11716953997048074,0.20940239280519785,0.06967376709999273,-0.05382361911558643,0.2503337747577551,-0.0028910309842485986,-0.021851770487201876,0.03408079681889638,-0.18039756165156232,-0.2410657720390671,0.2539846344895903,-0.20467980836731844,-0.12369015791609736,0.21353265693440143,0.11956451782350375,-0.2215744718954371,-0.21202073388683437,0.03197222683881942,0.005212603529214926,-0.318960484976849,0.34050945249084835,0.1975338663585481,0.2184936104351184,0.22413981410225758,-0.010097814058740728,-0.041164397672965404,0.04684238165826947,-0.1436414661057027,0.36854160110815737,-0.05349984211457972,0.24576337554923883,0.006937903684474415,0.10661555825147308,-0.006349022073503629,0.05484677087328693,-0.1756310253834957,-0.15556361126907842,-0.08761489147289611,0.06791579164017401,-0.1865148574111057,-0.09494564165624905,0.2749901817995591,-0.026909359951201372,0.05108065445039641,0.15073990542617974,-0.06668490338373126,0.07330853372601286,-0.07127596177791472,-0.10223515459890677,-0.05616673709687221,0.02519843578273451,-0.15691305855032758,-0.30046806572063517,-0.15754272960000948,-0.048377371832561175,0.11984063638911342,0.026399086046882226,-0.036414427579496415,0.07002214037882905,0.2730378786492656,0.12742665349238633,-0.011044319839544004,-0.02925169232583258,0.030685878327118863,-0.024287642996076227,0.050643810525190174,0.15253312421318746,0.09482404142465765,-0.03195512122215545,-0.14468567001385652,0.2697073516508734,0.3926499653791947,-0.22989525101896735,0.04043475315642761,0.13300407462727495,-0.0012227955981154945,0.17252120267234045,-0.024451043979815942],[0.0707521089626375,-0.09064296348578375,-0.05555020401373114,0.028070019973839743,0.10236689965075879,0.20496516929135908,0.305098874181874,0.18884636302155766,-0.00713645718094747,0.04210849171961332,0.1636914849379074,-0.10577516596079471,-0.14650548295447133,-0.3189770395361238,-0.15484584848778693,-0.14670226139338943,0.10127699886503233,0.0035621030373400447,0.23323524340599106,-0.20929287373350028,-0.10337460197275423,-0.027138317862243033,-0.09455165107643111,-0.2112419888156841,0.11197587668536062,0.10799160632079555,-0.21640188758779239,0.026816072880128137,0.09995520320082289,-0.4511228066881887,0.019472955891044853,-0.06575263311270367,-0.12579123489065144,0.17054492325515078,0.19861019942390745,0.05643556825777729,0.09853110237675962,-0.3584449493687886,0.12197895327880559,0.296923561345434,0.1264221619400863,-0.016088041201547415,-0.06297460298713953,0.03362411665323011,-0.044582071383644395,-0.14787424804567706,0.08371978286613277,-0.3415598453728519,0.020575603761325237,-0.16928529451872024,0.16625220193638887,-0.016062017150594448,-0.3566563932205016,0.02908132847852752,0.004996254179277956,-0.09171580823094158,0.1771403475403327,-0.05523173596153674,-0.1407300579171106,0.2525302257535617,0.18680815409769433,-0.47302923352204196,-0.18543007067763237,-0.1896475172101978,0.20724397334542846,0.3764355922930159,0.042909905433848025,0.17922839817599373,-0.01970842187023893,0.3008379719933304,0.03555172009298867,0.16061028214814704,0.09364031015199806,0.11390244572467345,-0.11721986826213877,0.09692095408165395,-0.12118882817663426,0.2471817847337826,-0.12404496354741372,-0.06709763251990516],[-0.05886333381494145,0.08285550768546207,0.09826758022329975,0.19751675363262167,0.03512854481673831,0.1557277445842409,-0.11775411170327717,-0.053471521105130364,-0.07764579204292305,0.0887976423985258,-0.11650751477735875,-0.0032628626154547684,0.026484825756454933,-0.31181896883877636,0.015728852764021,-0.011742112132893523,0.26147203327785173,-0.0022572512936494867,0.1327806110096487,-0.009532914004694004,0.12680655289132012,-0.02837557672158306,-0.10153676569761717,-0.16118395821508533,-0.1689881259222101,-0.08152508343970784,-0.12129673846096459,-0.2457168077352952,0.29665790730028907,-0.1967444002260985,-0.2356847665555213,0.02802687291358883,0.04069830333921664,-0.030537586787635095,-0.17761889784304985,-0.0944693721995248,-0.21695386638904798,0.05070345537470788,-0.21953926121304623,0.2648871313555229,0.0746150045681663,0.25380671842976504,0.105131006248019,0.02983305360057196,0.0749314231666995,-0.026347520376525223,0.11254110430401766,0.06375649813437057,0.12302513145666026,-0.16235259711791677,-0.09678853966722326,-0.37210488680680875,0.08947744492380674,-0.002565047429935205,-0.3091175831501299,0.0724332227861173,-0.19026977592962716,0.07406397898949926,-0.046016256572329176,0.1479657828283884,0.04566138662721881,0.14141739107971726,0.18790014728803706,-0.050314839599513814,0.050225775021699934,-0.02233908100934499,-0.1994600000479055,-0.2945158304050466,-0.02769061193516864,-0.08218174561712843,0.017790827158591427,0.3497704993171133,0.19286222698036104,-0.04199545329103147,0.18168576666037595,-0.35427977513413805,-0.026596078575521927,-0.1395383026289846,0.022854219384840255,-0.004998891513044247],[0.055157231854085435,-0.19736355895883156,0.26487008254780314,-0.3040136618287711,0.2252362653302694,0.017878368862955338,-0.07544753278909158,-0.1292450407426694,0.038761705305309806,0.060242676506695854,0.0638455188671392,-0.23558220526047274,0.11321081270424345,0.11447316823032583,-0.2383185186567066,0.14558590925188905,-0.3486791443197419,0.2792551339447571,-0.10077494233814448,0.12719542070910558,0.008072339621423468,-0.03892885643295105,-0.06414445814915591,-0.12962148761585254,-0.2404557202161013,-0.01928520700902635,0.2773430358409271,-0.1645379642157289,0.03322479546792676,-0.08773498902551666,-0.11101631965168204,0.22125811693528336,-0.14219836335905647,0.2224108430199243,0.13775444065683315,0.17908879954424767,0.09917218069001014,0.12947900474658858,0.070050337788352,-0.09653697845733468,0.15708120451416982,0.2376591586056173,0.10702207118547276,-0.025140614203527475,0.3248334958428551,-0.05004321492089276,0.13757827296755773,-0.06317143924233318,-0.009571954178664183,0.20951309154585893,-0.026877010515063016,0.030455841486910943,-0.030657702966262277,-0.0659463156603356,0.11453724582392101,0.05855846185224515,0.21172321649153722,0.07416815594458483,0.22708305220503477,-0.020488139739215254,-0.021154535448411508,-0.08361383716067389,-0.04876210269964506,0.1577125948746015,0.23416089410883809,0.19070903991083707,0.11780054822887305,-0.1280311264141148,-0.2002441731637116,0.0855830353874281,0.1481601378854187,-0.1901237373572427,-0.0649603894959454,0.09113363607088674,0.26512399249623814,0.20939865462046647,0.0015662291937002303,0.2913647879169295,-0.06900537556024043,0.32348463313600767],[-0.04690053419624111,0.025253345388757054,0.0050049008618264605,0.12019882992393387,0.08419947217688856,0.0394570259960961,-0.1055852617078483,-0.06979895888071722,0.252364878845892,-0.08923792838752968,-0.3611621362232101,-0.1870131397660666,0.07497991714017102,0.019276562396433577,-0.12469870702509984,0.017678857849277276,0.0276434588319232,0.025214482064691717,-0.23629245463068532,-0.06170704730449301,0.22189320650078725,-0.26126266798825554,-0.07298608893768214,0.1429672639355319,-0.28608265553895806,0.004297200770932133,0.03468900239911492,-0.006548295665988813,-0.260979298442256,0.14314442836443592,-0.016291306850417023,-0.03818167950816042,-0.058517993223176815,-0.11035663234658509,-0.10384861808794284,-0.07004806110687871,0.08276019564048534,0.2901609075624474,-0.1476203662426821,0.12078170712774326,-0.04122095038118515,0.20325086844115312,-0.08142162180823935,-0.3655402210048726,-0.09311054348052218,-0.02898227742363046,-0.0006504839579226142,0.279844481144733,-0.06448345386984249,0.40692206125503794,-0.04033453085483946,0.22268125260973012,0.15204321792101724,0.02651916385426796,0.05150535093456488,0.0494898795696739,-0.11075582027098081,0.15419747648449922,-0.155109928356423,-0.13983709687024812,0.16359171309873932,0.07208549650014935,-0.23145210844157627,-0.16513405837613201,0.056921332972572375,-0.08661616015448173,-0.09331214155271474,0.06467964202194014,-0.11145315025138756,-0.10677597259716404,-0.032430281187839936,0.06663634906362488,-0.05332625290746173,-0.022437018357540233,-0.1977661913272918,0.2855178281750005,0.1673069104024756,0.08608784000353087,-0.24912517218765717,-0.00026929612455944417],[0.02785874420209785,-0.11254565738299478,-0.03751185671895491,-0.05207347189107473,-0.31754570028152146,-0.03615286274094347,0.17290914657013334,0.028326263950195985,-0.12406179172259718,0.1705563305024044,-0.059134056588689275,-0.2821166895370005,-0.09190078561948281,-0.045525339657223524,0.23022482276260026,-0.10955314403231461,-0.2330567269150166,-0.007874782180783595,-0.1346500569096154,0.15720008345935949,-0.2773441040612913,0.07698085708590405,-0.03406218100305671,0.06676155651143756,-0.04948595357915283,-0.03473622928903238,0.3472422484273387,-0.25065182727351376,0.06758895816769828,0.06033290776160389,0.23583237665683443,-0.06330500797542654,-0.027637734414572828,-0.01188184848704202,-0.17725100745668246,-0.004174205888765826,0.198633275413564,0.1032725153085088,0.06466210652193057,-0.09487796921902233,0.03400610684269052,0.04726571708434708,-0.26944525195266555,-0.08924799697115895,-0.12403199655562418,-0.3531314902553888,0.22954424801179438,-0.011975001573608392,-0.14221421000573414,-0.11944020850874726,0.1950171902718139,-0.14987168253698124,0.23057092254426104,0.07264740685747284,-0.12100073930121348,-0.16075103431572293,-0.06708485251392407,-0.28687782311540155,0.10957974244050099,0.1932918637916833,-0.16015652211234727,-0.004521786260045647,0.31697596914412923,0.11991318839514521,-0.22494749187584073,-0.07581516302332662,0.1348776657378593,0.2708333285150699,0.14801077175677232,-0.1805342339942107,-0.0516363491118225,-0.17919853055156806,0.6486775417631492,-0.011214198681459158,0.13038326655903823,0.03630000361377801,-0.39285481436822195,0.09453843313341115,0.23992508688923467,-0.0011595386922350964],[-0.1524663624020582,-0.1322362421527789,0.06210986897814131,0.2319837037876633,-0.1877897762338818,-0.0423520592047601,0.24778979228068998,-0.09883102708952324,-0.17267252449992426,0.22961485928114223,0.20157614722837702,-0.22493625519175756,0.0664959227772744,0.02363549469718349,0.07862171945500522,0.021235766030246163,-0.04623904463279365,-0.12118009827332821,-0.06335971036615066,0.09473130569575523,0.1377185588800238,0.028025693127246273,-0.09919039911352866,-0.1944360437233586,0.3378724023681375,0.054538924885032855,-0.0006643070641288792,0.10235275754242876,-0.15316382641535406,-0.10016805140406505,-0.11196440505124651,-0.22325757797283452,0.24564258649114765,0.04970797468485742,-0.07732923633694865,0.07949339829105022,0.0790578193172153,-0.1460210937584798,0.100302595257126,-0.24989270233682914,-0.09952115183211682,-0.20833665326357764,-0.2160717589840915,0.19993766280255004,-0.05882678359124075,0.022477579191346825,0.07384097125028025,-0.033649628930775784,-0.0591121879379497,-0.163847574308975,0.18555224710469137,-0.13676674998412816,-0.19486261888515174,0.1177130565926507,-0.27857002209416876,0.2954281037113526,-0.1449519027859161,-0.18539718441136507,-0.17397337337284027,0.09477254654710503,-0.21881161061355253,0.11057959525380995,-0.048131692894846895,0.10750241136489022,0.2370903883027533,-0.13301689061770505,-0.04176929607124071,-0.16566765447216697,0.21003053375971575,0.08609975801456075,0.21137662383984504,-0.14976603592119053,-0.1775005683479581,0.021989123973373343,-0.022095605915397592,0.13801562093382533,0.19024064450323622,0.14506900000548936,-0.1575842340206659,-0.227588094563202],[-0.07946547094129439,0.49123551293722273,0.14850463865136052,-0.10790527664649673,0.31289642447842475,-0.014810144854933694,0.22748362590560386,-0.04695449042197244,0.06087606650282875,0.05127228477953706,-0.15686799200990226,0.2418748172725806,0.1076845462272588,-0.02378459214727762,-0.037129874491465306,0.1360542440653083,0.016925671047281935,0.06828768629563595,-0.2543223106458219,0.023372846037754854,0.16318165633735743,0.018788121630913802,0.06875605396713887,-0.08062692940489609,0.2245994935454606,-0.040720221602761154,-0.03275716739618866,-0.09835177975481554,-0.2064855908449908,-0.05791271747727008,-0.06044638718053239,0.0012772704482768068,0.05621029696596271,-0.19925495267549906,0.09333772878670094,-0.006841857793668818,0.16537487770477724,0.17453808656978348,0.1587740896760649,-0.21559817719102475,-0.07698146643980593,-0.052496109049081606,-0.25030611668598735,-0.05387975689893198,0.001349804054189415,0.08738810822721285,-0.04608693995723184,-0.33303316528926136,0.12212252346209401,-0.2601490656550312,0.17142922871788233,0.1602354381343846,0.39251070805902355,0.23346491887722706,-0.14068809700889498,0.16295355168719045,0.2545961161591539,0.04932239847386319,0.0006619038148603354,0.07842193151730477,-0.07566310351287826,0.15727240852387223,-0.003562500184631507,-0.10044182540635627,0.14856470794220406,-0.053025118244037626,0.34208234921350217,-0.015093777181324649,-0.29574749510013815,0.22342687529477598,-0.43342442318953983,0.04728774551282051,0.36063905927578993,-0.06308409644554733,-0.0035386222354667762,0.051872551581236666,-0.06727986477816965,-0.1265467730632475,0.15296007815735668,0.030258164573434523],[0.17530996634849935,0.040773315353290825,-0.20013490987755764,-0.2291920479427109,0.05016705400737677,0.14776075800685723,-0.0008087810462366836,-0.40024088763210103,-0.09480767619504406,0.09257829950789596,-0.360970833188623,-0.24971250144590154,0.11188154754682172,0.11013552252924262,-0.168123735886059,0.24474060607557457,-0.08742893906836836,-0.31640334712127277,-0.08405115212440889,0.3806472306636735,0.11002306918070605,-0.06667408343785397,-0.17972794346655538,0.07667396610885906,-0.10835918742551859,-0.004334834520243037,0.32118975024798296,0.04185170178782371,0.17627821934661692,0.09633719901638972,-0.2707496752090733,-0.16087576121922476,-0.08346562501448804,0.024196945084601282,0.12745230938230806,0.3717992023628071,0.07134443115861111,0.17591492195736017,-0.01403687726927915,0.03921107859609375,0.10645401203092082,0.03391571287279905,0.13163632787377522,0.025248798017117186,-0.0894860344404171,0.00633357833287884,-0.07623020051719205,-0.06752718461550102,0.09122116966315465,0.27987033090810187,-0.17202361079438355,0.0828649364832888,0.1643156423646894,0.18440916431543858,0.07126301123107272,-0.05673245607195182,-0.08685214175861491,0.02724584374422955,0.08175685608295719,-0.06781749847685514,0.0761163315511354,-0.11289006600863756,-0.09002437398328751,-0.1935208254118653,0.335026456653148,0.06403593739896715,0.34715430683847626,-0.007544608397123614,0.013978108019561966,-0.2346898933677313,0.12623899695968047,0.029076526487750196,0.09613329022099225,0.04729826292963931,-0.14561756897018296,0.12081308438723708,0.050460071675583494,0.1673612861467624,-0.11708181254814928,-0.3890423834821982],[0.03853084455712222,-0.16850133193302658,0.12270678683458117,0.012713708608844649,0.04348603454889998,-0.11902936317610399,0.1445476904753425,-0.31699967164310433,-0.05313964387817345,-0.004583762289053384,-0.036793059397712574,0.15142773254783948,-0.02290885789454008,-0.09595971834376085,-0.01601457115603037,0.09160330254263836,0.026075323741114365,0.25820010859226883,-0.010093221173204589,0.2075778116964116,-0.22743052877141182,0.15334389026436943,0.2098365581808598,-0.12108502505076313,-0.02657778804739793,0.13103851693387294,0.3107607967749339,0.13937167917480509,-0.16455107526218413,-0.09338291293709973,0.0384726773310057,0.01369106437044207,0.28779509374104995,-0.07704925473323293,-0.029299052988108195,0.10668412748070627,0.22822404392590528,-0.008334332689957414,0.02021032386935033,-0.11207837134637655,-0.26422903291040734,0.1673298158760423,0.1483665416419089,0.08866942314229612,0.1747958787166732,-0.05175317722216721,0.020855941380151583,-0.08884640031261393,-0.21745706309697357,-0.08330676059731466,-0.19393445741772813,0.3558839954541781,0.04330958364218566,0.10975487471129197,-0.15773104105726732,-0.026104435679787465,0.15899021964134916,-0.1463951288609811,-0.2910486699980579,-0.01707682650069983,0.22535004372161213,0.04704545035298027,0.22595063336539356,0.1868556266799805,0.02518724118875957,0.26563905953974787,0.19480525350014846,0.060792562449249916,-0.25177599396463224,0.03817918691554949,-0.08540133413184545,0.050431439218739216,-0.027512261739708145,-0.05122149750038201,-0.08903790000432887,0.07229596295530073,0.25544842331392353,0.2267971659235333,0.08133348128114073,-0.09584929687622698],[-0.2770500037251568,-0.16574288538528614,-0.10478619389994495,0.007686542327939319,-0.09441290322133926,0.08391531742907492,0.03444194933469527,-0.04720311785626531,0.17845706397612462,0.0002704253528793291,-0.3774650344960877,0.03484105904233784,-0.06013235171642331,-0.03687890752619205,0.0767010051137415,0.18386049907972682,-0.123583472578893,0.1751256947848594,0.01463893372065423,-0.1556576888906039,0.0528689948068873,-0.19842586893683048,-0.16426393889857527,0.13606524415047788,-0.07935160335520144,-0.0764103559430988,-0.002070233987233411,0.055926730744816286,0.19550540998513125,-0.07644460791186375,-0.1247234621658852,-0.03061446507370589,-0.21034381421684895,-0.32397669713655747,-0.0311674665131416,-0.1916323767034841,-0.07950666487926676,0.08763089103269234,-0.166712824295564,-0.07861291809219094,-0.13049116389852525,0.2950598232153664,0.13951179160453328,0.14304881650062293,0.052088079290052824,0.319607828739597,-0.014795020228187029,0.11994830549863017,0.11602433589890405,-0.10499366904270827,-0.003610964370177939,-0.20063113748943598,0.03422309190099049,0.10918088707140637,-0.10209788397870627,0.008428182334197842,0.10351402408808306,0.09148751786907107,-0.04708073292606758,0.10004900597196582,-0.13202570213216316,0.01210097648363399,0.12393453135289038,0.040258561399864334,-0.024391104030805712,0.12880300784453452,-0.14511166499823497,0.4136032726348432,-0.2942211212583752,-0.12399543650053776,-0.2520562396507952,-0.13076684419042633,-0.37748278931875606,0.09747696786671185,0.15818208870669656,0.005060263658139838,-0.06287387941235799,0.1641235625400183,0.2564592234520136,-0.14602954559326387],[0.12233693002821541,-0.05875513597766035,-0.5188144773534411,0.32641282354572915,0.38777455429634206,0.26384028147658584,-0.05363555853290388,-0.12519691394759766,0.03094752425246361,0.29576264035350736,-0.17656420383165652,-0.06276812497141104,-0.06644117861519007,-0.11027749124795799,-0.06547343830656925,0.3468606604970857,-0.12112046190311605,0.0690684390901265,-0.0867674142274205,0.18543161576886957,0.0328925878808286,0.0799466676512604,0.019198627288012606,-0.10806266673493524,-0.06268678921154097,0.10927117635976788,0.3614961851635172,-0.08174880743557625,-0.11129474878290811,-0.230353827300056,0.12582203927469207,0.06566104497798583,0.30300290055593315,-0.01869613609479377,-0.013749785600952257,-0.26483182639498815,-0.08770736663045298,-0.19170346866453988,-0.008975833820771101,-0.15420736760144704,0.0019291069651034272,-0.1778664199821454,-0.07685992084307085,-0.11789796302976487,-0.0753867226538225,-0.1571808949497692,-0.024641045471606164,0.3275299394603679,0.07863701201696235,0.25651173028983326,-0.0021468631457986264,0.025088923355511078,-0.19401410598361646,0.077580785419312,-0.1989491429847628,-0.07162014811825088,0.054142643962369806,-0.19726212140376367,0.36965675683196714,0.286438155165542,0.3369522091856463,-0.062447500179744535,-0.03151207963679399,0.17100864378156042,-0.26546327264488434,-0.033687370765675524,-0.031400201547624094,0.07375486903287896,0.14659570016495901,-0.0493915485655892,-0.126594937288633,0.2541608821043831,0.0684890599058038,0.020625442408813813,0.14915151906019336,0.06334584949493526,0.08576633611302462,-0.04651853511370212,0.08842275479262379,-0.019423994608572793],[0.18823228691857033,-0.14098624996489909,0.24106378917749505,-0.0382458365071562,0.03823962597033755,0.06884890758354299,-0.020997011998289815,0.11196440099885806,-0.08346911231270956,0.020975296472061658,-0.09764407602870818,-0.012682537474856127,0.03644340526285537,0.012118236906516058,-0.05895012779564539,0.1593704739651215,-0.2640439547895244,0.1380625274813383,-0.19246793274057158,0.12014603686495096,0.07273931145737432,-0.03553420161570693,-0.17433590136822247,0.03140080491292514,0.4796513113004788,-0.2322115215744617,-0.0430071697291181,0.34171408251822266,0.28597938256002065,-0.09412472024493432,0.022272974500492832,0.05324240550069911,-0.13335660280676537,0.0014076251075622534,0.14471879212083072,-0.25374050965791306,-0.30859757400690485,0.04131719900747021,-0.08832366600225112,-0.24127903299485237,0.09997711353557784,-0.32655458452073055,0.1258003575911737,-0.0441185770921428,-0.015230137634556242,-0.2529165943768425,-0.1989292702746985,0.10830488203363757,-0.029230336885280955,-0.07453007641870867,0.09574875987111395,0.244405711690388,-0.09088123287818355,-0.13689700105725472,0.16417337760069114,-0.058823140207677954,-0.042748764542806024,-0.21365450318705118,-0.19218100719730127,-0.10680588080374645,0.11259123698313349,-0.1791867646776281,-0.1112803074250945,-0.2647482686429659,0.08501428235516041,-0.06839117555508004,-0.1580774912755473,-0.0060449319474728345,-0.07216382748406126,0.1506721653945086,-0.1129173035482705,-0.23881797132849258,-0.15002455316663796,-0.06441043290032548,-0.20122986689398709,-0.0061021946163802064,0.037473977975958445,-0.06676715036700634,-0.008400598382190575,0.2911813916510563],[0.015629788176425862,0.17099568814685745,0.25179596721035896,0.23313411153367705,-0.2118006822980245,-0.1103294956000566,-0.04869459776878613,-0.13398179628574602,0.30939944733742475,-0.03330800376540696,0.05455664815000486,0.09857985249518794,0.02478995747223666,0.07930227305996684,0.313932880564982,-0.14487881749987663,-0.12159960396634527,-0.0408577666039534,0.03316435785910739,0.05216372463415268,0.08444285059013826,0.05443978794872064,0.265481809289527,-0.09003397112279363,-0.21806407070212597,-0.24545623703322667,-0.5520142392908983,0.09484724187544359,0.02528210078378622,0.11587626313761594,-0.016600178740273877,0.15674272826919178,0.22408183329960257,-0.009394079158825414,-0.05981672701120472,0.06381397030088046,-0.09751538725404718,-0.13302947595830433,0.07440262259746713,0.08297929264859864,0.021473153198308385,-0.14958653669347918,0.34008045699668793,-0.2030479354796347,0.138485148726367,-0.09921539289044054,0.16727495355958308,0.15499496728676093,0.12547808252983622,-0.06114694681627209,-0.0792614207672731,-0.1614274986161113,0.336976553226087,-0.03330676853428743,-0.3154131186641661,0.20506790171711747,0.16220152222479498,-0.05927343962224224,-0.12339445421954118,-0.1949225213505716,-0.37826496242931074,0.09097793412010723,-0.05467631505181778,-0.15719934305753178,0.07512679548650886,-0.09414693002286037,0.16112073083874984,0.15157258166896784,0.05247096922194536,-0.08820701916568129,-0.31085003615671913,0.1408487192489401,0.16154481515630084,-0.3105239609735749,0.0973171260233202,0.12000265341750316,-0.052920268555968805,-0.15160276584878526,-0.12413474648929688,0.2511537933433096],[-0.1423168394787251,-0.42936509651132776,-0.01867042688193952,0.15523990581807917,0.0017546520650725992,-0.006031518661040116,0.10721728857608903,0.06049778367197029,0.017853363167630216,0.057458547465260676,0.15601018543601466,-0.18120554519290988,0.02968511271664397,0.324442423531799,0.11536774272929538,-0.20276105414197026,-0.005393878535485115,-0.0010183871233232589,-0.16619654621049634,-0.05839699920095628,0.22596130706079784,0.18697675819677034,0.056060376867670014,-0.1418983406178603,0.26298770385959175,-0.060107220123621914,-0.02579360006725948,-0.1876727109638791,-0.12373900300740166,0.24056331404817624,-0.2114051659229882,-0.10592588138901884,-0.03051038115526421,0.0564787033729478,0.24400863191783492,0.04936255175271117,0.010897968461767972,-0.22055935612318386,0.06149100225871548,-0.07340149183559,-0.05765087362416971,0.057143069563494076,-0.02434668231032221,-0.04158224873517125,-0.10578473425717017,-0.03970639679929443,0.14609489483050458,0.07917141552720708,0.17759095486981136,0.009810791479197918,0.12495674329035768,-0.07877352164519871,0.05344578387219354,0.0999075303480368,0.13669972209966574,-0.25949868858461267,-0.17456165942499277,0.07684386376474846,0.260028596935378,0.07452484475550657,0.0778619258078846,0.09549085183912086,-0.014533471956436015,-0.1100515396510768,0.20030543599798034,0.16975451214087678,0.11391689588987225,-0.18338375146929542,0.007342197242579253,0.14860502445865392,-0.19876174452748666,-0.024962182114164445,0.05504485220344797,-0.07897342213471224,-0.01986709679234086,0.22983038378936382,0.35671944271749795,-0.4667472007438859,-0.11784869823781689,0.11290304438192017],[-0.08910940383148215,0.15790173271526586,0.022528891386540406,-0.06288068854963492,0.12265543364994108,-0.17934701265247513,0.10717912804293042,0.293411971181635,0.07223319873713274,0.31297392300866067,-0.28547539966637714,-0.06046956446017438,0.028649501632187147,-0.0159261431275676,-0.1060394592682876,0.2808403239872379,-0.3184419624940395,-0.30891453545769687,-0.018755181557059027,-0.0558990213530819,0.07824396648442657,0.18292160030585233,-0.21272137762315865,0.03840955355499666,-0.08078754744807391,-0.17620956751421418,0.2560723393328859,0.23944079126590417,-0.11044645733934698,0.06788607488532057,0.048198608772041504,-0.15223376804864866,-0.11824173017978444,0.08127444462091193,-0.11620991771679769,-0.12772649802033184,0.13570018489936067,-0.17310389611916133,-0.09577857386164212,0.17500210068225436,0.2518945265621736,-0.23770876558937762,-0.18943091866419834,0.002338423273069373,0.1148619353166504,-0.1501321315355945,0.1445978237827746,-0.1951641100134536,0.028333844722768974,0.17250321662557522,0.040180119327869517,0.089374684062224,0.06607887227247042,-0.1404612844744494,-0.15860598404538562,0.09847267714885717,0.07947838068085265,0.2530732380709142,-0.1328272108093847,0.10126295718503994,0.12295232561469961,0.10242548565607337,0.21382600594706205,-0.10606461415016319,0.16236812411664472,0.08751652983054078,-0.11159944476882079,0.08260903288955153,0.15090724076119738,0.14815378571158855,-0.09711104680249864,0.04538735559317288,0.11427664681413027,-0.005648549767777789,-0.00776754097617252,-0.1401818020339786,-0.08797716797652373,-0.08750971352678792,0.009264903927045754,-0.07161933936669455],[-0.032637403993477185,-0.3031070962705444,0.07601761577586263,0.032390955298790707,-0.13148626752104378,-0.14060834772572278,-0.32523856436820997,-0.06577432550992121,0.13439505340650992,0.07703922489415824,0.5255811406236363,0.1103338367403547,-0.2783453553136444,0.22679926569940126,-0.11796022617382011,-0.28922227619377155,0.0070833591277617335,0.08448080856814921,0.05340453317380322,-0.18347225975973996,0.19313136860272362,-0.004287464683023022,-0.1098816120880904,-0.09838788573613984,-0.04582807602619141,-0.24599169549941005,0.062028657439073376,0.009903678148850742,0.16241494159461678,0.25191054370987864,-0.2744436474420056,-0.07164866214706801,0.48870110367977315,0.04393751162470402,0.1323725666837306,0.16243089705419614,0.20518897607939682,0.2931899837875173,-0.17971917042563212,-0.14715687417757245,0.024243623677915476,-0.0403907673670549,-0.07395093434945192,0.32712943179066034,0.005621731988252494,-0.00878455589270112,-0.11697936883316218,-0.11108190377839924,0.0431474867958101,-0.10795619927386292,-0.21140908661220575,-0.5616097080118101,-0.08927740049693807,-0.17952983603933959,-0.16532343641389705,0.25175433322493307,0.18206116335753245,0.032337606533172226,-0.3935863476533271,-0.08758353586970329,0.041298881989530516,-0.26383706544080004,-0.16071929274664418,0.09366198291856333,0.052167406588900365,-0.07812944350609174,-0.16291576204569938,-0.04165689621589369,-0.1474292452102594,-0.1257061592348477,-0.18733234503825374,0.12932561317408287,0.10669725737710789,0.20885597397035008,0.04914724384394199,0.2002284179387489,-0.2278077083193387,0.3791690355147729,-0.25218177336093023,0.2063009534104799],[0.0960477736802926,-0.20099423335346248,0.07954711364352837,0.20173604427697595,-0.016143302221702162,-0.060792900693273755,0.06434979210699487,0.14531081107999996,0.33461211784576295,-0.028673618994255263,0.5903199031227335,-0.015430196868428463,-0.11990149934016188,0.28545434426590516,0.17702993675641834,0.02786314645448943,-0.12513312804647575,-0.16225828274281517,-0.25077110333368824,0.20007385470501576,0.06764693891363224,-0.017138507713590642,-0.010239917753430928,-0.3079758498181736,-0.3253212352722378,0.02225616581790205,0.32985889097343907,-0.21343881325511463,0.271223592591987,-0.2900206841685799,-0.06652029557319403,0.01596983138341636,-0.0535394361438036,0.3491541089689374,0.13786347684732597,-0.0019304812372655973,-0.17824192748855366,-0.1450337861982558,-0.05907499542131197,-0.07636880986743858,-0.07562661690962345,-0.10385733437711256,0.023564512257007106,0.22847487561176044,0.14082229217494077,0.2462820433380498,0.15140515157312015,0.16481234667746475,0.19966736792499024,-0.0793325006906073,-0.281242490915438,0.0731641250608549,-0.12240711910829383,0.4567882590343397,-0.2587166540495636,-0.2864046359589037,-0.1902719997024101,-0.14496909884203477,0.059257459331310144,0.08039363146047941,0.00657541321195367,-0.07141008964911222,-0.025491399989853065,0.04713572727744743,-0.016691728636214914,0.2433043349488817,-0.14466738797854323,-0.09681960136020971,0.16381704630049004,0.004536963154295948,0.27287642781074617,0.22641626805618584,-0.28192297775941594,0.06062202232913946,0.13177073692840394,-0.16928770884756686,0.18113242724921313,-0.1589932787722107,-0.42900686357534434,-0.02512066047924452],[0.007171527950190385,-0.08670810760121754,-0.2485884714692937,0.17756552871947268,0.05027297482666257,0.011945997965244487,-0.2418099200599608,0.09684274511529195,0.030380432999806355,-0.09538203120524853,-0.14743461296575497,0.26638986511586366,-0.11669229759437663,0.17009032079582212,0.1365655129938323,-0.20080847472686356,0.0008771552487442121,-0.05390983565315545,-0.13860161730535137,0.0785561002828525,0.10202056954449858,0.16054723720865421,-0.290713978038517,0.04222278266928606,-0.01212926273877818,-0.13591315849015095,0.07960579680970581,-0.38440205568806957,-0.05764202424030623,0.13909043696349174,-0.29763837338285537,-0.009884188552510224,0.2950603329433099,-0.16712018606405285,0.03796357813763272,0.028214265499824736,-0.4079263671583039,-0.03840468759455921,-0.04045850876426615,-0.06797651764948644,0.02781960257090407,0.10403880447686888,0.004822346693782044,0.2404655234091696,-0.15248172096038778,0.07026484956746928,0.06830671266035918,-0.23773380323998322,0.1651941385141595,0.05464779277985994,0.13267484116239073,-0.06465640275280546,-0.02979627107032695,0.11591360840962375,-0.20286492685930413,0.13306126985156272,-0.05854082691968127,0.08988549773821676,-0.21150752021992122,-0.05535827137255092,0.21680457657032517,-0.2045208255614251,0.35001641149892315,-0.22982906507165057,0.2175179080430715,0.08592584613765454,0.014541962844924225,-0.13571023217326142,-0.03816647681945584,-0.1301158821863346,0.0004891151763446955,0.09000630670076015,-0.200173069148246,-0.04723983294990511,0.2139919829211344,-0.1874857229944411,0.0012711211818991054,0.03323381510727739,0.20567473052930807,-0.028248015094821916],[0.08871128601697972,0.1193702569377445,0.13061114871994864,0.18321983910668346,0.37430446806078405,-0.08393718903440438,0.09568826960095422,-0.19033312690274354,0.15575038002304475,-0.14832988507159237,0.14262476632995086,0.19632109392029998,-0.12223784732244745,0.025902558271082298,0.012078116706312729,0.06318436483283994,-0.25611424499096513,-0.0902728457460873,-0.22925948819951306,0.08830679744376928,-0.1296525077226939,0.2596563144091876,0.20957725032410765,0.0551316436025997,-0.2502071134571557,-0.0784975026693018,-0.08620757106159037,0.003871077547782457,0.059024865445095234,-0.0980883070319832,0.06670456408615241,-0.053044598425306067,0.25866088389154734,0.04709604530247886,-0.020506730568313897,-0.12046103929533426,-0.1192555683473641,-0.22214985750825006,-0.16333879660829856,-0.017738010242357116,-0.2790930715168165,-0.2518303012661107,-0.046349314240765195,0.1950396198771793,0.17384960520978257,-0.21405514627099448,0.2012663437406099,0.018921077077789283,0.27263048650455984,0.1191293768419386,0.03464094294159985,-0.04335314786065411,0.14586211261243526,-0.01619585916697437,-0.1656678311869019,-0.09197959808857256,-0.1252633576063917,-0.1095873972428866,0.011634587402280674,0.018400517156210012,0.10863313343801485,0.06611530351390708,0.002252979610843961,0.2674019271705052,-0.09780423863357905,0.06087498665860235,0.12040032389912712,-0.04820363355197839,-0.42307387429188387,0.3919667800500145,0.27754540682848877,-0.09080352229427884,-0.1401088047314423,-0.4340879247970386,0.02697987440552428,0.08047741467837487,-0.3439816226325577,0.21909657428104137,-0.23557780552299298,0.2302277086828806],[-0.09510609541144402,-0.1883478596134323,0.03254341992937369,0.16167063808622475,-0.23505222778991144,0.2635666524593495,-0.14189414667926956,-0.25326768287629614,0.03126881100080254,0.18982047739813968,0.3630095484326119,-0.17929590470341494,-0.03156231817692789,-0.1659026064234365,0.361209497235532,-0.09093499542411346,0.10567079463820671,-0.1561729959854087,-0.10235726056966227,-0.05848026024245787,0.08228249665503641,0.07215688665612263,0.16651331317241827,-0.005259619829826148,-0.073415538865528,-0.27592453835119,-0.15540562965529603,-0.01902528017698487,-0.027711836998777137,-0.1674591806164165,-0.2135829941607137,0.19692896821303418,-0.21923765577239038,0.3027702910957191,0.12026649926205094,-0.1520558187369372,0.03414359986100731,-0.19208189370437606,-0.03253325759323902,-0.32288096382636117,0.306302750179749,-0.19323438682955582,0.13546699668488188,-0.030887961950616022,0.27832981527254,0.018674337557656108,-0.04825065630738936,0.14383433319350136,0.11102623840563774,-0.1490033014841672,-0.15502542249364143,-0.051523846217847516,0.0582739100833236,-0.25413804486220354,-0.11005481197778506,-0.022915876429600978,-0.04209954661352951,0.18178896225864058,0.18554814458256055,-0.05346593156346984,0.02487303341688036,-0.2610018117684025,-0.2322542686148767,0.015276358911524941,-0.13312880850007286,0.1594486068036525,-0.0020963937647548608,-0.25992741284564735,-0.054201669030432977,-0.13671990653867472,-0.13618788203653753,0.13076686199139878,0.1961824837950011,-0.3434287337416591,0.08727949445846148,0.11988735613153763,0.21438352512297956,-0.10292056875573559,-0.010931295403751986,0.013151418599107833],[0.1523595590262384,0.315371933650717,0.15713680779525438,-0.1305123990242915,-0.12793611351539255,0.021505725613817885,0.2206978419463344,0.012538938702986602,0.032227584373306944,-0.051083562379935075,-0.10914621112334645,0.18792768190457623,-0.11459171052799735,0.0057838454805723095,0.4943150222411324,-0.38937084449832127,-0.15735355689445402,-0.1668805692455679,-0.21283789767564296,0.06681696891647151,0.49879255098272035,0.230385517272211,-0.13170051778970335,-0.08107286446714264,0.3096455492303453,-0.029430626566354808,-0.25628349433305964,-0.16853064625028003,-0.2577394177962924,0.011378998138446072,-0.19085893461573764,-0.1258383839379513,-0.015646377986181497,0.0049483360484828195,0.18453410003901888,0.04887596755180723,-0.25931059343478974,-0.0632271796398918,-0.018406531489101693,-0.20930874489734086,-0.05930159084925912,-0.2379077705865236,-0.17565709925812184,0.13428516262008605,-0.025175054365474462,-0.03509856659728837,-0.06926616521918258,0.0944706961116701,-0.02876907741826504,0.27223584224806807,-0.08742827287481604,-0.0174232048340191,-0.20257391503984243,0.20570723913052075,-0.15868097624190955,-0.0811434511805809,-0.05502810204655489,0.08326546320974054,0.25747050634508073,0.2439944624036419,0.09598782377409887,-0.1915351973777862,0.17031446986264714,-0.04691504059514022,0.6559188335013242,0.1859308796446125,0.03170680998802832,-0.2844960577705651,0.0909874648529348,0.07531472957121266,0.006003559443639404,0.05878515014416355,0.17345092751193347,0.05301229095775327,-0.3486038419829446,-0.013951912329570416,-0.2162201785193108,0.015646927471715658,0.03262853848064032,-0.08817730408039393],[-0.2846579290224629,0.13055671524295231,-0.08581600458679438,-0.11847348550300646,-0.10556668835068111,-0.01861633129277797,0.16026636554714427,0.13582188064105286,-0.04702159056240307,0.07105652557013278,-0.2129712475929774,-0.021694149200707048,-0.07499524491410187,0.04383052312457613,0.3199503673814295,-0.03785658398902076,0.03548416101759555,-0.03388196428253961,0.17351874949505827,-0.2130771844199035,0.04817953357101189,0.10241982315653043,-0.10504791049120825,0.36218224123418674,0.03126588681597473,0.10685337553466387,0.19276022021823144,-0.17562264010300574,0.2306991447264901,-0.2030928397500781,0.24975808282234302,0.22619793223213,0.07158985080124497,-0.03696100024806828,-0.15830290535416322,-0.2004203457674215,-0.03636031715783502,0.0851091229464826,-0.05631256685389414,0.10600012038628569,0.052595415944958056,0.18361462058098643,-0.18262800767260878,-0.023135983211578958,0.02269344366591425,0.06420858106407223,0.1242683222217154,0.12417838710726337,0.051612920342069615,0.08688145725290343,-0.07899897996619254,0.04519500724968912,0.12947413680266767,-0.2877240071077911,-0.06465351539603581,0.4146153839766375,-0.054504133491154884,0.0391769357090258,-0.003597496729785229,0.14820149492336002,0.10783374341390352,-0.14897739852406183,0.022742516885455123,-0.05354175207850001,-0.025863378438318704,-0.18295117679159217,-0.15036116989047194,0.34931691315473273,-0.10812042223213784,-0.1494613526457748,-0.09923528030126183,-0.18508291116327433,0.21670251402282506,0.0015725940845197261,0.205085388530033,-0.14098929284532688,0.028931938091909432,-0.05285707710494182,0.12460690826329325,-0.3207803555430873],[-0.42228629072670937,-0.15192450130237156,-0.09337167853366524,0.012020197443605728,-0.05155204966033507,0.10462046101401049,-0.03684234590949665,0.0416590464199764,0.14468132479382528,-0.09357827272984899,-0.33537308875599764,0.3224570838134551,-0.02626641732606223,-0.06266672332768107,0.21602550049303984,0.21485778428576202,-0.1387465769107859,0.07009148194864019,0.13643256879234084,0.07855093125244299,0.34182252976905647,-0.07851089938366262,0.08114364866562825,0.2906247609043347,0.04545211534927203,0.002029197264797391,0.07584769535100527,0.08373276761843666,0.07054073976914381,-0.056547867130092425,-0.15874783794341984,-0.17762212156795118,-0.2493382555029541,-0.23307862043873828,0.11281800552150957,0.150375227241663,-0.37144340631286893,-0.24351380884412815,-0.03645583117686547,-0.10299023277851238,0.03338467909852568,0.3917918241017356,0.12369833568285211,0.030375272193457065,0.09129867850293236,-0.019846791282516048,0.05844268247764911,-0.057883628792590604,0.058695339030146405,-0.0020758297599877983,0.03388944500769971,-0.0169054535601948,0.2081655631617616,0.10330260910848246,0.2330691625098557,0.023299455725252088,-0.05241397691220545,-0.12698187696983856,-0.10286915915247856,0.11647916939355639,-0.09901425842825853,0.18697114420157315,-0.10277570390673058,0.3680954144082786,-0.2852055239350508,-0.05410092397775843,0.09463776820709256,0.23681668376795528,0.09913061284043369,-0.31889070026360833,0.1545559727860494,0.21280380659674922,-0.3729227576835878,0.08453742368161384,0.2509356797483399,0.19539423757759827,-0.00014955969897620662,-0.37161857758044486,-0.0025119820488277963,0.13629692106338057],[-0.0712010352935851,0.09055705632225552,-0.398619646340303,0.16761894913405706,-0.12240386046725181,-0.07280779887968036,-0.09154650775653751,0.04414207177962909,0.14458173960448853,-0.0588354475141011,0.07106136030062137,0.11473469577310831,0.08493692276095405,-0.07248776390385056,0.20760813037704492,-0.09713846086626918,-0.1958441993668797,-0.0395987795366997,-0.19681631593843907,-0.1846802276912519,0.021752410008726963,-0.15460769908831337,-0.05002915593216922,-0.00656647860838527,0.06400719914682027,-0.29958854679534225,0.1486338614818193,-0.2785030196207792,-0.28663784419351046,0.27871979484138476,-0.09709459713410046,-0.014352539666953632,0.4916711760285318,0.18512845985879964,-0.16848266936573683,0.19718342338533415,0.032703777146101155,0.17241761487492469,0.2432780291316071,0.0961237492762786,-0.09950062641251942,0.2564462209472065,-0.09858157547658372,0.0031443272207577226,-0.0741873084946151,-0.13628661391183203,0.1566217024134376,-0.09579603660138955,0.031032999381186477,-0.04744313404250463,-0.1304459676334193,-0.1746617046941019,-0.3276666162256717,0.05243392329827654,-0.17461162017340764,0.07253303958634966,0.045092546187574654,0.4230843929286594,0.024124810714139133,-0.16617644465034587,0.0040616483369018104,-0.023519582099032106,0.25789599978953487,-0.00903569688228949,-0.02009349990969158,-0.1419920267406049,0.010871786059622374,-0.018093665388573963,-0.1662746552544095,-0.001963405266176404,0.014322566383381688,0.2917228898464396,-0.15416873705783601,-0.003608011665155345,0.10644364126755097,-0.068711664332091,-0.07167344570597813,0.003780360029974085,-0.05380022976726253,-0.03384981730901886],[0.20401753319288055,-0.197004074675072,0.08931723074174837,-0.024083703945457807,-0.05807084524856183,-0.05632105296759053,0.13787492589211475,-0.5497339487185371,-0.2140562097581161,0.031648457424416396,0.08372365430906127,-0.2798763361617346,0.3006833529314432,0.2333393150876189,-0.010462588607756645,-0.08645104313423353,0.0376143228054165,0.167139295113814,-0.05336287523540106,0.20987676436795952,0.02966452339574351,-0.12565104648073616,-0.2552498544421582,0.1229533251122093,-0.3936821283902963,0.024601914003633544,0.1470142787445723,0.12535716499922125,-0.0637296319647111,-0.030789841209022034,-0.037928278227794,-0.19805712476705334,0.08006550771492736,-0.18161649758902296,-0.10854815526381668,-0.1728027269656518,0.14642724976498697,0.3199801066008965,-0.22857604876928736,0.0002511565561791013,0.028042488455534868,-0.07189259974515562,0.232763428555284,-0.13259706831726795,-0.02088222373030289,-0.3159682455182515,-0.019379521822375886,0.06419319406014724,-0.29019659436797085,0.19797656367240696,-0.11784093495228397,-0.23010999420398148,0.15368743169688098,0.013627672437835634,0.25927710248962305,-0.06807331528216091,0.07418412786500142,-0.04685747454426572,0.05438981659677732,-0.36666129899270256,-0.35466037467996,0.0022155134871439473,-0.019168408470535487,0.07412009497002219,0.15554566952508062,0.04556786556430088,0.17313264786038943,0.035705738602144016,-0.11747358210348732,-0.25911699801662524,0.0018683496541861255,-0.23043357018306135,-0.08598812672734742,-0.05858278902129249,0.23159136076572429,-0.30174314551102893,-0.34587017297561296,0.04926774742354221,0.01633080689751133,0.03524755542657871],[-0.37976501457238404,0.10460678171979682,0.1681692426970884,-0.24141785116550626,0.20173110427477617,-0.07078403012684052,-0.148808793746301,0.14322268958690693,-0.13485555770163796,0.09743117499378089,-0.14591382169701056,0.00412743573657728,-0.0053628357750280685,0.019097918632702868,0.13927011129584518,-0.06810879610685087,-0.10797838758503882,0.2782193605213203,-0.0007350857381213685,0.138423935283748,0.08336290093132886,0.1567059771544652,0.2035149475791015,-0.10313922610138719,0.5078828211316969,-0.2136721941676721,0.018920794703924215,0.1388830267765224,0.07593059877625816,-0.031051606799375533,0.056673353724709254,0.1012256686729681,-0.10940264465381484,-0.3956767774941585,0.08866579013820178,-0.09365909065832975,0.2150680797713716,0.14705547445814154,0.1089793748579087,-0.2238391902337596,-0.12979211254181838,-0.014210725970343771,0.03970080671255654,0.10688508210682002,0.12572845001275834,-0.10007746736655634,-0.12298619844099193,-0.07534214710151843,0.03182261368587441,0.0943589632930084,0.10074370216042162,0.11140488358460719,-0.12482066721291771,-0.026831975464628944,0.2923644248415477,-0.03184122949769553,-0.2882113061298794,0.16899472469252996,-0.16978781533592333,0.05885245263103579,-0.07422694889537618,0.005528164738025798,0.10132101623571892,0.21969283033687692,0.18545858710085109,-0.1197269340380764,-0.17108358884649558,0.1328450712689204,0.181175609381039,0.4170737738226966,0.1777464573181568,-0.14049028293699947,-0.0858695109883196,0.2068506126008469,0.45561514409095694,0.0855512771812576,-0.3069618598695244,0.1462957330793982,0.043060350188548334,0.012245285624287458],[0.11193363921821475,-0.045746562310496446,0.001735829700047604,-0.153689158441571,-0.08332737557540665,-0.11871713013221871,0.058031518648538095,0.07800550467695569,-0.15156214939686624,-0.07993107545998823,0.031205445083044882,0.10716225796841222,0.23361278325139023,-0.20227728082637905,-0.242545778394517,0.0027891206375916626,0.03738477948565685,0.0695972605342804,0.1139626356402779,0.04900434968932811,-0.11163985565352337,-0.1019556786747351,0.10296762946955873,-0.1500220286718946,-0.31740073670273533,-0.21056395243993672,-0.044833555404221376,-0.17709415777537937,0.13580317312307633,0.16172972227664412,0.10845810255832615,0.19755485373505316,-0.1883523524671266,0.17601715991359768,0.15379625678645112,0.2047623331328891,0.07097458525719424,-0.046662387887766076,-0.054375443055366283,0.17600301369142254,0.20435960102285156,0.016530840734227507,0.15237627871851345,0.1772439040378414,-0.20669388495673996,-0.07562422153244483,-0.16548620013252194,0.0037861606685349507,0.002484759310726198,-0.12264023497664006,0.1467160774804643,0.17770458733917482,-0.018782054682535822,0.15368191558172825,-0.020009145304372925,-0.08775832845622568,0.020562379436125065,0.11420305923031067,0.0619009926259554,-0.39456172901149583,0.27335863239234337,-0.15636158311263804,0.11591406200510156,-0.300660878746361,-0.0910776102499641,0.21686445058804488,-0.21774538858299827,-0.07822965971728933,-0.06212302791734746,-0.3117499256979495,-0.044753791486766975,0.02614713819518966,0.16244811543525606,0.06527460102350628,-0.061447610370554184,-0.010982038679210819,0.04135650488991732,-0.09284099944760532,0.16448135239383954,-0.2852834855655091],[0.07601321053023319,-0.29814074470573226,0.02466903485450444,0.1110122822565733,0.002380852792812185,0.10331576913305984,-0.19093031965843024,-0.1026272951260534,0.20711473983430012,-0.08022540605959719,-0.07265082584874812,0.2089836864882585,-0.1458848377856289,-0.2518707838747298,0.03219603505582854,-0.07822017920480945,0.078080409509344,-0.16724934165028488,-0.39942197806658936,0.06684714770072117,0.21612335238759972,0.08165179767775477,-0.09572140433522869,0.17148459838186852,-0.03161012514038638,-0.20809198997809128,0.47093191989963956,-0.06675340484658045,0.007624903640102479,0.25241883512722746,0.005988639487887158,-0.0739795243056711,-0.16443418816057973,-0.21513396505080798,0.09082309763286453,0.12637994076870743,-0.027839367562827334,0.20229354123535015,0.2527057313720041,-0.08067726274105927,-0.10084533349824577,-0.0803878249341113,0.24609603262750246,0.03662294287907818,0.1190103309944648,0.15992047490081363,0.05095762051619152,0.032637199442986084,-0.06505391134213205,-0.14802959903733356,0.12359669554595415,-0.0991972019718168,-0.006541800338533161,0.20810363810430496,0.2747582237775224,-0.024609325528227022,0.04715126867058036,0.38024840313487557,-0.2994062449149848,-0.02533194768147124,-0.13339629901020808,-0.03806282517128139,-0.0027904205071483386,-0.3201421663509485,0.14262394175248957,-0.02746359412038652,-0.0633677324347018,-0.21546058505273533,-0.2630898580119609,0.024705545737990237,0.08469057720526592,0.1456631365925524,-0.10899224606100422,-0.04166517416039771,0.055927653239755175,0.06795828801916183,0.17635572740932062,-0.056715560016336264,-0.00035835067984616386,-0.03836188814768649],[0.13277103697357734,-0.024713732952784447,-0.054623723089997245,-0.22491469548325163,0.03440189392041897,-0.02675763890408849,-0.09992989567940774,-0.14703024153807823,0.07486172696260486,-0.058144338925450297,0.057316832009607944,-0.07720122418320709,-0.04190425090939956,0.11721201460865459,-0.04011787076988158,0.3208351012698082,0.033601949224076416,-0.11549180207090624,0.10478075227196959,0.2613024157769508,-0.1111512326732747,0.05936038467798546,0.25045430623217757,0.08669292417215461,0.06672079412413062,0.16969783093734503,-0.17482857219637973,-0.004414781796837326,0.05373848310313994,-0.13507907452592346,0.10790355787418429,0.1950527853657095,0.18772143921142279,0.13411796502182197,-0.1884473050710067,-0.10257167729035374,-0.01820721477946978,0.07514935697402639,0.02525127544439109,0.2912766248598821,0.24010504620079054,-0.33267155915423835,0.06305579773431048,0.1880071384071694,0.00599629740486995,0.12073720010284783,-0.12057929784583289,0.1227553829053721,-0.045566773559347906,-0.09277730735690815,-0.03629616599666294,0.018634979312082873,-0.1786442977877084,0.19730952072639643,0.14903562546831478,-0.059559965700228014,-0.18169315601299457,-0.0177286582568332,0.10135280902503253,-0.103297371538401,-0.017407469978085417,-0.0933076176338153,-0.2705192648944256,0.2991068281048156,-0.26909647190249897,-0.20166741987485629,-0.3159122421816045,0.06472791647669332,0.052947426104650364,-0.22769831722662945,0.22619341201107712,0.23573517549448525,-0.14499282679153233,0.28209889481743894,-0.02301575199856263,0.009890948611164158,0.2515240299155943,-0.0704990706951819,-0.0920286166092322,0.3965606844230616],[-0.015108459139355735,0.080583809097794,-0.06341510848562489,-0.3012727687060143,0.033556649618591505,-0.061693244127368804,0.1825369706942104,-0.2278030084118626,-0.021853179489460438,-0.018647576149078953,-0.011482814809280062,-0.17973785045379254,-0.07439720837324985,0.00045760317609476264,0.07629073245833029,-0.06718607671969942,-0.18661113446887984,-0.05647309337011041,0.33463696140527877,0.21824403611600934,-0.2906745175982964,-0.044561084090511106,0.00037372394998825723,-0.05010911756834592,0.16218803968806736,-0.12603652850996577,-0.14804709725438828,0.06974032371107411,-0.11867240696292332,0.11063425447342592,0.00996578627608768,-0.178100440074942,-0.11903071459935492,0.06634679986924757,-0.023117284978259087,-0.1437672220919705,0.27355698169244597,-0.0535619739411394,0.1043969704139409,0.23555275467196266,-0.03159703236949065,-0.2096271866795807,-0.2084498398466745,0.11713552404202791,-0.25322421376857274,-0.19240166584397583,-0.07226181757673673,-0.2867665524441832,-0.08438131693937705,0.3537977520631236,-0.3109112693789244,0.03625485231740381,-0.31273621128555384,-0.10685166767818208,0.23027823282689946,-0.17622722026205745,-0.21518550571312955,0.07834922396516666,0.12404495798707496,0.20680599735163915,-0.08949162259434394,-0.06719300835746694,-0.104861036299892,0.018490594772178376,0.10014869075728366,0.19578358255621128,-0.05585501446287883,-0.11487859904998203,-0.052328535049518884,-0.00974159781456287,-0.18724250697794106,-0.12862723498606196,-0.1280946015708753,0.031716939610717955,0.05817624949373939,-0.024164747730031747,0.1275267502864546,-0.0925924175549929,0.3918787578024261,-0.09618981760141594],[-0.22996968833998815,0.04253738523098342,0.06338604611775847,-0.19676498808482826,0.12752802938868177,-0.07628311579280805,-0.4262916497109648,-0.2684170498876123,-0.2450648982166205,-0.028288641891576535,-0.14181142990431755,-0.06744225592119513,-0.2598288030309255,-0.087268505881377,0.04902476237270824,0.02009833388492974,-0.1329980240008158,-0.01777563830501899,-0.03804202823044305,-0.11726201373331671,0.1828820782771627,-0.08759411115869084,-0.12264247431906909,-0.14099675445521687,0.23533615023536572,-0.3354243831779646,0.2742801285947987,0.40371471973580714,-0.06379124789230015,0.11251671610884308,-0.06883942461865689,0.2197608832132308,0.01495696771874904,-0.20651825049653802,-0.11933840233944715,0.25628071912232275,-0.06277695041145213,-0.02953225026395146,0.16341483629419978,-0.2066517232362215,0.04826234554165901,0.12984368098970142,0.16295873114560394,0.18623441410067096,-0.0036493156419066183,-0.1135769739767489,0.07059447068757119,0.045843900087636565,0.13930600784123903,0.05916598697679174,0.27165223982032244,0.04503080676778995,-0.03254903824152022,0.1891657695204301,0.0055445330287878765,-0.1709666416206713,0.021072039264705023,0.0895443257117168,-0.13613097854833403,0.4096960188151179,-0.03308998432234961,0.32602870881506224,0.1666329724500007,-0.11357365742494352,-0.10542179342495167,-0.20622705964796906,-0.20392787535732718,0.08396581915519052,-0.11050117713795882,-0.1386750026077663,0.3353553404882468,0.025108398657236377,-0.4092097412089697,0.018955184494378503,0.16301963780579243,0.13217481886692456,-0.12468197843265574,0.17823005700803765,-0.11413623644166086,-0.05488976266670441],[-0.0939135003032289,0.028396423694570284,-0.2941462410834186,-0.05184636814857724,0.1407355847451418,0.01928857124908268,-0.026635603862945546,0.17657179858517638,0.15295684968569048,0.04943314069612895,0.19406727009892735,-0.012505529465019692,-0.014023205235204169,-0.1502286675311549,-0.27709974651728697,-0.17029050593559136,-0.11283646747656598,-0.11725342250323639,0.33801842529760384,-0.09020736929690351,-0.09870518852467895,-0.13355843898567069,-0.011767943286358487,-0.13943846810176005,-0.03334610771765467,0.013578092904994761,0.06842117249259994,0.2249005798845345,-0.2372449255335987,-0.05238639925812529,0.0278057815208505,-0.2829851543162931,-0.007197219097853399,-0.00042057055863696264,-0.030357466856825527,0.03033274036279197,-0.08630643854710192,0.05526173395523642,0.03553962950522131,-0.09610484912720807,0.14597764972080488,-0.12615284473040397,-0.12179974249129752,0.0414314563244455,-0.20743300632660502,0.05176585844252032,-0.009941232961503024,-0.06705619546562111,0.32799671613045694,-0.019516578365647165,-0.21406870151378973,-0.20317619801781123,-0.009204650654494556,-0.26802846058884605,0.11214141718219768,0.10395304679611315,-0.10621461717909701,0.23810948224387246,-0.23968977881466397,0.21192649731694418,0.008915199503900283,0.18040600546325175,-0.12306650989509124,-0.42252028232661526,-0.04588488753719692,0.16378908952950325,-0.037094978996261914,-0.21613505663497012,0.04049856776388806,0.1023321893248211,0.03666328276617925,0.19557038811331023,0.003184435911548803,0.04983261817925583,0.12923830919944893,-0.008802373764659654,-0.026935226625979948,0.019619959804822555,-0.1673032777930666,-0.034713607266891974],[-0.0021966669317969516,0.0358266720374052,-0.054315817977793314,-0.0545768485560078,-0.13566769245490218,-0.21490922422824354,0.16195815445790554,0.1484620346146483,-0.03486316567833437,0.2079949228290912,0.0651874051390917,-0.17086718882154697,0.12480889938816352,-0.06130045951963388,0.18069759192130322,0.0014083208198936027,-0.24426795323697462,-0.13316275346595663,0.19471775970614458,0.15684010033874352,0.007345180947503304,0.3821511771087026,-0.22508459703311365,-0.37776724523396105,0.006982235752258924,0.1789399112846798,-0.35282538720940143,0.05260245602535477,0.05221258128282419,0.02487520782209361,-0.016113224048220364,-0.05753978676285326,0.11605729894701701,-0.13615844289190834,-0.1699986159603767,0.0871105941472882,-0.025827227544927257,0.04384289402056208,0.32034178790532314,0.015574849681478722,-0.3104645274352472,0.2606451120792206,0.0007844369777296972,0.008066413837069016,0.09319210788408593,-0.2148358573129574,-0.07865110091758058,0.11653760981022897,0.1900304862928859,0.014753773759882956,0.03025343755463466,-0.04066447352393521,0.08121886990358161,0.1021648291566239,0.24844364480422665,0.16188196134604918,-0.22716483829129672,-0.11143901505150303,0.13945770078949205,-0.24729030325113804,-0.01642354223453378,0.36636914796916786,0.05243087609733929,0.09572821059327764,0.09089698616436566,0.1703293796447563,0.0818964892898585,0.247516619422225,0.3474675052364961,0.41452458344894805,0.11264620353229692,-0.06583727374681306,-0.1822140322262405,-0.36414368178848755,-0.01885347209175908,-0.33489809850196045,-0.06747570417044274,-0.0393867602542122,0.04216627073480855,-0.11173839689240082],[-0.048467896738580214,0.3645017010748083,-0.15920926340466754,-0.13946935291801554,-0.06573374149843916,0.19030299646519047,-0.22670303090563348,0.1689346740041467,-0.14049448156916053,0.002753307180937677,0.2621603823271409,0.15549319582831267,0.18783635593345727,0.10736049625316807,-0.2380956772832973,-0.0517743966173503,0.14239396178310573,-0.07971523783376104,0.3865985491745261,0.10551383554108736,0.24077788522019172,-0.012132897381421977,-0.022528624222536948,0.11111438449237677,-0.17916278306100936,-0.12244170091549243,0.15854260031493403,0.0869157961716867,0.093614463317497,0.028911973736054614,0.05635842368158007,-0.2093476644676776,0.01883269420361419,-0.10063988468020005,0.2898958934407328,0.11966618840604519,0.06632354949779731,0.011551349411000963,-0.07410032503377012,0.09437373227143649,0.004538214484910871,-0.030855087504158725,-0.02251209497469216,-0.16207919653643024,0.04699121625588716,0.047638223269874935,-0.11134915223980471,-0.1425220939468745,0.11956328626233499,0.22612608913207793,-0.2305465937974777,0.18507795954721415,-0.027879684111014946,0.08592284862372605,-0.1518729725002521,0.0906655892019851,0.06554341413969837,-0.09119409984716674,0.07805971802113555,-0.053020245665871435,0.009891054682142516,0.13079317195084827,0.04543326010493446,0.017401167872176864,-0.019166995286514894,0.237773592803351,0.1135450769839737,0.1910710575318554,0.007719419154038306,0.14549959831374487,-0.5113303645661573,-0.2760723642874987,-0.2662387038740977,-0.12131244439083168,0.08918809106766273,0.08787519062582604,0.09933116574924075,-0.016074912485009328,-0.07964026630016863,0.1283874099601966],[-0.02427527350442794,-0.050376132337167964,0.14935674478521446,0.08966256976721498,0.02827780866377789,0.05928280950986989,0.15423768408710145,-0.18128406990767024,-0.2992951615100567,0.2455695172065123,-0.22614341882984712,0.3049568445295752,0.2295391383783133,-0.2688349119571959,0.23142071453342783,-0.25187644654076696,-0.35890402564834495,-0.06768520556076131,-0.2805483606742842,-0.21146441950297082,-0.2280728659542901,0.2578728308827052,-0.18665540728616567,0.20239606622381726,-0.5127728443657115,-0.05158659970304308,0.050031822842196885,0.30015611679684523,0.10722601652587137,0.22195881361473047,-0.08684299426937644,-0.0031892688581054195,0.047658222998265796,-0.09475090555935932,0.12725471103603042,-0.0647851862458787,-0.06087155072992487,0.01756677496163298,0.13334882961586692,-0.09133645836645922,-0.10170453783611484,0.35777462821359435,-0.17511640919113655,-0.18244050466989747,-0.13441632480030358,0.03834156283401396,0.37090585505193,0.26256828779206,-0.14443865462778996,-0.28131501744219134,0.07144237399143995,0.08339794816879753,0.1661020570109917,0.056492275115169535,0.01331150369335187,-0.09805273595687128,0.023037857963582344,-0.10284214012359794,0.274378377289225,0.16862804841230755,-0.12108527636181285,0.06077664399517968,0.12570523548262588,-0.27520459207594294,0.022818248519198187,0.20077301193551,0.17341624669017056,0.00552433304005603,0.13160963588851107,-0.3869439392610633,0.04483832296851213,-0.022077791455317488,-0.16133029350005723,0.12016525625358959,-0.5525500148675214,0.15002671570592063,0.08307007178864516,-0.03155547645390575,-0.01999255443088808,0.11099026698909163],[0.03324934304273375,-0.22492129896571628,-0.12494044110207272,-0.06923638430984999,-0.18226583968811433,0.22999492284918435,-0.010241716742932888,-0.03993224577089723,0.13560812869195932,0.37956900840489444,-0.18540112970619124,0.4330061250541285,-0.16052266271987686,-0.17113968494498397,-0.04675624177351904,0.05942410701983843,-0.19257696730941776,0.06855049413376915,0.18963159019330877,0.22515350215470323,-0.11338975916019366,0.03612242940507713,-0.26737605177132795,0.12675838902695308,-0.21947048088412133,0.15261045158393305,0.2560896943150415,0.11065648538970652,-0.27788004715621595,-0.055427456680298734,-0.1947976637122898,0.13184489217346274,-0.02320422224943157,0.2786044563831585,-0.404625670404146,-0.5065692096349953,0.06258060098846639,-0.2118348405327966,0.011884895035812854,-0.07877102821295398,-0.057686206708833704,0.19663224328323053,-0.18736524395883625,0.06026749293358623,-0.20106362450044213,-0.018690006709009385,0.20006930215009344,0.3054285161541385,-0.11146260715812993,0.006695386366183184,0.13804786481688142,-0.1580028486608796,-0.08762704558033509,0.1788726452028067,0.24239758464230887,-0.05133907350017269,0.08279581854406048,-0.028676215357905373,0.06143122111115965,0.058521410320955536,0.08468049815082804,-0.23709623647951486,0.025335239358918998,-0.06936128992846083,-0.18661784008399035,0.18759210105715426,0.11363090554841007,-0.010846299689451416,0.06582426449437312,-0.1422154041947966,0.18174962871831443,-0.10895730928486605,0.23973272238666027,-0.024945775521055636,0.01254286608059874,-0.015527241746093838,-0.05042079519640981,-0.13674046514815258,0.08030241525887759,-0.3449969544526476],[-0.1942559030987268,-0.08211943079160032,-0.07727811860032817,-0.23253211811608165,-0.37191562943744927,0.34295710824717385,0.0786573749874923,-0.21015910355537587,0.10860551713270049,-0.045184762179604245,-0.12544819407828384,-0.018144062052257305,-0.1498016558954696,-0.04182753379601833,-0.06835691339844584,-0.0427240625167975,-0.15318003442665476,0.09820933623936443,0.16357186049171088,-0.03392517449177558,0.030509563674914364,0.022167700861936673,0.20431882657691258,-0.21929602112286542,-0.29553521437322233,0.14968073752312783,-0.0066206579009868574,0.03756393212318288,0.0040900769569821,-0.10403916078919696,-0.17632120144505398,-0.08862874111091062,-0.06877050189234456,-0.007694748797606084,0.03080070805610222,-0.17852036741824698,0.06774390364027962,-0.08052123242587145,-0.1320241513476412,-0.206424520431309,0.10044840580431023,0.17740523941967656,0.024962042636339946,-0.07001039840484737,-0.015071953357095765,-0.38031156148669654,0.24326564659606195,0.22149764972227884,-0.15863815785072613,-0.01593568112092091,-0.12723897879748403,0.38894678403930194,-0.13185567357855107,-0.029960628316984695,-0.01202463272619746,0.05012814038753336,0.07008895042052085,0.179258792389819,0.11367552937300375,-0.012768689146007045,-0.09733995069727841,0.18595376751674694,-0.20318943818496277,-0.26472256377162234,0.196776722856047,0.20647247714677536,-0.3066584735870211,-0.10920315471387294,0.17936283633485955,0.15014222969903263,0.20409376508467647,-0.13961521845798777,-0.018219284518294892,0.10654833521243692,0.1244411010785577,-0.04616454295237972,0.11732112979613553,0.1868441276054676,-0.23410500901510914,-0.10635231354912132],[-0.10831770682003482,-0.12794895212090096,0.3058683322808569,0.05161692665353045,-0.019523280240389566,-0.1090488355309579,0.28433793650616185,-0.2894570750328915,0.030207067819650747,-0.34913676260447446,-0.08470220301735859,-0.1357602030620687,0.05128100762294064,-0.27725520782334523,-0.006351202606730393,0.01312087656977105,-0.24360657516961362,-0.16604820240618667,0.1905476716520668,-0.1347503938423346,0.17635056400807247,-0.13533486692368996,0.03297940780001487,-0.0972485387603245,0.0397328628333218,0.09554584612760471,0.048609922283662614,-0.2653020837935745,0.09767612877774035,-0.13088389416537596,-0.1144772580736102,-0.04103165064263054,-0.2791604547292145,-0.028362047032897034,-0.19664412980677054,0.021834575483008857,-0.06720875258197329,-0.07862393199403638,0.2695867876392993,0.04668762463081042,0.13936183885073375,0.008009024286562132,-0.007872151644888616,0.021533421518525057,-0.06857278121290408,0.028813880111002582,0.057288108323246476,-0.09874149770444748,0.11550754861853109,-0.15700115992450522,-0.43725763519200694,-0.040844782902547845,-0.04676176631508499,-0.09989130315575576,-0.06200882077733622,-0.21236563421235932,-0.22899490470506376,0.1889418235987528,0.17782140632334176,-0.017671490478269027,0.06373509750492022,0.21905871283657793,-0.17397442113378803,0.11870029195733132,-0.0369030342876989,-0.11520791047512588,-0.16224097863219397,0.09390400085843963,-0.05685483317138684,-0.04961082418478478,-0.08257998734415699,0.08916954052663431,0.05878599204157288,-0.019128919017474925,0.11861594487260178,0.10154060191528351,-0.055479267865377824,-0.3677509442626646,-0.03155747668663141,-0.15946080314677813],[0.1567027504182767,-0.035482609663960864,-0.17940264797610142,-0.09913940521212919,-0.25332701675272645,-0.12173323511793899,0.13755894861901036,-0.25370265807485254,-0.04100852690988425,0.06778288080136076,0.03220957896533509,0.13038416767211572,-0.007441310744341238,-0.20979305951665345,0.031339502008297666,-0.04273845137439489,0.017757957350767507,-0.028372286008187496,0.13721323337241836,-0.21882308634515044,0.2051187074770358,0.04824580955291868,0.0214802265274442,0.060924127391084264,0.11915914349455684,0.06508097871314622,-0.47330870986844936,0.1977551237693987,0.007209043198668469,0.01722890757340372,-0.11540504685198719,-0.13469841218319853,-0.03938114282761125,-0.03504594040070777,-0.044592485408231713,0.11408065234884218,0.06178325660772475,0.05507387366633318,-0.0978961944480923,0.032398376831784884,-0.15276783735018576,0.1281427545667095,-0.18191752063483152,0.09285946939170056,-0.11393792093467768,0.05415998684803948,-0.037240144206712296,-0.20721403503851216,0.28855176380720265,0.11705452238110538,-0.03006510204462239,0.16024321908270012,-0.01728261275012814,0.1744683986972588,-0.03478784061504666,-0.1373643991974631,0.13550705343784208,-0.003361403494838355,-0.2257320988946764,0.10235499819507245,-0.0022757913693282833,-0.008606510117629647,-0.16801387332686715,0.023638139189222158,0.010795290693836168,-0.008990732502439723,0.083352413898078,-0.356124486307182,-0.13638100982442544,0.17893877957176818,-0.24600626633824665,0.1736943223459319,0.24155447172661543,0.04277859281687633,-0.08428156747153376,-0.23371165221096937,-0.11242013697150047,-0.16635922846187604,0.2679334635989362,-0.03208791716730839],[-0.23329332288522137,0.08458042877220669,-0.011226272671160787,0.3108647809880836,-0.06137606730650583,0.17636988876247894,-0.013971222383209716,-0.12158572389770674,-0.009310516139870216,0.034966210746674546,-0.13889846652550386,0.19978630329178648,0.09317078590215784,-0.131161551752622,0.07281039540172762,-0.0581759022810598,-0.033446889788017596,0.007094527864334073,-0.05946041643234104,0.3032434436733578,-0.054955304426671445,0.0730192612559503,0.10762409973609156,0.2325410899080132,-0.3845383917398592,-0.12242454572651239,0.12211065996191946,0.5127241006995792,0.061840290240286,-0.3327526956209746,0.024525821080981097,-0.07283941332491924,-0.22244759154449928,0.13896061792116715,-0.007715127867014992,0.21704817271697208,-0.11568885030625087,0.1686265741044208,0.2838273203524204,-0.13369557866795675,0.02049725374107522,0.13786877686933247,0.02857906676079222,-0.09521647650486509,0.11768524605083519,0.23303411658297316,0.1851046824845188,-0.16597184589187627,0.016272420437986334,-0.06653535709537398,-0.00985646573066403,-0.25893232939092914,-0.07979362694370387,-0.13447479455340458,0.009441582191613587,0.23823489898623254,0.16582122780900543,0.12513812880887185,0.23185349517292936,0.06051848232057863,-0.0001284937045596927,0.034897826843578506,-0.19819555430069222,-0.004305138965301504,-0.018026763261794757,-0.1750267083520405,0.2113460845221646,0.2598984897647971,0.04160331051381673,0.18550664065549277,0.44172021950417045,0.09340164673579897,-0.4427642529859961,0.07064296843659693,0.1429906182773318,0.10823885806515293,0.2536543390511246,-0.4771943359652982,-0.09354815968498759,-0.16375885026815462],[0.19386347941345594,0.029022413511400485,0.14984756747788472,0.19623994739416817,0.10674997523568719,-0.10949951231128931,0.05689201418349542,0.021661432866734703,-0.1459101012932553,0.11955207818613821,0.1773294323825092,-0.1649200981297197,-0.05947647711658626,0.05645430400500926,0.028565553186293814,-0.017321017561338137,0.06467014629326075,0.020155935483791354,0.005597266611364964,-0.33276582918105957,-0.23288838006851972,0.26596499516096533,-0.08954430209702043,0.00012818635736648257,-0.18517711517910657,-0.14597125264592448,-0.22439857199795346,-0.0987407695272522,0.15661597655588888,0.28806241982357944,-0.12624973801405875,-0.10921318802055481,-0.08989584938414666,0.2535684568734779,0.00872703675553023,-0.41560560341787117,0.15469300880239262,0.02141599637329833,0.1676802440145416,0.05783724688765434,0.1852103063301796,0.1230286989681409,-0.18645682931602683,-0.11292400693093611,0.2734390958887263,-0.022736314467484767,-0.23711346565000532,-0.03674699013661857,0.20802139141391113,-0.08238154040347742,-0.08762696230186316,0.06396023966677884,0.0027823128937284848,0.15519003053792427,-0.1691862843290889,0.13313192196946705,-0.038116091610123796,0.12571885865091134,-0.11944728671657469,0.20023124682149288,0.04087533768216375,0.19317586812854015,-0.08987982457275662,-0.02654230388266952,-0.12791931753371263,0.1356228522058138,0.10001778448596653,-0.008098427421181286,-0.16403314494747953,0.17356006239037686,-0.2553690641522931,-0.03521373779687301,0.229026336177557,0.1380918094990304,0.2603613334075964,-0.030294347640808426,0.060111472964906744,0.13780576462261496,-0.057010657955736364,0.04264992520108716],[-0.05356574503719665,0.07792080222115759,-0.10778295564139809,0.23325620367342265,0.0007343667304916002,0.1042320014015629,-0.09386253890428808,0.008753731328668964,-0.21940285295652143,0.18725745754839537,-0.20430215961667839,0.24788794138356515,0.02299644890686685,0.17111880287330888,-0.14944196432799015,0.10881182823304526,0.17030706548196395,-0.1145942188809803,-0.2907815991834309,0.13726927475001346,0.054391540115618434,-0.23763854315806837,-0.11682948450763721,-0.18307882236700182,0.1373698426110487,0.02805232109802732,-0.3368033487043594,0.12479402643112783,-0.05683768735464723,0.16843336042927087,0.24816402843214574,0.1175017796252243,-0.19362219546018788,0.04950436933849226,0.4572313780032455,0.15145225603778992,-0.27614881417725295,-0.03154904531001303,-0.14822106103100466,-0.20769501003803034,0.13082594252514698,0.057622393747714884,-0.31968896074474706,-0.11546691871860645,0.1405372282502169,-0.06696862014326285,-0.18923449877613444,0.1537342878708669,0.026575747751524516,0.01861501140696108,-0.015402077870600557,0.06799549609789647,-0.14262061273168247,-0.06046040811068848,0.11110024416724483,0.007336797729256584,-0.03581816564134751,-0.10588590485705847,-0.024600008936538652,0.04536108744251344,-0.038101453869086116,-0.04504902424288203,0.017349534649220868,-0.2379196947345625,0.16326364521021697,0.32261959567890147,-0.0426175276989512,0.08829345220197267,-0.07161772367096504,-0.09651657884342377,0.12230300725881,0.09552067295421945,0.1027073327768957,0.12199159791552508,0.07789117060859788,0.12158852462162896,0.055899342703803416,-0.06514824114781244,0.1776815857582149,-0.05684896515880571],[0.20727102151627605,-0.15038677189991473,-0.08382980549961278,-0.030263327818494903,0.1532861716031818,-0.2351196883708061,-0.09056590479807552,0.19358848675670376,0.06496095955962758,0.17570653183705504,-0.37106440800236434,0.059676800746322034,0.1840726403322041,-0.05900675924240532,0.12265934351160365,0.0028035088744348805,-0.11835287227310502,-0.01326056233548456,0.004435362927382861,0.1522796643091011,-0.002610276077870538,-0.12593411282150008,-0.02095566651763078,-0.058293458143947346,0.23977030921296222,-0.13676452393912633,0.2715701070054413,-0.14259896044115766,-0.020194431454286794,-0.05194355434698311,-0.0006227616898694976,-0.12957121932761118,-0.18934547118010125,0.06693651246196435,0.170140768182232,0.044708909512124695,0.024558969887581165,0.003361805317303695,-0.0578544010594504,-0.13511766254469343,-0.022937684825294725,-0.04115376418979282,-0.23832566960248114,0.021343838538203413,0.05554677883662022,-0.09325336495477778,-0.06916858078610519,-0.20240183685573987,0.26056415721386844,0.20957595397437534,0.026531111472087147,-0.38167304181100037,0.15342802706836284,-0.0012927458052908538,-0.15717295974228435,0.13628791139481555,-0.012858360339785175,0.03379283137079187,0.11213055497246689,0.023883047176057857,0.012484266765879904,0.02243918458749643,0.13907284187388497,-0.48066837267062024,0.010247160033452737,0.034976705293297106,0.0763468667512188,-0.23420873350479277,-0.05476258292715233,0.05958145486945046,-0.05747967144432343,-0.10222728689242871,0.2520669055411988,0.4140554468718037,-0.12328440344454769,0.2187978992014005,0.15451557571681868,-0.04231263162668323,0.24333938365669167,0.1958858399526375],[0.10046366312337192,-0.2667987463259295,0.2583331080334754,-0.22784850570729712,0.24888915052352398,-0.10136955045948921,-0.1550700818806659,0.004459415566118547,0.30801293578789507,-0.01064236481586275,0.12295389240903014,-0.057110688429777366,0.0525642814723955,-0.20678442887424897,-0.17737125482391725,-0.10503249448821499,0.2458242427507386,0.059828935065646856,0.28289624729105095,-0.1918473191897108,0.19669030165378323,0.03738831511271343,0.20671907006195483,-0.033970726513633226,-0.2205304847474212,-0.10880872817081522,0.18183493169434614,0.20088562946745597,0.06104858832074157,-0.21801742895110832,-0.2665241365717859,-0.2543434902940329,0.24119974733933136,0.11356034489631568,-0.08233997648930025,-0.2459916285188364,-0.1682503627603226,0.09728053730666698,-0.2179215830104149,0.2072112422978562,0.1750411443404446,-0.2054738695880867,-0.4820781520836024,-0.024784267923441766,-0.08812891760157932,0.07518065558215792,0.09000506595287214,0.007585524472405175,0.22180523028720822,-0.33934921953688907,-0.3447592797697652,-0.0996242953135252,0.07404875699764121,-0.24976270111303545,0.216217877922917,0.16386982518052667,0.17884476607471317,-0.1252813243448997,-0.13208839643219775,-0.0285252011302456,-0.036750195225314884,-0.3902309613284818,0.10431184106959436,0.013345848948220568,0.1895073559817986,0.1328381261666089,-0.08390081304300502,-0.14802199395351143,-0.04929975387332078,0.27001113937483345,0.05104099564176875,-0.2350607781038204,0.03321119848198253,0.039723978103725875,-0.2011775047100594,0.08926897165492371,0.2668251662945591,0.4997542633027705,0.12736099104913662,0.4163607588228838],[0.13018619126036038,0.007609177008303462,-0.38822072092708043,-0.17099296680398818,0.27300167950915627,-0.10080914189960838,0.1289835762467573,0.14992158071983863,-0.10900133545735052,0.12616125663745806,-0.3755488504634764,0.03772968965550566,0.2738641237512658,-0.17704999789356546,0.004602588613295032,-0.11276334062783593,-0.13462651713850463,0.3013405633923864,0.26328867460965544,0.031110476466484634,0.0806443962055335,0.25159866408968523,-0.10499433832133422,-0.05592922398890806,0.23395058054921528,-0.03366149504888999,0.08965413128996151,0.3615278858658853,-0.055606422842320806,0.12022909328290612,-0.05905831025288424,0.13463262640581072,-0.25941401197777336,-0.08911888102795633,0.07455362419112425,-0.11768468218124388,0.07084914942356471,-0.09136763017709781,0.1081646780337092,0.099217994780585,0.1350468256514124,0.1653518476078708,0.35506513693781294,-0.02108095398120207,-0.2502279244421972,-0.3330974832413566,-0.0484018272357568,-0.017280245112046167,0.16664654764126632,0.1575928181485655,0.05519671504648843,0.24173313093319168,0.047320523862165724,-0.16460427315782028,-0.0012673416842656372,-0.008636559591017256,0.07275292771292671,0.04180486317899043,-0.161962086780316,0.18899085335240026,0.11767615823931281,-0.029983377444039932,0.17052922653108843,0.3116024161445311,-0.06754348695234515,-0.06771634999312724,-0.0444629339443259,0.01522249174980425,-0.27641521615334574,0.05216406304279496,-0.020585929339973007,0.03462972320177742,0.03360616082535146,-0.026396442566601355,-0.12974768053743374,-0.34068966328533146,-0.10382577394210758,-0.19607505765219926,0.19541183888448466,0.012460019307016743],[-0.000965238291752365,0.04155333325964546,-0.02485532131607387,-0.0958030552687179,0.006685668543573958,-0.11688404338094116,0.16488525878316748,0.13346696449694576,0.1293029506235051,-0.08102283115127813,0.17171864828577815,0.21577148627990128,0.23821543721234764,0.07322228553048099,-0.1416511884564035,0.27153847285558763,0.2779255043960371,-0.005943046648200767,-0.09067610002989704,0.023712212558683825,0.053047298473372834,0.16127807604355268,0.33897732658542357,-0.25340184222597856,-0.02258861480017257,-0.06816680890242797,0.25585836430526554,-0.2218957114086933,-0.406690978776537,0.18160893587937527,-0.06727379659887328,-0.03226905400388179,0.2141443452129349,0.13873757617959812,-0.06928009687312497,0.24464464527240024,-0.0937147554833324,0.05020898954070015,0.24187673254375236,0.04274222589216608,-0.22582326401897448,-0.03261976329459396,-0.28970478987679454,0.011010885662289934,-0.1091648892797247,0.047793161166561605,0.034725420317544414,-0.09736732706190673,-0.34934488535998276,0.24189464769942387,-0.38854738915489506,0.267589544909564,-0.0550087399325361,-0.0156012740699395,-0.05075459779755633,0.00487371556829063,-0.13642151860426074,0.06557492826350077,-0.2253762880279104,-0.04180534972556143,-0.014013683227304053,-0.04959505073331204,0.0630667422360586,-0.1897995716648856,0.18555615848450563,0.04030476003181713,0.12725455693275545,0.07247367611524706,-0.12315716688154622,0.22987949076200972,0.1348193925266917,-0.08538682859812112,0.29798636894959396,0.23362854913516695,-0.16515177032549008,0.37004365774307596,0.30851662708754934,0.10720955693808518,0.24052182688784401,0.25003304007548216],[-0.009215909176936616,-0.03081983355065297,0.05544033835259717,-0.007124082514250505,-0.18597443392338564,0.009730198025345298,0.23768999868071541,0.01532372656229046,0.343483570009777,0.1858996150107858,-0.07194077019821338,0.2686777476894302,0.12975250370492084,0.0052328366601843606,0.12528863992474196,-0.07676769273931448,0.2409050485405485,0.029715341413405434,-0.025872232191910014,0.14509484882451434,-0.24225943189058696,0.15318075342783857,-0.20204980026300284,-0.0025370406834052694,0.11906597335655919,-0.10843126370566025,-0.2683089578514677,0.11998426083873044,-0.2280004117091555,0.1727818347669636,-0.21827332611250477,-0.10385521073030327,-0.21373355011841197,0.14873859675099843,-0.06231835007791579,-0.00725370671235094,-0.18808850392720858,-0.07879708598033901,-0.1623318883059846,0.1288679851279054,0.14615117086720986,-0.02135517158963801,0.10611114084775546,-0.011537108839153168,0.19999140809851373,-0.1324774563178712,-0.057940812389504104,0.04561742202876336,0.005866689417870986,-0.01755467794025406,0.005235249376971794,-0.05152638338550127,0.11648591072800217,0.015423999963362417,0.31513135700675976,0.09167149385521514,0.2702403103689689,0.002170851619065857,0.16094460715242948,-0.14154746077408586,-0.037518465557749986,-0.24708260086202208,-0.11265559496494645,0.24745198137485255,-0.050245420531613336,-0.15981214147657619,0.17481232551215226,0.29315331546384804,0.11290089692616571,0.07778149337253057,0.38168192606024415,-0.005688800384858951,-0.048261257246771216,0.1329173039529808,-0.22316006194644836,-0.13043261928777825,0.01578829526185221,-0.006482907019251068,-0.30285581349129026,-0.25198260766006286],[-0.18107415624939938,0.20280809372667158,-0.11863323438382475,-0.25640218376571244,0.07222982396919575,0.356980272373249,-0.006356614022139211,-0.24570500863629913,-0.030783632895254112,0.03938896629073763,0.12105205215083256,-0.1617820128971731,-0.3489707241447956,0.15291490491519671,-0.15378443895630756,0.22527257723471647,-0.20596239713244632,0.006154407913532399,-0.16844429657387203,0.20722368356121393,-0.3038188823773622,0.10613715401988591,-0.264816557249792,-0.23346570720517693,0.16013555374208369,-0.009452946398435339,-0.20092992435779225,-0.04856943732637127,-0.028353047984530005,-0.22256731227180515,-0.06747946042684784,-0.2786171175147246,-0.10955475710655915,-0.005529662088843379,-0.032258336233229545,-0.10655199956103398,0.008052494736203111,-0.13795636795042326,-0.09077308181179011,-0.01441288964689269,-0.07604793466391632,-0.1068060102784155,0.15372209979616724,0.17452418121932828,-0.18551148938044815,0.15943015965847596,-0.029518363118871287,0.06465634365750159,0.013885579105256039,-0.027905583097653907,-0.038383903264535675,-0.18079255881475562,-0.03849754396622076,-0.09987315469130914,0.07959938533368294,-0.01675752345133005,0.12767787270149233,0.012933306961799696,-0.15935885342894301,-0.15560518583823268,0.1008078785929369,-0.05491526522388113,-0.21109332127080666,0.06401600147273354,-0.11411377928473761,0.21466943948236936,-0.10421010940174966,0.13698628193319035,-0.014194841067029106,0.12560399569151104,0.11968463245259987,-0.06437442390537478,0.06096660781200511,-0.24294145210825627,-0.05150858520607863,0.21274582849750961,-0.16349702488349205,-0.011921994027616265,-0.002226391799594076,-0.18020882677976305],[-0.06604628978348205,-0.2601943966007752,0.027410092037086626,0.16637259793137327,0.11125106947598334,-0.2864281025469132,0.15936007502670793,-0.0054329018872665644,0.15329880911553012,-0.18132811697479764,-0.2758866426946975,-0.13375367126124907,-0.07758640670796775,-0.621162780802687,0.028565271670499083,0.12665716210582048,0.0932412251023568,0.036247428636067176,-0.11679537773984579,-0.10655492361548015,0.14233877552473045,0.4104307014583935,-0.028829228693676646,-0.49836856451387884,0.2986233491582674,-0.2435479388000105,-0.03573482571082539,0.21471919290570868,-0.2439204840560181,-0.12695433865488293,-0.3213452928511839,0.10616027935525937,0.208348087235144,0.16358557512802774,-0.04628005968205596,0.07426818610815485,-0.1181833800040199,-0.2322559177980637,0.01046787530043232,0.13145179161132517,-0.030407239112128243,-0.03998179054849642,-0.11327349026630319,0.23026743212815967,0.2012555568636916,0.16616372311863095,0.021516505353559656,-0.1447158656911773,-0.13111097323644874,0.04413739232296111,-0.043961705869031684,0.04773419099232561,0.15448662508527938,-0.09391448382096176,0.5354620065981635,0.3090972417104717,0.025199751465800085,-0.24872311175592948,-0.15021325033811114,0.043137867891134246,-0.013221588985992393,-0.2745130711063631,0.11503892423107501,-0.11755106860404006,0.12957937827848323,0.24868970249741132,-0.05379513903472333,0.3824688388906439,-0.1960628439721021,0.037742337816525744,0.18593863080825906,0.17779201985344845,-0.14136759495747983,-0.08551864484647517,0.1280968774475622,0.054382712467587926,0.07946066972530356,0.20627991842877366,0.18575189795942704,0.2705599751904525],[-0.13529881138977576,0.14964128817786718,-0.1041692191019253,-0.12141257147531756,0.11440427614379486,-0.02740214287897433,0.09937041618137415,-0.23800241143830594,0.06792849254826624,-0.240010971772706,0.06432810788458199,0.2990034520400124,0.07981316982228136,-0.08145940680108882,0.028031227869897292,0.17763341396822374,0.017645936307313398,-0.18580127131031568,-0.05146904852079198,-0.1539246808170938,-0.0537042574261186,-0.1432564466715361,-0.09726383949424165,-0.011637553620868943,-0.14473309520318375,-0.061431579086442104,-0.16190346552920695,-0.023478270751151314,-0.16261489242938407,-0.01041897708574026,0.07101624438265604,0.02989475563274478,-0.10618407128248906,-0.13764990443606562,-0.015211185883074272,-0.0060126265041927545,-0.15563085501440066,0.2776948996052538,-0.0399221354951563,0.19664720828734503,0.11982284120078569,-0.022705011938107488,0.027764966100341078,0.026228178664569713,-0.08526121266887823,-0.10517004492062329,-0.0550476700416936,0.21626805250808573,-0.22616536935140027,0.030016001423921367,-0.08514772217097956,-0.10894140449203793,0.08939143352639578,0.027068322471845742,0.40574215563461746,-0.20469125596018167,0.23158637492341594,0.36897380559103904,0.2856785532679874,-0.0005503713977141175,0.020368065777260008,-0.025118612305749414,0.22771466940331309,-0.025601703537166096,0.36658822258253965,-0.06399383528729147,-0.02285589903842988,0.4224189972764771,0.026144273459020963,0.28142718512642917,-0.25966761768684693,-0.01148009104458232,-0.06641675214065998,0.10627492283639729,0.24436943924700727,-0.2414593306939371,-0.1784798139298981,0.08528448301611803,-0.1710035715943847,-0.00425835725407153],[0.013009141806500497,-0.0887325398943348,0.3935891691748738,-0.44658551464552637,-0.07415918958206257,-0.01571991302136074,-0.0012088507796319708,0.10896940657287335,-0.39817686175212746,-0.06511479327229358,-0.24767503259985788,0.22761473978461594,0.07121689697518621,0.13042507223631122,0.05779626081960846,-0.09610471636183948,0.06430535745163751,0.09870185307955603,-0.15107398058373867,-0.008528576662917139,0.2038491448232149,0.27252422021940415,-0.06296261354497762,-0.07530475261456547,-0.10550945131229628,-0.026619959234151,0.07006591114979017,0.13553601866789855,0.19897909444183867,-0.05590134922635582,0.26443426241884077,0.03152829503821284,0.04600161199606517,0.3426854267988347,0.22726347333303357,-0.05869630341087928,0.07115501986210196,-0.01174624515650836,-0.040521658737935576,0.02691885780271033,0.21158298367079093,0.0020240408419573276,0.06218898055198683,0.1186216613647347,-0.28815819401291737,0.25252714779502083,0.04502893015946244,0.09432876151820056,0.006628598879521326,-0.23571241069067722,-0.0708935078752028,0.12764887037345066,-0.044157297003201666,-0.1823413043311079,-0.1827507656689723,0.003955489073919417,0.012721740076715012,-0.045344250716234935,0.12334711724312072,0.08190559945354817,-0.015658741676831036,0.0008959099137049713,0.018641787282440512,0.5790757349528715,-0.09053122224372695,-0.14803416441268064,-0.19649785338201586,0.07939156964681751,0.14072313529388197,-0.018168137911861434,0.1010791298987225,-0.08131644108511728,0.0848002073265816,0.08375264947190163,-0.16608204287343867,-0.2831005267374479,-0.04633852939165325,0.15442231400518833,0.04843621863255499,-0.2640380834816745],[0.1798609767996614,0.2787173651919247,0.053925895589732264,0.11004639933349748,0.0007573397892996648,-0.10362150467916656,0.24147295324391876,-0.14365489159627565,0.09549609454999478,-0.16961781160001382,0.14345215702414676,0.23338783728857876,-0.17982807648474916,0.04978648328356044,0.18872926649991206,0.2753229825240067,-0.15707001940927842,-0.1327670850421405,0.03150720018974347,-0.03843591514204255,0.13682787214733583,0.4409320557139228,0.004915083465819189,-0.007812811473560749,-0.08887805374621535,-0.20820660511048844,0.22485781876524122,-0.1649663510999835,-0.07862840637182307,-0.06546824190987628,0.15974174789950354,-0.07104563890685263,0.14584176612848734,0.6567254180005825,0.05036789059596983,0.17392552187103294,-0.016979491237875337,0.034614393746825727,0.179246449838916,-0.05267760188636483,-0.131290889291223,0.17603218483507507,-0.3932836175057282,-0.23863343749765922,-0.2543586437589921,-0.1496865005219163,-0.17773216424130506,-0.059434286219963835,0.0665777552641407,-0.027068535897915247,0.02250705529519611,-0.03792214081151879,0.10465696899424835,0.12672500194511893,0.09017010795461394,-0.02746341870239415,-0.11524038720831369,0.13134476203896886,-0.24239231822390075,-0.060050299308515465,-0.14685420059082324,-0.10191038782201578,-0.13773985226473492,-0.3071238677220276,0.02120147773340788,0.2672654101398694,0.16612952777137427,0.005027644501913022,-0.09337208329421952,0.06176375401971125,-0.0019771390505944073,-0.16648450287607314,-0.12724287802336565,-0.06941516906030025,-0.13537277365502665,0.24469355841852963,-0.08966427904229017,-0.10670487881823842,-0.1913295872151859,0.017371675129069893],[0.09048475724467003,0.14573895656410965,-0.10781573738575045,0.03652222413687761,-0.24977034369814793,-0.28633481786731463,-0.20498235895099365,0.04834592839118191,-0.08948669069910041,0.03889227647863616,-0.01882250622363609,0.019417382886665745,0.222929488512222,-0.14365601116488236,-0.19148451270654415,-0.012246445783366193,-0.04714432156255778,-0.5260707256679432,-0.20505767285196322,-0.21874861904852366,-0.34398188527816553,0.13845247512746534,0.06253365201686012,0.05568928940206602,-0.04622624166560381,0.07989171629430515,0.0030219174873925103,-0.015229862992548407,-0.006972829037838691,0.08253327061213442,0.25568894581213836,-0.056126241828048075,-0.09339279563312565,-0.11674765995994996,0.032153796465013665,0.04304473533414147,0.17580133818068733,-0.26978691194681587,-0.002431087877694981,0.13074107212209374,-0.08404436188250854,-0.23573142238980407,-0.08859696073233095,-0.09354165996443649,-0.1545751149825149,-0.06786639481957821,-0.1251444856245872,-0.03609064165459191,-0.06096160931187022,0.2527628332106561,0.21293124771129476,0.17637380253724486,0.2439556382850626,-0.07173169609523189,0.24188444939255085,-0.2179820908106081,-0.10863424487403218,0.07697791654249257,-0.1790088848177112,0.020366997215362233,0.09748992670731274,0.06556577913359744,0.06843851293692488,-0.28729047253288853,-0.15867717551477334,0.2990866065581874,-0.03034483619905469,0.03615213433383952,0.23314365105835091,-0.09234889018654971,-0.20108984530830434,-0.02173407782789253,0.12707792139479585,0.10909324150974226,0.09784012718082144,0.07595536046716209,-0.19677549663652003,-0.24456174725564736,-0.05515066541030992,0.274400048417886],[0.08500556098951187,0.02549420871830091,-0.04153940965461452,-0.118503650734187,0.0873481224555431,-0.31162257617676237,0.03644065430568061,0.026684997223219473,-0.017493991571271628,-0.20991810354352353,0.06790188351846171,-0.037730189086232685,0.13071954585713888,0.05753180477452751,-0.40341362271405723,-0.008023461822049252,0.010297806537357748,0.004436077254818759,-0.12770352388346615,-0.11027679396947045,0.1421000631429257,-0.07605036630705568,-0.1994430249365952,0.012939805835779592,0.24386438639420363,0.07920322317418091,-0.10341181312307893,-0.13819752544394295,-0.03969676108636091,-0.33013336674283067,-0.5351552595593193,-0.14607932942057916,-0.03840471311586746,-0.07139423869434518,0.2038229041439054,0.1405726701415692,-0.07292573284402586,0.02203904231531495,0.038569398814193995,0.21831132796808608,0.2718021274181775,-0.24502666826335187,0.03141939110778816,0.18508569318822657,0.07841609051002661,-0.04485047930518269,0.002816167465630681,-0.17242887030238396,0.13024672255481148,0.17670061977167079,0.11569402674029466,-0.25377182879870275,0.05142818655544773,0.051320794568222944,-0.03422503830885803,0.3046028585170917,0.011829289293893597,0.05167088846906118,-0.13997949591132483,-0.287409633943106,-0.28397715514792904,0.08707692335468653,0.2161624524890714,0.08880747422023542,0.3316031374550515,-0.18169786099561483,-0.015902536196685677,-0.11244958067237584,0.07713015566556067,0.014507092784470479,0.12906323095708383,0.15131085452977897,0.39539404270509415,-0.1870561361572569,-0.12701697823003294,0.20323813267119045,0.010224601510797661,0.14056794541215248,0.25112174977048357,0.02951879516838663],[0.06331149416990381,0.04959723952061531,0.27000319779258974,0.24628399557983296,-0.044049838894879165,0.19751322382229858,0.11889141515808313,0.23664236216774961,-0.15159288423601225,-0.03108725120130729,0.09931984412797824,0.0912819586383518,-0.11097447532451533,-0.35585610212400437,0.20600384713991038,0.04836450880776179,-0.1220892315514237,0.12392697861236317,0.25763512555699547,-0.08829215388048445,-0.2013542300682124,-0.02062639671554771,-0.2012433036847747,-0.15682865378762703,0.21640004996116,-0.08629301183120462,0.12044325303023971,0.07829754174208116,-0.04149684089779245,-0.11726747988322538,-0.09780718282024384,0.1827057823395638,0.1933408399475993,0.29036541676707245,-0.08652100316343195,-0.08106710499453477,0.18434492073873232,0.1462745111112031,0.02884146908992721,0.07580644762236262,-0.03010721030495724,-0.26186204571126537,-0.1869674010858664,0.0321757497022961,0.04381965907542816,0.06868534718829064,0.06857526620051618,0.45993610840344507,0.022135509113108,-0.10975619044583192,0.05321926449199451,-0.190213033040941,-0.20350277511446674,0.08182974981385661,-0.08713934115761467,-0.368656809337422,0.07415084924509795,0.11567941360701864,-0.03993464865216567,0.033856910913561265,-0.10207569585014077,-0.07239149080982744,0.11141646079798598,0.08289391197592652,0.25846773286522146,0.07808285382835813,-0.32212237963064205,-0.14750970575402908,-0.07243592324662938,0.0723336611432513,-0.03580987263124803,0.32893747637316595,0.15949879602448022,0.017822037557971168,-0.28216574448241455,-0.07476784793707818,0.03081376369758228,-0.09849225863727541,0.1975305664729405,-0.023648496848922285],[-0.15859852372390582,0.2578776635710363,0.13122578295241577,0.15652547535512468,0.15400543256971494,-0.06993413228555903,0.28661720583641387,-0.18766135515145313,0.23165646215766497,0.1709383726175264,-0.3392103246667835,0.272056669762825,-0.03307757943214148,-0.046871454519371254,0.07371456831763892,0.2657194542701246,0.06904333189830678,0.11555485128927438,-0.13966651550283862,0.32210799461517314,-0.08791459718521911,0.22965344927219497,-0.08760941383949741,0.20727518216240323,0.22231984830442414,0.006934484265227353,0.0779939538136008,-0.03542686123540063,0.09653185560631278,-0.1805089642413906,0.1977463337299686,-0.1149005683517843,-0.020886456398248605,-0.07849346986505863,-0.10077468149486242,-0.04209581505846852,0.0636013542204936,-0.29270765864484877,0.11466550528807308,0.2147548992744385,-0.023224593053312242,0.1852539888014853,-0.0025515916287497517,0.18431044492614077,0.06256956399463968,-0.2590663420720946,0.16268000417919998,0.01183352435107844,0.12005207101665608,0.05262066580560333,0.03184467979038998,0.20655954184073533,0.004818937963285229,-0.10142473760197045,-0.07348130923576086,-0.017477555118734802,-0.19922401094369815,-0.2520854542661788,0.06549217058231245,0.06126160304328754,0.0712430277249399,0.15767791923891927,-0.042692498539626554,-0.010413729934374985,0.2902343312843263,0.03286308767983284,0.0600486727294446,-0.1095444336493469,0.2975220155518201,0.2896219952843012,0.006801574352018767,-0.25706974671996247,-0.012449631713290664,0.19710190848165507,-0.24584799367740104,-0.004411257055241034,-0.24151055630842708,-0.10729916730129914,0.07292017097705503,-0.2665245024408066],[0.19049632411009287,0.013289653419246214,-0.018026438925222224,0.1672502824457444,0.046436055085468865,0.09229926556717676,-0.04045579964216305,0.10389907998951116,-0.0931160914431835,0.14446352334845633,0.0750965168791166,-0.21175065551784444,0.01644637004442123,0.06139887574477672,0.3496336243133018,-0.33669491636300575,0.24516634021653907,0.11133358273109618,-0.1740390929789547,-0.053155422425527676,-0.43737604886210757,0.02632010333319087,0.18651045773772318,-0.027705734423461085,0.20088525304767796,-0.035083904492870036,-0.17970164509580897,0.12810658065623567,0.007291446790394366,0.40955330879032753,-0.2571066236719061,0.0756827384735374,-0.09458847377839408,0.07134227762960016,0.10011756607602784,0.14919688807959938,-0.11536092905577873,0.32001464337444196,0.15951677073908382,0.12106329983143124,-0.022322710403189366,-0.029009642654987775,-0.17824817090661949,0.046190412687174144,-0.0889645800100078,-0.2994732633660912,0.2371561096765663,-0.1399404667903316,0.05839438221601496,-0.3373010343242925,-0.24329166521650283,-0.0640849259251331,0.43156553247892915,-0.28850583847755973,0.14204689625280592,0.10893987104969145,-0.25934677279608154,0.005484263464045695,0.2118537411649782,0.22067791188152858,0.061681301449792135,-0.1505201767089969,-0.08743427819776865,0.20416046140853783,-0.06903906004494091,-0.36881745612707495,0.0593395086704268,0.11600841494770656,-0.3241110467782294,-0.09954423173426469,-0.021885164974884876,0.2784689636919193,0.2779089091778726,0.3141761753364118,-0.02356047231906977,0.15419636519906738,-0.21948000487242775,0.037254543683985744,0.005341380063518278,0.05477065620162179],[-0.06450618769876507,0.08789958353191386,0.059790635734124964,0.17247765406512294,0.0784942227072147,0.09441213496002993,0.2545982265714656,0.05824147269164269,-0.12136677234505557,-0.003863679179078285,0.09490350275937484,0.32743344299466975,0.3788370681595676,-0.022006309065619695,-0.0975430639003386,-0.11705726698786524,-0.19020868119169518,0.15332432204998808,-0.26761632211274594,-0.1822480024680466,0.008106215965431198,-0.13290491977057806,-0.24460653333817026,-0.3051399644785372,0.17705244932399522,0.031060077584375692,0.062184645049489194,0.12835939925479836,0.15427593356923228,-0.25509609284126794,-0.451231360147803,-0.3184850127128206,0.45251907728967666,0.16721912577537704,-0.014551511657616372,-0.20624663523014142,0.029576588043137744,0.12344986175206187,0.20545174368467736,0.056941621371600665,-0.07103848048861917,0.10697423937168726,0.05503038024685554,-0.03991398882503772,-0.20361075239502588,0.01935657874558787,-0.0622369959974542,-0.0008652413672536256,0.21596912333842636,0.1777772713452739,0.16442735956796303,-0.39021662557132497,0.14584908119040235,0.154341961285024,-0.1819253983359986,0.03306518040273786,-0.010932212477824327,0.1506811497512433,-0.01090033954660279,0.25084892461235436,-0.04998726614657111,0.029410023913199496,0.4042325031268997,-0.2785280333484137,0.13501829736365267,-0.009225173503101277,-0.19837543419384449,-0.2073427401303943,-0.04567019943497249,0.08980169532803788,0.24013751831428579,0.16809065330205758,-0.1346973724696242,0.19879784115607765,0.12303860885305054,-0.15592527344848156,0.15159677138557323,-0.1173498623470229,0.12963753331285766,0.08159209642560819],[0.05159887267931856,-0.2444269876275634,-0.2456856564770415,0.01180492648092845,0.047065644155614886,0.2760258908819469,0.029822509152903746,0.159747201756105,0.20857830005441236,0.05999403114584087,0.06280823597852093,0.06155550556588374,-0.030069573989679032,-0.3828868379605282,-0.11060514711277378,-0.0381694795011824,0.005068105358427454,-0.04321423912185241,-0.08310278223122823,-0.17860475562301825,-0.13244895041933832,0.0847361059284003,0.014670389134832122,-0.03981896463440532,0.1076599752630045,0.2189637172398468,0.028213362843173218,0.18562396904688,0.012503476737298869,0.24083621375441014,-0.17692215235220538,0.05193922183912141,0.11046008350467981,-0.18207577820579007,-0.02504525277009356,0.0033499647377603606,-0.06971398911194684,0.08022387387544729,0.10403837112249364,-0.03704304105800836,-0.042353585012675575,-0.012101499845686368,-0.023953973255567463,0.25596428175158564,-0.04942748704752339,-0.17334477891021427,-0.05469840995558247,0.04927585168713274,0.23681468389497418,-0.11821611862314263,0.2706254354729075,-0.10076990410538426,0.05627001418516666,0.163475473510895,0.12592318004527459,-0.08878247870367129,0.06300004392814346,0.10971007396887496,0.25654858269635583,0.2356520220647137,-0.3959273250079566,0.09676852766270813,0.1653502623335665,-0.12267211978572426,0.04738658532705222,0.00970782819705235,0.2870394225617712,0.06096562803749492,0.11195109137306929,0.017391232083749975,0.1341287588849915,0.0332024280333833,0.3290126325083816,0.14282951297522967,0.20555811627388956,-0.2542560520257006,-0.006249498980265999,-0.5678553596464908,-0.03781432213447415,-0.37911132601573677],[-0.09772011463243799,-0.248816432986469,-0.09276690821291197,-0.0827532247788193,0.0670347231442767,-0.09979515174423716,-0.29038593325836953,0.07411498837638335,-0.051045981014968794,0.23052644920979498,0.13927773653191303,-0.11215119530996875,0.00419360798199026,-0.37737810423822277,-0.1879148424250915,-0.013366985639312141,0.16404933090567916,-0.05720460942069483,-0.26887416286049076,-0.2887216568863771,-0.04847863649586241,0.2860449251662243,-0.19536111760502559,0.023884335019290655,-0.018027723660029606,0.18743118454536886,-0.005393414185775124,-0.1573821175166803,-0.05578763650691803,0.012723782304330378,-0.043394703960777055,-0.08147933380431911,-0.06168444126015545,0.18610358139024558,0.18814364376316234,0.06264099720158979,0.13951363348235657,-0.001979229365247854,-0.030625218297440446,-0.06260012313616292,0.07812445152823984,0.038301798901759485,0.01556212063905283,-0.21922876718727705,-0.19363160065162816,0.1092282729930669,0.34838783362281855,-0.05388760241673828,-0.08165191965548414,0.08509557337329064,0.040531171064356476,-0.17170220909349163,0.017882929624485792,-0.11175638195533281,0.03613190557320413,-0.014834673670299075,-0.12870128769302072,0.18559708461285235,0.022630076340614126,0.0027958422199227343,-0.10731596248851143,-0.003037695677320558,0.21716901566859803,0.412383745080381,0.1531902492355312,0.08949895542933532,0.052646935512682035,-0.1487960004648855,-0.08883101272110011,-0.07813008690799939,-0.054877181736766624,0.1485452635733558,-0.11205588126713413,0.1457669126547875,0.134596551498599,-0.025685998097920937,-0.09089510119810663,-0.1585883444338935,0.04899415999395319,-0.2671157167729888],[-0.0957045067381879,0.08824549616819918,-0.03924449377882526,0.24461119002279355,-0.030354273174386,-0.013789294616590083,-0.15717429347018275,0.2152770717791226,0.12526374197936502,0.07875366644016527,-0.053384574924852025,0.3453623046865944,-0.04657785242704757,-0.09678074973131513,-0.3731120150817705,0.10592498489131572,-0.02129150771325856,0.13513379155941044,0.4967745710850803,0.45479694270199483,-0.048702509759981784,0.18543348213947058,0.06987955383513261,0.09874985083941033,0.1928785504376569,0.06604374684687674,-0.5634786068744335,-0.0775630166696177,0.08795521127270244,0.11213679092668218,0.15749026974211439,0.12403914629176899,-0.06995995397255893,0.08956891053279754,-0.05798686632728579,0.09405010434095318,0.09906606727555257,0.40559284721121897,-0.08913831813598824,0.15121698366484454,0.1453295291636936,-0.0763621388267419,0.07810810110133265,0.22120336433674723,0.0874635821221649,0.21061853620645152,-0.19325186161947638,0.025650147251725396,0.1558071034151282,-0.013629038541425128,0.052327158712647676,0.07012572355463619,-0.15014607662320104,-0.052228702013668034,0.1347965215891144,0.19423520952460438,-0.13405213692158227,0.19207782225909456,-0.06634374654447246,-0.11585263498557063,0.22647522735321246,0.0781108792357691,-0.20418317585625753,0.2623514484753707,-0.06265042626831636,0.15931513827127455,-0.06073826644536229,-0.07535033968329367,-0.041895440499153586,-0.1512419391198072,0.016328783920771507,-0.0032277468285025345,0.052698126478257105,-0.02491166413591519,-0.19966678730561555,0.006569712085395695,-0.21923597490819705,0.3343437459108459,0.31474572844658866,0.35285114639238463],[-0.14478966568601404,-0.05955604684648717,-0.18262906111215185,0.23585281254408152,-0.38141319335503404,0.24614904459690784,0.1225799480777794,0.25254476443018103,0.12807590423889686,0.09457278245497401,-0.06620324231957318,0.024388508541947976,0.030328818556295312,-0.07515014243905367,0.13462412243380772,-0.07494952255611631,-0.17730162691877413,0.0860290298920882,0.2694893510070505,-0.133140494700957,0.2116701877716964,0.02454834619350233,-0.1293931313404455,-0.1888000223411263,0.2584800145055195,-0.1157321291336474,0.007112373358060421,0.08124617083595508,0.461806014968944,0.2449134432032489,-0.03908548484452397,-0.07655827218174943,0.22493061403108003,-0.5482125661841207,0.18567453005709,-0.21888099598069438,0.09576138914615079,-0.022599985166570902,-0.06698905541514523,-0.17592465134931046,-0.09792672900169001,0.19699753234577874,-0.15350352739077247,0.14697780982253614,-0.11029490402111188,-0.05933030630690012,0.27449719726118016,-0.004972366560148501,0.045016413978772055,-0.04095721258535001,0.03188035822576524,-0.3130928572629418,-0.06752386991504225,-0.17284539551628558,-0.20736142664298202,-0.10847697398037102,-0.17465590355436814,0.23774094264600923,0.02018229420727722,-0.15205812942178853,0.19338173216908922,-0.18921315653250648,-0.014995765503700877,0.09878453568225576,0.009904712384720996,-0.04565391647002741,0.025081170623490644,-0.1925922631105193,0.4872353257148535,-0.031541712999888616,-0.004530460415173567,0.10091857222507931,-0.21846287522069496,0.4431746250181003,0.28620465477997614,0.12455252428762777,-0.10846073200550974,-0.04341452136024763,-0.03382091310780006,-0.07207940159861581],[-0.20583098056119964,-0.1185526791021066,0.23129876751898013,-0.029505452184666076,-0.34159545187420126,-0.11028024302754379,-0.14547360772189338,0.41037328782757493,0.13735499707476118,-0.06238375816547127,0.1345027829683694,0.1264519897685701,0.3956686233376408,0.2690301908431604,-0.015846202330583,0.017457521293555236,0.04563932439618057,-0.04758137202451716,-0.01694053859708641,-0.271741932034259,0.07641876188252045,0.19063766045939523,0.22955459926060723,0.11573152740138143,-0.2603029659040969,0.35693798647053576,0.1335147171100805,0.0203015703572332,0.07320736675630031,0.0034629964206845947,0.1225099523703497,0.042063986089825665,-0.09471282523299118,0.23299249485103524,0.2497095231910015,-0.19660015416609652,-0.0633573023187113,0.06884799608477438,0.0065768942289858535,0.16725510804519675,0.08796515119170956,-0.19027317935052476,0.07502969213995242,-0.12400381674821784,-0.01216026547000356,-0.15574211927761006,0.23500188332574484,-0.13822187406692868,-0.14170609679350465,-0.018236075079384045,-0.2654171009587313,-0.0595194807411219,-0.10227628778499324,-0.031484472481214894,0.1756864808344598,0.22557297602272405,0.15128987236175467,0.10539727946948714,0.07218950041316023,-0.051691601951211946,0.17955697101920304,-0.25419110058410554,-0.10064490080576628,0.31214810563405954,-0.09953435526600878,0.2251833368525295,0.05455014824883766,-0.18650626712462198,-0.09581415187986655,0.0808057822185136,-0.0607248428672765,-0.05203277537505486,-0.15199793424414937,0.3128481580225198,-0.08888878874125371,0.035909551455670194,0.15151961841041428,-0.04651885173236227,0.2378435717634681,0.0024914651278159367]],[[0.05654028028100664,0.23349708273436517,-0.05920572639586316,-0.41364077022749457,0.6121983834150062,0.031875684267404,-0.3747538266404586,0.07311620171181232,0.17539051435714526,-0.16491360805641347,-0.12812174284839767,-0.08849903102303304,-0.18907388786726267,-0.16806447328742155,0.07252470692390686,0.18571181724401972,-0.20682091717402654,0.21744759273148526,0.15336196041020186,0.0017531103767402312,-0.1300184676771834,0.269821862119951,-0.029941379291627393,-0.40826937992053675,0.19882023544919586,0.09970179923067056,0.0350000301927503,0.17779361381390152,-0.037908330186744485,-0.17933223375439292,-0.15666429012465588,0.21227336922777798,-0.0743733789567982,-0.3667208129501966,0.05808108624932113,0.24430433370784319,-0.1301387216231962,0.2667184510603737,-0.07673186093602236,0.06811568767081085,-0.2241177551854632,-0.060940813057169474,-0.04950519486672088,0.14495185772048766,-0.05881560204381484,0.03401152700270375,-0.09083044392553319,0.3173631282527979,0.2586210807014836,0.09573866555616901,0.04272255728613602,0.06655683412296788,0.24721886003385593,0.08056026857500376,-0.12219030672378076,0.030343622089907776,0.011646244676844443,-0.13903503794913064,-0.04754870204656187,0.07577970468841502,0.2487196877724675,0.2464355490004671,-0.29635480284767207,0.017800305251655386,0.09686780638228931,0.10565336838300977,-0.04953250893863916,0.39837146276963625,-0.2009745137529924,-0.051593751732919906,-0.09287752606945758,0.11827517085501275,-0.05620281733702729,-0.27142269145154824,-0.004757275550457063,-0.1510985291951784,-0.07247835004448878,-0.2814075729112485,-0.14595339856513917,-0.18683877702564122],[0.12041839321414116,0.07652031716773543,0.5320438155253682,0.43508458890199303,0.39060385097501277,-0.34947905680050245,0.5273703609037024,-0.1807195638274314,0.2038166214992988,0.37814608706158326,-0.3795561443385136,-0.15491779902146646,-0.32790599554505506,0.10262695082200952,-0.015448959599584712,0.10971059818563396,-0.18778224898178053,-0.19885780062764785,0.10586137267090466,-0.19336774670452417,0.010475881513677792,-0.282722107575905,0.11451495108551223,-0.04855732934089755,-0.1626678371481971,0.22647394617582517,-0.03642515032088705,-0.27621751346335216,0.00748751427362898,0.24999212517750125,0.08399061557283302,-0.2937611448488808,-0.19300494683773106,-0.41075876077620627,0.13013412745559805,-0.2975477773618517,0.2188310040198466,0.2583056132223434,-0.3411997040265314,-0.17405313709490117,-0.4190555834835233,-0.08499025294816742,-0.14029888734545579,0.08432730797503626,0.07520254516966067,0.007547794937052469,0.25304965246623073,-0.05891339147771598,0.31107575528914966,0.28001407533902317,0.396180411833996,0.14761213131214432,0.019407290652588553,0.13342901510193772,0.11948956372280412,-0.08609933407000957,0.05745886401247829,0.30848571557010174,0.262367822196958,-0.004296529958891104,-0.12224771093907441,-0.12010740433519704,0.023701862461751592,0.04422747702227661,0.014936198942222522,-0.27399383129240645,-0.17547645260207567,-0.19508811842994964,-0.03188970753398677,0.01714988920016964,0.14861999319317215,-0.3387759568417692,-0.31870148582648433,0.2112275854109846,-0.4141719142644685,-0.08532166210652323,0.15312766598438235,0.21583677564234444,-0.05928286697730435,-0.1742983324950974],[0.2298636180482955,0.17889639287069564,-0.5839471417399421,-0.10071910329934285,0.2139812620272519,0.025671632268459085,0.18290835230312713,-0.025532278332206743,0.46276931308691843,-0.25713992360437954,0.08910064606980514,-0.18333561543805363,-0.04274075438732263,0.09450772613280169,0.25596992240044686,0.3148987986239616,-0.2778159472213531,0.26531127019821993,-0.217395790615809,0.3410351765646289,-0.05368874898429498,0.09002649046344878,-0.034805357972768826,-0.5494222440584373,-0.1626251245222438,0.3454983146266172,0.14989953995316532,-0.34059842707171006,0.018884561157020724,-0.15774335135610773,0.06900993714496484,-0.2740452086104235,0.6272947126894494,0.14391047363809822,-0.105598701523638,0.024062523416882718,0.2718167424430121,-0.1512792353316067,-0.267905795623213,-0.023279129575563103,-0.17488515552577594,-0.07934208953472487,0.1871726701552444,-0.2659830979574199,0.016919904639303016,0.3646975452695685,-0.2760669055922474,-0.07646909072462404,-0.009161803773975906,-0.14253629291052503,0.05585669927153774,0.19658400652953742,-0.30964852304592405,0.15898888169236636,0.0837756362967364,-0.07928194725190439,0.01617423040080138,0.2778014935350936,-0.1303671983967964,0.001986799066920584,0.5464385988884636,-0.2597095692224643,0.1686076159422261,0.37692479503780524,0.07781463700836837,0.05800447361922609,-0.03243674752616293,0.32361870476255605,0.19282570914376437,0.03107516648988413,0.06152676915535134,0.13782353643149012,-0.47249499167295017,0.2495405154794745,-0.33693929096908204,-0.43187457285898195,0.04352082791148201,0.08574662244360362,0.02105443720092007,0.6035146229793701],[-0.25250646599018856,-0.07503505416812795,-0.11449502860076902,0.416924363806432,-0.19122705725726818,0.443936332092462,0.17203913426279735,-0.17392435845365745,-0.21704723555505046,0.21697496437781041,0.10376307507974365,0.07527063457821138,0.3112154987611636,-0.31159752775120675,-0.36132430062687254,-0.05018521681198474,0.15440068810749066,0.18275046484413426,-0.18988691405419877,0.5913785938206009,-0.12395845193403704,-0.31310764990897105,0.17332126247866877,0.0643932069755011,0.33704810789508305,0.23246142255130717,-0.09027821740969445,-0.021108530233470618,0.11254288985592503,-0.4449918945820428,-0.014928950977169043,0.0017295478129986035,0.13311617292227762,-0.24498580714124243,-0.23864977610327637,-0.0718004637803414,-0.011042894758074353,0.06900608406743776,-0.37819028733903504,0.05350156138971768,-0.26594601380237964,-0.0864549256415068,-0.07224791355853495,-0.17860525296419955,-0.3013323955433183,-0.0134314116889769,-0.1550633451141196,-0.30764047713408527,-0.018837972013341166,-0.12493195093189761,-0.28560434993342115,0.17827489909921318,-0.4938113149845352,0.16873318864603426,-0.25088524619276165,-0.023742346754862455,0.03725615782343113,-0.09907923249932438,-0.01250330001026216,0.301380551113471,0.3990621164755461,-0.0930697502858208,0.49690726943969465,-0.135487606588407,-0.05865935282738409,0.4814027281364046,0.23899148761263517,-0.05515746333956269,-0.018893369032116383,0.22003533338231984,0.6971664211105922,-0.05239237836391112,0.15108199653796256,-0.4724060620935787,-0.07414681179730034,-0.26867263501892324,0.10563707625791942,0.12377856102795083,-0.457210920624129,0.04941065695903075],[-0.17008923313469368,0.35770768263300906,-0.32010478038773876,-0.18680927745758327,-0.4072466497923312,-0.0701248734214766,-0.007468597029928076,-0.17478656924158512,0.07371368836922955,-0.4329020492534766,0.13114087975114427,0.006280277721609074,0.0037489453056254118,0.4427657064390151,0.12519680839754113,-0.029721525725991897,-0.2544716141312106,-0.16508719168065591,0.13671873582125865,0.2022732725673302,0.18952702811182298,-0.07547237160997433,0.2538452323731769,-0.04264409027477082,-0.34781278224888407,-0.20486649498158563,0.19263820242511162,-0.0828951333315685,0.14803042768309316,0.02808794203267957,0.09507549214786273,-0.10836211182476142,0.15858311560004518,-0.11554676067104871,0.5847811563591515,-0.36000566353045316,0.23400060030012224,0.5969846840418308,-0.32239282636803435,0.02233701803767554,0.273487951015445,-0.08813986575675191,0.28170760026996844,-0.09390698492096566,0.16771795602373624,-0.19382757298257178,-0.03950752137155363,0.402891638604105,-0.07079348532266351,0.06971595167663827,-0.264739885069024,-0.07694763038288907,-0.3092805474680455,-0.1093056931466528,-0.10755206734707812,-0.002016951485578855,-0.11285789037842324,-0.4093837729974756,0.18660560001000162,0.04850525235489796,-0.552061208733226,-0.19073971943997806,-0.08244241782197334,0.04595621567780535,-0.05303533548534832,0.1535336243817616,0.06617927074001086,0.0438208197060147,-0.147717422528035,0.03453668305238131,0.28022962000385104,0.18610480857564252,0.006372212553698929,0.01881290795481837,0.4085313791543722,0.3175688416767454,0.05349485503633176,-0.09679634585286617,0.2832499808943431,-0.09433997013983043],[-0.4283997652580442,-0.013118565134365512,0.35291246479528665,0.23963279729545414,-0.12290749638057903,0.11538383474131694,-0.30552487901859454,-0.05324867959333104,0.3702850891659838,0.1331585602348671,-0.36097722909341806,0.0133896511928131,-0.14754040456837025,0.0706501832764328,0.2267217633455361,0.34966744413499945,0.3901586294219531,-0.10088455341409874,-0.07668400494742025,-0.08086251503476731,-0.058276848942115954,0.32961463987228645,-0.23458335861745688,0.45568826989349576,-0.15201332374423987,0.3042844777080365,-0.3426111762052362,0.27015386161972893,-0.057137856010169415,-0.34389859887417185,-0.4863314799107344,-0.12516198937592019,-0.10462321597717204,-0.25594627742490617,-0.2897786398382399,-0.014345465641875154,-0.20426006975521568,-0.3445349911769617,0.4163341587874668,0.0890730678832121,0.1455113869317458,-0.09089999471534561,0.418314308723469,-0.12142332524109044,-0.40648698121797716,0.2674946884545178,-0.1833688695592819,-0.4195329154689075,-0.08644263236414604,0.06190676552490421,0.2422832642054842,-0.11520964342949729,0.1473733063230799,-0.07671279297994828,0.36827655126494657,-0.1236973642664161,-0.24003007548526528,0.12415227989377418,-0.25531011014107013,-0.20740990688365152,-0.07638326938095134,-0.09080458804103089,0.08276235564750016,-0.2489154638231975,-0.036250611944381825,-0.2710180278969111,0.0844015058560545,0.17030523943360654,-0.012962182170473334,0.051177669077199735,-0.23664870093133464,0.11553548915336123,0.5284520952239612,0.09581109318452691,-0.5845055300157683,-0.117353431676476,0.09485715345726099,0.20044517779370657,0.2505656890249283,0.1881640065821735],[0.4827563950979802,-0.1421268834868793,-0.053051370875717645,-0.06168927995402465,-0.08088235332283604,-0.09179140030405246,0.06701774871989245,-0.20966114481075251,0.04666823869096941,-0.20519308059362856,0.19186094656932867,0.03916446664826512,-0.35435166471569374,-0.14536522160636625,0.04649508538139982,-0.0011969468545607264,0.11272505900585293,-0.211231957265232,-0.034846082179851995,-0.013224526740368893,0.07619612261120762,-0.05116140213201039,-0.026169831424433583,-0.457486951516363,0.2649551684413959,-0.3890015252771484,-0.2654007378299655,-0.04025983093742489,0.2923666981593656,-0.4155623452035406,0.03225449062935384,-0.17111025145040845,-0.38092813675538056,0.5433247102520409,0.026462790778925015,0.06786789900916007,-0.5009880219390949,-0.008883366766011161,0.1456145894349766,0.4836359627648188,-0.4195115885493052,0.21716992986281194,-0.245008500582346,-0.22045705955106973,0.14169351691391296,0.07186499793973265,-0.06302243668929683,-0.2639658473124867,-0.08968133950844563,0.17991441796915644,-0.09655581313489915,0.2958470418588464,0.1262685146107999,-0.26792409386912575,-0.25143095606228694,0.07503728318140519,0.48443815855927613,0.11314460207684295,0.1405445122729204,-0.21944956945867572,-0.48519299454916803,-0.00832374311266107,-0.38456785996193193,0.5117277150095239,0.17666646199382835,-0.1155880705140751,0.08495240325653355,0.09852526752774482,0.03719970705624776,0.19092821947625477,-0.18485600148516,0.11110848681300158,0.25571790999682037,0.1082767869498823,-0.17465720893555042,0.1133556596848715,-0.10548454276153031,0.18088369377532126,0.10030477709567381,0.06397901097718225],[0.15903238151360286,-0.38056517870481815,-0.1285915475119488,0.11808597909382175,0.2137395836721886,-0.03925607223007389,-0.14376750210501257,-0.09037761768669293,0.27343742346624755,0.247361453325199,0.2440229209664639,0.05927201568966809,0.21691877199562684,-0.1578572241748806,0.16107150677698062,-0.5214422841894027,-0.09028491264322037,-0.1261566595616,0.07173428614290449,0.2316865575688238,0.24366091285584163,-0.11456629564796053,-0.04777246892576047,0.2563117499791739,0.27808955402808516,0.133533567445835,0.1368117242663873,0.0453422207350805,0.07638138896615673,0.26010856583973124,0.38417447899423296,-0.19343566509297186,0.137720987228976,0.39432430428273946,0.13112355481410884,0.457166289284387,0.48777220326090553,0.13080602548202455,-0.18759854137708581,0.0926865126511679,0.05303689189267161,-0.14749147600070325,-0.16620767581435333,-0.0253572000878137,0.073734753117732,0.13613225612574853,-0.043188295589973634,0.05503901134844578,-0.24868575954511857,0.10486965351716185,0.19389852051850986,0.09944340020399434,0.05632775377798045,0.03130285972216224,0.17731271807693158,0.08240010097699012,-0.33742202936159954,0.240783074346586,0.06040222565221895,-0.012553272630388457,0.37099210026642976,-0.6289252410606624,0.35131906655970735,0.11696655758632105,-0.13473073874337038,-0.3937544615923849,0.006275546586011898,-0.1756075778451593,0.3688545180539717,-0.16920114143746479,-0.4187849640620403,0.15780097212380342,-0.06118911422899306,-0.22358967597668047,0.20727117744504966,-0.0838259570413663,-0.1073712208894115,-0.3902184381306269,-0.08770298033822244,-0.38138534576621574],[0.2412305352848584,-0.1604463175269296,-0.43429327474395696,0.14112490460846344,0.034237111647814296,-0.08162888753357725,-0.0024528379961646076,-0.03293599881586067,-0.6737769579806803,-0.2568966514271636,-0.15720614385470075,-0.07997707252376476,-0.24207565640909703,0.08111221954767123,0.2413139549270552,0.21344013031458448,0.21589899359388925,0.4504513048942793,0.2855010388217417,-0.37567837997589687,0.03516747572980697,0.40186392057899023,0.25804102044758315,0.1263788972243176,-0.3142712566607036,-0.161209713069552,0.004587450187074475,-0.0420087597069168,-0.04432012963100792,-0.08219897704652242,0.07239979634992147,0.33041221306335733,-0.09457700098539903,-0.2418937158861664,-0.04466762921768863,-0.2969156348714134,-0.2502535221513935,0.04346064385536752,0.5846557468274822,-0.23354007170807678,-0.06349392860295944,-0.05504764351220072,-0.13103848954118252,-0.0532858384680154,0.03382299937054222,-0.05232519048363492,-0.15569428118061604,0.02871525629800397,0.18047971443196315,-0.20205501013666485,-0.018851654675001835,0.3886222705638724,-0.048681356217054786,0.11384747347946565,-0.09530021025959948,-0.26632048452536994,-0.22109074523654884,0.2540609597646042,0.33452523225597086,0.3468159809633585,0.24855060804748555,-0.4265111866623683,-0.13787893483060562,-0.20379674377097345,-0.21671075281765603,0.15665180224393238,0.07715790834880418,0.10626096459717953,-0.11346767629282904,0.15722691621097212,0.0055167709856768984,0.2512561686446944,-0.12825387180716843,0.10820020562130736,0.027962981841703833,0.10845289729714683,-0.08691970518186783,-0.41122903837975666,0.35583530191563434,-0.11238736746815776],[-0.2439994301228189,-0.055743859918630505,0.2582646908845405,0.053447737529939164,-0.03508321027029133,-0.4033025599959138,-0.4357864691660931,-0.062434349028131934,-0.6594666153360914,-0.14434172136030302,-0.011580274337384682,-0.13612088757848675,0.17028448668046126,0.0368653044842042,-0.04155101443397151,-0.11800247813668482,-0.24138111601937606,0.24270787991470233,-0.10319483953915118,0.254649511803179,-0.21398573487087258,-0.2577842366623122,-0.09704349739106964,0.0575256214409389,0.2923228660836673,-0.17086568406509114,-0.10387289678884519,0.016153012405736526,-0.016573891676725534,0.3237187973246478,-0.20164132902159765,0.03259150571834332,0.13562633695754445,-0.3245441436310668,-0.020589581793094943,0.5157025660193597,-0.22476949855460254,-0.10763434165504569,0.04897284102287135,-0.23843303937714497,0.3038220680524695,0.0845929941363889,0.03054510443027472,-0.004347456331721131,-0.049466654793070775,-0.3762099943260112,0.06109098514362844,0.03190163873796589,0.3884300515907661,0.2824400325005103,-0.11105345650650697,0.09667121388411423,-0.03213062414915743,0.20272689425929744,-0.1272311132035314,0.4090316860644613,0.0750449888721917,0.1608897672488773,-0.12726080214986984,-0.07068179336820823,0.03995459582343411,0.08586253999249026,0.2100987097856232,-0.20308719000047,0.05454123015655997,0.8079181469615515,0.08691856474675358,-0.4131432064049119,0.2658623240008167,0.06498884211087147,-0.1330180094085412,0.29434047489945503,-0.024252407231916396,0.24106648014677678,0.15952349517557715,0.31153236179925176,0.23101050228619105,0.17240416259713245,0.03229541880890838,-0.35458340277935047]]]"),biases=[[[-.0013612984260585896],[.07873097885225018],[-.0817667484118875],[.10108886732439482],[.03349117397571181],[-.0047303861112154505],[.007073268187207574],[.014220736336395675],[.07644909804498624],[.05336402605302758],[.11453691021995151],[.10918936320425181],[-.006330690195081956],[.05944962657673923],[.08411711558073873],[-.009371825038687616],[-.015904566922119376],[-.009926117270730835],[.03390776200998419],[.06884654565736943],[-.026406375876776415],[-.0029770063448930845],[.0339103185532793],[-.00956014991963626],[-.01728438465701808],[.012671048453445955],[.12549129467912498],[-.04201221212801312],[.02153913989194694],[.07033977114879335],[-.005121503154881663],[.008257825462120503],[.12280491716354748],[-.026069635258137033],[.004658566476583401],[-.006810900687023279],[.07870047989313879],[.046203623875108825],[.0032903907494268767],[.012549691876999737],[-.005101132794214093],[.03849336743837374],[.023229010558372003],[.056680662353953394],[-.0005790329587983839],[-.018248757189494258],[.03127165680375344],[.038784939889794263],[.058756501991410325],[-.006330467056007701],[.0009517378905827625],[.0043415041058704],[.035635071042123524],[.06401118434520303],[-.0656320101575962],[.012936224822858293],[-.011659216014762466],[.006155017197619227],[.011883650411104863],[.030482405057356523],[-.00385121552726689],[.041253199941408636],[.0038666558338507837],[.05224196958028957],[-.015860750364324598],[.004683213425138017],[.1119828040549784],[.015727895318238504],[-.008766719988840842],[.060585792838015295],[-.028475876883149728],[.061011261485932285],[.08442879192738384],[.04905556644270607],[.03313941803797994],[.004566739121306437],[-.04546908204949886],[-.04019176143013846],[.004448971243464824],[.017842989857714087]],[[.00306386910541141],[.014366829142843865],[.08001090525917479],[.0697042637093559],[.07693974598808893],[-.04042742482919591],[.025805579596597922],[-.0007078955689681193],[.0837440369048833],[.05190321890249916],[-.009945096022952992],[.0038515103008433397],[.03722270416026595],[.04596167394381094],[.0010616068108670574],[.02115350349055982],[.014419400838864832],[-.007024877673069692],[.015344990451932614],[-.025405410926726994],[-.00033020985313304954],[.018129059069873922],[-.012392981878868165],[.08372264617873564],[.02678925955109333],[.006178642889066141],[.00020179287901119454],[.056771565369169524],[.00034658278343607535],[.06576969056971989],[.00018795002316146102],[-.054620665259188884],[.03897442619475266],[.059311504374548234],[.029692766079390715],[.03347175904111687],[.01724346787658162],[-.009420252251529237],[.014482635048489435],[.035831362125446097],[.09082580188478817],[-.00039575249026247203],[.043488607764359866],[.0018332666312057956],[.0006743289576082374],[.03559063899464835],[-.0009450104410757348],[.009777707516091753],[.033969762734156375],[.03602003741709525],[.057784621947393824],[-.0031667991443026147],[.0685792846062675],[-.0029468790918629954],[.0002827265232904922],[.012228864147032018],[.0003958051523118128],[.0639794828761064],[-.021450000342092657],[-.044041637401534925],[-.02999988038603115],[.008744267448691634],[.04088741961516009],[.022813511122397333],[-.003150544283194972],[-.053576367706799195],[-.0009907547706845066],[.022542540304299637],[.04193925431744268],[-.004487643042411521],[-.0021324926467820695],[.0028500760585335664],[.07043876919233093],[.0413134306957672],[.01818350919871897],[.03597710929851349],[.00022902105481285569],[.024616963050862983],[.038497363741353555],[.021502318579022843]],[[-.029421122920891753],[.07619908362867836],[-.022439223035356358],[-.057779758222079806],[.01773755411366402],[.10021931309761146],[.01892943521916064],[.05274676318838461],[-.10575766153693886],[-.0504343835322337]]],network={sizes,weights,biases};function _extends(){return _extends=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_extends.apply(null,arguments)}var DEFAULT_CONFIG={relTol:1e-12,absTol:1e-15,matrix:"Matrix",number:"number",numberFallback:"number",precision:64,predictable:!1,randomSeed:null};function getSafeProperty(e,t){if(isSafeProperty(e,t))return e[t];throw typeof e[t]=="function"&&isSafeMethod(e,t)?new Error('Cannot access method "'+t+'" as a property'):new Error('No access to property "'+t+'"')}function setSafeProperty(e,t,n){if(isSafeProperty(e,t))return e[t]=n,n;throw new Error('No access to property "'+t+'"')}function isSafeProperty(e,t){return!isPlainObject(e)&&!Array.isArray(e)?!1:hasOwnProperty(safeNativeProperties,t)?!0:!(t in Object.prototype||t in Function.prototype)}function isSafeMethod(e,t){return e==null||typeof e[t]!="function"||hasOwnProperty(e,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(e)?!1:hasOwnProperty(safeNativeMethods,t)?!0:!(t in Object.prototype||t in Function.prototype)}function isPlainObject(e){return typeof e=="object"&&e&&e.constructor===Object}var safeNativeProperties={length:!0,name:!0},safeNativeMethods={toString:!0,valueOf:!0,toLocaleString:!0};class ObjectWrappingMap{constructor(t){this.wrappedObject=t,this[Symbol.iterator]=this.entries}keys(){return Object.keys(this.wrappedObject).filter(t=>this.has(t)).values()}get(t){return getSafeProperty(this.wrappedObject,t)}set(t,n){return setSafeProperty(this.wrappedObject,t,n),this}has(t){return isSafeProperty(this.wrappedObject,t)&&t in this.wrappedObject}entries(){return mapIterator(this.keys(),t=>[t,this.get(t)])}forEach(t){for(var n of this.keys())t(this.get(n),n,this)}delete(t){isSafeProperty(this.wrappedObject,t)&&delete this.wrappedObject[t]}clear(){for(var t of this.keys())this.delete(t)}get size(){return Object.keys(this.wrappedObject).length}}function mapIterator(e,t){return{next:()=>{var n=e.next();return n.done?n:{value:t(n.value),done:!1}}}}function isNumber$1(e){return typeof e=="number"}function isBigNumber(e){return!e||typeof e!="object"||typeof e.constructor!="function"?!1:e.isBigNumber===!0&&typeof e.constructor.prototype=="object"&&e.constructor.prototype.isBigNumber===!0||typeof e.constructor.isDecimal=="function"&&e.constructor.isDecimal(e)===!0}function isBigInt(e){return typeof e=="bigint"}function isComplex(e){return e&&typeof e=="object"&&Object.getPrototypeOf(e).isComplex===!0||!1}function isFraction(e){return e&&typeof e=="object"&&Object.getPrototypeOf(e).isFraction===!0||!1}function isUnit(e){return e&&e.constructor.prototype.isUnit===!0||!1}function isString(e){return typeof e=="string"}var isArray$2=Array.isArray;function isMatrix(e){return e&&e.constructor.prototype.isMatrix===!0||!1}function isCollection(e){return Array.isArray(e)||isMatrix(e)}function isDenseMatrix(e){return e&&e.isDenseMatrix&&e.constructor.prototype.isMatrix===!0||!1}function isSparseMatrix(e){return e&&e.isSparseMatrix&&e.constructor.prototype.isMatrix===!0||!1}function isRange(e){return e&&e.constructor.prototype.isRange===!0||!1}function isIndex(e){return e&&e.constructor.prototype.isIndex===!0||!1}function isBoolean(e){return typeof e=="boolean"}function isResultSet(e){return e&&e.constructor.prototype.isResultSet===!0||!1}function isHelp(e){return e&&e.constructor.prototype.isHelp===!0||!1}function isFunction$1(e){return typeof e=="function"}function isDate(e){return e instanceof Date}function isRegExp(e){return e instanceof RegExp}function isObject$1(e){return!!(e&&typeof e=="object"&&e.constructor===Object&&!isComplex(e)&&!isFraction(e))}function isMap(e){return e?e instanceof Map||e instanceof ObjectWrappingMap||typeof e.set=="function"&&typeof e.get=="function"&&typeof e.keys=="function"&&typeof e.has=="function":!1}function isNull(e){return e===null}function isUndefined(e){return e===void 0}function isAccessorNode(e){return e&&e.isAccessorNode===!0&&e.constructor.prototype.isNode===!0||!1}function isArrayNode(e){return e&&e.isArrayNode===!0&&e.constructor.prototype.isNode===!0||!1}function isAssignmentNode(e){return e&&e.isAssignmentNode===!0&&e.constructor.prototype.isNode===!0||!1}function isBlockNode(e){return e&&e.isBlockNode===!0&&e.constructor.prototype.isNode===!0||!1}function isConditionalNode(e){return e&&e.isConditionalNode===!0&&e.constructor.prototype.isNode===!0||!1}function isConstantNode(e){return e&&e.isConstantNode===!0&&e.constructor.prototype.isNode===!0||!1}function isFunctionAssignmentNode(e){return e&&e.isFunctionAssignmentNode===!0&&e.constructor.prototype.isNode===!0||!1}function isFunctionNode(e){return e&&e.isFunctionNode===!0&&e.constructor.prototype.isNode===!0||!1}function isIndexNode(e){return e&&e.isIndexNode===!0&&e.constructor.prototype.isNode===!0||!1}function isNode(e){return e&&e.isNode===!0&&e.constructor.prototype.isNode===!0||!1}function isObjectNode(e){return e&&e.isObjectNode===!0&&e.constructor.prototype.isNode===!0||!1}function isOperatorNode(e){return e&&e.isOperatorNode===!0&&e.constructor.prototype.isNode===!0||!1}function isParenthesisNode(e){return e&&e.isParenthesisNode===!0&&e.constructor.prototype.isNode===!0||!1}function isRangeNode(e){return e&&e.isRangeNode===!0&&e.constructor.prototype.isNode===!0||!1}function isRelationalNode(e){return e&&e.isRelationalNode===!0&&e.constructor.prototype.isNode===!0||!1}function isSymbolNode(e){return e&&e.isSymbolNode===!0&&e.constructor.prototype.isNode===!0||!1}function isChain(e){return e&&e.constructor.prototype.isChain===!0||!1}function typeOf(e){var t=typeof e;return t==="object"?e===null?"null":isBigNumber(e)?"BigNumber":e.constructor&&e.constructor.name?e.constructor.name:"Object":t}function clone$4(e){var t=typeof e;if(t==="number"||t==="bigint"||t==="string"||t==="boolean"||e===null||e===void 0)return e;if(typeof e.clone=="function")return e.clone();if(Array.isArray(e))return e.map(function(n){return clone$4(n)});if(e instanceof Date)return new Date(e.valueOf());if(isBigNumber(e))return e;if(isObject$1(e))return mapObject(e,clone$4);if(t==="function")return e;throw new TypeError("Cannot clone: unknown type of value (value: ".concat(e,")"))}function mapObject(e,t){var n={};for(var r in e)hasOwnProperty(e,r)&&(n[r]=t(e[r]));return n}function extend$3(e,t){for(var n in t)hasOwnProperty(t,n)&&(e[n]=t[n]);return e}function deepStrictEqual(e,t){var n,r,i;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(r=0,i=e.length;r<i;r++)if(!deepStrictEqual(e[r],t[r]))return!1;return!0}else{if(typeof e=="function")return e===t;if(e instanceof Object){if(Array.isArray(t)||!(t instanceof Object))return!1;for(n in e)if(!(n in t)||!deepStrictEqual(e[n],t[n]))return!1;for(n in t)if(!(n in e))return!1;return!0}else return e===t}}function hasOwnProperty(e,t){return e&&Object.hasOwnProperty.call(e,t)}function pickShallow(e,t){for(var n={},r=0;r<t.length;r++){var i=t[r],s=e[i];s!==void 0&&(n[i]=s)}return n}var MATRIX_OPTIONS=["Matrix","Array"],NUMBER_OPTIONS=["number","BigNumber","Fraction"],config$1=function(t){if(t)throw new Error(`The global config is readonly. 
Please create a mathjs instance if you want to change the default configuration. 
Example:

  import { create, all } from 'mathjs';
  const mathjs = create(all);
  mathjs.config({ number: 'BigNumber' });
`);return Object.freeze(DEFAULT_CONFIG)};_extends(config$1,DEFAULT_CONFIG,{MATRIX_OPTIONS,NUMBER_OPTIONS});function ok(){return!0}function notOk(){return!1}function undef(){}const NOT_TYPED_FUNCTION="Argument is not a typed-function.";function create(){function e(H){return typeof H=="object"&&H!==null&&H.constructor===Object}const t=[{name:"number",test:function(H){return typeof H=="number"}},{name:"string",test:function(H){return typeof H=="string"}},{name:"boolean",test:function(H){return typeof H=="boolean"}},{name:"Function",test:function(H){return typeof H=="function"}},{name:"Array",test:Array.isArray},{name:"Date",test:function(H){return H instanceof Date}},{name:"RegExp",test:function(H){return H instanceof RegExp}},{name:"Object",test:e},{name:"null",test:function(H){return H===null}},{name:"undefined",test:function(H){return H===void 0}}],n={name:"any",test:ok,isAny:!0};let r,i,s=0,o={createCount:0};function l(H){const t0=r.get(H);if(t0)return t0;let f0='Unknown type "'+H+'"';const c0=H.toLowerCase();let d0;for(d0 of i)if(d0.toLowerCase()===c0){f0+='. Did you mean "'+d0+'" ?';break}throw new TypeError(f0)}function c(H){let t0=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"any";const f0=t0?l(t0).index:i.length,c0=[];for(let g0=0;g0<H.length;++g0){if(!H[g0]||typeof H[g0].name!="string"||typeof H[g0].test!="function")throw new TypeError("Object with properties {name: string, test: function} expected");const y0=H[g0].name;if(r.has(y0))throw new TypeError('Duplicate type name "'+y0+'"');c0.push(y0),r.set(y0,{name:y0,test:H[g0].test,isAny:H[g0].isAny,index:f0+g0,conversionsTo:[]})}const d0=i.slice(f0);i=i.slice(0,f0).concat(c0).concat(d0);for(let g0=f0+c0.length;g0<i.length;++g0)r.get(i[g0]).index=g0}function f(){r=new Map,i=[],s=0,c([n],!1)}f(),c(t);function h(){let H;for(H of i)r.get(H).conversionsTo=[];s=0}function p(H){const t0=i.filter(f0=>{const c0=r.get(f0);return!c0.isAny&&c0.test(H)});return t0.length?t0:["any"]}function g(H){return H&&typeof H=="function"&&"_typedFunctionData"in H}function x(H,t0,f0){if(!g(H))throw new TypeError(NOT_TYPED_FUNCTION);const c0=f0&&f0.exact,d0=Array.isArray(t0)?t0.join(","):t0,g0=k(d0),y0=E(g0);if(!c0||y0 in H.signatures){const Q0=H._typedFunctionData.signatureMap.get(y0);if(Q0)return Q0}const E0=g0.length;let k0;if(c0){k0=[];let Q0;for(Q0 in H.signatures)k0.push(H._typedFunctionData.signatureMap.get(Q0))}else k0=H._typedFunctionData.signatures;for(let Q0=0;Q0<E0;++Q0){const e1=g0[Q0],p1=[];let D1;for(D1 of k0){const y1=R(D1.params,Q0);if(!(!y1||e1.restParam&&!y1.restParam)){if(!y1.hasAny){const C1=M(y1);if(e1.types.some(R1=>!C1.has(R1.name)))continue}p1.push(D1)}}if(k0=p1,k0.length===0)break}let _0;for(_0 of k0)if(_0.params.length<=E0)return _0;throw new TypeError("Signature not found (signature: "+(H.name||"unnamed")+"("+E(g0,", ")+"))")}function D(H,t0,f0){return x(H,t0,f0).implementation}function y(H,t0){const f0=l(t0);if(f0.test(H))return H;const c0=f0.conversionsTo;if(c0.length===0)throw new Error("There are no conversions to "+t0+" defined.");for(let d0=0;d0<c0.length;d0++)if(l(c0[d0].from).test(H))return c0[d0].convert(H);throw new Error("Cannot convert "+H+" to "+t0)}function E(H){let t0=arguments.length>1&&arguments[1]!==void 0?arguments[1]:",";return H.map(f0=>f0.name).join(t0)}function F(H){const t0=H.indexOf("...")===0,c0=(t0?H.length>3?H.slice(3):"any":H).split("|").map(E0=>l(E0.trim()));let d0=!1,g0=t0?"...":"";return{types:c0.map(function(E0){return d0=E0.isAny||d0,g0+=E0.name+"|",{name:E0.name,typeIndex:E0.index,test:E0.test,isAny:E0.isAny,conversion:null,conversionIndex:-1}}),name:g0.slice(0,-1),hasAny:d0,hasConversion:!1,restParam:t0}}function B(H){const t0=H.types.map(y0=>y0.name),f0=S0(t0);let c0=H.hasAny,d0=H.name;const g0=f0.map(function(y0){const E0=l(y0.from);return c0=E0.isAny||c0,d0+="|"+y0.from,{name:y0.from,typeIndex:E0.index,test:E0.test,isAny:E0.isAny,conversion:y0,conversionIndex:y0.index}});return{types:H.types.concat(g0),name:d0,hasAny:c0,hasConversion:g0.length>0,restParam:H.restParam}}function M(H){return H.typeSet||(H.typeSet=new Set,H.types.forEach(t0=>H.typeSet.add(t0.name))),H.typeSet}function k(H){const t0=[];if(typeof H!="string")throw new TypeError("Signatures must be strings");const f0=H.trim();if(f0==="")return t0;const c0=f0.split(",");for(let d0=0;d0<c0.length;++d0){const g0=F(c0[d0].trim());if(g0.restParam&&d0!==c0.length-1)throw new SyntaxError('Unexpected rest parameter "'+c0[d0]+'": only allowed for the last parameter');if(g0.types.length===0)return null;t0.push(g0)}return t0}function T(H){const t0=B0(H);return t0?t0.restParam:!1}function N(H){if(!H||H.types.length===0)return ok;if(H.types.length===1)return l(H.types[0].name).test;if(H.types.length===2){const t0=l(H.types[0].name).test,f0=l(H.types[1].name).test;return function(d0){return t0(d0)||f0(d0)}}else{const t0=H.types.map(function(f0){return l(f0.name).test});return function(c0){for(let d0=0;d0<t0.length;d0++)if(t0[d0](c0))return!0;return!1}}}function $(H){let t0,f0,c0;if(T(H)){t0=L0(H).map(N);const d0=t0.length,g0=N(B0(H)),y0=function(E0){for(let k0=d0;k0<E0.length;k0++)if(!g0(E0[k0]))return!1;return!0};return function(k0){for(let _0=0;_0<t0.length;_0++)if(!t0[_0](k0[_0]))return!1;return y0(k0)&&k0.length>=d0+1}}else return H.length===0?function(g0){return g0.length===0}:H.length===1?(f0=N(H[0]),function(g0){return f0(g0[0])&&g0.length===1}):H.length===2?(f0=N(H[0]),c0=N(H[1]),function(g0){return f0(g0[0])&&c0(g0[1])&&g0.length===2}):(t0=H.map(N),function(g0){for(let y0=0;y0<t0.length;y0++)if(!t0[y0](g0[y0]))return!1;return g0.length===t0.length})}function R(H,t0){return t0<H.length?H[t0]:T(H)?B0(H):null}function O(H,t0){const f0=R(H,t0);return f0?M(f0):new Set}function L(H){return H.conversion===null||H.conversion===void 0}function z(H,t0){const f0=new Set;return H.forEach(c0=>{const d0=O(c0.params,t0);let g0;for(g0 of d0)f0.add(g0)}),f0.has("any")?["any"]:Array.from(f0)}function X(H,t0,f0){let c0,d0;const g0=H||"unnamed";let y0=f0,E0;for(E0=0;E0<t0.length;E0++){const e1=[];if(y0.forEach(p1=>{const D1=R(p1.params,E0),y1=N(D1);(E0<p1.params.length||T(p1.params))&&y1(t0[E0])&&e1.push(p1)}),e1.length===0){if(d0=z(y0,E0),d0.length>0){const p1=p(t0[E0]);return c0=new TypeError("Unexpected type of argument in function "+g0+" (expected: "+d0.join(" or ")+", actual: "+p1.join(" | ")+", index: "+E0+")"),c0.data={category:"wrongType",fn:g0,index:E0,actual:p1,expected:d0},c0}}else y0=e1}const k0=y0.map(function(e1){return T(e1.params)?1/0:e1.params.length});if(t0.length<Math.min.apply(null,k0))return d0=z(y0,E0),c0=new TypeError("Too few arguments in function "+g0+" (expected: "+d0.join(" or ")+", index: "+t0.length+")"),c0.data={category:"tooFewArgs",fn:g0,index:t0.length,expected:d0},c0;const _0=Math.max.apply(null,k0);if(t0.length>_0)return c0=new TypeError("Too many arguments in function "+g0+" (expected: "+_0+", actual: "+t0.length+")"),c0.data={category:"tooManyArgs",fn:g0,index:t0.length,expectedLength:_0},c0;const Q0=[];for(let e1=0;e1<t0.length;++e1)Q0.push(p(t0[e1]).join("|"));return c0=new TypeError('Arguments of type "'+Q0.join(", ")+'" do not match any of the defined signatures of function '+g0+"."),c0.data={category:"mismatch",actual:Q0},c0}function o0(H){let t0=i.length+1;for(let f0=0;f0<H.types.length;f0++)L(H.types[f0])&&(t0=Math.min(t0,H.types[f0].typeIndex));return t0}function Z(H){let t0=s+1;for(let f0=0;f0<H.types.length;f0++)L(H.types[f0])||(t0=Math.min(t0,H.types[f0].conversionIndex));return t0}function n0(H,t0){if(H.hasAny){if(!t0.hasAny)return 1}else if(t0.hasAny)return-1;if(H.restParam){if(!t0.restParam)return 1}else if(t0.restParam)return-1;if(H.hasConversion){if(!t0.hasConversion)return 1}else if(t0.hasConversion)return-1;const f0=o0(H)-o0(t0);if(f0<0)return-1;if(f0>0)return 1;const c0=Z(H)-Z(t0);return c0<0?-1:c0>0?1:0}function s0(H,t0){const f0=H.params,c0=t0.params,d0=B0(f0),g0=B0(c0),y0=T(f0),E0=T(c0);if(y0&&d0.hasAny){if(!E0||!g0.hasAny)return 1}else if(E0&&g0.hasAny)return-1;let k0=0,_0=0,Q0;for(Q0 of f0)Q0.hasAny&&++k0,Q0.hasConversion&&++_0;let e1=0,p1=0;for(Q0 of c0)Q0.hasAny&&++e1,Q0.hasConversion&&++p1;if(k0!==e1)return k0-e1;if(y0&&d0.hasConversion){if(!E0||!g0.hasConversion)return 1}else if(E0&&g0.hasConversion)return-1;if(_0!==p1)return _0-p1;if(y0){if(!E0)return 1}else if(E0)return-1;const D1=(f0.length-c0.length)*(y0?-1:1);if(D1!==0)return D1;const y1=[];let C1=0;for(let K1=0;K1<f0.length;++K1){const B1=n0(f0[K1],c0[K1]);y1.push(B1),C1+=B1}if(C1!==0)return C1;let R1;for(R1 of y1)if(R1!==0)return R1;return 0}function S0(H){if(H.length===0)return[];const t0=H.map(l);H.length>1&&t0.sort((d0,g0)=>d0.index-g0.index);let f0=t0[0].conversionsTo;if(H.length===1)return f0;f0=f0.concat([]);const c0=new Set(H);for(let d0=1;d0<t0.length;++d0){let g0;for(g0 of t0[d0].conversionsTo)c0.has(g0.from)||(f0.push(g0),c0.add(g0.from))}return f0}function r0(H,t0){let f0=t0;if(H.some(d0=>d0.hasConversion)){const d0=T(H),g0=H.map(p0);f0=function(){const E0=[],k0=d0?arguments.length-1:arguments.length;for(let _0=0;_0<k0;_0++)E0[_0]=g0[_0](arguments[_0]);return d0&&(E0[k0]=arguments[k0].map(g0[k0])),t0.apply(this,E0)}}let c0=f0;if(T(H)){const d0=H.length-1;c0=function(){return f0.apply(this,H0(arguments,0,d0).concat([H0(arguments,d0)]))}}return c0}function p0(H){let t0,f0,c0,d0;const g0=[],y0=[];switch(H.types.forEach(function(E0){E0.conversion&&(g0.push(l(E0.conversion.from).test),y0.push(E0.conversion.convert))}),y0.length){case 0:return function(k0){return k0};case 1:return t0=g0[0],c0=y0[0],function(k0){return t0(k0)?c0(k0):k0};case 2:return t0=g0[0],f0=g0[1],c0=y0[0],d0=y0[1],function(k0){return t0(k0)?c0(k0):f0(k0)?d0(k0):k0};default:return function(k0){for(let _0=0;_0<y0.length;_0++)if(g0[_0](k0))return y0[_0](k0);return k0}}}function h0(H){function t0(f0,c0,d0){if(c0<f0.length){const g0=f0[c0];let y0=[];if(g0.restParam){const E0=g0.types.filter(L);E0.length<g0.types.length&&y0.push({types:E0,name:"..."+E0.map(k0=>k0.name).join("|"),hasAny:E0.some(k0=>k0.isAny),hasConversion:!1,restParam:!0}),y0.push(g0)}else y0=g0.types.map(function(E0){return{types:[E0],name:E0.name,hasAny:E0.isAny,hasConversion:E0.conversion,restParam:!1}});return c1(y0,function(E0){return t0(f0,c0+1,d0.concat([E0]))})}else return[d0]}return t0(H,0,[])}function G(H,t0){const f0=Math.max(H.length,t0.length);for(let E0=0;E0<f0;E0++){const k0=O(H,E0),_0=O(t0,E0);let Q0=!1,e1;for(e1 of _0)if(k0.has(e1)){Q0=!0;break}if(!Q0)return!1}const c0=H.length,d0=t0.length,g0=T(H),y0=T(t0);return g0?y0?c0===d0:d0>=c0:y0?c0>=d0:c0===d0}function Q(H){return H.map(t0=>r1(t0)?P0(t0.referToSelf.callback):d1(t0)?j0(t0.referTo.references,t0.referTo.callback):t0)}function M0(H,t0,f0){const c0=[];let d0;for(d0 of H){let g0=f0[d0];if(typeof g0!="number")throw new TypeError('No definition for referenced signature "'+d0+'"');if(g0=t0[g0],typeof g0!="function")return!1;c0.push(g0)}return c0}function C0(H,t0,f0){const c0=Q(H),d0=new Array(c0.length).fill(!1);let g0=!0;for(;g0;){g0=!1;let y0=!0;for(let E0=0;E0<c0.length;++E0){if(d0[E0])continue;const k0=c0[E0];if(r1(k0))c0[E0]=k0.referToSelf.callback(f0),c0[E0].referToSelf=k0.referToSelf,d0[E0]=!0,y0=!1;else if(d1(k0)){const _0=M0(k0.referTo.references,c0,t0);_0?(c0[E0]=k0.referTo.callback.apply(this,_0),c0[E0].referTo=k0.referTo,d0[E0]=!0,y0=!1):g0=!0}}if(y0&&g0)throw new SyntaxError("Circular reference detected in resolving typed.referTo")}return c0}function e0(H){const t0=/\bthis(\(|\.signatures\b)/;Object.keys(H).forEach(f0=>{const c0=H[f0];if(t0.test(c0.toString()))throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")})}function F0(H,t0){if(o.createCount++,Object.keys(t0).length===0)throw new SyntaxError("No signatures provided");o.warnAgainstDeprecatedThis&&e0(t0);const f0=[],c0=[],d0={},g0=[];let y0;for(y0 in t0){if(!Object.prototype.hasOwnProperty.call(t0,y0))continue;const R0=k(y0);if(!R0)continue;f0.forEach(function(X0){if(G(X0,R0))throw new TypeError('Conflicting signatures "'+E(X0)+'" and "'+E(R0)+'".')}),f0.push(R0);const _1=c0.length;c0.push(t0[y0]);const a0=R0.map(B);let T0;for(T0 of h0(a0)){const X0=E(T0);g0.push({params:T0,name:X0,fn:_1}),T0.every(U0=>!U0.hasConversion)&&(d0[X0]=_1)}}g0.sort(s0);const E0=C0(c0,d0,i1);let k0;for(k0 in d0)Object.prototype.hasOwnProperty.call(d0,k0)&&(d0[k0]=E0[d0[k0]]);const _0=[],Q0=new Map;for(k0 of g0)Q0.has(k0.name)||(k0.fn=E0[k0.fn],_0.push(k0),Q0.set(k0.name,k0));const e1=_0[0]&&_0[0].params.length<=2&&!T(_0[0].params),p1=_0[1]&&_0[1].params.length<=2&&!T(_0[1].params),D1=_0[2]&&_0[2].params.length<=2&&!T(_0[2].params),y1=_0[3]&&_0[3].params.length<=2&&!T(_0[3].params),C1=_0[4]&&_0[4].params.length<=2&&!T(_0[4].params),R1=_0[5]&&_0[5].params.length<=2&&!T(_0[5].params),K1=e1&&p1&&D1&&y1&&C1&&R1;for(let R0=0;R0<_0.length;++R0)_0[R0].test=$(_0[R0].params);const B1=e1?N(_0[0].params[0]):notOk,q1=p1?N(_0[1].params[0]):notOk,x2=D1?N(_0[2].params[0]):notOk,Z1=y1?N(_0[3].params[0]):notOk,I1=C1?N(_0[4].params[0]):notOk,o2=R1?N(_0[5].params[0]):notOk,A=e1?N(_0[0].params[1]):notOk,v=p1?N(_0[1].params[1]):notOk,w=D1?N(_0[2].params[1]):notOk,m=y1?N(_0[3].params[1]):notOk,b=C1?N(_0[4].params[1]):notOk,S=R1?N(_0[5].params[1]):notOk;for(let R0=0;R0<_0.length;++R0)_0[R0].implementation=r0(_0[R0].params,_0[R0].fn);const q=e1?_0[0].implementation:undef,j=p1?_0[1].implementation:undef,V=D1?_0[2].implementation:undef,Y=y1?_0[3].implementation:undef,u0=C1?_0[4].implementation:undef,W=R1?_0[5].implementation:undef,D0=e1?_0[0].params.length:-1,I0=p1?_0[1].params.length:-1,m0=D1?_0[2].params.length:-1,A0=y1?_0[3].params.length:-1,Y0=C1?_0[4].params.length:-1,J=R1?_0[5].params.length:-1,N0=K1?6:0,W0=_0.length,g1=_0.map(R0=>R0.test),m1=_0.map(R0=>R0.implementation),k1=function(){for(let _1=N0;_1<W0;_1++)if(g1[_1](arguments))return m1[_1].apply(this,arguments);return o.onMismatch(H,arguments,_0)};function i1(R0,_1){return arguments.length===D0&&B1(R0)&&A(_1)?q.apply(this,arguments):arguments.length===I0&&q1(R0)&&v(_1)?j.apply(this,arguments):arguments.length===m0&&x2(R0)&&w(_1)?V.apply(this,arguments):arguments.length===A0&&Z1(R0)&&m(_1)?Y.apply(this,arguments):arguments.length===Y0&&I1(R0)&&b(_1)?u0.apply(this,arguments):arguments.length===J&&o2(R0)&&S(_1)?W.apply(this,arguments):k1.apply(this,arguments)}try{Object.defineProperty(i1,"name",{value:H})}catch{}return i1.signatures=d0,i1._typedFunctionData={signatures:_0,signatureMap:Q0},i1}function O0(H,t0,f0){throw X(H,t0,f0)}function L0(H){return H0(H,0,H.length-1)}function B0(H){return H[H.length-1]}function H0(H,t0,f0){return Array.prototype.slice.call(H,t0,f0)}function a1(H,t0){for(let f0=0;f0<H.length;f0++)if(t0(H[f0]))return H[f0]}function c1(H,t0){return Array.prototype.concat.apply([],H.map(t0))}function G0(){const H=L0(arguments).map(f0=>E(k(f0))),t0=B0(arguments);if(typeof t0!="function")throw new TypeError("Callback function expected as last argument");return j0(H,t0)}function j0(H,t0){return{referTo:{references:H,callback:t0}}}function P0(H){if(typeof H!="function")throw new TypeError("Callback function expected as first argument");return{referToSelf:{callback:H}}}function d1(H){return H&&typeof H.referTo=="object"&&Array.isArray(H.referTo.references)&&typeof H.referTo.callback=="function"}function r1(H){return H&&typeof H.referToSelf=="object"&&typeof H.referToSelf.callback=="function"}function u1(H,t0){if(!H)return t0;if(t0&&t0!==H){const f0=new Error("Function names do not match (expected: "+H+", actual: "+t0+")");throw f0.data={actual:t0,expected:H},f0}return H}function w0(H){let t0;for(const f0 in H)Object.prototype.hasOwnProperty.call(H,f0)&&(g(H[f0])||typeof H[f0].signature=="string")&&(t0=u1(t0,H[f0].name));return t0}function Z0(H,t0){let f0;for(f0 in t0)if(Object.prototype.hasOwnProperty.call(t0,f0)){if(f0 in H&&t0[f0]!==H[f0]){const c0=new Error('Signature "'+f0+'" is defined twice');throw c0.data={signature:f0,sourceFunction:t0[f0],destFunction:H[f0]},c0}H[f0]=t0[f0]}}const K0=o;o=function(H){const t0=typeof H=="string",f0=t0?1:0;let c0=t0?H:"";const d0={};for(let g0=f0;g0<arguments.length;++g0){const y0=arguments[g0];let E0={},k0;if(typeof y0=="function"?(k0=y0.name,typeof y0.signature=="string"?E0[y0.signature]=y0:g(y0)&&(E0=y0.signatures)):e(y0)&&(E0=y0,t0||(k0=w0(y0))),Object.keys(E0).length===0){const _0=new TypeError("Argument to 'typed' at index "+g0+" is not a (typed) function, nor an object with signatures as keys and functions as values.");throw _0.data={index:g0,argument:y0},_0}t0||(c0=u1(c0,k0)),Z0(d0,E0)}return F0(c0||"",d0)},o.create=create,o.createCount=K0.createCount,o.onMismatch=O0,o.throwMismatchError=O0,o.createError=X,o.clear=f,o.clearConversions=h,o.addTypes=c,o._findType=l,o.referTo=G0,o.referToSelf=P0,o.convert=y,o.findSignature=x,o.find=D,o.isTypedFunction=g,o.warnAgainstDeprecatedThis=!0,o.addType=function(H,t0){let f0="any";t0!==!1&&r.has("Object")&&(f0="Object"),o.addTypes([H],f0)};function J0(H){if(!H||typeof H.from!="string"||typeof H.to!="string"||typeof H.convert!="function")throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");if(H.to===H.from)throw new SyntaxError('Illegal to define conversion from "'+H.from+'" to itself.')}return o.addConversion=function(H){let t0=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{override:!1};J0(H);const f0=l(H.to),c0=f0.conversionsTo.find(d0=>d0.from===H.from);if(c0)if(t0&&t0.override)o.removeConversion({from:c0.from,to:H.to,convert:c0.convert});else throw new Error('There is already a conversion from "'+H.from+'" to "'+f0.name+'"');f0.conversionsTo.push({from:H.from,convert:H.convert,index:s++})},o.addConversions=function(H,t0){H.forEach(f0=>o.addConversion(f0,t0))},o.removeConversion=function(H){J0(H);const t0=l(H.to),f0=a1(t0.conversionsTo,d0=>d0.from===H.from);if(!f0)throw new Error("Attempt to remove nonexistent conversion from "+H.from+" to "+H.to);if(f0.convert!==H.convert)throw new Error("Conversion to remove does not match existing conversion");const c0=t0.conversionsTo.indexOf(f0);t0.conversionsTo.splice(c0,1)},o.resolve=function(H,t0){if(!g(H))throw new TypeError(NOT_TYPED_FUNCTION);const f0=H._typedFunctionData.signatures;for(let c0=0;c0<f0.length;++c0)if(f0[c0].test(t0))return f0[c0];return null},o}const typedFunction=create();function factory(e,t,n,r){function i(s){var o=pickShallow(s,t.map(stripOptionalNotation));return assertDependencies(e,t,s),n(o)}return i.isFactory=!0,i.fn=e,i.dependencies=t.slice().sort(),r&&(i.meta=r),i}function assertDependencies(e,t,n){var r=t.filter(s=>!isOptionalDependency(s)).every(s=>n[s]!==void 0);if(!r){var i=t.filter(s=>n[s]===void 0);throw new Error('Cannot create function "'.concat(e,'", ')+"some dependencies are missing: ".concat(i.map(s=>'"'.concat(s,'"')).join(", "),"."))}}function isOptionalDependency(e){return e&&e[0]==="?"}function stripOptionalNotation(e){return e&&e[0]==="?"?e.slice(1):e}function isInteger$3(e){return typeof e=="boolean"?!0:isFinite(e)?e===Math.round(e):!1}function isIntegerStr(e){return/^-?\d+$/.test(e)}function safeNumberType(e,t){return t.number==="bigint"&&!isIntegerStr(e)?t.numberFallback:t.number}function formatNumberToBase(e,t,n){var r={2:"0b",8:"0o",16:"0x"},i=r[t],s="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!isInteger$3(n))throw new Error("size must be an integer");if(e>2**(n-1)-1||e<-(2**(n-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!isInteger$3(e))throw new Error("Value must be an integer");e<0&&(e=e+2**n),s="i".concat(n)}var o="";return e<0&&(e=-e,o="-"),"".concat(o).concat(i).concat(e.toString(t)).concat(s)}function format$2(e,t){if(typeof t=="function")return t(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var{notation:n,precision:r,wordSize:i}=normalizeFormatOptions(t);switch(n){case"fixed":return toFixed$1(e,r);case"exponential":return toExponential$1(e,r);case"engineering":return toEngineering$1(e,r);case"bin":return formatNumberToBase(e,2,i);case"oct":return formatNumberToBase(e,8,i);case"hex":return formatNumberToBase(e,16,i);case"auto":return toPrecision(e,r,t).replace(/((\.\d*?)(0+))($|e)/,function(){var s=arguments[2],o=arguments[4];return s!=="."?s+o:o});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function normalizeFormatOptions(e){var t="auto",n,r;if(e!==void 0)if(isNumber$1(e))n=e;else if(isBigNumber(e))n=e.toNumber();else if(isObject$1(e))e.precision!==void 0&&(n=_toNumberOrThrow(e.precision,()=>{throw new Error('Option "precision" must be a number or BigNumber')})),e.wordSize!==void 0&&(r=_toNumberOrThrow(e.wordSize,()=>{throw new Error('Option "wordSize" must be a number or BigNumber')})),e.notation&&(t=e.notation);else throw new Error("Unsupported type of options, number, BigNumber, or object expected");return{notation:t,precision:n,wordSize:r}}function splitNumber(e){var t=String(e).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+e);var n=t[1],r=t[2],i=parseFloat(t[4]||"0"),s=r.indexOf(".");i+=s!==-1?s-1:r.length-1;var o=r.replace(".","").replace(/^0*/,function(l){return i-=l.length,""}).replace(/0*$/,"").split("").map(function(l){return parseInt(l)});return o.length===0&&(o.push(0),i++),{sign:n,coefficients:o,exponent:i}}function toEngineering$1(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=splitNumber(e),r=roundDigits(n,t),i=r.exponent,s=r.coefficients,o=i%3===0?i:i<0?i-3-i%3:i-i%3;if(isNumber$1(t))for(;t>s.length||i-o+1>s.length;)s.push(0);else for(var l=Math.abs(i-o)-(s.length-1),c=0;c<l;c++)s.push(0);for(var f=Math.abs(i-o),h=1;f>0;)h++,f--;var p=s.slice(h).join(""),g=isNumber$1(t)&&p.length||p.match(/[1-9]/)?"."+p:"",x=s.slice(0,h).join("")+g+"e"+(i>=0?"+":"")+o.toString();return r.sign+x}function toFixed$1(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=splitNumber(e),r=typeof t=="number"?roundDigits(n,n.exponent+1+t):n,i=r.coefficients,s=r.exponent+1,o=s+(t||0);return i.length<o&&(i=i.concat(zeros(o-i.length))),s<0&&(i=zeros(-s+1).concat(i),s=1),s<i.length&&i.splice(s,0,s===0?"0.":"."),r.sign+i.join("")}function toExponential$1(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=splitNumber(e),r=t?roundDigits(n,t):n,i=r.coefficients,s=r.exponent;i.length<t&&(i=i.concat(zeros(t-i.length)));var o=i.shift();return r.sign+o+(i.length>0?"."+i.join(""):"")+"e"+(s>=0?"+":"")+s}function toPrecision(e,t,n){if(isNaN(e)||!isFinite(e))return String(e);var r=_toNumberOrDefault$1(n==null?void 0:n.lowerExp,-3),i=_toNumberOrDefault$1(n==null?void 0:n.upperExp,5),s=splitNumber(e),o=t?roundDigits(s,t):s;if(o.exponent<r||o.exponent>=i)return toExponential$1(e,t);var l=o.coefficients,c=o.exponent;l.length<t&&(l=l.concat(zeros(t-l.length))),l=l.concat(zeros(c-l.length+1+(l.length<t?t-l.length:0))),l=zeros(-c).concat(l);var f=c>0?c:0;return f<l.length-1&&l.splice(f+1,0,"."),o.sign+l.join("")}function roundDigits(e,t){for(var n={sign:e.sign,coefficients:e.coefficients,exponent:e.exponent},r=n.coefficients;t<=0;)r.unshift(0),n.exponent++,t++;if(r.length>t){var i=r.splice(t,r.length-t);if(i[0]>=5){var s=t-1;for(r[s]++;r[s]===10;)r.pop(),s===0&&(r.unshift(0),n.exponent++,s++),s--,r[s]++}}return n}function zeros(e){for(var t=[],n=0;n<e;n++)t.push(0);return t}function digits(e){return e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length}function nearlyEqual$1(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1e-8,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0;if(n<=0)throw new Error("Relative tolerance must be greater than 0");if(r<0)throw new Error("Absolute tolerance must be at least 0");return isNaN(e)||isNaN(t)?!1:!isFinite(e)||!isFinite(t)?e===t:e===t?!0:Math.abs(e-t)<=Math.max(n*Math.max(Math.abs(e),Math.abs(t)),r)}function _toNumberOrThrow(e,t){if(isNumber$1(e))return e;if(isBigNumber(e))return e.toNumber();t()}function _toNumberOrDefault$1(e,t){return isNumber$1(e)?e:isBigNumber(e)?e.toNumber():t}var _createTyped2=function(){return _createTyped2=typedFunction.create,typedFunction},dependencies$J=["?BigNumber","?Complex","?DenseMatrix","?Fraction"],createTyped=factory("typed",dependencies$J,function(t){var{BigNumber:n,Complex:r,DenseMatrix:i,Fraction:s}=t,o=_createTyped2();return o.clear(),o.addTypes([{name:"number",test:isNumber$1},{name:"Complex",test:isComplex},{name:"BigNumber",test:isBigNumber},{name:"bigint",test:isBigInt},{name:"Fraction",test:isFraction},{name:"Unit",test:isUnit},{name:"identifier",test:l=>/^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDD4A-\uDD65\uDD6F-\uDD85\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDDD0-\uDDED\uDDF0\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDD4A-\uDD65\uDD6F-\uDD85\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDDD0-\uDDED\uDDF0\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])*$/.test(l)},{name:"string",test:isString},{name:"Chain",test:isChain},{name:"Array",test:isArray$2},{name:"Matrix",test:isMatrix},{name:"DenseMatrix",test:isDenseMatrix},{name:"SparseMatrix",test:isSparseMatrix},{name:"Range",test:isRange},{name:"Index",test:isIndex},{name:"boolean",test:isBoolean},{name:"ResultSet",test:isResultSet},{name:"Help",test:isHelp},{name:"function",test:isFunction$1},{name:"Date",test:isDate},{name:"RegExp",test:isRegExp},{name:"null",test:isNull},{name:"undefined",test:isUndefined},{name:"AccessorNode",test:isAccessorNode},{name:"ArrayNode",test:isArrayNode},{name:"AssignmentNode",test:isAssignmentNode},{name:"BlockNode",test:isBlockNode},{name:"ConditionalNode",test:isConditionalNode},{name:"ConstantNode",test:isConstantNode},{name:"FunctionNode",test:isFunctionNode},{name:"FunctionAssignmentNode",test:isFunctionAssignmentNode},{name:"IndexNode",test:isIndexNode},{name:"Node",test:isNode},{name:"ObjectNode",test:isObjectNode},{name:"OperatorNode",test:isOperatorNode},{name:"ParenthesisNode",test:isParenthesisNode},{name:"RangeNode",test:isRangeNode},{name:"RelationalNode",test:isRelationalNode},{name:"SymbolNode",test:isSymbolNode},{name:"Map",test:isMap},{name:"Object",test:isObject$1}]),o.addConversions([{from:"number",to:"BigNumber",convert:function(c){if(n||throwNoBignumber(c),digits(c)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+c+"). Use function bignumber(x) to convert to BigNumber.");return new n(c)}},{from:"number",to:"Complex",convert:function(c){return r||throwNoComplex(c),new r(c,0)}},{from:"BigNumber",to:"Complex",convert:function(c){return r||throwNoComplex(c),new r(c.toNumber(),0)}},{from:"bigint",to:"number",convert:function(c){if(c>Number.MAX_SAFE_INTEGER)throw new TypeError("Cannot implicitly convert bigint to number: value exceeds the max safe integer value (value: "+c+")");return Number(c)}},{from:"bigint",to:"BigNumber",convert:function(c){return n||throwNoBignumber(c),new n(c.toString())}},{from:"bigint",to:"Fraction",convert:function(c){return s||throwNoFraction(c),new s(c)}},{from:"Fraction",to:"BigNumber",convert:function(c){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(c){return r||throwNoComplex(c),new r(c.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(c){s||throwNoFraction(c);var f=new s(c);if(f.valueOf()!==c)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+c+"). Use function fraction(x) to convert to Fraction.");return f}},{from:"string",to:"number",convert:function(c){var f=Number(c);if(isNaN(f))throw new Error('Cannot convert "'+c+'" to a number');return f}},{from:"string",to:"BigNumber",convert:function(c){n||throwNoBignumber(c);try{return new n(c)}catch{throw new Error('Cannot convert "'+c+'" to BigNumber')}}},{from:"string",to:"bigint",convert:function(c){try{return BigInt(c)}catch{throw new Error('Cannot convert "'+c+'" to BigInt')}}},{from:"string",to:"Fraction",convert:function(c){s||throwNoFraction(c);try{return new s(c)}catch{throw new Error('Cannot convert "'+c+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(c){r||throwNoComplex(c);try{return new r(c)}catch{throw new Error('Cannot convert "'+c+'" to Complex')}}},{from:"boolean",to:"number",convert:function(c){return+c}},{from:"boolean",to:"BigNumber",convert:function(c){return n||throwNoBignumber(c),new n(+c)}},{from:"boolean",to:"bigint",convert:function(c){return BigInt(+c)}},{from:"boolean",to:"Fraction",convert:function(c){return s||throwNoFraction(c),new s(+c)}},{from:"boolean",to:"string",convert:function(c){return String(c)}},{from:"Array",to:"Matrix",convert:function(c){return i||throwNoMatrix(),new i(c)}},{from:"Matrix",to:"Array",convert:function(c){return c.valueOf()}}]),o.onMismatch=(l,c,f)=>{var h=o.createError(l,c,f);if(["wrongType","mismatch"].includes(h.data.category)&&c.length===1&&isCollection(c[0])&&f.some(g=>!g.params.includes(","))){var p=new TypeError("Function '".concat(l,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(l,")'."));throw p.data=h.data,p}throw h},o.onMismatch=(l,c,f)=>{var h=o.createError(l,c,f);if(["wrongType","mismatch"].includes(h.data.category)&&c.length===1&&isCollection(c[0])&&f.some(g=>!g.params.includes(","))){var p=new TypeError("Function '".concat(l,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(l,")'."));throw p.data=h.data,p}throw h},o});function throwNoBignumber(e){throw new Error("Cannot convert value ".concat(e," into a BigNumber: no class 'BigNumber' provided"))}function throwNoComplex(e){throw new Error("Cannot convert value ".concat(e," into a Complex number: no class 'Complex' provided"))}function throwNoMatrix(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}function throwNoFraction(e){throw new Error("Cannot convert value ".concat(e," into a Fraction, no class 'Fraction' provided."))}/*!
 *  decimal.js v10.4.3
 *  An arbitrary-precision Decimal type for JavaScript.
 *  https://github.com/MikeMcl/decimal.js
 *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
 *  MIT Licence
 */var EXP_LIMIT=9e15,MAX_DIGITS=1e9,NUMERALS="0123456789abcdef",LN10="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",PI$1="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",DEFAULTS={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-9e15,maxE:EXP_LIMIT,crypto:!1},inexact,quadrant,external=!0,decimalError="[DecimalError] ",invalidArgument=decimalError+"Invalid argument: ",precisionLimitExceeded=decimalError+"Precision limit exceeded",cryptoUnavailable=decimalError+"crypto unavailable",tag="[object Decimal]",mathfloor=Math.floor,mathpow=Math.pow,isBinary=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,isHex=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,isOctal=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,isDecimal=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,BASE=1e7,LOG_BASE=7,MAX_SAFE_INTEGER=9007199254740991,LN10_PRECISION=LN10.length-1,PI_PRECISION=PI$1.length-1,P$2={toStringTag:tag};P$2.absoluteValue=P$2.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),finalise(e)};P$2.ceil=function(){return finalise(new this.constructor(this),this.e+1,2)};P$2.clampedTo=P$2.clamp=function(e,t){var n,r=this,i=r.constructor;if(e=new i(e),t=new i(t),!e.s||!t.s)return new i(NaN);if(e.gt(t))throw Error(invalidArgument+t);return n=r.cmp(e),n<0?e:r.cmp(t)>0?t:new i(r)};P$2.comparedTo=P$2.cmp=function(e){var t,n,r,i,s=this,o=s.d,l=(e=new s.constructor(e)).d,c=s.s,f=e.s;if(!o||!l)return!c||!f?NaN:c!==f?c:o===l?0:!o^c<0?1:-1;if(!o[0]||!l[0])return o[0]?c:l[0]?-f:0;if(c!==f)return c;if(s.e!==e.e)return s.e>e.e^c<0?1:-1;for(r=o.length,i=l.length,t=0,n=r<i?r:i;t<n;++t)if(o[t]!==l[t])return o[t]>l[t]^c<0?1:-1;return r===i?0:r>i^c<0?1:-1};P$2.cosine=P$2.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+LOG_BASE,r.rounding=1,n=cosine(r,toLessThanHalfPi(r,n)),r.precision=e,r.rounding=t,finalise(quadrant==2||quadrant==3?n.neg():n,e,t,!0)):new r(1):new r(NaN)};P$2.cubeRoot=P$2.cbrt=function(){var e,t,n,r,i,s,o,l,c,f,h=this,p=h.constructor;if(!h.isFinite()||h.isZero())return new p(h);for(external=!1,s=h.s*mathpow(h.s*h,1/3),!s||Math.abs(s)==1/0?(n=digitsToString(h.d),e=h.e,(s=(e-n.length+1)%3)&&(n+=s==1||s==-2?"0":"00"),s=mathpow(n,1/3),e=mathfloor((e+1)/3)-(e%3==(e<0?-1:2)),s==1/0?n="5e"+e:(n=s.toExponential(),n=n.slice(0,n.indexOf("e")+1)+e),r=new p(n),r.s=h.s):r=new p(s.toString()),o=(e=p.precision)+3;;)if(l=r,c=l.times(l).times(l),f=c.plus(h),r=divide$1(f.plus(h).times(l),f.plus(c),o+2,1),digitsToString(l.d).slice(0,o)===(n=digitsToString(r.d)).slice(0,o))if(n=n.slice(o-3,o+1),n=="9999"||!i&&n=="4999"){if(!i&&(finalise(l,e+1,0),l.times(l).times(l).eq(h))){r=l;break}o+=4,i=1}else{(!+n||!+n.slice(1)&&n.charAt(0)=="5")&&(finalise(r,e+1,1),t=!r.times(r).times(r).eq(h));break}return external=!0,finalise(r,e,p.rounding,t)};P$2.decimalPlaces=P$2.dp=function(){var e,t=this.d,n=NaN;if(t){if(e=t.length-1,n=(e-mathfloor(this.e/LOG_BASE))*LOG_BASE,e=t[e],e)for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n};P$2.dividedBy=P$2.div=function(e){return divide$1(this,new this.constructor(e))};P$2.dividedToIntegerBy=P$2.divToInt=function(e){var t=this,n=t.constructor;return finalise(divide$1(t,new n(e),0,1,1),n.precision,n.rounding)};P$2.equals=P$2.eq=function(e){return this.cmp(e)===0};P$2.floor=function(){return finalise(new this.constructor(this),this.e+1,3)};P$2.greaterThan=P$2.gt=function(e){return this.cmp(e)>0};P$2.greaterThanOrEqualTo=P$2.gte=function(e){var t=this.cmp(e);return t==1||t===0};P$2.hyperbolicCosine=P$2.cosh=function(){var e,t,n,r,i,s=this,o=s.constructor,l=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return l;n=o.precision,r=o.rounding,o.precision=n+Math.max(s.e,s.sd())+4,o.rounding=1,i=s.d.length,i<32?(e=Math.ceil(i/3),t=(1/tinyPow(4,e)).toString()):(e=16,t="2.3283064365386962890625e-10"),s=taylorSeries(o,1,s.times(t),new o(1),!0);for(var c,f=e,h=new o(8);f--;)c=s.times(s),s=l.minus(c.times(h.minus(c.times(h))));return finalise(s,o.precision=n,o.rounding=r,!0)};P$2.hyperbolicSine=P$2.sinh=function(){var e,t,n,r,i=this,s=i.constructor;if(!i.isFinite()||i.isZero())return new s(i);if(t=s.precision,n=s.rounding,s.precision=t+Math.max(i.e,i.sd())+4,s.rounding=1,r=i.d.length,r<3)i=taylorSeries(s,2,i,i,!0);else{e=1.4*Math.sqrt(r),e=e>16?16:e|0,i=i.times(1/tinyPow(5,e)),i=taylorSeries(s,2,i,i,!0);for(var o,l=new s(5),c=new s(16),f=new s(20);e--;)o=i.times(i),i=i.times(l.plus(o.times(c.times(o).plus(f))))}return s.precision=t,s.rounding=n,finalise(i,t,n,!0)};P$2.hyperbolicTangent=P$2.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,divide$1(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)};P$2.inverseCosine=P$2.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),i=n.precision,s=n.rounding;return r!==-1?r===0?t.isNeg()?getPi(n,i,s):new n(0):new n(NaN):t.isZero()?getPi(n,i+4,s).times(.5):(n.precision=i+6,n.rounding=1,t=t.asin(),e=getPi(n,i+4,s).times(.5),n.precision=i,n.rounding=s,e.minus(t))};P$2.inverseHyperbolicCosine=P$2.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,external=!1,n=n.times(n).minus(1).sqrt().plus(n),external=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)};P$2.inverseHyperbolicSine=P$2.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,external=!1,n=n.times(n).plus(1).sqrt().plus(n),external=!0,r.precision=e,r.rounding=t,n.ln())};P$2.inverseHyperbolicTangent=P$2.atanh=function(){var e,t,n,r,i=this,s=i.constructor;return i.isFinite()?i.e>=0?new s(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=s.precision,t=s.rounding,r=i.sd(),Math.max(r,e)<2*-i.e-1?finalise(new s(i),e,t,!0):(s.precision=n=r-i.e,i=divide$1(i.plus(1),new s(1).minus(i),n+e,1),s.precision=e+4,s.rounding=1,i=i.ln(),s.precision=e,s.rounding=t,i.times(.5))):new s(NaN)};P$2.inverseSine=P$2.asin=function(){var e,t,n,r,i=this,s=i.constructor;return i.isZero()?new s(i):(t=i.abs().cmp(1),n=s.precision,r=s.rounding,t!==-1?t===0?(e=getPi(s,n+4,r).times(.5),e.s=i.s,e):new s(NaN):(s.precision=n+6,s.rounding=1,i=i.div(new s(1).minus(i.times(i)).sqrt().plus(1)).atan(),s.precision=n,s.rounding=r,i.times(2)))};P$2.inverseTangent=P$2.atan=function(){var e,t,n,r,i,s,o,l,c,f=this,h=f.constructor,p=h.precision,g=h.rounding;if(f.isFinite()){if(f.isZero())return new h(f);if(f.abs().eq(1)&&p+4<=PI_PRECISION)return o=getPi(h,p+4,g).times(.25),o.s=f.s,o}else{if(!f.s)return new h(NaN);if(p+4<=PI_PRECISION)return o=getPi(h,p+4,g).times(.5),o.s=f.s,o}for(h.precision=l=p+10,h.rounding=1,n=Math.min(28,l/LOG_BASE+2|0),e=n;e;--e)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(external=!1,t=Math.ceil(l/LOG_BASE),r=1,c=f.times(f),o=new h(f),i=f;e!==-1;)if(i=i.times(c),s=o.minus(i.div(r+=2)),i=i.times(c),o=s.plus(i.div(r+=2)),o.d[t]!==void 0)for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),external=!0,finalise(o,h.precision=p,h.rounding=g,!0)};P$2.isFinite=function(){return!!this.d};P$2.isInteger=P$2.isInt=function(){return!!this.d&&mathfloor(this.e/LOG_BASE)>this.d.length-2};P$2.isNaN=function(){return!this.s};P$2.isNegative=P$2.isNeg=function(){return this.s<0};P$2.isPositive=P$2.isPos=function(){return this.s>0};P$2.isZero=function(){return!!this.d&&this.d[0]===0};P$2.lessThan=P$2.lt=function(e){return this.cmp(e)<0};P$2.lessThanOrEqualTo=P$2.lte=function(e){return this.cmp(e)<1};P$2.logarithm=P$2.log=function(e){var t,n,r,i,s,o,l,c,f=this,h=f.constructor,p=h.precision,g=h.rounding,x=5;if(e==null)e=new h(10),t=!0;else{if(e=new h(e),n=e.d,e.s<0||!n||!n[0]||e.eq(1))return new h(NaN);t=e.eq(10)}if(n=f.d,f.s<0||!n||!n[0]||f.eq(1))return new h(n&&!n[0]?-1/0:f.s!=1?NaN:n?0:1/0);if(t)if(n.length>1)s=!0;else{for(i=n[0];i%10===0;)i/=10;s=i!==1}if(external=!1,l=p+x,o=naturalLogarithm(f,l),r=t?getLn10(h,l+10):naturalLogarithm(e,l),c=divide$1(o,r,l,1),checkRoundingDigits(c.d,i=p,g))do if(l+=10,o=naturalLogarithm(f,l),r=t?getLn10(h,l+10):naturalLogarithm(e,l),c=divide$1(o,r,l,1),!s){+digitsToString(c.d).slice(i+1,i+15)+1==1e14&&(c=finalise(c,p+1,0));break}while(checkRoundingDigits(c.d,i+=10,g));return external=!0,finalise(c,p,g)};P$2.minus=P$2.sub=function(e){var t,n,r,i,s,o,l,c,f,h,p,g,x=this,D=x.constructor;if(e=new D(e),!x.d||!e.d)return!x.s||!e.s?e=new D(NaN):x.d?e.s=-e.s:e=new D(e.d||x.s!==e.s?x:NaN),e;if(x.s!=e.s)return e.s=-e.s,x.plus(e);if(f=x.d,g=e.d,l=D.precision,c=D.rounding,!f[0]||!g[0]){if(g[0])e.s=-e.s;else if(f[0])e=new D(x);else return new D(c===3?-0:0);return external?finalise(e,l,c):e}if(n=mathfloor(e.e/LOG_BASE),h=mathfloor(x.e/LOG_BASE),f=f.slice(),s=h-n,s){for(p=s<0,p?(t=f,s=-s,o=g.length):(t=g,n=h,o=f.length),r=Math.max(Math.ceil(l/LOG_BASE),o)+2,s>r&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for(r=f.length,o=g.length,p=r<o,p&&(o=r),r=0;r<o;r++)if(f[r]!=g[r]){p=f[r]<g[r];break}s=0}for(p&&(t=f,f=g,g=t,e.s=-e.s),o=f.length,r=g.length-o;r>0;--r)f[o++]=0;for(r=g.length;r>s;){if(f[--r]<g[r]){for(i=r;i&&f[--i]===0;)f[i]=BASE-1;--f[i],f[r]+=BASE}f[r]-=g[r]}for(;f[--o]===0;)f.pop();for(;f[0]===0;f.shift())--n;return f[0]?(e.d=f,e.e=getBase10Exponent(f,n),external?finalise(e,l,c):e):new D(c===3?-0:0)};P$2.modulo=P$2.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?finalise(new r(n),r.precision,r.rounding):(external=!1,r.modulo==9?(t=divide$1(n,e.abs(),0,3,1),t.s*=e.s):t=divide$1(n,e,0,r.modulo,1),t=t.times(e),external=!0,n.minus(t))};P$2.naturalExponential=P$2.exp=function(){return naturalExponential(this)};P$2.naturalLogarithm=P$2.ln=function(){return naturalLogarithm(this)};P$2.negated=P$2.neg=function(){var e=new this.constructor(this);return e.s=-e.s,finalise(e)};P$2.plus=P$2.add=function(e){var t,n,r,i,s,o,l,c,f,h,p=this,g=p.constructor;if(e=new g(e),!p.d||!e.d)return!p.s||!e.s?e=new g(NaN):p.d||(e=new g(e.d||p.s===e.s?p:NaN)),e;if(p.s!=e.s)return e.s=-e.s,p.minus(e);if(f=p.d,h=e.d,l=g.precision,c=g.rounding,!f[0]||!h[0])return h[0]||(e=new g(p)),external?finalise(e,l,c):e;if(s=mathfloor(p.e/LOG_BASE),r=mathfloor(e.e/LOG_BASE),f=f.slice(),i=s-r,i){for(i<0?(n=f,i=-i,o=h.length):(n=h,r=s,o=f.length),s=Math.ceil(l/LOG_BASE),o=s>o?s+1:o+1,i>o&&(i=o,n.length=1),n.reverse();i--;)n.push(0);n.reverse()}for(o=f.length,i=h.length,o-i<0&&(i=o,n=h,h=f,f=n),t=0;i;)t=(f[--i]=f[i]+h[i]+t)/BASE|0,f[i]%=BASE;for(t&&(f.unshift(t),++r),o=f.length;f[--o]==0;)f.pop();return e.d=f,e.e=getBase10Exponent(f,r),external?finalise(e,l,c):e};P$2.precision=P$2.sd=function(e){var t,n=this;if(e!==void 0&&e!==!!e&&e!==1&&e!==0)throw Error(invalidArgument+e);return n.d?(t=getPrecision(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t};P$2.round=function(){var e=this,t=e.constructor;return finalise(new t(e),e.e+1,t.rounding)};P$2.sine=P$2.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+LOG_BASE,r.rounding=1,n=sine(r,toLessThanHalfPi(r,n)),r.precision=e,r.rounding=t,finalise(quadrant>2?n.neg():n,e,t,!0)):new r(NaN)};P$2.squareRoot=P$2.sqrt=function(){var e,t,n,r,i,s,o=this,l=o.d,c=o.e,f=o.s,h=o.constructor;if(f!==1||!l||!l[0])return new h(!f||f<0&&(!l||l[0])?NaN:l?o:1/0);for(external=!1,f=Math.sqrt(+o),f==0||f==1/0?(t=digitsToString(l),(t.length+c)%2==0&&(t+="0"),f=Math.sqrt(t),c=mathfloor((c+1)/2)-(c<0||c%2),f==1/0?t="5e"+c:(t=f.toExponential(),t=t.slice(0,t.indexOf("e")+1)+c),r=new h(t)):r=new h(f.toString()),n=(c=h.precision)+3;;)if(s=r,r=s.plus(divide$1(o,s,n+2,1)).times(.5),digitsToString(s.d).slice(0,n)===(t=digitsToString(r.d)).slice(0,n))if(t=t.slice(n-3,n+1),t=="9999"||!i&&t=="4999"){if(!i&&(finalise(s,c+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}else{(!+t||!+t.slice(1)&&t.charAt(0)=="5")&&(finalise(r,c+1,1),e=!r.times(r).eq(o));break}return external=!0,finalise(r,c,h.rounding,e)};P$2.tangent=P$2.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,n=n.sin(),n.s=1,n=divide$1(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,finalise(quadrant==2||quadrant==4?n.neg():n,e,t,!0)):new r(NaN)};P$2.times=P$2.mul=function(e){var t,n,r,i,s,o,l,c,f,h=this,p=h.constructor,g=h.d,x=(e=new p(e)).d;if(e.s*=h.s,!g||!g[0]||!x||!x[0])return new p(!e.s||g&&!g[0]&&!x||x&&!x[0]&&!g?NaN:!g||!x?e.s/0:e.s*0);for(n=mathfloor(h.e/LOG_BASE)+mathfloor(e.e/LOG_BASE),c=g.length,f=x.length,c<f&&(s=g,g=x,x=s,o=c,c=f,f=o),s=[],o=c+f,r=o;r--;)s.push(0);for(r=f;--r>=0;){for(t=0,i=c+r;i>r;)l=s[i]+x[r]*g[i-r-1]+t,s[i--]=l%BASE|0,t=l/BASE|0;s[i]=(s[i]+t)%BASE|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=getBase10Exponent(s,n),external?finalise(e,p.precision,p.rounding):e};P$2.toBinary=function(e,t){return toStringBinary(this,2,e,t)};P$2.toDecimalPlaces=P$2.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),e===void 0?n:(checkInt32(e,0,MAX_DIGITS),t===void 0?t=r.rounding:checkInt32(t,0,8),finalise(n,e+n.e+1,t))};P$2.toExponential=function(e,t){var n,r=this,i=r.constructor;return e===void 0?n=finiteToString(r,!0):(checkInt32(e,0,MAX_DIGITS),t===void 0?t=i.rounding:checkInt32(t,0,8),r=finalise(new i(r),e+1,t),n=finiteToString(r,!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n};P$2.toFixed=function(e,t){var n,r,i=this,s=i.constructor;return e===void 0?n=finiteToString(i):(checkInt32(e,0,MAX_DIGITS),t===void 0?t=s.rounding:checkInt32(t,0,8),r=finalise(new s(i),e+i.e+1,t),n=finiteToString(r,!1,e+r.e+1)),i.isNeg()&&!i.isZero()?"-"+n:n};P$2.toFraction=function(e){var t,n,r,i,s,o,l,c,f,h,p,g,x=this,D=x.d,y=x.constructor;if(!D)return new y(x);if(f=n=new y(1),r=c=new y(0),t=new y(r),s=t.e=getPrecision(D)-x.e-1,o=s%LOG_BASE,t.d[0]=mathpow(10,o<0?LOG_BASE+o:o),e==null)e=s>0?t:f;else{if(l=new y(e),!l.isInt()||l.lt(f))throw Error(invalidArgument+l);e=l.gt(t)?s>0?t:f:l}for(external=!1,l=new y(digitsToString(D)),h=y.precision,y.precision=s=D.length*LOG_BASE*2;p=divide$1(l,t,0,1,1),i=n.plus(p.times(r)),i.cmp(e)!=1;)n=r,r=i,i=f,f=c.plus(p.times(i)),c=i,i=t,t=l.minus(p.times(i)),l=i;return i=divide$1(e.minus(n),r,0,1,1),c=c.plus(i.times(f)),n=n.plus(i.times(r)),c.s=f.s=x.s,g=divide$1(f,r,s,1).minus(x).abs().cmp(divide$1(c,n,s,1).minus(x).abs())<1?[f,r]:[c,n],y.precision=h,external=!0,g};P$2.toHexadecimal=P$2.toHex=function(e,t){return toStringBinary(this,16,e,t)};P$2.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),e==null){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),t===void 0?t=r.rounding:checkInt32(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(external=!1,n=divide$1(n,e,0,t,1).times(e),external=!0,finalise(n)):(e.s=n.s,n=e),n};P$2.toNumber=function(){return+this};P$2.toOctal=function(e,t){return toStringBinary(this,8,e,t)};P$2.toPower=P$2.pow=function(e){var t,n,r,i,s,o,l=this,c=l.constructor,f=+(e=new c(e));if(!l.d||!e.d||!l.d[0]||!e.d[0])return new c(mathpow(+l,f));if(l=new c(l),l.eq(1))return l;if(r=c.precision,s=c.rounding,e.eq(1))return finalise(l,r,s);if(t=mathfloor(e.e/LOG_BASE),t>=e.d.length-1&&(n=f<0?-f:f)<=MAX_SAFE_INTEGER)return i=intPow(c,l,n,r),e.s<0?new c(1).div(i):finalise(i,r,s);if(o=l.s,o<0){if(t<e.d.length-1)return new c(NaN);if(e.d[t]&1||(o=1),l.e==0&&l.d[0]==1&&l.d.length==1)return l.s=o,l}return n=mathpow(+l,f),t=n==0||!isFinite(n)?mathfloor(f*(Math.log("0."+digitsToString(l.d))/Math.LN10+l.e+1)):new c(n+"").e,t>c.maxE+1||t<c.minE-1?new c(t>0?o/0:0):(external=!1,c.rounding=l.s=1,n=Math.min(12,(t+"").length),i=naturalExponential(e.times(naturalLogarithm(l,r+n)),r),i.d&&(i=finalise(i,r+5,1),checkRoundingDigits(i.d,r,s)&&(t=r+10,i=finalise(naturalExponential(e.times(naturalLogarithm(l,t+n)),t),t+5,1),+digitsToString(i.d).slice(r+1,r+15)+1==1e14&&(i=finalise(i,r+1,0)))),i.s=o,external=!0,c.rounding=s,finalise(i,r,s))};P$2.toPrecision=function(e,t){var n,r=this,i=r.constructor;return e===void 0?n=finiteToString(r,r.e<=i.toExpNeg||r.e>=i.toExpPos):(checkInt32(e,1,MAX_DIGITS),t===void 0?t=i.rounding:checkInt32(t,0,8),r=finalise(new i(r),e,t),n=finiteToString(r,e<=r.e||r.e<=i.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n};P$2.toSignificantDigits=P$2.toSD=function(e,t){var n=this,r=n.constructor;return e===void 0?(e=r.precision,t=r.rounding):(checkInt32(e,1,MAX_DIGITS),t===void 0?t=r.rounding:checkInt32(t,0,8)),finalise(new r(n),e,t)};P$2.toString=function(){var e=this,t=e.constructor,n=finiteToString(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n};P$2.truncated=P$2.trunc=function(){return finalise(new this.constructor(this),this.e+1,1)};P$2.valueOf=P$2.toJSON=function(){var e=this,t=e.constructor,n=finiteToString(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};function digitsToString(e){var t,n,r,i=e.length-1,s="",o=e[0];if(i>0){for(s+=o,t=1;t<i;t++)r=e[t]+"",n=LOG_BASE-r.length,n&&(s+=getZeroString(n)),s+=r;o=e[t],r=o+"",n=LOG_BASE-r.length,n&&(s+=getZeroString(n))}else if(o===0)return"0";for(;o%10===0;)o/=10;return s+o}function checkInt32(e,t,n){if(e!==~~e||e<t||e>n)throw Error(invalidArgument+e)}function checkRoundingDigits(e,t,n,r){var i,s,o,l;for(s=e[0];s>=10;s/=10)--t;return--t<0?(t+=LOG_BASE,i=0):(i=Math.ceil((t+1)/LOG_BASE),t%=LOG_BASE),s=mathpow(10,LOG_BASE-t),l=e[i]%s|0,r==null?t<3?(t==0?l=l/100|0:t==1&&(l=l/10|0),o=n<4&&l==99999||n>3&&l==49999||l==5e4||l==0):o=(n<4&&l+1==s||n>3&&l+1==s/2)&&(e[i+1]/s/100|0)==mathpow(10,t-2)-1||(l==s/2||l==0)&&(e[i+1]/s/100|0)==0:t<4?(t==0?l=l/1e3|0:t==1?l=l/100|0:t==2&&(l=l/10|0),o=(r||n<4)&&l==9999||!r&&n>3&&l==4999):o=((r||n<4)&&l+1==s||!r&&n>3&&l+1==s/2)&&(e[i+1]/s/1e3|0)==mathpow(10,t-3)-1,o}function convertBase(e,t,n){for(var r,i=[0],s,o=0,l=e.length;o<l;){for(s=i.length;s--;)i[s]*=t;for(i[0]+=NUMERALS.indexOf(e.charAt(o++)),r=0;r<i.length;r++)i[r]>n-1&&(i[r+1]===void 0&&(i[r+1]=0),i[r+1]+=i[r]/n|0,i[r]%=n)}return i.reverse()}function cosine(e,t){var n,r,i;if(t.isZero())return t;r=t.d.length,r<32?(n=Math.ceil(r/3),i=(1/tinyPow(4,n)).toString()):(n=16,i="2.3283064365386962890625e-10"),e.precision+=n,t=taylorSeries(e,1,t.times(i),new e(1));for(var s=n;s--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=n,t}var divide$1=function(){function e(r,i,s){var o,l=0,c=r.length;for(r=r.slice();c--;)o=r[c]*i+l,r[c]=o%s|0,l=o/s|0;return l&&r.unshift(l),r}function t(r,i,s,o){var l,c;if(s!=o)c=s>o?1:-1;else for(l=c=0;l<s;l++)if(r[l]!=i[l]){c=r[l]>i[l]?1:-1;break}return c}function n(r,i,s,o){for(var l=0;s--;)r[s]-=l,l=r[s]<i[s]?1:0,r[s]=l*o+r[s]-i[s];for(;!r[0]&&r.length>1;)r.shift()}return function(r,i,s,o,l,c){var f,h,p,g,x,D,y,E,F,B,M,k,T,N,$,R,O,L,z,X,o0=r.constructor,Z=r.s==i.s?1:-1,n0=r.d,s0=i.d;if(!n0||!n0[0]||!s0||!s0[0])return new o0(!r.s||!i.s||(n0?s0&&n0[0]==s0[0]:!s0)?NaN:n0&&n0[0]==0||!s0?Z*0:Z/0);for(c?(x=1,h=r.e-i.e):(c=BASE,x=LOG_BASE,h=mathfloor(r.e/x)-mathfloor(i.e/x)),z=s0.length,O=n0.length,F=new o0(Z),B=F.d=[],p=0;s0[p]==(n0[p]||0);p++);if(s0[p]>(n0[p]||0)&&h--,s==null?(N=s=o0.precision,o=o0.rounding):l?N=s+(r.e-i.e)+1:N=s,N<0)B.push(1),D=!0;else{if(N=N/x+2|0,p=0,z==1){for(g=0,s0=s0[0],N++;(p<O||g)&&N--;p++)$=g*c+(n0[p]||0),B[p]=$/s0|0,g=$%s0|0;D=g||p<O}else{for(g=c/(s0[0]+1)|0,g>1&&(s0=e(s0,g,c),n0=e(n0,g,c),z=s0.length,O=n0.length),R=z,M=n0.slice(0,z),k=M.length;k<z;)M[k++]=0;X=s0.slice(),X.unshift(0),L=s0[0],s0[1]>=c/2&&++L;do g=0,f=t(s0,M,z,k),f<0?(T=M[0],z!=k&&(T=T*c+(M[1]||0)),g=T/L|0,g>1?(g>=c&&(g=c-1),y=e(s0,g,c),E=y.length,k=M.length,f=t(y,M,E,k),f==1&&(g--,n(y,z<E?X:s0,E,c))):(g==0&&(f=g=1),y=s0.slice()),E=y.length,E<k&&y.unshift(0),n(M,y,k,c),f==-1&&(k=M.length,f=t(s0,M,z,k),f<1&&(g++,n(M,z<k?X:s0,k,c))),k=M.length):f===0&&(g++,M=[0]),B[p++]=g,f&&M[0]?M[k++]=n0[R]||0:(M=[n0[R]],k=1);while((R++<O||M[0]!==void 0)&&N--);D=M[0]!==void 0}B[0]||B.shift()}if(x==1)F.e=h,inexact=D;else{for(p=1,g=B[0];g>=10;g/=10)p++;F.e=p+h*x-1,finalise(F,l?s+F.e+1:s,o,D)}return F}}();function finalise(e,t,n,r){var i,s,o,l,c,f,h,p,g,x=e.constructor;e:if(t!=null){if(p=e.d,!p)return e;for(i=1,l=p[0];l>=10;l/=10)i++;if(s=t-i,s<0)s+=LOG_BASE,o=t,h=p[g=0],c=h/mathpow(10,i-o-1)%10|0;else if(g=Math.ceil((s+1)/LOG_BASE),l=p.length,g>=l)if(r){for(;l++<=g;)p.push(0);h=c=0,i=1,s%=LOG_BASE,o=s-LOG_BASE+1}else break e;else{for(h=l=p[g],i=1;l>=10;l/=10)i++;s%=LOG_BASE,o=s-LOG_BASE+i,c=o<0?0:h/mathpow(10,i-o-1)%10|0}if(r=r||t<0||p[g+1]!==void 0||(o<0?h:h%mathpow(10,i-o-1)),f=n<4?(c||r)&&(n==0||n==(e.s<0?3:2)):c>5||c==5&&(n==4||r||n==6&&(s>0?o>0?h/mathpow(10,i-o):0:p[g-1])%10&1||n==(e.s<0?8:7)),t<1||!p[0])return p.length=0,f?(t-=e.e+1,p[0]=mathpow(10,(LOG_BASE-t%LOG_BASE)%LOG_BASE),e.e=-t||0):p[0]=e.e=0,e;if(s==0?(p.length=g,l=1,g--):(p.length=g+1,l=mathpow(10,LOG_BASE-s),p[g]=o>0?(h/mathpow(10,i-o)%mathpow(10,o)|0)*l:0),f)for(;;)if(g==0){for(s=1,o=p[0];o>=10;o/=10)s++;for(o=p[0]+=l,l=1;o>=10;o/=10)l++;s!=l&&(e.e++,p[0]==BASE&&(p[0]=1));break}else{if(p[g]+=l,p[g]!=BASE)break;p[g--]=0,l=1}for(s=p.length;p[--s]===0;)p.pop()}return external&&(e.e>x.maxE?(e.d=null,e.e=NaN):e.e<x.minE&&(e.e=0,e.d=[0])),e}function finiteToString(e,t,n){if(!e.isFinite())return nonFiniteToString(e);var r,i=e.e,s=digitsToString(e.d),o=s.length;return t?(n&&(r=n-o)>0?s=s.charAt(0)+"."+s.slice(1)+getZeroString(r):o>1&&(s=s.charAt(0)+"."+s.slice(1)),s=s+(e.e<0?"e":"e+")+e.e):i<0?(s="0."+getZeroString(-i-1)+s,n&&(r=n-o)>0&&(s+=getZeroString(r))):i>=o?(s+=getZeroString(i+1-o),n&&(r=n-i-1)>0&&(s=s+"."+getZeroString(r))):((r=i+1)<o&&(s=s.slice(0,r)+"."+s.slice(r)),n&&(r=n-o)>0&&(i+1===o&&(s+="."),s+=getZeroString(r))),s}function getBase10Exponent(e,t){var n=e[0];for(t*=LOG_BASE;n>=10;n/=10)t++;return t}function getLn10(e,t,n){if(t>LN10_PRECISION)throw external=!0,n&&(e.precision=n),Error(precisionLimitExceeded);return finalise(new e(LN10),t,1,!0)}function getPi(e,t,n){if(t>PI_PRECISION)throw Error(precisionLimitExceeded);return finalise(new e(PI$1),t,n,!0)}function getPrecision(e){var t=e.length-1,n=t*LOG_BASE+1;if(t=e[t],t){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function getZeroString(e){for(var t="";e--;)t+="0";return t}function intPow(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/LOG_BASE+4);for(external=!1;;){if(n%2&&(s=s.times(t),truncate(s.d,o)&&(i=!0)),n=mathfloor(n/2),n===0){n=s.d.length-1,i&&s.d[n]===0&&++s.d[n];break}t=t.times(t),truncate(t.d,o)}return external=!0,s}function isOdd(e){return e.d[e.d.length-1]&1}function maxOrMin(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;)if(r=new e(t[s]),r.s)i[n](r)&&(i=r);else{i=r;break}return i}function naturalExponential(e,t){var n,r,i,s,o,l,c,f=0,h=0,p=0,g=e.constructor,x=g.rounding,D=g.precision;if(!e.d||!e.d[0]||e.e>17)return new g(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(t==null?(external=!1,c=D):c=t,l=new g(.03125);e.e>-2;)e=e.times(l),p+=5;for(r=Math.log(mathpow(2,p))/Math.LN10*2+5|0,c+=r,n=s=o=new g(1),g.precision=c;;){if(s=finalise(s.times(e),c,1),n=n.times(++h),l=o.plus(divide$1(s,n,c,1)),digitsToString(l.d).slice(0,c)===digitsToString(o.d).slice(0,c)){for(i=p;i--;)o=finalise(o.times(o),c,1);if(t==null)if(f<3&&checkRoundingDigits(o.d,c-r,x,f))g.precision=c+=10,n=s=l=new g(1),h=0,f++;else return finalise(o,g.precision=D,x,external=!0);else return g.precision=D,o}o=l}}function naturalLogarithm(e,t){var n,r,i,s,o,l,c,f,h,p,g,x=1,D=10,y=e,E=y.d,F=y.constructor,B=F.rounding,M=F.precision;if(y.s<0||!E||!E[0]||!y.e&&E[0]==1&&E.length==1)return new F(E&&!E[0]?-1/0:y.s!=1?NaN:E?0:y);if(t==null?(external=!1,h=M):h=t,F.precision=h+=D,n=digitsToString(E),r=n.charAt(0),Math.abs(s=y.e)<15e14){for(;r<7&&r!=1||r==1&&n.charAt(1)>3;)y=y.times(e),n=digitsToString(y.d),r=n.charAt(0),x++;s=y.e,r>1?(y=new F("0."+n),s++):y=new F(r+"."+n.slice(1))}else return f=getLn10(F,h+2,M).times(s+""),y=naturalLogarithm(new F(r+"."+n.slice(1)),h-D).plus(f),F.precision=M,t==null?finalise(y,M,B,external=!0):y;for(p=y,c=o=y=divide$1(y.minus(1),y.plus(1),h,1),g=finalise(y.times(y),h,1),i=3;;){if(o=finalise(o.times(g),h,1),f=c.plus(divide$1(o,new F(i),h,1)),digitsToString(f.d).slice(0,h)===digitsToString(c.d).slice(0,h))if(c=c.times(2),s!==0&&(c=c.plus(getLn10(F,h+2,M).times(s+""))),c=divide$1(c,new F(x),h,1),t==null)if(checkRoundingDigits(c.d,h-D,B,l))F.precision=h+=D,f=o=y=divide$1(p.minus(1),p.plus(1),h,1),g=finalise(y.times(y),h,1),i=l=1;else return finalise(c,F.precision=M,B,external=!0);else return F.precision=M,c;c=f,i+=2}}function nonFiniteToString(e){return String(e.s*e.s/0)}function parseDecimal(e,t){var n,r,i;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;t.charCodeAt(r)===48;r++);for(i=t.length;t.charCodeAt(i-1)===48;--i);if(t=t.slice(r,i),t){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%LOG_BASE,n<0&&(r+=LOG_BASE),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=LOG_BASE;r<i;)e.d.push(+t.slice(r,r+=LOG_BASE));t=t.slice(r),r=LOG_BASE-t.length}else r-=i;for(;r--;)t+="0";e.d.push(+t),external&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function parseOther(e,t){var n,r,i,s,o,l,c,f,h;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),isDecimal.test(t))return parseDecimal(e,t)}else if(t==="Infinity"||t==="NaN")return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(isHex.test(t))n=16,t=t.toLowerCase();else if(isBinary.test(t))n=2;else if(isOctal.test(t))n=8;else throw Error(invalidArgument+t);for(s=t.search(/p/i),s>0?(c=+t.slice(s+1),t=t.substring(2,s)):t=t.slice(2),s=t.indexOf("."),o=s>=0,r=e.constructor,o&&(t=t.replace(".",""),l=t.length,s=l-s,i=intPow(r,new r(n),s,s*2)),f=convertBase(t,n,BASE),h=f.length-1,s=h;f[s]===0;--s)f.pop();return s<0?new r(e.s*0):(e.e=getBase10Exponent(f,h),e.d=f,external=!1,o&&(e=divide$1(e,i,l*4)),c&&(e=e.times(Math.abs(c)<54?mathpow(2,c):Decimal.pow(2,c))),external=!0,e)}function sine(e,t){var n,r=t.d.length;if(r<3)return t.isZero()?t:taylorSeries(e,2,t,t);n=1.4*Math.sqrt(r),n=n>16?16:n|0,t=t.times(1/tinyPow(5,n)),t=taylorSeries(e,2,t,t);for(var i,s=new e(5),o=new e(16),l=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(l))));return t}function taylorSeries(e,t,n,r,i){var s,o,l,c,f=e.precision,h=Math.ceil(f/LOG_BASE);for(external=!1,c=n.times(n),l=new e(r);;){if(o=divide$1(l.times(c),new e(t++*t++),f,1),l=i?r.plus(o):r.minus(o),r=divide$1(o.times(c),new e(t++*t++),f,1),o=l.plus(r),o.d[h]!==void 0){for(s=h;o.d[s]===l.d[s]&&s--;);if(s==-1)break}s=l,l=r,r=o,o=s}return external=!0,o.d.length=h+1,o}function tinyPow(e,t){for(var n=e;--t;)n*=e;return n}function toLessThanHalfPi(e,t){var n,r=t.s<0,i=getPi(e,e.precision,1),s=i.times(.5);if(t=t.abs(),t.lte(s))return quadrant=r?4:1,t;if(n=t.divToInt(i),n.isZero())quadrant=r?3:2;else{if(t=t.minus(n.times(i)),t.lte(s))return quadrant=isOdd(n)?r?2:3:r?4:1,t;quadrant=isOdd(n)?r?1:4:r?3:2}return t.minus(i).abs()}function toStringBinary(e,t,n,r){var i,s,o,l,c,f,h,p,g,x=e.constructor,D=n!==void 0;if(D?(checkInt32(n,1,MAX_DIGITS),r===void 0?r=x.rounding:checkInt32(r,0,8)):(n=x.precision,r=x.rounding),!e.isFinite())h=nonFiniteToString(e);else{for(h=finiteToString(e),o=h.indexOf("."),D?(i=2,t==16?n=n*4-3:t==8&&(n=n*3-2)):i=t,o>=0&&(h=h.replace(".",""),g=new x(1),g.e=h.length-o,g.d=convertBase(finiteToString(g),10,i),g.e=g.d.length),p=convertBase(h,10,i),s=c=p.length;p[--c]==0;)p.pop();if(!p[0])h=D?"0p+0":"0";else{if(o<0?s--:(e=new x(e),e.d=p,e.e=s,e=divide$1(e,g,n,r,0,i),p=e.d,s=e.e,f=inexact),o=p[n],l=i/2,f=f||p[n+1]!==void 0,f=r<4?(o!==void 0||f)&&(r===0||r===(e.s<0?3:2)):o>l||o===l&&(r===4||f||r===6&&p[n-1]&1||r===(e.s<0?8:7)),p.length=n,f)for(;++p[--n]>i-1;)p[n]=0,n||(++s,p.unshift(1));for(c=p.length;!p[c-1];--c);for(o=0,h="";o<c;o++)h+=NUMERALS.charAt(p[o]);if(D){if(c>1)if(t==16||t==8){for(o=t==16?4:3,--c;c%o;c++)h+="0";for(p=convertBase(h,i,t),c=p.length;!p[c-1];--c);for(o=1,h="1.";o<c;o++)h+=NUMERALS.charAt(p[o])}else h=h.charAt(0)+"."+h.slice(1);h=h+(s<0?"p":"p+")+s}else if(s<0){for(;++s;)h="0"+h;h="0."+h}else if(++s>c)for(s-=c;s--;)h+="0";else s<c&&(h=h.slice(0,s)+"."+h.slice(s))}h=(t==16?"0x":t==2?"0b":t==8?"0o":"")+h}return e.s<0?"-"+h:h}function truncate(e,t){if(e.length>t)return e.length=t,!0}function abs$1(e){return new this(e).abs()}function acos(e){return new this(e).acos()}function acosh(e){return new this(e).acosh()}function add$2(e,t){return new this(e).plus(t)}function asin(e){return new this(e).asin()}function asinh(e){return new this(e).asinh()}function atan(e){return new this(e).atan()}function atanh(e){return new this(e).atanh()}function atan2(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return!e.s||!t.s?n=new this(NaN):!e.d&&!t.d?(n=getPi(this,s,1).times(t.s>0?.25:.75),n.s=e.s):!t.d||e.isZero()?(n=t.s<0?getPi(this,r,i):new this(0),n.s=e.s):!e.d||t.isZero()?(n=getPi(this,s,1).times(.5),n.s=e.s):t.s<0?(this.precision=s,this.rounding=1,n=this.atan(divide$1(e,t,s,1)),t=getPi(this,s,1),this.precision=r,this.rounding=i,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(divide$1(e,t,s,1)),n}function cbrt(e){return new this(e).cbrt()}function ceil(e){return finalise(e=new this(e),e.e+1,2)}function clamp$1(e,t,n){return new this(e).clamp(t,n)}function config(e){if(!e||typeof e!="object")throw Error(decimalError+"Object expected");var t,n,r,i=e.defaults===!0,s=["precision",1,MAX_DIGITS,"rounding",0,8,"toExpNeg",-9e15,0,"toExpPos",0,EXP_LIMIT,"maxE",0,EXP_LIMIT,"minE",-9e15,0,"modulo",0,9];for(t=0;t<s.length;t+=3)if(n=s[t],i&&(this[n]=DEFAULTS[n]),(r=e[n])!==void 0)if(mathfloor(r)===r&&r>=s[t+1]&&r<=s[t+2])this[n]=r;else throw Error(invalidArgument+n+": "+r);if(n="crypto",i&&(this[n]=DEFAULTS[n]),(r=e[n])!==void 0)if(r===!0||r===!1||r===0||r===1)if(r)if(typeof crypto<"u"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))this[n]=!0;else throw Error(cryptoUnavailable);else this[n]=!1;else throw Error(invalidArgument+n+": "+r);return this}function cos(e){return new this(e).cos()}function cosh$1(e){return new this(e).cosh()}function clone$3(e){var t,n,r;function i(s){var o,l,c,f=this;if(!(f instanceof i))return new i(s);if(f.constructor=i,isDecimalInstance(s)){f.s=s.s,external?!s.d||s.e>i.maxE?(f.e=NaN,f.d=null):s.e<i.minE?(f.e=0,f.d=[0]):(f.e=s.e,f.d=s.d.slice()):(f.e=s.e,f.d=s.d?s.d.slice():s.d);return}if(c=typeof s,c==="number"){if(s===0){f.s=1/s<0?-1:1,f.e=0,f.d=[0];return}if(s<0?(s=-s,f.s=-1):f.s=1,s===~~s&&s<1e7){for(o=0,l=s;l>=10;l/=10)o++;external?o>i.maxE?(f.e=NaN,f.d=null):o<i.minE?(f.e=0,f.d=[0]):(f.e=o,f.d=[s]):(f.e=o,f.d=[s]);return}else if(s*0!==0){s||(f.s=NaN),f.e=NaN,f.d=null;return}return parseDecimal(f,s.toString())}else if(c!=="string")throw Error(invalidArgument+s);return(l=s.charCodeAt(0))===45?(s=s.slice(1),f.s=-1):(l===43&&(s=s.slice(1)),f.s=1),isDecimal.test(s)?parseDecimal(f,s):parseOther(f,s)}if(i.prototype=P$2,i.ROUND_UP=0,i.ROUND_DOWN=1,i.ROUND_CEIL=2,i.ROUND_FLOOR=3,i.ROUND_HALF_UP=4,i.ROUND_HALF_DOWN=5,i.ROUND_HALF_EVEN=6,i.ROUND_HALF_CEIL=7,i.ROUND_HALF_FLOOR=8,i.EUCLID=9,i.config=i.set=config,i.clone=clone$3,i.isDecimal=isDecimalInstance,i.abs=abs$1,i.acos=acos,i.acosh=acosh,i.add=add$2,i.asin=asin,i.asinh=asinh,i.atan=atan,i.atanh=atanh,i.atan2=atan2,i.cbrt=cbrt,i.ceil=ceil,i.clamp=clamp$1,i.cos=cos,i.cosh=cosh$1,i.div=div,i.exp=exp$1,i.floor=floor,i.hypot=hypot$1,i.ln=ln,i.log=log,i.log10=log10$1,i.log2=log2,i.max=max$4,i.min=min$3,i.mod=mod,i.mul=mul,i.pow=pow,i.random=random$1,i.round=round$2,i.sign=sign$1,i.sin=sin,i.sinh=sinh$1,i.sqrt=sqrt,i.sub=sub,i.sum=sum$2,i.tan=tan,i.tanh=tanh,i.trunc=trunc$1,e===void 0&&(e={}),e&&e.defaults!==!0)for(r=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],t=0;t<r.length;)e.hasOwnProperty(n=r[t++])||(e[n]=this[n]);return i.config(e),i}function div(e,t){return new this(e).div(t)}function exp$1(e){return new this(e).exp()}function floor(e){return finalise(e=new this(e),e.e+1,3)}function hypot$1(){var e,t,n=new this(0);for(external=!1,e=0;e<arguments.length;)if(t=new this(arguments[e++]),t.d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return external=!0,new this(1/0);n=t}return external=!0,n.sqrt()}function isDecimalInstance(e){return e instanceof Decimal||e&&e.toStringTag===tag||!1}function ln(e){return new this(e).ln()}function log(e,t){return new this(e).log(t)}function log2(e){return new this(e).log(2)}function log10$1(e){return new this(e).log(10)}function max$4(){return maxOrMin(this,arguments,"lt")}function min$3(){return maxOrMin(this,arguments,"gt")}function mod(e,t){return new this(e).mod(t)}function mul(e,t){return new this(e).mul(t)}function pow(e,t){return new this(e).pow(t)}function random$1(e){var t,n,r,i,s=0,o=new this(1),l=[];if(e===void 0?e=this.precision:checkInt32(e,1,MAX_DIGITS),r=Math.ceil(e/LOG_BASE),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)i=t[s],i>=429e7?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:l[s++]=i%1e7;else if(crypto.randomBytes){for(t=crypto.randomBytes(r*=4);s<r;)i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((t[s+3]&127)<<24),i>=214e7?crypto.randomBytes(4).copy(t,s):(l.push(i%1e7),s+=4);s=r/4}else throw Error(cryptoUnavailable);else for(;s<r;)l[s++]=Math.random()*1e7|0;for(r=l[--s],e%=LOG_BASE,r&&e&&(i=mathpow(10,LOG_BASE-e),l[s]=(r/i|0)*i);l[s]===0;s--)l.pop();if(s<0)n=0,l=[0];else{for(n=-1;l[0]===0;n-=LOG_BASE)l.shift();for(r=1,i=l[0];i>=10;i/=10)r++;r<LOG_BASE&&(n-=LOG_BASE-r)}return o.e=n,o.d=l,o}function round$2(e){return finalise(e=new this(e),e.e+1,this.rounding)}function sign$1(e){return e=new this(e),e.d?e.d[0]?e.s:0*e.s:e.s||NaN}function sin(e){return new this(e).sin()}function sinh$1(e){return new this(e).sinh()}function sqrt(e){return new this(e).sqrt()}function sub(e,t){return new this(e).sub(t)}function sum$2(){var e=0,t=arguments,n=new this(t[e]);for(external=!1;n.s&&++e<t.length;)n=n.plus(t[e]);return external=!0,finalise(n,this.precision,this.rounding)}function tan(e){return new this(e).tan()}function tanh(e){return new this(e).tanh()}function trunc$1(e){return finalise(e=new this(e),e.e+1,1)}P$2[Symbol.for("nodejs.util.inspect.custom")]=P$2.toString;P$2[Symbol.toStringTag]="Decimal";var Decimal=P$2.constructor=clone$3(DEFAULTS);LN10=new Decimal(LN10);PI$1=new Decimal(PI$1);var name$J="BigNumber",dependencies$I=["?on","config"],createBigNumberClass=factory(name$J,dependencies$I,e=>{var{on:t,config:n}=e,r=Decimal.clone({precision:n.precision,modulo:Decimal.EUCLID});return r.prototype=Object.create(r.prototype),r.prototype.type="BigNumber",r.prototype.isBigNumber=!0,r.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},r.fromJSON=function(i){return new r(i.value)},t&&t("config",function(i,s){i.precision!==s.precision&&r.config({precision:i.precision})}),r},{isClass:!0});const cosh=Math.cosh||function(e){return Math.abs(e)<1e-9?1-e:(Math.exp(e)+Math.exp(-e))*.5},sinh=Math.sinh||function(e){return Math.abs(e)<1e-9?e:(Math.exp(e)-Math.exp(-e))*.5},cosm1=function(e){const t=Math.PI/4;if(-t>e||e>t)return Math.cos(e)-1;const n=e*e;return n*(n*(n*(n*(n*(n*(n*(n/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-1/2)},hypot=function(e,t){return e=Math.abs(e),t=Math.abs(t),e<t&&([e,t]=[t,e]),e<1e8?Math.sqrt(e*e+t*t):(t/=e,e*Math.sqrt(1+t*t))},parser_exit=function(){throw SyntaxError("Invalid Param")};function logHypot(e,t){const n=Math.abs(e),r=Math.abs(t);return e===0?Math.log(r):t===0?Math.log(n):n<3e3&&r<3e3?Math.log(e*e+t*t)*.5:(e=e*.5,t=t*.5,.5*Math.log(e*e+t*t)+Math.LN2)}const P$1={re:0,im:0},parse$3=function(e,t){const n=P$1;if(e==null)n.re=n.im=0;else if(t!==void 0)n.re=e,n.im=t;else switch(typeof e){case"object":if("im"in e&&"re"in e)n.re=e.re,n.im=e.im;else if("abs"in e&&"arg"in e){if(!isFinite(e.abs)&&isFinite(e.arg))return Complex$1.INFINITY;n.re=e.abs*Math.cos(e.arg),n.im=e.abs*Math.sin(e.arg)}else if("r"in e&&"phi"in e){if(!isFinite(e.r)&&isFinite(e.phi))return Complex$1.INFINITY;n.re=e.r*Math.cos(e.phi),n.im=e.r*Math.sin(e.phi)}else e.length===2?(n.re=e[0],n.im=e[1]):parser_exit();break;case"string":n.im=n.re=0;const r=e.replace(/_/g,"").match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g);let i=1,s=0;r===null&&parser_exit();for(let o=0;o<r.length;o++){const l=r[o];l===" "||l==="	"||l===`
`||(l==="+"?i++:l==="-"?s++:l==="i"||l==="I"?(i+s===0&&parser_exit(),r[o+1]!==" "&&!isNaN(r[o+1])?(n.im+=parseFloat((s%2?"-":"")+r[o+1]),o++):n.im+=parseFloat((s%2?"-":"")+"1"),i=s=0):((i+s===0||isNaN(l))&&parser_exit(),r[o+1]==="i"||r[o+1]==="I"?(n.im+=parseFloat((s%2?"-":"")+l),o++):n.re+=parseFloat((s%2?"-":"")+l),i=s=0))}i+s>0&&parser_exit();break;case"number":n.im=0,n.re=e;break;default:parser_exit()}return isNaN(n.re)||isNaN(n.im),n};function Complex$1(e,t){if(!(this instanceof Complex$1))return new Complex$1(e,t);const n=parse$3(e,t);this.re=n.re,this.im=n.im}Complex$1.prototype={re:0,im:0,sign:function(){const e=hypot(this.re,this.im);return new Complex$1(this.re/e,this.im/e)},add:function(e,t){const n=parse$3(e,t),r=this.isInfinite(),i=!(isFinite(n.re)&&isFinite(n.im));return r||i?r&&i?Complex$1.NAN:Complex$1.INFINITY:new Complex$1(this.re+n.re,this.im+n.im)},sub:function(e,t){const n=parse$3(e,t),r=this.isInfinite(),i=!(isFinite(n.re)&&isFinite(n.im));return r||i?r&&i?Complex$1.NAN:Complex$1.INFINITY:new Complex$1(this.re-n.re,this.im-n.im)},mul:function(e,t){const n=parse$3(e,t),r=this.isInfinite(),i=!(isFinite(n.re)&&isFinite(n.im)),s=this.re===0&&this.im===0,o=n.re===0&&n.im===0;return r&&o||i&&s?Complex$1.NAN:r||i?Complex$1.INFINITY:n.im===0&&this.im===0?new Complex$1(this.re*n.re,0):new Complex$1(this.re*n.re-this.im*n.im,this.re*n.im+this.im*n.re)},div:function(e,t){const n=parse$3(e,t),r=this.isInfinite(),i=!(isFinite(n.re)&&isFinite(n.im)),s=this.re===0&&this.im===0,o=n.re===0&&n.im===0;if(s&&o||r&&i)return Complex$1.NAN;if(o||r)return Complex$1.INFINITY;if(s||i)return Complex$1.ZERO;if(n.im===0)return new Complex$1(this.re/n.re,this.im/n.re);if(Math.abs(n.re)<Math.abs(n.im)){const l=n.re/n.im,c=n.re*l+n.im;return new Complex$1((this.re*l+this.im)/c,(this.im*l-this.re)/c)}else{const l=n.im/n.re,c=n.im*l+n.re;return new Complex$1((this.re+this.im*l)/c,(this.im-this.re*l)/c)}},pow:function(e,t){const n=parse$3(e,t),r=this.re===0&&this.im===0;if(n.re===0&&n.im===0)return Complex$1.ONE;if(n.im===0){if(this.im===0&&this.re>0)return new Complex$1(Math.pow(this.re,n.re),0);if(this.re===0)switch((n.re%4+4)%4){case 0:return new Complex$1(Math.pow(this.im,n.re),0);case 1:return new Complex$1(0,Math.pow(this.im,n.re));case 2:return new Complex$1(-Math.pow(this.im,n.re),0);case 3:return new Complex$1(0,-Math.pow(this.im,n.re))}}if(r&&n.re>0)return Complex$1.ZERO;const s=Math.atan2(this.im,this.re),o=logHypot(this.re,this.im);let l=Math.exp(n.re*o-n.im*s),c=n.im*o+n.re*s;return new Complex$1(l*Math.cos(c),l*Math.sin(c))},sqrt:function(){const e=this.re,t=this.im;if(t===0)return e>=0?new Complex$1(Math.sqrt(e),0):new Complex$1(0,Math.sqrt(-e));const n=hypot(e,t);let r=Math.sqrt(.5*(n+Math.abs(e))),i=Math.abs(t)/(2*r);return e>=0?new Complex$1(r,t<0?-i:i):new Complex$1(i,t<0?-r:r)},exp:function(){const e=Math.exp(this.re);return this.im===0?new Complex$1(e,0):new Complex$1(e*Math.cos(this.im),e*Math.sin(this.im))},expm1:function(){const e=this.re,t=this.im;return new Complex$1(Math.expm1(e)*Math.cos(t)+cosm1(t),Math.exp(e)*Math.sin(t))},log:function(){const e=this.re,t=this.im;return t===0&&e>0?new Complex$1(Math.log(e),0):new Complex$1(logHypot(e,t),Math.atan2(t,e))},abs:function(){return hypot(this.re,this.im)},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){const e=this.re,t=this.im;return new Complex$1(Math.sin(e)*cosh(t),Math.cos(e)*sinh(t))},cos:function(){const e=this.re,t=this.im;return new Complex$1(Math.cos(e)*cosh(t),-Math.sin(e)*sinh(t))},tan:function(){const e=2*this.re,t=2*this.im,n=Math.cos(e)+cosh(t);return new Complex$1(Math.sin(e)/n,sinh(t)/n)},cot:function(){const e=2*this.re,t=2*this.im,n=Math.cos(e)-cosh(t);return new Complex$1(-Math.sin(e)/n,sinh(t)/n)},sec:function(){const e=this.re,t=this.im,n=.5*cosh(2*t)+.5*Math.cos(2*e);return new Complex$1(Math.cos(e)*cosh(t)/n,Math.sin(e)*sinh(t)/n)},csc:function(){const e=this.re,t=this.im,n=.5*cosh(2*t)-.5*Math.cos(2*e);return new Complex$1(Math.sin(e)*cosh(t)/n,-Math.cos(e)*sinh(t)/n)},asin:function(){const e=this.re,t=this.im,n=new Complex$1(t*t-e*e+1,-2*e*t).sqrt(),r=new Complex$1(n.re-t,n.im+e).log();return new Complex$1(r.im,-r.re)},acos:function(){const e=this.re,t=this.im,n=new Complex$1(t*t-e*e+1,-2*e*t).sqrt(),r=new Complex$1(n.re-t,n.im+e).log();return new Complex$1(Math.PI/2-r.im,r.re)},atan:function(){const e=this.re,t=this.im;if(e===0){if(t===1)return new Complex$1(0,1/0);if(t===-1)return new Complex$1(0,-1/0)}const n=e*e+(1-t)*(1-t),r=new Complex$1((1-t*t-e*e)/n,-2*e/n).log();return new Complex$1(-.5*r.im,.5*r.re)},acot:function(){const e=this.re,t=this.im;if(t===0)return new Complex$1(Math.atan2(1,e),0);const n=e*e+t*t;return n!==0?new Complex$1(e/n,-t/n).atan():new Complex$1(e!==0?e/0:0,t!==0?-t/0:0).atan()},asec:function(){const e=this.re,t=this.im;if(e===0&&t===0)return new Complex$1(0,1/0);const n=e*e+t*t;return n!==0?new Complex$1(e/n,-t/n).acos():new Complex$1(e!==0?e/0:0,t!==0?-t/0:0).acos()},acsc:function(){const e=this.re,t=this.im;if(e===0&&t===0)return new Complex$1(Math.PI/2,1/0);const n=e*e+t*t;return n!==0?new Complex$1(e/n,-t/n).asin():new Complex$1(e!==0?e/0:0,t!==0?-t/0:0).asin()},sinh:function(){const e=this.re,t=this.im;return new Complex$1(sinh(e)*Math.cos(t),cosh(e)*Math.sin(t))},cosh:function(){const e=this.re,t=this.im;return new Complex$1(cosh(e)*Math.cos(t),sinh(e)*Math.sin(t))},tanh:function(){const e=2*this.re,t=2*this.im,n=cosh(e)+Math.cos(t);return new Complex$1(sinh(e)/n,Math.sin(t)/n)},coth:function(){const e=2*this.re,t=2*this.im,n=cosh(e)-Math.cos(t);return new Complex$1(sinh(e)/n,-Math.sin(t)/n)},csch:function(){const e=this.re,t=this.im,n=Math.cos(2*t)-cosh(2*e);return new Complex$1(-2*sinh(e)*Math.cos(t)/n,2*cosh(e)*Math.sin(t)/n)},sech:function(){const e=this.re,t=this.im,n=Math.cos(2*t)+cosh(2*e);return new Complex$1(2*cosh(e)*Math.cos(t)/n,-2*sinh(e)*Math.sin(t)/n)},asinh:function(){let e=this.im;this.im=-this.re,this.re=e;const t=this.asin();return this.re=-this.im,this.im=e,e=t.re,t.re=-t.im,t.im=e,t},acosh:function(){const e=this.acos();if(e.im<=0){const t=e.re;e.re=-e.im,e.im=t}else{const t=e.im;e.im=-e.re,e.re=t}return e},atanh:function(){const e=this.re,t=this.im,n=e>1&&t===0,r=1-e,i=1+e,s=r*r+t*t,o=s!==0?new Complex$1((i*r-t*t)/s,(t*r+i*t)/s):new Complex$1(e!==-1?e/0:0,t!==0?t/0:0),l=o.re;return o.re=logHypot(o.re,o.im)/2,o.im=Math.atan2(o.im,l)/2,n&&(o.im=-o.im),o},acoth:function(){const e=this.re,t=this.im;if(e===0&&t===0)return new Complex$1(0,Math.PI/2);const n=e*e+t*t;return n!==0?new Complex$1(e/n,-t/n).atanh():new Complex$1(e!==0?e/0:0,t!==0?-t/0:0).atanh()},acsch:function(){const e=this.re,t=this.im;if(t===0)return new Complex$1(e!==0?Math.log(e+Math.sqrt(e*e+1)):1/0,0);const n=e*e+t*t;return n!==0?new Complex$1(e/n,-t/n).asinh():new Complex$1(e!==0?e/0:0,t!==0?-t/0:0).asinh()},asech:function(){const e=this.re,t=this.im;if(this.isZero())return Complex$1.INFINITY;const n=e*e+t*t;return n!==0?new Complex$1(e/n,-t/n).acosh():new Complex$1(e!==0?e/0:0,t!==0?-t/0:0).acosh()},inverse:function(){if(this.isZero())return Complex$1.INFINITY;if(this.isInfinite())return Complex$1.ZERO;const e=this.re,t=this.im,n=e*e+t*t;return new Complex$1(e/n,-t/n)},conjugate:function(){return new Complex$1(this.re,-this.im)},neg:function(){return new Complex$1(-this.re,-this.im)},ceil:function(e){return e=Math.pow(10,e||0),new Complex$1(Math.ceil(this.re*e)/e,Math.ceil(this.im*e)/e)},floor:function(e){return e=Math.pow(10,e||0),new Complex$1(Math.floor(this.re*e)/e,Math.floor(this.im*e)/e)},round:function(e){return e=Math.pow(10,e||0),new Complex$1(Math.round(this.re*e)/e,Math.round(this.im*e)/e)},equals:function(e,t){const n=parse$3(e,t);return Math.abs(n.re-this.re)<=Complex$1.EPSILON&&Math.abs(n.im-this.im)<=Complex$1.EPSILON},clone:function(){return new Complex$1(this.re,this.im)},toString:function(){let e=this.re,t=this.im,n="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(e)<Complex$1.EPSILON&&(e=0),Math.abs(t)<Complex$1.EPSILON&&(t=0),t===0?n+e:(e!==0?(n+=e,n+=" ",t<0?(t=-t,n+="-"):n+="+",n+=" "):t<0&&(t=-t,n+="-"),t!==1&&(n+=t),n+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return this.im===0?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return this.im===0&&this.re===0},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!this.isFinite()}};Complex$1.ZERO=new Complex$1(0,0);Complex$1.ONE=new Complex$1(1,0);Complex$1.I=new Complex$1(0,1);Complex$1.PI=new Complex$1(Math.PI,0);Complex$1.E=new Complex$1(Math.E,0);Complex$1.INFINITY=new Complex$1(1/0,1/0);Complex$1.NAN=new Complex$1(NaN,NaN);Complex$1.EPSILON=1e-15;var name$I="Complex",dependencies$H=[],createComplexClass=factory(name$I,dependencies$H,()=>(Object.defineProperty(Complex$1,"name",{value:"Complex"}),Complex$1.prototype.constructor=Complex$1,Complex$1.prototype.type="Complex",Complex$1.prototype.isComplex=!0,Complex$1.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},Complex$1.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},Complex$1.prototype.format=function(e){var t="",n=this.im,r=this.re,i=format$2(this.re,e),s=format$2(this.im,e),o=isNumber$1(e)?e:e?e.precision:null;if(o!==null){var l=Math.pow(10,-o);Math.abs(r/n)<l&&(r=0),Math.abs(n/r)<l&&(n=0)}return n===0?t=i:r===0?n===1?t="i":n===-1?t="-i":t=s+"i":n<0?n===-1?t=i+" - i":t=i+" - "+s.substring(1)+"i":n===1?t=i+" + i":t=i+" + "+s+"i",t},Complex$1.fromPolar=function(e){switch(arguments.length){case 1:{var t=arguments[0];if(typeof t=="object")return Complex$1(t);throw new TypeError("Input has to be an object with r and phi keys.")}case 2:{var n=arguments[0],r=arguments[1];if(isNumber$1(n)){if(isUnit(r)&&r.hasBase("ANGLE")&&(r=r.toNumber("rad")),isNumber$1(r))return new Complex$1({r:n,phi:r});throw new TypeError("Phi is not a number nor an angle unit.")}else throw new TypeError("Radius r is not a number.")}default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},Complex$1.prototype.valueOf=Complex$1.prototype.toString,Complex$1.fromJSON=function(e){return new Complex$1(e)},Complex$1.compare=function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0},Complex$1),{isClass:!0});typeof BigInt>"u"&&(BigInt=function(e){if(isNaN(e))throw new Error("");return e});const C_ZERO=BigInt(0),C_ONE=BigInt(1),C_TWO=BigInt(2),C_FIVE=BigInt(5),C_TEN=BigInt(10),MAX_CYCLE_LEN=2e3,P={s:C_ONE,n:C_ZERO,d:C_ONE};function assign$1(e,t){try{e=BigInt(e)}catch{throw InvalidParameter()}return e*t}function trunc(e){return typeof e=="bigint"?e:Math.floor(e)}function newFraction(e,t){if(t===C_ZERO)throw DivisionByZero();const n=Object.create(Fraction$1.prototype);n.s=e<C_ZERO?-C_ONE:C_ONE,e=e<C_ZERO?-e:e;const r=gcd(e,t);return n.n=e/r,n.d=t/r,n}function factorize(e){const t={};let n=e,r=C_TWO,i=C_FIVE-C_ONE;for(;i<=n;){for(;n%r===C_ZERO;)n/=r,t[r]=(t[r]||C_ZERO)+C_ONE;i+=C_ONE+C_TWO*r++}return n!==e?n>1&&(t[n]=(t[n]||C_ZERO)+C_ONE):t[e]=(t[e]||C_ZERO)+C_ONE,t}const parse$2=function(e,t){let n=C_ZERO,r=C_ONE,i=C_ONE;if(e!=null)if(t!==void 0){if(typeof e=="bigint")n=e;else{if(isNaN(e))throw InvalidParameter();if(e%1!==0)throw NonIntegerParameter();n=BigInt(e)}if(typeof t=="bigint")r=t;else{if(isNaN(t))throw InvalidParameter();if(t%1!==0)throw NonIntegerParameter();r=BigInt(t)}i=n*r}else if(typeof e=="object"){if("d"in e&&"n"in e)n=BigInt(e.n),r=BigInt(e.d),"s"in e&&(n*=BigInt(e.s));else if(0 in e)n=BigInt(e[0]),1 in e&&(r=BigInt(e[1]));else if(typeof e=="bigint")n=e;else throw InvalidParameter();i=n*r}else if(typeof e=="number"){if(isNaN(e))throw InvalidParameter();if(e<0&&(i=-C_ONE,e=-e),e%1===0)n=BigInt(e);else if(e>0){let s=1,o=0,l=1,c=1,f=1,h=1e7;for(e>=1&&(s=10**Math.floor(1+Math.log10(e)),e/=s);l<=h&&f<=h;){let p=(o+c)/(l+f);if(e===p){l+f<=h?(n=o+c,r=l+f):f>l?(n=c,r=f):(n=o,r=l);break}else e>p?(o+=c,l+=f):(c+=o,f+=l),l>h?(n=c,r=f):(n=o,r=l)}n=BigInt(n)*BigInt(s),r=BigInt(r)}}else if(typeof e=="string"){let s=0,o=C_ZERO,l=C_ZERO,c=C_ZERO,f=C_ONE,h=C_ONE,p=e.replace(/_/g,"").match(/\d+|./g);if(p===null)throw InvalidParameter();if(p[s]==="-"?(i=-C_ONE,s++):p[s]==="+"&&s++,p.length===s+1?l=assign$1(p[s++],i):p[s+1]==="."||p[s]==="."?(p[s]!=="."&&(o=assign$1(p[s++],i)),s++,(s+1===p.length||p[s+1]==="("&&p[s+3]===")"||p[s+1]==="'"&&p[s+3]==="'")&&(l=assign$1(p[s],i),f=C_TEN**BigInt(p[s].length),s++),(p[s]==="("&&p[s+2]===")"||p[s]==="'"&&p[s+2]==="'")&&(c=assign$1(p[s+1],i),h=C_TEN**BigInt(p[s+1].length)-C_ONE,s+=3)):p[s+1]==="/"||p[s+1]===":"?(l=assign$1(p[s],i),f=assign$1(p[s+2],C_ONE),s+=3):p[s+3]==="/"&&p[s+1]===" "&&(o=assign$1(p[s],i),l=assign$1(p[s+2],i),f=assign$1(p[s+4],C_ONE),s+=5),p.length<=s)r=f*h,i=n=c+r*o+h*l;else throw InvalidParameter()}else if(typeof e=="bigint")n=e,i=e,r=C_ONE;else throw InvalidParameter();if(r===C_ZERO)throw DivisionByZero();P.s=i<C_ZERO?-C_ONE:C_ONE,P.n=n<C_ZERO?-n:n,P.d=r<C_ZERO?-r:r};function modpow(e,t,n){let r=C_ONE;for(;t>C_ZERO;e=e*e%n,t>>=C_ONE)t&C_ONE&&(r=r*e%n);return r}function cycleLen(e,t){for(;t%C_TWO===C_ZERO;t/=C_TWO);for(;t%C_FIVE===C_ZERO;t/=C_FIVE);if(t===C_ONE)return C_ZERO;let n=C_TEN%t,r=1;for(;n!==C_ONE;r++)if(n=n*C_TEN%t,r>MAX_CYCLE_LEN)return C_ZERO;return BigInt(r)}function cycleStart(e,t,n){let r=C_ONE,i=modpow(C_TEN,n,t);for(let s=0;s<300;s++){if(r===i)return BigInt(s);r=r*C_TEN%t,i=i*C_TEN%t}return 0}function gcd(e,t){if(!e)return t;if(!t)return e;for(;;){if(e%=t,!e)return t;if(t%=e,!t)return e}}function Fraction$1(e,t){if(parse$2(e,t),this instanceof Fraction$1)e=gcd(P.d,P.n),this.s=P.s,this.n=P.n/e,this.d=P.d/e;else return newFraction(P.s*P.n,P.d)}var DivisionByZero=function(){return new Error("Division by Zero")},InvalidParameter=function(){return new Error("Invalid argument")},NonIntegerParameter=function(){return new Error("Parameters must be integer")};Fraction$1.prototype={s:C_ONE,n:C_ZERO,d:C_ONE,abs:function(){return newFraction(this.n,this.d)},neg:function(){return newFraction(-this.s*this.n,this.d)},add:function(e,t){return parse$2(e,t),newFraction(this.s*this.n*P.d+P.s*this.d*P.n,this.d*P.d)},sub:function(e,t){return parse$2(e,t),newFraction(this.s*this.n*P.d-P.s*this.d*P.n,this.d*P.d)},mul:function(e,t){return parse$2(e,t),newFraction(this.s*P.s*this.n*P.n,this.d*P.d)},div:function(e,t){return parse$2(e,t),newFraction(this.s*P.s*this.n*P.d,this.d*P.n)},clone:function(){return newFraction(this.s*this.n,this.d)},mod:function(e,t){if(e===void 0)return newFraction(this.s*this.n%this.d,C_ONE);if(parse$2(e,t),C_ZERO===P.n*this.d)throw DivisionByZero();return newFraction(this.s*(P.d*this.n)%(P.n*this.d),P.d*this.d)},gcd:function(e,t){return parse$2(e,t),newFraction(gcd(P.n,this.n)*gcd(P.d,this.d),P.d*this.d)},lcm:function(e,t){return parse$2(e,t),P.n===C_ZERO&&this.n===C_ZERO?newFraction(C_ZERO,C_ONE):newFraction(P.n*this.n,gcd(P.n,this.n)*gcd(P.d,this.d))},inverse:function(){return newFraction(this.s*this.d,this.n)},pow:function(e,t){if(parse$2(e,t),P.d===C_ONE)return P.s<C_ZERO?newFraction((this.s*this.d)**P.n,this.n**P.n):newFraction((this.s*this.n)**P.n,this.d**P.n);if(this.s<C_ZERO)return null;let n=factorize(this.n),r=factorize(this.d),i=C_ONE,s=C_ONE;for(let o in n)if(o!=="1"){if(o==="0"){i=C_ZERO;break}if(n[o]*=P.n,n[o]%P.d===C_ZERO)n[o]/=P.d;else return null;i*=BigInt(o)**n[o]}for(let o in r)if(o!=="1"){if(r[o]*=P.n,r[o]%P.d===C_ZERO)r[o]/=P.d;else return null;s*=BigInt(o)**r[o]}return P.s<C_ZERO?newFraction(s,i):newFraction(i,s)},log:function(e,t){if(parse$2(e,t),this.s<=C_ZERO||P.s<=C_ZERO)return null;const n={},r=factorize(P.n),i=factorize(P.d),s=factorize(this.n),o=factorize(this.d);for(const f in i)r[f]=(r[f]||C_ZERO)-i[f];for(const f in o)s[f]=(s[f]||C_ZERO)-o[f];for(const f in r)f!=="1"&&(n[f]=!0);for(const f in s)f!=="1"&&(n[f]=!0);let l=null,c=null;for(const f in n){const h=r[f]||C_ZERO,p=s[f]||C_ZERO;if(h===C_ZERO){if(p!==C_ZERO)return null;continue}let g=p,x=h;const D=gcd(g,x);if(g/=D,x/=D,l===null&&c===null)l=g,c=x;else if(g*c!==l*x)return null}return l!==null&&c!==null?newFraction(l,c):null},equals:function(e,t){return parse$2(e,t),this.s*this.n*P.d===P.s*P.n*this.d},lt:function(e,t){return parse$2(e,t),this.s*this.n*P.d<P.s*P.n*this.d},lte:function(e,t){return parse$2(e,t),this.s*this.n*P.d<=P.s*P.n*this.d},gt:function(e,t){return parse$2(e,t),this.s*this.n*P.d>P.s*P.n*this.d},gte:function(e,t){return parse$2(e,t),this.s*this.n*P.d>=P.s*P.n*this.d},compare:function(e,t){parse$2(e,t);let n=this.s*this.n*P.d-P.s*P.n*this.d;return(C_ZERO<n)-(n<C_ZERO)},ceil:function(e){return e=C_TEN**BigInt(e||0),newFraction(trunc(this.s*e*this.n/this.d)+(e*this.n%this.d>C_ZERO&&this.s>=C_ZERO?C_ONE:C_ZERO),e)},floor:function(e){return e=C_TEN**BigInt(e||0),newFraction(trunc(this.s*e*this.n/this.d)-(e*this.n%this.d>C_ZERO&&this.s<C_ZERO?C_ONE:C_ZERO),e)},round:function(e){return e=C_TEN**BigInt(e||0),newFraction(trunc(this.s*e*this.n/this.d)+this.s*((this.s>=C_ZERO?C_ONE:C_ZERO)+C_TWO*(e*this.n%this.d)>this.d?C_ONE:C_ZERO),e)},roundTo:function(e,t){parse$2(e,t);const n=this.n*P.d,r=this.d*P.n,i=n%r;let s=trunc(n/r);return i+i>=r&&s++,newFraction(this.s*s*P.n,P.d)},divisible:function(e,t){return parse$2(e,t),!(!(P.n*this.d)||this.n*P.d%(P.n*this.d))},valueOf:function(){return Number(this.s*this.n)/Number(this.d)},toString:function(e){let t=this.n,n=this.d;e=e||15;let r=cycleLen(t,n),i=cycleStart(t,n,r),s=this.s<C_ZERO?"-":"";if(s+=trunc(t/n),t%=n,t*=C_TEN,t&&(s+="."),r){for(let o=i;o--;)s+=trunc(t/n),t%=n,t*=C_TEN;s+="(";for(let o=r;o--;)s+=trunc(t/n),t%=n,t*=C_TEN;s+=")"}else for(let o=e;t&&o--;)s+=trunc(t/n),t%=n,t*=C_TEN;return s},toFraction:function(e){let t=this.n,n=this.d,r=this.s<C_ZERO?"-":"";if(n===C_ONE)r+=t;else{let i=trunc(t/n);e&&i>C_ZERO&&(r+=i,r+=" ",t%=n),r+=t,r+="/",r+=n}return r},toLatex:function(e){let t=this.n,n=this.d,r=this.s<C_ZERO?"-":"";if(n===C_ONE)r+=t;else{let i=trunc(t/n);e&&i>C_ZERO&&(r+=i,t%=n),r+="\\frac{",r+=t,r+="}{",r+=n,r+="}"}return r},toContinued:function(){let e=this.n,t=this.d,n=[];do{n.push(trunc(e/t));let r=e%t;e=t,t=r}while(e!==C_ONE);return n},simplify:function(e){const t=BigInt(1/(e||.001)|0),n=this.abs(),r=n.toContinued();for(let i=1;i<r.length;i++){let s=newFraction(r[i-1],C_ONE);for(let l=i-2;l>=0;l--)s=s.inverse().add(r[l]);let o=s.sub(n);if(o.n*t<o.d)return s.mul(this.s)}return this}};var name$H="Fraction",dependencies$G=[],createFractionClass=factory(name$H,dependencies$G,()=>(Object.defineProperty(Fraction$1,"name",{value:"Fraction"}),Fraction$1.prototype.constructor=Fraction$1,Fraction$1.prototype.type="Fraction",Fraction$1.prototype.isFraction=!0,Fraction$1.prototype.toJSON=function(){return{mathjs:"Fraction",n:String(this.s*this.n),d:String(this.d)}},Fraction$1.fromJSON=function(e){return new Fraction$1(e)},Fraction$1),{isClass:!0}),name$G="Matrix",dependencies$F=[],createMatrixClass=factory(name$G,dependencies$F,()=>{function e(){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator")}return e.prototype.type="Matrix",e.prototype.isMatrix=!0,e.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},e.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},e.prototype.create=function(t,n){throw new Error("Cannot invoke create on a Matrix interface")},e.prototype.subset=function(t,n,r){throw new Error("Cannot invoke subset on a Matrix interface")},e.prototype.get=function(t){throw new Error("Cannot invoke get on a Matrix interface")},e.prototype.set=function(t,n,r){throw new Error("Cannot invoke set on a Matrix interface")},e.prototype.resize=function(t,n){throw new Error("Cannot invoke resize on a Matrix interface")},e.prototype.reshape=function(t,n){throw new Error("Cannot invoke reshape on a Matrix interface")},e.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},e.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},e.prototype.map=function(t,n){throw new Error("Cannot invoke map on a Matrix interface")},e.prototype.forEach=function(t){throw new Error("Cannot invoke forEach on a Matrix interface")},e.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},e.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},e.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},e.prototype.format=function(t){throw new Error("Cannot invoke format on a Matrix interface")},e.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},e},{isClass:!0});function formatBigNumberToBase(e,t,n){var r=e.constructor,i=new r(2),s="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!isInteger$3(n))throw new Error("size must be an integer");if(e.greaterThan(i.pow(n-1).sub(1))||e.lessThan(i.pow(n-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!e.isInteger())throw new Error("Value must be an integer");e.lessThan(0)&&(e=e.add(i.pow(n))),s="i".concat(n)}switch(t){case 2:return"".concat(e.toBinary()).concat(s);case 8:return"".concat(e.toOctal()).concat(s);case 16:return"".concat(e.toHexadecimal()).concat(s);default:throw new Error("Base ".concat(t," not supported "))}}function format$1(e,t){if(typeof t=="function")return t(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var{notation:n,precision:r,wordSize:i}=normalizeFormatOptions(t);switch(n){case"fixed":return toFixed(e,r);case"exponential":return toExponential(e,r);case"engineering":return toEngineering(e,r);case"bin":return formatBigNumberToBase(e,2,i);case"oct":return formatBigNumberToBase(e,8,i);case"hex":return formatBigNumberToBase(e,16,i);case"auto":{var s=_toNumberOrDefault(t==null?void 0:t.lowerExp,-3),o=_toNumberOrDefault(t==null?void 0:t.upperExp,5);if(e.isZero())return"0";var l,c=e.toSignificantDigits(r),f=c.e;return f>=s&&f<o?l=c.toFixed():l=toExponential(e,r),l.replace(/((\.\d*?)(0+))($|e)/,function(){var h=arguments[2],p=arguments[4];return h!=="."?h+p:p})}default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function toEngineering(e,t){var n=e.e,r=n%3===0?n:n<0?n-3-n%3:n-n%3,i=e.mul(Math.pow(10,-r)),s=i.toPrecision(t);if(s.includes("e")){var o=e.constructor;s=new o(s).toFixed()}return s+"e"+(n>=0?"+":"")+r.toString()}function toExponential(e,t){return t!==void 0?e.toExponential(t-1):e.toExponential()}function toFixed(e,t){return e.toFixed(t)}function _toNumberOrDefault(e,t){return isNumber$1(e)?e:isBigNumber(e)?e.toNumber():t}function format(e,t){var n=_format(e,t);return t&&typeof t=="object"&&"truncate"in t&&n.length>t.truncate?n.substring(0,t.truncate-3)+"...":n}function _format(e,t){if(typeof e=="number")return format$2(e,t);if(isBigNumber(e))return format$1(e,t);if(looksLikeFraction(e))return!t||t.fraction!=="decimal"?"".concat(e.s*e.n,"/").concat(e.d):e.toString();if(Array.isArray(e))return formatArray(e,t);if(isString(e))return stringify(e);if(typeof e=="function")return e.syntax?String(e.syntax):"function";if(e&&typeof e=="object"){if(typeof e.format=="function")return e.format(t);if(e&&e.toString(t)!=={}.toString())return e.toString(t);var n=Object.keys(e).map(r=>stringify(r)+": "+format(e[r],t));return"{"+n.join(", ")+"}"}return String(e)}function stringify(e){for(var t=String(e),n="",r=0;r<t.length;){var i=t.charAt(r);n+=i in controlCharacters?controlCharacters[i]:i,r++}return'"'+n+'"'}var controlCharacters={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t"};function formatArray(e,t){if(Array.isArray(e)){for(var n="[",r=e.length,i=0;i<r;i++)i!==0&&(n+=", "),n+=formatArray(e[i],t);return n+="]",n}else return format(e,t)}function looksLikeFraction(e){return e&&typeof e=="object"&&typeof e.s=="bigint"&&typeof e.n=="bigint"&&typeof e.d=="bigint"||!1}function DimensionError(e,t,n){if(!(this instanceof DimensionError))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=new Error().stack}DimensionError.prototype=new RangeError;DimensionError.prototype.constructor=RangeError;DimensionError.prototype.name="DimensionError";DimensionError.prototype.isDimensionError=!0;function IndexError(e,t,n){if(!(this instanceof IndexError))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),this.min!==void 0&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":this.max!==void 0&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=new Error().stack}IndexError.prototype=new RangeError;IndexError.prototype.constructor=RangeError;IndexError.prototype.name="IndexError";IndexError.prototype.isIndexError=!0;function arraySize(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t}function _validate(e,t,n){var r,i=e.length;if(i!==t[n])throw new DimensionError(i,t[n]);if(n<t.length-1){var s=n+1;for(r=0;r<i;r++){var o=e[r];if(!Array.isArray(o))throw new DimensionError(t.length-1,t.length,"<");_validate(e[r],t,s)}}else for(r=0;r<i;r++)if(Array.isArray(e[r]))throw new DimensionError(t.length+1,t.length,">")}function validate(e,t){var n=t.length===0;if(n){if(Array.isArray(e))throw new DimensionError(e.length,0)}else _validate(e,t,0)}function validateIndex(e,t){if(e!==void 0){if(!isNumber$1(e)||!isInteger$3(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0||typeof t=="number"&&e>=t)throw new IndexError(e,t)}}function resize$1(e,t,n){if(!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new Error("Resizing to scalar is not supported");t.forEach(function(i){if(!isNumber$1(i)||!isInteger$3(i)||i<0)throw new TypeError("Invalid size, must contain positive integers (size: "+format(t)+")")}),(isNumber$1(e)||isBigNumber(e))&&(e=[e]);var r=n!==void 0?n:0;return _resize(e,t,0,r),e}function _resize(e,t,n,r){var i,s,o=e.length,l=t[n],c=Math.min(o,l);if(e.length=l,n<t.length-1){var f=n+1;for(i=0;i<c;i++)s=e[i],Array.isArray(s)||(s=[s],e[i]=s),_resize(s,t,f,r);for(i=c;i<l;i++)s=[],e[i]=s,_resize(s,t,f,r)}else{for(i=0;i<c;i++)for(;Array.isArray(e[i]);)e[i]=e[i][0];for(i=c;i<l;i++)e[i]=r}}function reshape$1(e,t){var n=flatten(e),r=n.length;if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new DimensionError(0,r,"!=");t=processSizesWildcard(t,r);var i=product(t);if(r!==i)throw new DimensionError(i,r,"!=");try{return _reshape(n,t)}catch(s){throw s instanceof DimensionError?new DimensionError(i,r,"!="):s}}function processSizesWildcard(e,t){var n=product(e),r=e.slice(),i=-1,s=e.indexOf(i),o=e.indexOf(i,s+1)>=0;if(o)throw new Error("More than one wildcard in sizes");var l=s>=0,c=t%n===0;if(l)if(c)r[s]=-t/n;else throw new Error("Could not replace wildcard, since "+t+" is no multiple of "+-n);return r}function product(e){return e.reduce((t,n)=>t*n,1)}function _reshape(e,t){for(var n=e,r,i=t.length-1;i>0;i--){var s=t[i];r=[];for(var o=n.length/s,l=0;l<o;l++)r.push(n.slice(l*s,(l+1)*s));n=r}return n}function unsqueeze(e,t,n,r){var i=r||arraySize(e);if(n)for(var s=0;s<n;s++)e=[e],i.unshift(1);for(e=_unsqueeze(e,t,0);i.length<t;)i.push(1);return e}function _unsqueeze(e,t,n){var r,i;if(Array.isArray(e)){var s=n+1;for(r=0,i=e.length;r<i;r++)e[r]=_unsqueeze(e[r],t,s)}else for(var o=n;o<t;o++)e=[e];return e}function flatten(e){if(!Array.isArray(e))return e;var t=[];return e.forEach(function n(r){Array.isArray(r)?r.forEach(n):t.push(r)}),t}function getArrayDataType(e,t){for(var n,r=0,i=0;i<e.length;i++){var s=e[i],o=Array.isArray(s);if(i===0&&o&&(r=s.length),o&&s.length!==r)return;var l=o?getArrayDataType(s,t):t(s);if(n===void 0)n=l;else if(n!==l)return"mixed"}return n}function concatRecursive(e,t,n,r){if(r<n){if(e.length!==t.length)throw new DimensionError(e.length,t.length);for(var i=[],s=0;s<e.length;s++)i[s]=concatRecursive(e[s],t[s],n,r+1);return i}else return e.concat(t)}function concat$1(){var e=Array.prototype.slice.call(arguments,0,-1),t=Array.prototype.slice.call(arguments,-1);if(e.length===1)return e[0];if(e.length>1)return e.slice(1).reduce(function(n,r){return concatRecursive(n,r,t,0)},e[0]);throw new Error("Wrong number of arguments in function concat")}function broadcastSizes(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var r=t.map(g=>g.length),i=Math.max(...r),s=new Array(i).fill(null),o=0;o<t.length;o++)for(var l=t[o],c=r[o],f=0;f<c;f++){var h=i-c+f;l[f]>s[h]&&(s[h]=l[f])}for(var p=0;p<t.length;p++)checkBroadcastingRules(t[p],s);return s}function checkBroadcastingRules(e,t){for(var n=t.length,r=e.length,i=0;i<r;i++){var s=n-r+i;if(e[i]<t[s]&&e[i]>1||e[i]>t[s])throw new Error("shape missmatch: missmatch is found in arg with shape (".concat(e,") not possible to broadcast dimension ").concat(r," with size ").concat(e[i]," to size ").concat(t[s]))}}function broadcastTo(e,t){var n=arraySize(e);if(deepStrictEqual(n,t))return e;checkBroadcastingRules(n,t);var r=broadcastSizes(n,t),i=r.length,s=[...Array(i-n.length).fill(1),...n],o=clone$2(e);n.length<i&&(o=reshape$1(o,s),n=arraySize(o));for(var l=0;l<i;l++)n[l]<r[l]&&(o=stretch(o,r[l],l),n=arraySize(o));return o}function stretch(e,t,n){return concat$1(...Array(t).fill(e),n)}function get(e,t){if(!Array.isArray(e))throw new Error("Array expected");var n=arraySize(e);if(t.length!==n.length)throw new DimensionError(t.length,n.length);for(var r=0;r<t.length;r++)validateIndex(t[r],n[r]);return t.reduce((i,s)=>i[s],e)}function recurse(e,t,n,r){return Array.isArray(e)?e.map(function(i,s){return recurse(i,t.concat(s),n,r)}):r(e,t,n)}function clone$2(e){return _extends([],e)}function optimizeCallback(e,t,n){if(typedFunction.isTypedFunction(e)){var r=(t.isMatrix?t.size():arraySize(t)).map(()=>0),i=t.isMatrix?t.get(r):get(t,r),s=Object.keys(e.signatures).length===1,o=_findNumberOfArguments(e,i,r,t),l=s?Object.values(e.signatures)[0]:e;return o>=1&&o<=3?function(){for(var c=arguments.length,f=new Array(c),h=0;h<c;h++)f[h]=arguments[h];return _tryFunctionWithArgs(l,f.slice(0,o),n,e.name)}:function(){for(var c=arguments.length,f=new Array(c),h=0;h<c;h++)f[h]=arguments[h];return _tryFunctionWithArgs(l,f,n,e.name)}}return e}function _findNumberOfArguments(e,t,n,r){for(var i=[t,n,r],s=3;s>0;s--){var o=i.slice(0,s);if(typedFunction.resolve(e,o)!==null)return s}}function _tryFunctionWithArgs(e,t,n,r){try{return e(...t)}catch(i){_createCallbackError(i,t,n,r)}}function _createCallbackError(e,t,n,r){var i;if(e instanceof TypeError&&((i=e.data)===null||i===void 0?void 0:i.category)==="wrongType"){var s=[];throw s.push("value: ".concat(typeOf(t[0]))),t.length>=2&&s.push("index: ".concat(typeOf(t[1]))),t.length>=3&&s.push("array: ".concat(typeOf(t[2]))),new TypeError("Function ".concat(n," cannot apply callback arguments ")+"".concat(r,"(").concat(s.join(", "),") at index ").concat(JSON.stringify(t[1])))}else throw new TypeError("Function ".concat(n," cannot apply callback arguments ")+"to function ".concat(r,": ").concat(e.message))}var name$F="DenseMatrix",dependencies$E=["Matrix"],createDenseMatrixClass=factory(name$F,dependencies$E,e=>{var{Matrix:t}=e;function n(h,p){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(p&&!isString(p))throw new Error("Invalid datatype: "+p);if(isMatrix(h))h.type==="DenseMatrix"?(this._data=clone$4(h._data),this._size=clone$4(h._size),this._datatype=p||h._datatype):(this._data=h.toArray(),this._size=h.size(),this._datatype=p||h._datatype);else if(h&&isArray$2(h.data)&&isArray$2(h.size))this._data=h.data,this._size=h.size,validate(this._data,this._size),this._datatype=p||h.datatype;else if(isArray$2(h))this._data=f(h),this._size=arraySize(this._data),validate(this._data,this._size),this._datatype=p;else{if(h)throw new TypeError("Unsupported type of data ("+typeOf(h)+")");this._data=[],this._size=[0],this._datatype=p}}n.prototype=new t,n.prototype.createDenseMatrix=function(h,p){return new n(h,p)},Object.defineProperty(n,"name",{value:"DenseMatrix"}),n.prototype.constructor=n,n.prototype.type="DenseMatrix",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return getArrayDataType(this._data,typeOf)},n.prototype.storage=function(){return"dense"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(h,p){return new n(h,p)},n.prototype.subset=function(h,p,g){switch(arguments.length){case 1:return r(this,h);case 2:case 3:return s(this,h,p,g);default:throw new SyntaxError("Wrong number of arguments")}},n.prototype.get=function(h){return get(this._data,h)},n.prototype.set=function(h,p,g){if(!isArray$2(h))throw new TypeError("Array expected");if(h.length<this._size.length)throw new DimensionError(h.length,this._size.length,"<");var x,D,y,E=h.map(function(B){return B+1});c(this,E,g);var F=this._data;for(x=0,D=h.length-1;x<D;x++)y=h[x],validateIndex(y,F.length),F=F[y];return y=h[h.length-1],validateIndex(y,F.length),F[y]=p,this};function r(h,p){if(!isIndex(p))throw new TypeError("Invalid index");var g=p.isScalar();if(g)return h.get(p.min());var x=p.size();if(x.length!==h._size.length)throw new DimensionError(x.length,h._size.length);for(var D=p.min(),y=p.max(),E=0,F=h._size.length;E<F;E++)validateIndex(D[E],h._size[E]),validateIndex(y[E],h._size[E]);return new n(i(h._data,p,x.length,0),h._datatype)}function i(h,p,g,x){var D=x===g-1,y=p.dimension(x);return D?y.map(function(E){return validateIndex(E,h.length),h[E]}).valueOf():y.map(function(E){validateIndex(E,h.length);var F=h[E];return i(F,p,g,x+1)}).valueOf()}function s(h,p,g,x){if(!p||p.isIndex!==!0)throw new TypeError("Invalid index");var D=p.size(),y=p.isScalar(),E;if(isMatrix(g)?(E=g.size(),g=g.valueOf()):E=arraySize(g),y){if(E.length!==0)throw new TypeError("Scalar expected");h.set(p.min(),g,x)}else{if(!deepStrictEqual(E,D))try{E.length===0?g=broadcastTo([g],D):g=broadcastTo(g,D),E=arraySize(g)}catch{}if(D.length<h._size.length)throw new DimensionError(D.length,h._size.length,"<");if(E.length<D.length){for(var F=0,B=0;D[F]===1&&E[F]===1;)F++;for(;D[F]===1;)B++,F++;g=unsqueeze(g,D.length,B,E)}if(!deepStrictEqual(D,E))throw new DimensionError(D,E,">");var M=p.max().map(function(N){return N+1});c(h,M,x);var k=D.length,T=0;o(h._data,p,g,k,T)}return h}function o(h,p,g,x,D){var y=D===x-1,E=p.dimension(D);y?E.forEach(function(F,B){validateIndex(F),h[F]=g[B[0]]}):E.forEach(function(F,B){validateIndex(F),o(h[F],p,g[B[0]],x,D+1)})}n.prototype.resize=function(h,p,g){if(!isCollection(h))throw new TypeError("Array or Matrix expected");var x=h.valueOf().map(y=>Array.isArray(y)&&y.length===1?y[0]:y),D=g?this.clone():this;return l(D,x,p)};function l(h,p,g){if(p.length===0){for(var x=h._data;isArray$2(x);)x=x[0];return x}return h._size=p.slice(0),h._data=resize$1(h._data,h._size,g),h}n.prototype.reshape=function(h,p){var g=p?this.clone():this;g._data=reshape$1(g._data,h);var x=g._size.reduce((D,y)=>D*y);return g._size=processSizesWildcard(h,x),g};function c(h,p,g){for(var x=h._size.slice(0),D=!1;x.length<p.length;)x.push(0),D=!0;for(var y=0,E=p.length;y<E;y++)p[y]>x[y]&&(x[y]=p[y],D=!0);D&&l(h,x,g)}n.prototype.clone=function(){var h=new n({data:clone$4(this._data),size:clone$4(this._size),datatype:this._datatype});return h},n.prototype.size=function(){return this._size.slice(0)},n.prototype._forEach=function(h){var p=this,g=p.size();if(g.length===1){for(var x=0;x<g[0];x++)h(p._data,x,[x]);return}var D=Array(g.length).fill(0),y=Array(g.length-1),E=y.length-1;y[0]=p._data[0];for(var F=0;F<E;F++)y[F+1]=y[F][0];for(D[E]=-1;;){var B=void 0;for(B=E;B>=0;B--){if(D[B]++,D[B]===g[B]){D[B]=0;continue}y[B]=B===0?p._data[D[B]]:y[B-1][D[B]];for(var M=B;M<E;M++)y[M+1]=y[M][0];for(var k=0;k<g[y.length];k++)D[y.length]=k,h(y[E],k,D.slice(0));break}if(B===-1)break}},n.prototype.map=function(h){var p=this,g=new n(p),x=optimizeCallback(h,p._data,"map");return g._forEach(function(D,y,E){D[y]=x(D[y],E,p)}),g},n.prototype.forEach=function(h){var p=this,g=optimizeCallback(h,p._data,"map");p._forEach(function(x,D,y){g(x[D],y,p)})},n.prototype[Symbol.iterator]=function*(){var h=function*(g,x){if(isArray$2(g))for(var D=0;D<g.length;D++)yield*h(g[D],x.concat(D));else yield{value:g,index:x}};yield*h(this._data,[])},n.prototype.rows=function(){var h=[],p=this.size();if(p.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");var g=this._data;for(var x of g)h.push(new n([x],this._datatype));return h},n.prototype.columns=function(){var h=this,p=[],g=this.size();if(g.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var x=this._data,D=function(F){var B=x.map(M=>[M[F]]);p.push(new n(B,h._datatype))},y=0;y<g[1];y++)D(y);return p},n.prototype.toArray=function(){return clone$4(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(h){return format(this._data,h)},n.prototype.toString=function(){return format(this._data)},n.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(h){if(h){if(isBigNumber(h)&&(h=h.toNumber()),!isNumber$1(h)||!isInteger$3(h))throw new TypeError("The parameter k must be an integer number")}else h=0;for(var p=h>0?h:0,g=h<0?-h:0,x=this._size[0],D=this._size[1],y=Math.min(x-g,D-p),E=[],F=0;F<y;F++)E[F]=this._data[F+g][F+p];return new n({data:E,size:[y],datatype:this._datatype})},n.diagonal=function(h,p,g,x){if(!isArray$2(h))throw new TypeError("Array expected, size parameter");if(h.length!==2)throw new Error("Only two dimensions matrix are supported");if(h=h.map(function($){if(isBigNumber($)&&($=$.toNumber()),!isNumber$1($)||!isInteger$3($)||$<1)throw new Error("Size values must be positive integers");return $}),g){if(isBigNumber(g)&&(g=g.toNumber()),!isNumber$1(g)||!isInteger$3(g))throw new TypeError("The parameter k must be an integer number")}else g=0;var D=g>0?g:0,y=g<0?-g:0,E=h[0],F=h[1],B=Math.min(E-y,F-D),M;if(isArray$2(p)){if(p.length!==B)throw new Error("Invalid value array length");M=function(R){return p[R]}}else if(isMatrix(p)){var k=p.size();if(k.length!==1||k[0]!==B)throw new Error("Invalid matrix length");M=function(R){return p.get([R])}}else M=function(){return p};x||(x=isBigNumber(M(0))?M(0).mul(0):0);var T=[];if(h.length>0){T=resize$1(T,h,x);for(var N=0;N<B;N++)T[N+y][N+D]=M(N)}return new n({data:T,size:[E,F]})},n.fromJSON=function(h){return new n(h)},n.prototype.swapRows=function(h,p){if(!isNumber$1(h)||!isInteger$3(h)||!isNumber$1(p)||!isInteger$3(p))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return validateIndex(h,this._size[0]),validateIndex(p,this._size[0]),n._swapRows(h,p,this._data),this},n._swapRows=function(h,p,g){var x=g[h];g[h]=g[p],g[p]=x};function f(h){return isMatrix(h)?f(h.valueOf()):isArray$2(h)?h.map(f):h}return n},{isClass:!0});function _switch(e){var t=e.length,n=e[0].length,r,i,s=[];for(i=0;i<n;i++){var o=[];for(r=0;r<t;r++)o.push(e[r][i]);s.push(o)}return s}function containsCollections(e){for(var t=0;t<e.length;t++)if(isCollection(e[t]))return!0;return!1}function deepForEach(e,t){isMatrix(e)&&(e=e.valueOf());for(var n=0,r=e.length;n<r;n++){var i=e[n];Array.isArray(i)?deepForEach(i,t):t(i)}}function deepMap(e,t,n){return e&&typeof e.map=="function"?e.map(function(r){return deepMap(r,t)}):t(e)}function reduce(e,t,n){var r=Array.isArray(e)?arraySize(e):e.size();if(t<0||t>=r.length)throw new IndexError(t,r.length);return isMatrix(e)?e.create(_reduce(e.valueOf(),t,n),e.datatype()):_reduce(e,t,n)}function _reduce(e,t,n){var r,i,s,o;if(t<=0)if(Array.isArray(e[0])){for(o=_switch(e),i=[],r=0;r<o.length;r++)i[r]=_reduce(o[r],t-1,n);return i}else{for(s=e[0],r=1;r<e.length;r++)s=n(s,e[r]);return s}else{for(i=[],r=0;r<e.length;r++)i[r]=_reduce(e[r],t-1,n);return i}}var name$E="isInteger",dependencies$D=["typed"],createIsInteger=factory(name$E,dependencies$D,e=>{var{typed:t}=e;return t(name$E,{number:isInteger$3,BigNumber:function(r){return r.isInt()},bigint:function(r){return!0},Fraction:function(r){return r.d===1n},"Array | Matrix":t.referToSelf(n=>r=>deepMap(r,n))})}),n1="number",n2="number, number";function addNumber(e,t){return e+t}addNumber.signature=n2;function subtractNumber(e,t){return e-t}subtractNumber.signature=n2;function multiplyNumber(e,t){return e*t}multiplyNumber.signature=n2;function unaryMinusNumber(e){return-e}unaryMinusNumber.signature=n1;function expNumber(e){return Math.exp(e)}expNumber.signature=n1;function nearlyEqual(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1e-9,r=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0;if(n<=0)throw new Error("Relative tolerance must be greater than 0");if(r<0)throw new Error("Absolute tolerance must be at least 0");return e.isNaN()||t.isNaN()?!1:!e.isFinite()||!t.isFinite()?e.eq(t):e.eq(t)?!0:e.minus(t).abs().lte(e.constructor.max(e.constructor.max(e.abs(),t.abs()).mul(n),r))}function complexEquals(e,t,n,r){return nearlyEqual$1(e.re,t.re,n,r)&&nearlyEqual$1(e.im,t.im,n,r)}var createCompareUnits=factory("compareUnits",["typed"],e=>{var{typed:t}=e;return{"Unit, Unit":t.referToSelf(n=>(r,i)=>{if(!r.equalBase(i))throw new Error("Cannot compare units with different base");return t.find(n,[r.valueType(),i.valueType()])(r.value,i.value)})}}),name$D="equalScalar",dependencies$C=["typed","config"],createEqualScalar=factory(name$D,dependencies$C,e=>{var{typed:t,config:n}=e,r=createCompareUnits({typed:t});return t(name$D,{"boolean, boolean":function(s,o){return s===o},"number, number":function(s,o){return nearlyEqual$1(s,o,n.relTol,n.absTol)},"BigNumber, BigNumber":function(s,o){return s.eq(o)||nearlyEqual(s,o,n.relTol,n.absTol)},"bigint, bigint":function(s,o){return s===o},"Fraction, Fraction":function(s,o){return s.equals(o)},"Complex, Complex":function(s,o){return complexEquals(s,o,n.relTol,n.absTol)}},r)});factory(name$D,["typed","config"],e=>{var{typed:t,config:n}=e;return t(name$D,{"number, number":function(i,s){return nearlyEqual$1(i,s,n.relTol,n.absTol)}})});var name$C="SparseMatrix",dependencies$B=["typed","equalScalar","Matrix"],createSparseMatrixClass=factory(name$C,dependencies$B,e=>{var{typed:t,equalScalar:n,Matrix:r}=e;function i(y,E){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");if(E&&!isString(E))throw new Error("Invalid datatype: "+E);if(isMatrix(y))s(this,y,E);else if(y&&isArray$2(y.index)&&isArray$2(y.ptr)&&isArray$2(y.size))this._values=y.values,this._index=y.index,this._ptr=y.ptr,this._size=y.size,this._datatype=E||y.datatype;else if(isArray$2(y))o(this,y,E);else{if(y)throw new TypeError("Unsupported type of data ("+typeOf(y)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=E}}function s(y,E,F){E.type==="SparseMatrix"?(y._values=E._values?clone$4(E._values):void 0,y._index=clone$4(E._index),y._ptr=clone$4(E._ptr),y._size=clone$4(E._size),y._datatype=F||E._datatype):o(y,E.valueOf(),F||E._datatype)}function o(y,E,F){y._values=[],y._index=[],y._ptr=[],y._datatype=F;var B=E.length,M=0,k=n,T=0;if(isString(F)&&(k=t.find(n,[F,F])||n,T=t.convert(0,F)),B>0){var N=0;do{y._ptr.push(y._index.length);for(var $=0;$<B;$++){var R=E[$];if(isArray$2(R)){if(N===0&&M<R.length&&(M=R.length),N<R.length){var O=R[N];k(O,T)||(y._values.push(O),y._index.push($))}}else N===0&&M<1&&(M=1),k(R,T)||(y._values.push(R),y._index.push($))}N++}while(N<M)}y._ptr.push(y._index.length),y._size=[B,M]}i.prototype=new r,i.prototype.createSparseMatrix=function(y,E){return new i(y,E)},Object.defineProperty(i,"name",{value:"SparseMatrix"}),i.prototype.constructor=i,i.prototype.type="SparseMatrix",i.prototype.isSparseMatrix=!0,i.prototype.getDataType=function(){return getArrayDataType(this._values,typeOf)},i.prototype.storage=function(){return"sparse"},i.prototype.datatype=function(){return this._datatype},i.prototype.create=function(y,E){return new i(y,E)},i.prototype.density=function(){var y=this._size[0],E=this._size[1];return y!==0&&E!==0?this._index.length/(y*E):0},i.prototype.subset=function(y,E,F){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return l(this,y);case 2:case 3:return c(this,y,E,F);default:throw new SyntaxError("Wrong number of arguments")}};function l(y,E){if(!isIndex(E))throw new TypeError("Invalid index");var F=E.isScalar();if(F)return y.get(E.min());var B=E.size();if(B.length!==y._size.length)throw new DimensionError(B.length,y._size.length);var M,k,T,N,$=E.min(),R=E.max();for(M=0,k=y._size.length;M<k;M++)validateIndex($[M],y._size[M]),validateIndex(R[M],y._size[M]);var O=y._values,L=y._index,z=y._ptr,X=E.dimension(0),o0=E.dimension(1),Z=[],n0=[];X.forEach(function(p0,h0){n0[p0]=h0[0],Z[p0]=!0});var s0=O?[]:void 0,S0=[],r0=[];return o0.forEach(function(p0){for(r0.push(S0.length),T=z[p0],N=z[p0+1];T<N;T++)M=L[T],Z[M]===!0&&(S0.push(n0[M]),s0&&s0.push(O[T]))}),r0.push(S0.length),new i({values:s0,index:S0,ptr:r0,size:B,datatype:y._datatype})}function c(y,E,F,B){if(!E||E.isIndex!==!0)throw new TypeError("Invalid index");var M=E.size(),k=E.isScalar(),T;if(isMatrix(F)?(T=F.size(),F=F.toArray()):T=arraySize(F),k){if(T.length!==0)throw new TypeError("Scalar expected");y.set(E.min(),F,B)}else{if(M.length!==1&&M.length!==2)throw new DimensionError(M.length,y._size.length,"<");if(T.length<M.length){for(var N=0,$=0;M[N]===1&&T[N]===1;)N++;for(;M[N]===1;)$++,N++;F=unsqueeze(F,M.length,$,T)}if(!deepStrictEqual(M,T))throw new DimensionError(M,T,">");if(M.length===1){var R=E.dimension(0);R.forEach(function(z,X){validateIndex(z),y.set([z,0],F[X[0]],B)})}else{var O=E.dimension(0),L=E.dimension(1);O.forEach(function(z,X){validateIndex(z),L.forEach(function(o0,Z){validateIndex(o0),y.set([z,o0],F[X[0]][Z[0]],B)})})}}return y}i.prototype.get=function(y){if(!isArray$2(y))throw new TypeError("Array expected");if(y.length!==this._size.length)throw new DimensionError(y.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var E=y[0],F=y[1];validateIndex(E,this._size[0]),validateIndex(F,this._size[1]);var B=f(E,this._ptr[F],this._ptr[F+1],this._index);return B<this._ptr[F+1]&&this._index[B]===E?this._values[B]:0},i.prototype.set=function(y,E,F){if(!isArray$2(y))throw new TypeError("Array expected");if(y.length!==this._size.length)throw new DimensionError(y.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var B=y[0],M=y[1],k=this._size[0],T=this._size[1],N=n,$=0;isString(this._datatype)&&(N=t.find(n,[this._datatype,this._datatype])||n,$=t.convert(0,this._datatype)),(B>k-1||M>T-1)&&(g(this,Math.max(B+1,k),Math.max(M+1,T),F),k=this._size[0],T=this._size[1]),validateIndex(B,k),validateIndex(M,T);var R=f(B,this._ptr[M],this._ptr[M+1],this._index);return R<this._ptr[M+1]&&this._index[R]===B?N(E,$)?h(R,M,this._values,this._index,this._ptr):this._values[R]=E:N(E,$)||p(R,B,M,E,this._values,this._index,this._ptr),this};function f(y,E,F,B){if(F-E===0)return F;for(var M=E;M<F;M++)if(B[M]===y)return M;return E}function h(y,E,F,B,M){F.splice(y,1),B.splice(y,1);for(var k=E+1;k<M.length;k++)M[k]--}function p(y,E,F,B,M,k,T){M.splice(y,0,B),k.splice(y,0,E);for(var N=F+1;N<T.length;N++)T[N]++}i.prototype.resize=function(y,E,F){if(!isCollection(y))throw new TypeError("Array or Matrix expected");var B=y.valueOf().map(k=>Array.isArray(k)&&k.length===1?k[0]:k);if(B.length!==2)throw new Error("Only two dimensions matrix are supported");B.forEach(function(k){if(!isNumber$1(k)||!isInteger$3(k)||k<0)throw new TypeError("Invalid size, must contain positive integers (size: "+format(B)+")")});var M=F?this.clone():this;return g(M,B[0],B[1],E)};function g(y,E,F,B){var M=B||0,k=n,T=0;isString(y._datatype)&&(k=t.find(n,[y._datatype,y._datatype])||n,T=t.convert(0,y._datatype),M=t.convert(M,y._datatype));var N=!k(M,T),$=y._size[0],R=y._size[1],O,L,z;if(F>R){for(L=R;L<F;L++)if(y._ptr[L]=y._values.length,N)for(O=0;O<$;O++)y._values.push(M),y._index.push(O);y._ptr[F]=y._values.length}else F<R&&(y._ptr.splice(F+1,R-F),y._values.splice(y._ptr[F],y._values.length),y._index.splice(y._ptr[F],y._index.length));if(R=F,E>$){if(N){var X=0;for(L=0;L<R;L++){y._ptr[L]=y._ptr[L]+X,z=y._ptr[L+1]+X;var o0=0;for(O=$;O<E;O++,o0++)y._values.splice(z+o0,0,M),y._index.splice(z+o0,0,O),X++}y._ptr[R]=y._values.length}}else if(E<$){var Z=0;for(L=0;L<R;L++){y._ptr[L]=y._ptr[L]-Z;var n0=y._ptr[L],s0=y._ptr[L+1]-Z;for(z=n0;z<s0;z++)O=y._index[z],O>E-1&&(y._values.splice(z,1),y._index.splice(z,1),Z++)}y._ptr[L]=y._values.length}return y._size[0]=E,y._size[1]=F,y}i.prototype.reshape=function(y,E){if(!isArray$2(y))throw new TypeError("Array expected");if(y.length!==2)throw new Error("Sparse matrices can only be reshaped in two dimensions");y.forEach(function(p0){if(!isNumber$1(p0)||!isInteger$3(p0)||p0<=-2||p0===0)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+format(y)+")")});var F=this._size[0]*this._size[1];y=processSizesWildcard(y,F);var B=y[0]*y[1];if(F!==B)throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var M=E?this.clone():this;if(this._size[0]===y[0]&&this._size[1]===y[1])return M;for(var k=[],T=0;T<M._ptr.length;T++)for(var N=0;N<M._ptr[T+1]-M._ptr[T];N++)k.push(T);for(var $=M._values.slice(),R=M._index.slice(),O=0;O<M._index.length;O++){var L=R[O],z=k[O],X=L*M._size[1]+z;k[O]=X%y[1],R[O]=Math.floor(X/y[1])}M._values.length=0,M._index.length=0,M._ptr.length=y[1]+1,M._size=y.slice();for(var o0=0;o0<M._ptr.length;o0++)M._ptr[o0]=0;for(var Z=0;Z<$.length;Z++){var n0=R[Z],s0=k[Z],S0=$[Z],r0=f(n0,M._ptr[s0],M._ptr[s0+1],M._index);p(r0,n0,s0,S0,M._values,M._index,M._ptr)}return M},i.prototype.clone=function(){var y=new i({values:this._values?clone$4(this._values):void 0,index:clone$4(this._index),ptr:clone$4(this._ptr),size:clone$4(this._size),datatype:this._datatype});return y},i.prototype.size=function(){return this._size.slice(0)},i.prototype.map=function(y,E){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var F=this,B=this._size[0],M=this._size[1],k=optimizeCallback(y,F,"map"),T=function($,R,O){return k($,[R,O],F)};return x(this,0,B-1,0,M-1,T,E)};function x(y,E,F,B,M,k,T){var N=[],$=[],R=[],O=n,L=0;isString(y._datatype)&&(O=t.find(n,[y._datatype,y._datatype])||n,L=t.convert(0,y._datatype));for(var z=function(M0,C0,e0){var F0=k(M0,C0,e0);O(F0,L)||(N.push(F0),$.push(C0))},X=B;X<=M;X++){R.push(N.length);var o0=y._ptr[X],Z=y._ptr[X+1];if(T)for(var n0=o0;n0<Z;n0++){var s0=y._index[n0];s0>=E&&s0<=F&&z(y._values[n0],s0-E,X-B)}else{for(var S0={},r0=o0;r0<Z;r0++){var p0=y._index[r0];S0[p0]=y._values[r0]}for(var h0=E;h0<=F;h0++){var G=h0 in S0?S0[h0]:0;z(G,h0-E,X-B)}}}return R.push(N.length),new i({values:N,index:$,ptr:R,size:[F-E+1,M-B+1]})}i.prototype.forEach=function(y,E){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var F=this,B=this._size[0],M=this._size[1],k=optimizeCallback(y,F,"forEach"),T=0;T<M;T++){var N=this._ptr[T],$=this._ptr[T+1];if(E)for(var R=N;R<$;R++){var O=this._index[R];k(this._values[R],[O,T],F)}else{for(var L={},z=N;z<$;z++){var X=this._index[z];L[X]=this._values[z]}for(var o0=0;o0<B;o0++){var Z=o0 in L?L[o0]:0;k(Z,[o0,T],F)}}}},i.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var y=this._size[1],E=0;E<y;E++)for(var F=this._ptr[E],B=this._ptr[E+1],M=F;M<B;M++){var k=this._index[M];yield{value:this._values[M],index:[k,E]}}},i.prototype.toArray=function(){return D(this._values,this._index,this._ptr,this._size,!0)},i.prototype.valueOf=function(){return D(this._values,this._index,this._ptr,this._size,!1)};function D(y,E,F,B,M){var k=B[0],T=B[1],N=[],$,R;for($=0;$<k;$++)for(N[$]=[],R=0;R<T;R++)N[$][R]=0;for(R=0;R<T;R++)for(var O=F[R],L=F[R+1],z=O;z<L;z++)$=E[z],N[$][R]=y?M?clone$4(y[z]):y[z]:1;return N}return i.prototype.format=function(y){for(var E=this._size[0],F=this._size[1],B=this.density(),M="Sparse Matrix ["+format(E,y)+" x "+format(F,y)+"] density: "+format(B,y)+`
`,k=0;k<F;k++)for(var T=this._ptr[k],N=this._ptr[k+1],$=T;$<N;$++){var R=this._index[$];M+=`
    (`+format(R,y)+", "+format(k,y)+") ==> "+(this._values?format(this._values[$],y):"X")}return M},i.prototype.toString=function(){return format(this.toArray())},i.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},i.prototype.diagonal=function(y){if(y){if(isBigNumber(y)&&(y=y.toNumber()),!isNumber$1(y)||!isInteger$3(y))throw new TypeError("The parameter k must be an integer number")}else y=0;var E=y>0?y:0,F=y<0?-y:0,B=this._size[0],M=this._size[1],k=Math.min(B-F,M-E),T=[],N=[],$=[];$[0]=0;for(var R=E;R<M&&T.length<k;R++)for(var O=this._ptr[R],L=this._ptr[R+1],z=O;z<L;z++){var X=this._index[z];if(X===R-E+F){T.push(this._values[z]),N[T.length-1]=X-F;break}}return $.push(T.length),new i({values:T,index:N,ptr:$,size:[k,1]})},i.fromJSON=function(y){return new i(y)},i.diagonal=function(y,E,F,B,M){if(!isArray$2(y))throw new TypeError("Array expected, size parameter");if(y.length!==2)throw new Error("Only two dimensions matrix are supported");if(y=y.map(function(p0){if(isBigNumber(p0)&&(p0=p0.toNumber()),!isNumber$1(p0)||!isInteger$3(p0)||p0<1)throw new Error("Size values must be positive integers");return p0}),F){if(isBigNumber(F)&&(F=F.toNumber()),!isNumber$1(F)||!isInteger$3(F))throw new TypeError("The parameter k must be an integer number")}else F=0;var k=n,T=0;isString(M)&&(k=t.find(n,[M,M])||n,T=t.convert(0,M));var N=F>0?F:0,$=F<0?-F:0,R=y[0],O=y[1],L=Math.min(R-$,O-N),z;if(isArray$2(E)){if(E.length!==L)throw new Error("Invalid value array length");z=function(h0){return E[h0]}}else if(isMatrix(E)){var X=E.size();if(X.length!==1||X[0]!==L)throw new Error("Invalid matrix length");z=function(h0){return E.get([h0])}}else z=function(){return E};for(var o0=[],Z=[],n0=[],s0=0;s0<O;s0++){n0.push(o0.length);var S0=s0-N;if(S0>=0&&S0<L){var r0=z(S0);k(r0,T)||(Z.push(S0+$),o0.push(r0))}}return n0.push(o0.length),new i({values:o0,index:Z,ptr:n0,size:[R,O]})},i.prototype.swapRows=function(y,E){if(!isNumber$1(y)||!isInteger$3(y)||!isNumber$1(E)||!isInteger$3(E))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return validateIndex(y,this._size[0]),validateIndex(E,this._size[0]),i._swapRows(y,E,this._size[1],this._values,this._index,this._ptr),this},i._forEachRow=function(y,E,F,B,M){for(var k=B[y],T=B[y+1],N=k;N<T;N++)M(F[N],E[N])},i._swapRows=function(y,E,F,B,M,k){for(var T=0;T<F;T++){var N=k[T],$=k[T+1],R=f(y,N,$,M),O=f(E,N,$,M);if(R<$&&O<$&&M[R]===y&&M[O]===E){if(B){var L=B[R];B[R]=B[O],B[O]=L}continue}if(R<$&&M[R]===y&&(O>=$||M[O]!==E)){var z=B?B[R]:void 0;M.splice(O,0,E),B&&B.splice(O,0,z),M.splice(O<=R?R+1:R,1),B&&B.splice(O<=R?R+1:R,1);continue}if(O<$&&M[O]===E&&(R>=$||M[R]!==y)){var X=B?B[O]:void 0;M.splice(R,0,y),B&&B.splice(R,0,X),M.splice(R<=O?O+1:O,1),B&&B.splice(R<=O?O+1:O,1)}}},i},{isClass:!0}),name$B="number",dependencies$A=["typed"];function getNonDecimalNumberParts(e){var t=e.match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/);if(t){var n={"0b":2,"0o":8,"0x":16}[t[1]],r=t[2],i=t[3];return{input:e,radix:n,integerPart:r,fractionalPart:i}}else return null}function makeNumberFromNonDecimalParts(e){for(var t=parseInt(e.integerPart,e.radix),n=0,r=0;r<e.fractionalPart.length;r++){var i=parseInt(e.fractionalPart[r],e.radix);n+=i/Math.pow(e.radix,r+1)}var s=t+n;if(isNaN(s))throw new SyntaxError('String "'+e.input+'" is not a valid number');return s}var createNumber=factory(name$B,dependencies$A,e=>{var{typed:t}=e,n=t("number",{"":function(){return 0},number:function(i){return i},string:function(i){if(i==="NaN")return NaN;var s=getNonDecimalNumberParts(i);if(s)return makeNumberFromNonDecimalParts(s);var o=0,l=i.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);l&&(o=Number(l[2]),i=l[1]);var c=Number(i);if(isNaN(c))throw new SyntaxError('String "'+i+'" is not a valid number');if(l){if(c>2**o-1)throw new SyntaxError('String "'.concat(i,'" is out of range'));c>=2**(o-1)&&(c=c-2**o)}return c},BigNumber:function(i){return i.toNumber()},bigint:function(i){return Number(i)},Fraction:function(i){return i.valueOf()},Unit:t.referToSelf(r=>i=>{var s=i.clone();return s.value=r(i.value),s}),null:function(i){return 0},"Unit, string | Unit":function(i,s){return i.toNumber(s)},"Array | Matrix":t.referToSelf(r=>i=>deepMap(i,r))});return n.fromJSON=function(r){return parseFloat(r.value)},n}),name$A="bignumber",dependencies$z=["typed","BigNumber"],createBignumber=factory(name$A,dependencies$z,e=>{var{typed:t,BigNumber:n}=e;return t("bignumber",{"":function(){return new n(0)},number:function(i){return new n(i+"")},string:function(i){var s=i.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);if(s){var o=s[2],l=n(s[1]),c=new n(2).pow(Number(o));if(l.gt(c.sub(1)))throw new SyntaxError('String "'.concat(i,'" is out of range'));var f=new n(2).pow(Number(o)-1);return l.gte(f)?l.sub(c):l}return new n(i)},BigNumber:function(i){return i},bigint:function(i){return new n(i.toString())},Unit:t.referToSelf(r=>i=>{var s=i.clone();return s.value=r(i.value),s}),Fraction:function(i){return new n(String(i.n)).div(String(i.d)).times(String(i.s))},null:function(i){return new n(0)},"Array | Matrix":t.referToSelf(r=>i=>deepMap(i,r))})}),name$z="fraction",dependencies$y=["typed","Fraction"],createFraction=factory(name$z,dependencies$y,e=>{var{typed:t,Fraction:n}=e;return t("fraction",{number:function(i){if(!isFinite(i)||isNaN(i))throw new Error(i+" cannot be represented as a fraction");return new n(i)},string:function(i){return new n(i)},"number, number":function(i,s){return new n(i,s)},"bigint, bigint":function(i,s){return new n(i,s)},null:function(i){return new n(0)},BigNumber:function(i){return new n(i.toString())},bigint:function(i){return new n(i.toString())},Fraction:function(i){return i},Unit:t.referToSelf(r=>i=>{var s=i.clone();return s.value=r(i.value),s}),Object:function(i){return new n(i)},"Array | Matrix":t.referToSelf(r=>i=>deepMap(i,r))})}),name$y="matrix",dependencies$x=["typed","Matrix","DenseMatrix","SparseMatrix"],createMatrix=factory(name$y,dependencies$x,e=>{var{typed:t,Matrix:n,DenseMatrix:r,SparseMatrix:i}=e;return t(name$y,{"":function(){return s([])},string:function(l){return s([],l)},"string, string":function(l,c){return s([],l,c)},Array:function(l){return s(l)},Matrix:function(l){return s(l,l.storage())},"Array | Matrix, string":s,"Array | Matrix, string, string":s});function s(o,l,c){if(l==="dense"||l==="default"||l===void 0)return new r(o,c);if(l==="sparse")return new i(o,c);throw new TypeError("Unknown matrix type "+JSON.stringify(l)+".")}}),name$x="unaryMinus",dependencies$w=["typed"],createUnaryMinus=factory(name$x,dependencies$w,e=>{var{typed:t}=e;return t(name$x,{number:unaryMinusNumber,"Complex | BigNumber | Fraction":n=>n.neg(),bigint:n=>-n,Unit:t.referToSelf(n=>r=>{var i=r.clone();return i.value=t.find(n,i.valueType())(r.value),i}),"Array | Matrix":t.referToSelf(n=>r=>deepMap(r,n))})}),name$w="addScalar",dependencies$v=["typed"],createAddScalar=factory(name$w,dependencies$v,e=>{var{typed:t}=e;return t(name$w,{"number, number":addNumber,"Complex, Complex":function(r,i){return r.add(i)},"BigNumber, BigNumber":function(r,i){return r.plus(i)},"bigint, bigint":function(r,i){return r+i},"Fraction, Fraction":function(r,i){return r.add(i)},"Unit, Unit":t.referToSelf(n=>(r,i)=>{if(r.value===null||r.value===void 0)throw new Error("Parameter x contains a unit with undefined value");if(i.value===null||i.value===void 0)throw new Error("Parameter y contains a unit with undefined value");if(!r.equalBase(i))throw new Error("Units do not match");var s=r.clone();return s.value=t.find(n,[s.valueType(),i.valueType()])(s.value,i.value),s.fixPrefix=!1,s})})}),name$v="subtractScalar",dependencies$u=["typed"],createSubtractScalar=factory(name$v,dependencies$u,e=>{var{typed:t}=e;return t(name$v,{"number, number":subtractNumber,"Complex, Complex":function(r,i){return r.sub(i)},"BigNumber, BigNumber":function(r,i){return r.minus(i)},"bigint, bigint":function(r,i){return r-i},"Fraction, Fraction":function(r,i){return r.sub(i)},"Unit, Unit":t.referToSelf(n=>(r,i)=>{if(r.value===null||r.value===void 0)throw new Error("Parameter x contains a unit with undefined value");if(i.value===null||i.value===void 0)throw new Error("Parameter y contains a unit with undefined value");if(!r.equalBase(i))throw new Error("Units do not match");var s=r.clone();return s.value=t.find(n,[s.valueType(),i.valueType()])(s.value,i.value),s.fixPrefix=!1,s})})}),name$u="matAlgo11xS0s",dependencies$t=["typed","equalScalar"],createMatAlgo11xS0s=factory(name$u,dependencies$t,e=>{var{typed:t,equalScalar:n}=e;return function(i,s,o,l){var c=i._values,f=i._index,h=i._ptr,p=i._size,g=i._datatype;if(!c)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var x=p[0],D=p[1],y,E=n,F=0,B=o;typeof g=="string"&&(y=g,E=t.find(n,[y,y]),F=t.convert(0,y),s=t.convert(s,y),B=t.find(o,[y,y]));for(var M=[],k=[],T=[],N=0;N<D;N++){T[N]=k.length;for(var $=h[N],R=h[N+1],O=$;O<R;O++){var L=f[O],z=l?B(s,c[O]):B(c[O],s);E(z,F)||(k.push(L),M.push(z))}}return T[D]=k.length,i.createSparseMatrix({values:M,index:k,ptr:T,size:[x,D],datatype:y})}}),name$t="matAlgo12xSfs",dependencies$s=["typed","DenseMatrix"],createMatAlgo12xSfs=factory(name$t,dependencies$s,e=>{var{typed:t,DenseMatrix:n}=e;return function(i,s,o,l){var c=i._values,f=i._index,h=i._ptr,p=i._size,g=i._datatype;if(!c)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var x=p[0],D=p[1],y,E=o;typeof g=="string"&&(y=g,s=t.convert(s,y),E=t.find(o,[y,y]));for(var F=[],B=[],M=[],k=0;k<D;k++){for(var T=k+1,N=h[k],$=h[k+1],R=N;R<$;R++){var O=f[R];B[O]=c[R],M[O]=T}for(var L=0;L<x;L++)k===0&&(F[L]=[]),M[L]===T?F[L][k]=l?E(s,B[L]):E(B[L],s):F[L][k]=l?E(s,0):E(0,s)}return new n({data:F,size:[x,D],datatype:y})}}),name$s="matAlgo14xDs",dependencies$r=["typed"],createMatAlgo14xDs=factory(name$s,dependencies$r,e=>{var{typed:t}=e;return function(i,s,o,l){var c=i._data,f=i._size,h=i._datatype,p,g=o;typeof h=="string"&&(p=h,s=t.convert(s,p),g=t.find(o,[p,p]));var x=f.length>0?n(g,0,f,f[0],c,s,l):[];return i.createDenseMatrix({data:x,size:clone$4(f),datatype:p})};function n(r,i,s,o,l,c,f){var h=[];if(i===s.length-1)for(var p=0;p<o;p++)h[p]=f?r(c,l[p]):r(l[p],c);else for(var g=0;g<o;g++)h[g]=n(r,i+1,s,s[i+1],l[g],c,f);return h}}),name$r="exp",dependencies$q=["typed"],createExp=factory(name$r,dependencies$q,e=>{var{typed:t}=e;return t(name$r,{number:expNumber,Complex:function(r){return r.exp()},BigNumber:function(r){return r.exp()}})}),name$q="matAlgo02xDS0",dependencies$p=["typed","equalScalar"],createMatAlgo02xDS0=factory(name$q,dependencies$p,e=>{var{typed:t,equalScalar:n}=e;return function(i,s,o,l){var c=i._data,f=i._size,h=i._datatype||i.getDataType(),p=s._values,g=s._index,x=s._ptr,D=s._size,y=s._datatype||s._data===void 0?s._datatype:s.getDataType();if(f.length!==D.length)throw new DimensionError(f.length,D.length);if(f[0]!==D[0]||f[1]!==D[1])throw new RangeError("Dimension mismatch. Matrix A ("+f+") must match Matrix B ("+D+")");if(!p)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var E=f[0],F=f[1],B,M=n,k=0,T=o;typeof h=="string"&&h===y&&h!=="mixed"&&(B=h,M=t.find(n,[B,B]),k=t.convert(0,B),T=t.find(o,[B,B]));for(var N=[],$=[],R=[],O=0;O<F;O++){R[O]=$.length;for(var L=x[O],z=x[O+1],X=L;X<z;X++){var o0=g[X],Z=l?T(p[X],c[o0][O]):T(c[o0][O],p[X]);M(Z,k)||($.push(o0),N.push(Z))}}return R[F]=$.length,s.createSparseMatrix({values:N,index:$,ptr:R,size:[E,F],datatype:h===i._datatype&&y===s._datatype?B:void 0})}}),name$p="matAlgo03xDSf",dependencies$o=["typed"],createMatAlgo03xDSf=factory(name$p,dependencies$o,e=>{var{typed:t}=e;return function(r,i,s,o){var l=r._data,c=r._size,f=r._datatype||r.getDataType(),h=i._values,p=i._index,g=i._ptr,x=i._size,D=i._datatype||i._data===void 0?i._datatype:i.getDataType();if(c.length!==x.length)throw new DimensionError(c.length,x.length);if(c[0]!==x[0]||c[1]!==x[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+x+")");if(!h)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var y=c[0],E=c[1],F,B=0,M=s;typeof f=="string"&&f===D&&f!=="mixed"&&(F=f,B=t.convert(0,F),M=t.find(s,[F,F]));for(var k=[],T=0;T<y;T++)k[T]=[];for(var N=[],$=[],R=0;R<E;R++){for(var O=R+1,L=g[R],z=g[R+1],X=L;X<z;X++){var o0=p[X];N[o0]=o?M(h[X],l[o0][R]):M(l[o0][R],h[X]),$[o0]=O}for(var Z=0;Z<y;Z++)$[Z]===O?k[Z][R]=N[Z]:k[Z][R]=o?M(B,l[Z][R]):M(l[Z][R],B)}return r.createDenseMatrix({data:k,size:[y,E],datatype:f===r._datatype&&D===i._datatype?F:void 0})}}),name$o="matAlgo05xSfSf",dependencies$n=["typed","equalScalar"],createMatAlgo05xSfSf=factory(name$o,dependencies$n,e=>{var{typed:t,equalScalar:n}=e;return function(i,s,o){var l=i._values,c=i._index,f=i._ptr,h=i._size,p=i._datatype||i._data===void 0?i._datatype:i.getDataType(),g=s._values,x=s._index,D=s._ptr,y=s._size,E=s._datatype||s._data===void 0?s._datatype:s.getDataType();if(h.length!==y.length)throw new DimensionError(h.length,y.length);if(h[0]!==y[0]||h[1]!==y[1])throw new RangeError("Dimension mismatch. Matrix A ("+h+") must match Matrix B ("+y+")");var F=h[0],B=h[1],M,k=n,T=0,N=o;typeof p=="string"&&p===E&&p!=="mixed"&&(M=p,k=t.find(n,[M,M]),T=t.convert(0,M),N=t.find(o,[M,M]));var $=l&&g?[]:void 0,R=[],O=[],L=$?[]:void 0,z=$?[]:void 0,X=[],o0=[],Z,n0,s0,S0;for(n0=0;n0<B;n0++){O[n0]=R.length;var r0=n0+1;for(s0=f[n0],S0=f[n0+1];s0<S0;s0++)Z=c[s0],R.push(Z),X[Z]=r0,L&&(L[Z]=l[s0]);for(s0=D[n0],S0=D[n0+1];s0<S0;s0++)Z=x[s0],X[Z]!==r0&&R.push(Z),o0[Z]=r0,z&&(z[Z]=g[s0]);if($)for(s0=O[n0];s0<R.length;){Z=R[s0];var p0=X[Z],h0=o0[Z];if(p0===r0||h0===r0){var G=p0===r0?L[Z]:T,Q=h0===r0?z[Z]:T,M0=N(G,Q);k(M0,T)?R.splice(s0,1):($.push(M0),s0++)}}}return O[B]=R.length,i.createSparseMatrix({values:$,index:R,ptr:O,size:[F,B],datatype:p===i._datatype&&E===s._datatype?M:void 0})}}),name$n="matAlgo13xDD",dependencies$m=["typed"],createMatAlgo13xDD=factory(name$n,dependencies$m,e=>{var{typed:t}=e;return function(i,s,o){var l=i._data,c=i._size,f=i._datatype,h=s._data,p=s._size,g=s._datatype,x=[];if(c.length!==p.length)throw new DimensionError(c.length,p.length);for(var D=0;D<c.length;D++){if(c[D]!==p[D])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+p+")");x[D]=c[D]}var y,E=o;typeof f=="string"&&f===g&&(y=f,E=t.find(o,[y,y]));var F=x.length>0?n(E,0,x,x[0],l,h):[];return i.createDenseMatrix({data:F,size:x,datatype:y})};function n(r,i,s,o,l,c){var f=[];if(i===s.length-1)for(var h=0;h<o;h++)f[h]=r(l[h],c[h]);else for(var p=0;p<o;p++)f[p]=n(r,i+1,s,s[i+1],l[p],c[p]);return f}});function broadcast(e,t){if(deepStrictEqual(e.size(),t.size()))return[e,t];var n=broadcastSizes(e.size(),t.size());return[e,t].map(r=>_broadcastTo(r,n))}function _broadcastTo(e,t){return deepStrictEqual(e.size(),t)?e:e.create(broadcastTo(e.valueOf(),t),e.datatype())}var name$m="matrixAlgorithmSuite",dependencies$l=["typed","matrix"],createMatrixAlgorithmSuite=factory(name$m,dependencies$l,e=>{var{typed:t,matrix:n}=e,r=createMatAlgo13xDD({typed:t}),i=createMatAlgo14xDs({typed:t});return function(o){var l=o.elop,c=o.SD||o.DS,f;l?(f={"DenseMatrix, DenseMatrix":(x,D)=>r(...broadcast(x,D),l),"Array, Array":(x,D)=>r(...broadcast(n(x),n(D)),l).valueOf(),"Array, DenseMatrix":(x,D)=>r(...broadcast(n(x),D),l),"DenseMatrix, Array":(x,D)=>r(...broadcast(x,n(D)),l)},o.SS&&(f["SparseMatrix, SparseMatrix"]=(x,D)=>o.SS(...broadcast(x,D),l,!1)),o.DS&&(f["DenseMatrix, SparseMatrix"]=(x,D)=>o.DS(...broadcast(x,D),l,!1),f["Array, SparseMatrix"]=(x,D)=>o.DS(...broadcast(n(x),D),l,!1)),c&&(f["SparseMatrix, DenseMatrix"]=(x,D)=>c(...broadcast(D,x),l,!0),f["SparseMatrix, Array"]=(x,D)=>c(...broadcast(n(D),x),l,!0))):(f={"DenseMatrix, DenseMatrix":t.referToSelf(x=>(D,y)=>r(...broadcast(D,y),x)),"Array, Array":t.referToSelf(x=>(D,y)=>r(...broadcast(n(D),n(y)),x).valueOf()),"Array, DenseMatrix":t.referToSelf(x=>(D,y)=>r(...broadcast(n(D),y),x)),"DenseMatrix, Array":t.referToSelf(x=>(D,y)=>r(...broadcast(D,n(y)),x))},o.SS&&(f["SparseMatrix, SparseMatrix"]=t.referToSelf(x=>(D,y)=>o.SS(...broadcast(D,y),x,!1))),o.DS&&(f["DenseMatrix, SparseMatrix"]=t.referToSelf(x=>(D,y)=>o.DS(...broadcast(D,y),x,!1)),f["Array, SparseMatrix"]=t.referToSelf(x=>(D,y)=>o.DS(...broadcast(n(D),y),x,!1))),c&&(f["SparseMatrix, DenseMatrix"]=t.referToSelf(x=>(D,y)=>c(...broadcast(y,D),x,!0)),f["SparseMatrix, Array"]=t.referToSelf(x=>(D,y)=>c(...broadcast(n(y),D),x,!0))));var h=o.scalar||"any",p=o.Ds||o.Ss;p&&(l?(f["DenseMatrix,"+h]=(x,D)=>i(x,D,l,!1),f[h+", DenseMatrix"]=(x,D)=>i(D,x,l,!0),f["Array,"+h]=(x,D)=>i(n(x),D,l,!1).valueOf(),f[h+", Array"]=(x,D)=>i(n(D),x,l,!0).valueOf()):(f["DenseMatrix,"+h]=t.referToSelf(x=>(D,y)=>i(D,y,x,!1)),f[h+", DenseMatrix"]=t.referToSelf(x=>(D,y)=>i(y,D,x,!0)),f["Array,"+h]=t.referToSelf(x=>(D,y)=>i(n(D),y,x,!1).valueOf()),f[h+", Array"]=t.referToSelf(x=>(D,y)=>i(n(y),D,x,!0).valueOf())));var g=o.sS!==void 0?o.sS:o.Ss;return l?(o.Ss&&(f["SparseMatrix,"+h]=(x,D)=>o.Ss(x,D,l,!1)),g&&(f[h+", SparseMatrix"]=(x,D)=>g(D,x,l,!0))):(o.Ss&&(f["SparseMatrix,"+h]=t.referToSelf(x=>(D,y)=>o.Ss(D,y,x,!1))),g&&(f[h+", SparseMatrix"]=t.referToSelf(x=>(D,y)=>g(y,D,x,!0)))),l&&l.signatures&&extend$3(f,l.signatures),f}}),name$l="matAlgo01xDSid",dependencies$k=["typed"],createMatAlgo01xDSid=factory(name$l,dependencies$k,e=>{var{typed:t}=e;return function(r,i,s,o){var l=r._data,c=r._size,f=r._datatype||r.getDataType(),h=i._values,p=i._index,g=i._ptr,x=i._size,D=i._datatype||i._data===void 0?i._datatype:i.getDataType();if(c.length!==x.length)throw new DimensionError(c.length,x.length);if(c[0]!==x[0]||c[1]!==x[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+x+")");if(!h)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var y=c[0],E=c[1],F=typeof f=="string"&&f!=="mixed"&&f===D?f:void 0,B=F?t.find(s,[F,F]):s,M,k,T=[];for(M=0;M<y;M++)T[M]=[];var N=[],$=[];for(k=0;k<E;k++){for(var R=k+1,O=g[k],L=g[k+1],z=O;z<L;z++)M=p[z],N[M]=o?B(h[z],l[M][k]):B(l[M][k],h[z]),$[M]=R;for(M=0;M<y;M++)$[M]===R?T[M][k]=N[M]:T[M][k]=l[M][k]}return r.createDenseMatrix({data:T,size:[y,E],datatype:f===r._datatype&&D===i._datatype?F:void 0})}}),name$k="matAlgo04xSidSid",dependencies$j=["typed","equalScalar"],createMatAlgo04xSidSid=factory(name$k,dependencies$j,e=>{var{typed:t,equalScalar:n}=e;return function(i,s,o){var l=i._values,c=i._index,f=i._ptr,h=i._size,p=i._datatype||i._data===void 0?i._datatype:i.getDataType(),g=s._values,x=s._index,D=s._ptr,y=s._size,E=s._datatype||s._data===void 0?s._datatype:s.getDataType();if(h.length!==y.length)throw new DimensionError(h.length,y.length);if(h[0]!==y[0]||h[1]!==y[1])throw new RangeError("Dimension mismatch. Matrix A ("+h+") must match Matrix B ("+y+")");var F=h[0],B=h[1],M,k=n,T=0,N=o;typeof p=="string"&&p===E&&p!=="mixed"&&(M=p,k=t.find(n,[M,M]),T=t.convert(0,M),N=t.find(o,[M,M]));var $=l&&g?[]:void 0,R=[],O=[],L=l&&g?[]:void 0,z=l&&g?[]:void 0,X=[],o0=[],Z,n0,s0,S0,r0;for(n0=0;n0<B;n0++){O[n0]=R.length;var p0=n0+1;for(S0=f[n0],r0=f[n0+1],s0=S0;s0<r0;s0++)Z=c[s0],R.push(Z),X[Z]=p0,L&&(L[Z]=l[s0]);for(S0=D[n0],r0=D[n0+1],s0=S0;s0<r0;s0++)if(Z=x[s0],X[Z]===p0){if(L){var h0=N(L[Z],g[s0]);k(h0,T)?X[Z]=null:L[Z]=h0}}else R.push(Z),o0[Z]=p0,z&&(z[Z]=g[s0]);if(L&&z)for(s0=O[n0];s0<R.length;)Z=R[s0],X[Z]===p0?($[s0]=L[Z],s0++):o0[Z]===p0?($[s0]=z[Z],s0++):R.splice(s0,1)}return O[B]=R.length,i.createSparseMatrix({values:$,index:R,ptr:O,size:[F,B],datatype:p===i._datatype&&E===s._datatype?M:void 0})}}),name$j="matAlgo10xSids",dependencies$i=["typed","DenseMatrix"],createMatAlgo10xSids=factory(name$j,dependencies$i,e=>{var{typed:t,DenseMatrix:n}=e;return function(i,s,o,l){var c=i._values,f=i._index,h=i._ptr,p=i._size,g=i._datatype;if(!c)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var x=p[0],D=p[1],y,E=o;typeof g=="string"&&(y=g,s=t.convert(s,y),E=t.find(o,[y,y]));for(var F=[],B=[],M=[],k=0;k<D;k++){for(var T=k+1,N=h[k],$=h[k+1],R=N;R<$;R++){var O=f[R];B[O]=c[R],M[O]=T}for(var L=0;L<x;L++)k===0&&(F[L]=[]),M[L]===T?F[L][k]=l?E(s,B[L]):E(B[L],s):F[L][k]=s}return new n({data:F,size:[x,D],datatype:y})}}),name$i="multiplyScalar",dependencies$h=["typed"],createMultiplyScalar=factory(name$i,dependencies$h,e=>{var{typed:t}=e;return t("multiplyScalar",{"number, number":multiplyNumber,"Complex, Complex":function(r,i){return r.mul(i)},"BigNumber, BigNumber":function(r,i){return r.times(i)},"bigint, bigint":function(r,i){return r*i},"Fraction, Fraction":function(r,i){return r.mul(i)},"number | Fraction | BigNumber | Complex, Unit":(n,r)=>r.multiply(n),"Unit, number | Fraction | BigNumber | Complex | Unit":(n,r)=>n.multiply(r)})}),name$h="multiply",dependencies$g=["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],createMultiply=factory(name$h,dependencies$g,e=>{var{typed:t,matrix:n,addScalar:r,multiplyScalar:i,equalScalar:s,dot:o}=e,l=createMatAlgo11xS0s({typed:t,equalScalar:s}),c=createMatAlgo14xDs({typed:t});function f(T,N){switch(T.length){case 1:switch(N.length){case 1:if(T[0]!==N[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(T[0]!==N[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+T[0]+") must match Matrix rows ("+N[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+N.length+" dimensions)")}break;case 2:switch(N.length){case 1:if(T[1]!==N[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+T[1]+") must match Vector length ("+N[0]+")");break;case 2:if(T[1]!==N[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+T[1]+") must match Matrix B rows ("+N[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+N.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+T.length+" dimensions)")}}function h(T,N,$){if($===0)throw new Error("Cannot multiply two empty vectors");return o(T,N)}function p(T,N){if(N.storage()!=="dense")throw new Error("Support for SparseMatrix not implemented");return g(T,N)}function g(T,N){var $=T._data,R=T._size,O=T._datatype||T.getDataType(),L=N._data,z=N._size,X=N._datatype||N.getDataType(),o0=R[0],Z=z[1],n0,s0=r,S0=i;O&&X&&O===X&&typeof O=="string"&&O!=="mixed"&&(n0=O,s0=t.find(r,[n0,n0]),S0=t.find(i,[n0,n0]));for(var r0=[],p0=0;p0<Z;p0++){for(var h0=S0($[0],L[0][p0]),G=1;G<o0;G++)h0=s0(h0,S0($[G],L[G][p0]));r0[p0]=h0}return T.createDenseMatrix({data:r0,size:[Z],datatype:O===T._datatype&&X===N._datatype?n0:void 0})}var x=t("_multiplyMatrixVector",{"DenseMatrix, any":y,"SparseMatrix, any":B}),D=t("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":E,"DenseMatrix, SparseMatrix":F,"SparseMatrix, DenseMatrix":M,"SparseMatrix, SparseMatrix":k});function y(T,N){var $=T._data,R=T._size,O=T._datatype||T.getDataType(),L=N._data,z=N._datatype||N.getDataType(),X=R[0],o0=R[1],Z,n0=r,s0=i;O&&z&&O===z&&typeof O=="string"&&O!=="mixed"&&(Z=O,n0=t.find(r,[Z,Z]),s0=t.find(i,[Z,Z]));for(var S0=[],r0=0;r0<X;r0++){for(var p0=$[r0],h0=s0(p0[0],L[0]),G=1;G<o0;G++)h0=n0(h0,s0(p0[G],L[G]));S0[r0]=h0}return T.createDenseMatrix({data:S0,size:[X],datatype:O===T._datatype&&z===N._datatype?Z:void 0})}function E(T,N){var $=T._data,R=T._size,O=T._datatype||T.getDataType(),L=N._data,z=N._size,X=N._datatype||N.getDataType(),o0=R[0],Z=R[1],n0=z[1],s0,S0=r,r0=i;O&&X&&O===X&&typeof O=="string"&&O!=="mixed"&&O!=="mixed"&&(s0=O,S0=t.find(r,[s0,s0]),r0=t.find(i,[s0,s0]));for(var p0=[],h0=0;h0<o0;h0++){var G=$[h0];p0[h0]=[];for(var Q=0;Q<n0;Q++){for(var M0=r0(G[0],L[0][Q]),C0=1;C0<Z;C0++)M0=S0(M0,r0(G[C0],L[C0][Q]));p0[h0][Q]=M0}}return T.createDenseMatrix({data:p0,size:[o0,n0],datatype:O===T._datatype&&X===N._datatype?s0:void 0})}function F(T,N){var $=T._data,R=T._size,O=T._datatype||T.getDataType(),L=N._values,z=N._index,X=N._ptr,o0=N._size,Z=N._datatype||N._data===void 0?N._datatype:N.getDataType();if(!L)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var n0=R[0],s0=o0[1],S0,r0=r,p0=i,h0=s,G=0;O&&Z&&O===Z&&typeof O=="string"&&O!=="mixed"&&(S0=O,r0=t.find(r,[S0,S0]),p0=t.find(i,[S0,S0]),h0=t.find(s,[S0,S0]),G=t.convert(0,S0));for(var Q=[],M0=[],C0=[],e0=N.createSparseMatrix({values:Q,index:M0,ptr:C0,size:[n0,s0],datatype:O===T._datatype&&Z===N._datatype?S0:void 0}),F0=0;F0<s0;F0++){C0[F0]=M0.length;var O0=X[F0],L0=X[F0+1];if(L0>O0)for(var B0=0,H0=0;H0<n0;H0++){for(var a1=H0+1,c1=void 0,G0=O0;G0<L0;G0++){var j0=z[G0];B0!==a1?(c1=p0($[H0][j0],L[G0]),B0=a1):c1=r0(c1,p0($[H0][j0],L[G0]))}B0===a1&&!h0(c1,G)&&(M0.push(H0),Q.push(c1))}}return C0[s0]=M0.length,e0}function B(T,N){var $=T._values,R=T._index,O=T._ptr,L=T._datatype||T._data===void 0?T._datatype:T.getDataType();if(!$)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var z=N._data,X=N._datatype||N.getDataType(),o0=T._size[0],Z=N._size[0],n0=[],s0=[],S0=[],r0,p0=r,h0=i,G=s,Q=0;L&&X&&L===X&&typeof L=="string"&&L!=="mixed"&&(r0=L,p0=t.find(r,[r0,r0]),h0=t.find(i,[r0,r0]),G=t.find(s,[r0,r0]),Q=t.convert(0,r0));var M0=[],C0=[];S0[0]=0;for(var e0=0;e0<Z;e0++){var F0=z[e0];if(!G(F0,Q))for(var O0=O[e0],L0=O[e0+1],B0=O0;B0<L0;B0++){var H0=R[B0];C0[H0]?M0[H0]=p0(M0[H0],h0(F0,$[B0])):(C0[H0]=!0,s0.push(H0),M0[H0]=h0(F0,$[B0]))}}for(var a1=s0.length,c1=0;c1<a1;c1++){var G0=s0[c1];n0[c1]=M0[G0]}return S0[1]=s0.length,T.createSparseMatrix({values:n0,index:s0,ptr:S0,size:[o0,1],datatype:L===T._datatype&&X===N._datatype?r0:void 0})}function M(T,N){var $=T._values,R=T._index,O=T._ptr,L=T._datatype||T._data===void 0?T._datatype:T.getDataType();if(!$)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var z=N._data,X=N._datatype||N.getDataType(),o0=T._size[0],Z=N._size[0],n0=N._size[1],s0,S0=r,r0=i,p0=s,h0=0;L&&X&&L===X&&typeof L=="string"&&L!=="mixed"&&(s0=L,S0=t.find(r,[s0,s0]),r0=t.find(i,[s0,s0]),p0=t.find(s,[s0,s0]),h0=t.convert(0,s0));for(var G=[],Q=[],M0=[],C0=T.createSparseMatrix({values:G,index:Q,ptr:M0,size:[o0,n0],datatype:L===T._datatype&&X===N._datatype?s0:void 0}),e0=[],F0=[],O0=0;O0<n0;O0++){M0[O0]=Q.length;for(var L0=O0+1,B0=0;B0<Z;B0++){var H0=z[B0][O0];if(!p0(H0,h0))for(var a1=O[B0],c1=O[B0+1],G0=a1;G0<c1;G0++){var j0=R[G0];F0[j0]!==L0?(F0[j0]=L0,Q.push(j0),e0[j0]=r0(H0,$[G0])):e0[j0]=S0(e0[j0],r0(H0,$[G0]))}}for(var P0=M0[O0],d1=Q.length,r1=P0;r1<d1;r1++){var u1=Q[r1];G[r1]=e0[u1]}}return M0[n0]=Q.length,C0}function k(T,N){var $=T._values,R=T._index,O=T._ptr,L=T._datatype||T._data===void 0?T._datatype:T.getDataType(),z=N._values,X=N._index,o0=N._ptr,Z=N._datatype||N._data===void 0?N._datatype:N.getDataType(),n0=T._size[0],s0=N._size[1],S0=$&&z,r0,p0=r,h0=i;L&&Z&&L===Z&&typeof L=="string"&&L!=="mixed"&&(r0=L,p0=t.find(r,[r0,r0]),h0=t.find(i,[r0,r0]));for(var G=S0?[]:void 0,Q=[],M0=[],C0=T.createSparseMatrix({values:G,index:Q,ptr:M0,size:[n0,s0],datatype:L===T._datatype&&Z===N._datatype?r0:void 0}),e0=S0?[]:void 0,F0=[],O0,L0,B0,H0,a1,c1,G0,j0,P0=0;P0<s0;P0++){M0[P0]=Q.length;var d1=P0+1;for(a1=o0[P0],c1=o0[P0+1],H0=a1;H0<c1;H0++)if(j0=X[H0],S0)for(L0=O[j0],B0=O[j0+1],O0=L0;O0<B0;O0++)G0=R[O0],F0[G0]!==d1?(F0[G0]=d1,Q.push(G0),e0[G0]=h0(z[H0],$[O0])):e0[G0]=p0(e0[G0],h0(z[H0],$[O0]));else for(L0=O[j0],B0=O[j0+1],O0=L0;O0<B0;O0++)G0=R[O0],F0[G0]!==d1&&(F0[G0]=d1,Q.push(G0));if(S0)for(var r1=M0[P0],u1=Q.length,w0=r1;w0<u1;w0++){var Z0=Q[w0];G[w0]=e0[Z0]}}return M0[s0]=Q.length,C0}return t(name$h,i,{"Array, Array":t.referTo("Matrix, Matrix",T=>(N,$)=>{f(arraySize(N),arraySize($));var R=T(n(N),n($));return isMatrix(R)?R.valueOf():R}),"Matrix, Matrix":function(N,$){var R=N.size(),O=$.size();return f(R,O),R.length===1?O.length===1?h(N,$,R[0]):p(N,$):O.length===1?x(N,$):D(N,$)},"Matrix, Array":t.referTo("Matrix,Matrix",T=>(N,$)=>T(N,n($))),"Array, Matrix":t.referToSelf(T=>(N,$)=>T(n(N,$.storage()),$)),"SparseMatrix, any":function(N,$){return l(N,$,i,!1)},"DenseMatrix, any":function(N,$){return c(N,$,i,!1)},"any, SparseMatrix":function(N,$){return l($,N,i,!0)},"any, DenseMatrix":function(N,$){return c($,N,i,!0)},"Array, any":function(N,$){return c(n(N),$,i,!1).valueOf()},"any, Array":function(N,$){return c(n($),N,i,!0).valueOf()},"any, any":i,"any, any, ...any":t.referToSelf(T=>(N,$,R)=>{for(var O=T(N,$),L=0;L<R.length;L++)O=T(O,R[L]);return O})})}),name$g="subtract",dependencies$f=["typed","matrix","equalScalar","subtractScalar","unaryMinus","DenseMatrix","concat"],createSubtract=factory(name$g,dependencies$f,e=>{var{typed:t,matrix:n,equalScalar:r,subtractScalar:i,unaryMinus:s,DenseMatrix:o,concat:l}=e,c=createMatAlgo01xDSid({typed:t}),f=createMatAlgo03xDSf({typed:t}),h=createMatAlgo05xSfSf({typed:t,equalScalar:r}),p=createMatAlgo10xSids({typed:t,DenseMatrix:o}),g=createMatAlgo12xSfs({typed:t,DenseMatrix:o}),x=createMatrixAlgorithmSuite({typed:t,matrix:n,concat:l});return t(name$g,{"any, any":i},x({elop:i,SS:h,DS:c,SD:f,Ss:g,sS:p}))}),name$f="matAlgo07xSSf",dependencies$e=["typed","SparseMatrix"],createMatAlgo07xSSf=factory(name$f,dependencies$e,e=>{var{typed:t,SparseMatrix:n}=e;return function(s,o,l){var c=s._size,f=s._datatype||s._data===void 0?s._datatype:s.getDataType(),h=o._size,p=o._datatype||o._data===void 0?o._datatype:o.getDataType();if(c.length!==h.length)throw new DimensionError(c.length,h.length);if(c[0]!==h[0]||c[1]!==h[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+h+")");var g=c[0],x=c[1],D,y=0,E=l;typeof f=="string"&&f===p&&f!=="mixed"&&(D=f,y=t.convert(0,D),E=t.find(l,[D,D]));for(var F=[],B=[],M=new Array(x+1).fill(0),k=[],T=[],N=[],$=[],R=0;R<x;R++){var O=R+1,L=0;r(s,R,N,k,O),r(o,R,$,T,O);for(var z=0;z<g;z++){var X=N[z]===O?k[z]:y,o0=$[z]===O?T[z]:y,Z=E(X,o0);Z!==0&&Z!==!1&&(B.push(z),F.push(Z),L++)}M[R+1]=M[R]+L}return new n({values:F,index:B,ptr:M,size:[g,x],datatype:f===s._datatype&&p===o._datatype?D:void 0})};function r(i,s,o,l,c){for(var f=i._values,h=i._index,p=i._ptr,g=p[s],x=p[s+1];g<x;g++){var D=h[g];o[D]=c,l[D]=f[g]}}}),name$e="conj",dependencies$d=["typed"],createConj=factory(name$e,dependencies$d,e=>{var{typed:t}=e;return t(name$e,{"number | BigNumber | Fraction":n=>n,Complex:n=>n.conjugate(),"Array | Matrix":t.referToSelf(n=>r=>deepMap(r,n))})}),name$d="concat",dependencies$c=["typed","matrix","isInteger"],createConcat=factory(name$d,dependencies$c,e=>{var{typed:t,matrix:n,isInteger:r}=e;return t(name$d,{"...Array | Matrix | number | BigNumber":function(s){var o,l=s.length,c=-1,f,h=!1,p=[];for(o=0;o<l;o++){var g=s[o];if(isMatrix(g)&&(h=!0),isNumber$1(g)||isBigNumber(g)){if(o!==l-1)throw new Error("Dimension must be specified as last argument");if(f=c,c=g.valueOf(),!r(c))throw new TypeError("Integer number expected for dimension");if(c<0||o>0&&c>f)throw new IndexError(c,f+1)}else{var x=clone$4(g).valueOf(),D=arraySize(x);if(p[o]=x,f=c,c=D.length-1,o>0&&c!==f)throw new DimensionError(f+1,c+1)}}if(p.length===0)throw new SyntaxError("At least one matrix expected");for(var y=p.shift();p.length;)y=concat$1(y,p.shift(),c);return h?n(y):y},"...string":function(s){return s.join("")}})}),name$c="map",dependencies$b=["typed"],createMap=factory(name$c,dependencies$b,e=>{var{typed:t}=e;return t(name$c,{"Array, function":r,"Matrix, function":function(s,o){return s.map(o)},"Array|Matrix, Array|Matrix, ...Array|Matrix|function":(i,s,o)=>n([i,s,...o.slice(0,o.length-1)],o[o.length-1])});function n(i,s){if(typeof s!="function")throw new Error("Last argument must be a callback function");var o=i[0].isMatrix,l=broadcastSizes(...i.map(k=>k.isMatrix?k.size():arraySize(k))),c=o?(k,T)=>k.get(T):get,f=o?i.map(k=>k.isMatrix?k.create(broadcastTo(k.toArray(),l),k.datatype()):i[0].create(broadcastTo(k.valueOf(),l))):i.map(k=>k.isMatrix?broadcastTo(k.toArray(),l):broadcastTo(k,l)),h;if(t.isTypedFunction(s)){var p=l.map(()=>0),g=f.map(k=>c(k,p)),x=M(s,g,p,f);h=F(x)}else{var D=i.length,y=B(s,D);h=F(y)}var E=(k,T)=>h([k,...f.slice(1).map(N=>c(N,T))],T);if(o)return f[0].map(E);return r(f[0],E);function F(k){switch(k){case 0:return T=>s(...T);case 1:return(T,N)=>s(...T,N);case 2:return(T,N)=>s(...T,N,...f)}}function B(k,T){return k.length>T+1?2:k.length===T+1?1:0}function M(k,T,N,$){return t.resolve(k,[...T,N,...$])!==null?2:t.resolve(k,[...T,N])!==null?1:(t.resolve(k,T)!==null,0)}}function r(i,s){return recurse(i,[],i,optimizeCallback(s,i,name$c))}});function noBignumber(){throw new Error('No "bignumber" implementation available')}function noFraction(){throw new Error('No "fraction" implementation available')}function noMatrix(){throw new Error('No "matrix" implementation available')}var name$b="reshape",dependencies$a=["typed","isInteger","matrix"],createReshape=factory(name$b,dependencies$a,e=>{var{typed:t,isInteger:n}=e;return t(name$b,{"Matrix, Array":function(i,s){return i.reshape(s,!0)},"Array, Array":function(i,s){return s.forEach(function(o){if(!n(o))throw new TypeError("Invalid size for dimension: "+o)}),reshape$1(i,s)}})}),name$a="size",dependencies$9=["typed","config","?matrix"],createSize=factory(name$a,dependencies$9,e=>{var{typed:t,config:n,matrix:r}=e;return t(name$a,{Matrix:function(s){return s.create(s.size(),"number")},Array:arraySize,string:function(s){return n.matrix==="Array"?[s.length]:r([s.length],"dense","number")},"number | Complex | BigNumber | Unit | boolean | null":function(s){return n.matrix==="Array"?[]:r?r([],"dense","number"):noMatrix()}})});function improveErrorMessage(e,t,n){var r;return String(e).includes("Unexpected type")?(r=arguments.length>2?" (type: "+typeOf(n)+", value: "+JSON.stringify(n)+")":" (type: "+e.data.actual+")",new TypeError("Cannot calculate "+t+", unexpected type of argument"+r)):String(e).includes("complex numbers")?(r=arguments.length>2?" (type: "+typeOf(n)+", value: "+JSON.stringify(n)+")":"",new TypeError("Cannot calculate "+t+", no ordering relation is defined for complex numbers"+r)):e}var name$9="numeric",dependencies$8=["number","?bignumber","?fraction"],createNumeric=factory(name$9,dependencies$8,e=>{var{number:t,bignumber:n,fraction:r}=e,i={string:!0,number:!0,BigNumber:!0,Fraction:!0},s={number:o=>t(o),BigNumber:n?o=>n(o):noBignumber,bigint:o=>BigInt(o),Fraction:r?o=>r(o):noFraction};return function(l){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"number",f=arguments.length>2?arguments[2]:void 0;if(f!==void 0)throw new SyntaxError("numeric() takes one or two arguments");var h=typeOf(l);if(!(h in i))throw new TypeError("Cannot convert "+l+' of type "'+h+'"; valid input types are '+Object.keys(i).join(", "));if(!(c in s))throw new TypeError("Cannot convert "+l+' to type "'+c+'"; valid output types are '+Object.keys(s).join(", "));return c===h?l:s[c](l)}}),name$8="divideScalar",dependencies$7=["typed","numeric"],createDivideScalar=factory(name$8,dependencies$7,e=>{var{typed:t,numeric:n}=e;return t(name$8,{"number, number":function(i,s){return i/s},"Complex, Complex":function(i,s){return i.div(s)},"BigNumber, BigNumber":function(i,s){return i.div(s)},"bigint, bigint":function(i,s){return i/s},"Fraction, Fraction":function(i,s){return i.div(s)},"Unit, number | Complex | Fraction | BigNumber | Unit":(r,i)=>r.divide(i),"number | Fraction | Complex | BigNumber, Unit":(r,i)=>i.divideInto(r)})}),name$7="dotDivide",dependencies$6=["typed","matrix","equalScalar","divideScalar","DenseMatrix","concat","SparseMatrix"],createDotDivide=factory(name$7,dependencies$6,e=>{var{typed:t,matrix:n,equalScalar:r,divideScalar:i,DenseMatrix:s,concat:o,SparseMatrix:l}=e,c=createMatAlgo02xDS0({typed:t,equalScalar:r}),f=createMatAlgo03xDSf({typed:t}),h=createMatAlgo07xSSf({typed:t,SparseMatrix:l}),p=createMatAlgo11xS0s({typed:t,equalScalar:r}),g=createMatAlgo12xSfs({typed:t,DenseMatrix:s}),x=createMatrixAlgorithmSuite({typed:t,matrix:n,concat:o});return t(name$7,x({elop:i,SS:h,DS:f,SD:c,Ss:p,sS:g}))}),name$6="larger",dependencies$5=["typed","config","matrix","DenseMatrix","concat","SparseMatrix"],createLarger=factory(name$6,dependencies$5,e=>{var{typed:t,config:n,matrix:r,DenseMatrix:i,concat:s,SparseMatrix:o}=e,l=createMatAlgo03xDSf({typed:t}),c=createMatAlgo07xSSf({typed:t,SparseMatrix:o}),f=createMatAlgo12xSfs({typed:t,DenseMatrix:i}),h=createMatrixAlgorithmSuite({typed:t,matrix:r,concat:s}),p=createCompareUnits({typed:t});return t(name$6,createLargerNumber({typed:t,config:n}),{"boolean, boolean":(g,x)=>g>x,"BigNumber, BigNumber":function(x,D){return x.gt(D)&&!nearlyEqual(x,D,n.relTol,n.absTol)},"bigint, bigint":(g,x)=>g>x,"Fraction, Fraction":(g,x)=>g.compare(x)===1,"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")}},p,h({SS:c,DS:l,Ss:f}))}),createLargerNumber=factory(name$6,["typed","config"],e=>{var{typed:t,config:n}=e;return t(name$6,{"number, number":function(i,s){return i>s&&!nearlyEqual$1(i,s,n.relTol,n.absTol)}})}),name$5="max",dependencies$4=["typed","config","numeric","larger"],createMax=factory(name$5,dependencies$4,e=>{var{typed:t,config:n,numeric:r,larger:i}=e;return t(name$5,{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(c,f){return reduce(c,f.valueOf(),s)},"...":function(c){if(containsCollections(c))throw new TypeError("Scalar values expected in function max");return o(c)}});function s(l,c){try{return i(l,c)?l:c}catch(f){throw improveErrorMessage(f,"max",c)}}function o(l){var c;if(deepForEach(l,function(f){try{isNaN(f)&&typeof f=="number"?c=NaN:(c===void 0||i(f,c))&&(c=f)}catch(h){throw improveErrorMessage(h,"max",f)}}),c===void 0)throw new Error("Cannot calculate max of an empty array");return typeof c=="string"&&(c=r(c,safeNumberType(c,n))),c}}),name$4="add",dependencies$3=["typed","matrix","addScalar","equalScalar","DenseMatrix","SparseMatrix","concat"],createAdd=factory(name$4,dependencies$3,e=>{var{typed:t,matrix:n,addScalar:r,equalScalar:i,DenseMatrix:s,SparseMatrix:o,concat:l}=e,c=createMatAlgo01xDSid({typed:t}),f=createMatAlgo04xSidSid({typed:t,equalScalar:i}),h=createMatAlgo10xSids({typed:t,DenseMatrix:s}),p=createMatrixAlgorithmSuite({typed:t,matrix:n,concat:l});return t(name$4,{"any, any":r,"any, any, ...any":t.referToSelf(g=>(x,D,y)=>{for(var E=g(x,D),F=0;F<y.length;F++)E=g(E,y[F]);return E})},p({elop:r,DS:c,SS:f,Ss:h}))}),name$3="dot",dependencies$2=["typed","addScalar","multiplyScalar","conj","size"],createDot=factory(name$3,dependencies$2,e=>{var{typed:t,addScalar:n,multiplyScalar:r,conj:i,size:s}=e;return t(name$3,{"Array | DenseMatrix, Array | DenseMatrix":l,"SparseMatrix, SparseMatrix":c});function o(h,p){var g=f(h),x=f(p),D,y;if(g.length===1)D=g[0];else if(g.length===2&&g[1]===1)D=g[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+g.join(", ")+")");if(x.length===1)y=x[0];else if(x.length===2&&x[1]===1)y=x[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+x.join(", ")+")");if(D!==y)throw new RangeError("Vectors must have equal length ("+D+" != "+y+")");if(D===0)throw new RangeError("Cannot calculate the dot product of empty vectors");return D}function l(h,p){var g=o(h,p),x=isMatrix(h)?h._data:h,D=isMatrix(h)?h._datatype||h.getDataType():void 0,y=isMatrix(p)?p._data:p,E=isMatrix(p)?p._datatype||p.getDataType():void 0,F=f(h).length===2,B=f(p).length===2,M=n,k=r;if(D&&E&&D===E&&typeof D=="string"&&D!=="mixed"){var T=D;M=t.find(n,[T,T]),k=t.find(r,[T,T])}if(!F&&!B){for(var N=k(i(x[0]),y[0]),$=1;$<g;$++)N=M(N,k(i(x[$]),y[$]));return N}if(!F&&B){for(var R=k(i(x[0]),y[0][0]),O=1;O<g;O++)R=M(R,k(i(x[O]),y[O][0]));return R}if(F&&!B){for(var L=k(i(x[0][0]),y[0]),z=1;z<g;z++)L=M(L,k(i(x[z][0]),y[z]));return L}if(F&&B){for(var X=k(i(x[0][0]),y[0][0]),o0=1;o0<g;o0++)X=M(X,k(i(x[o0][0]),y[o0][0]));return X}}function c(h,p){o(h,p);for(var g=h._index,x=h._values,D=p._index,y=p._values,E=0,F=n,B=r,M=0,k=0;M<g.length&&k<D.length;){var T=g[M],N=D[k];if(T<N){M++;continue}if(T>N){k++;continue}T===N&&(E=F(E,B(x[M],y[k])),M++,k++)}return E}function f(h){return isMatrix(h)?h.size():s(h)}}),name$2="sum",dependencies$1=["typed","config","add","numeric"],createSum=factory(name$2,dependencies$1,e=>{var{typed:t,config:n,add:r,numeric:i}=e;return t(name$2,{"Array | Matrix":s,"Array | Matrix, number | BigNumber":o,"...":function(c){if(containsCollections(c))throw new TypeError("Scalar values expected in function sum");return s(c)}});function s(l){var c;return deepForEach(l,function(f){try{c=c===void 0?f:r(c,f)}catch(h){throw improveErrorMessage(h,"sum",f)}}),c===void 0&&(c=i(0,n.number)),typeof c=="string"&&(c=i(c,safeNumberType(c,n))),c}function o(l,c){try{var f=reduce(l,c,r);return f}catch(h){throw improveErrorMessage(h,"sum")}}}),alea$1={exports:{}},alea=alea$1.exports,hasRequiredAlea;function requireAlea(){return hasRequiredAlea||(hasRequiredAlea=1,function(e){(function(t,n,r){function i(c){var f=this,h=l();f.next=function(){var p=2091639*f.s0+f.c*23283064365386963e-26;return f.s0=f.s1,f.s1=f.s2,f.s2=p-(f.c=p|0)},f.c=1,f.s0=h(" "),f.s1=h(" "),f.s2=h(" "),f.s0-=h(c),f.s0<0&&(f.s0+=1),f.s1-=h(c),f.s1<0&&(f.s1+=1),f.s2-=h(c),f.s2<0&&(f.s2+=1),h=null}function s(c,f){return f.c=c.c,f.s0=c.s0,f.s1=c.s1,f.s2=c.s2,f}function o(c,f){var h=new i(c),p=f&&f.state,g=h.next;return g.int32=function(){return h.next()*4294967296|0},g.double=function(){return g()+(g()*2097152|0)*11102230246251565e-32},g.quick=g,p&&(typeof p=="object"&&s(p,h),g.state=function(){return s(h,{})}),g}function l(){var c=4022871197,f=function(h){h=String(h);for(var p=0;p<h.length;p++){c+=h.charCodeAt(p);var g=.02519603282416938*c;c=g>>>0,g-=c,g*=c,c=g>>>0,g-=c,c+=g*4294967296}return(c>>>0)*23283064365386963e-26};return f}n.exports?n.exports=o:this.alea=o})(alea,e)}(alea$1)),alea$1.exports}var xor128$1={exports:{}},xor128=xor128$1.exports,hasRequiredXor128;function requireXor128(){return hasRequiredXor128||(hasRequiredXor128=1,function(e){(function(t,n,r){function i(l){var c=this,f="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var p=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^p^p>>>8},l===(l|0)?c.x=l:f+=l;for(var h=0;h<f.length+64;h++)c.x^=f.charCodeAt(h)|0,c.next()}function s(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c}function o(l,c){var f=new i(l),h=c&&c.state,p=function(){return(f.next()>>>0)/4294967296};return p.double=function(){do var g=f.next()>>>11,x=(f.next()>>>0)/4294967296,D=(g+x)/(1<<21);while(D===0);return D},p.int32=f.next,p.quick=p,h&&(typeof h=="object"&&s(h,f),p.state=function(){return s(f,{})}),p}n.exports?n.exports=o:this.xor128=o})(xor128,e)}(xor128$1)),xor128$1.exports}var xorwow$1={exports:{}},xorwow=xorwow$1.exports,hasRequiredXorwow;function requireXorwow(){return hasRequiredXorwow||(hasRequiredXorwow=1,function(e){(function(t,n,r){function i(l){var c=this,f="";c.next=function(){var p=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(p^p<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,l===(l|0)?c.x=l:f+=l;for(var h=0;h<f.length+64;h++)c.x^=f.charCodeAt(h)|0,h==f.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function s(l,c){return c.x=l.x,c.y=l.y,c.z=l.z,c.w=l.w,c.v=l.v,c.d=l.d,c}function o(l,c){var f=new i(l),h=c&&c.state,p=function(){return(f.next()>>>0)/4294967296};return p.double=function(){do var g=f.next()>>>11,x=(f.next()>>>0)/4294967296,D=(g+x)/(1<<21);while(D===0);return D},p.int32=f.next,p.quick=p,h&&(typeof h=="object"&&s(h,f),p.state=function(){return s(f,{})}),p}n.exports?n.exports=o:this.xorwow=o})(xorwow,e)}(xorwow$1)),xorwow$1.exports}var xorshift7$1={exports:{}},xorshift7=xorshift7$1.exports,hasRequiredXorshift7;function requireXorshift7(){return hasRequiredXorshift7||(hasRequiredXorshift7=1,function(e){(function(t,n,r){function i(l){var c=this;c.next=function(){var h=c.x,p=c.i,g,x;return g=h[p],g^=g>>>7,x=g^g<<24,g=h[p+1&7],x^=g^g>>>10,g=h[p+3&7],x^=g^g>>>3,g=h[p+4&7],x^=g^g<<7,g=h[p+7&7],g=g^g<<13,x^=g^g<<9,h[p]=x,c.i=p+1&7,x};function f(h,p){var g,x=[];if(p===(p|0))x[0]=p;else for(p=""+p,g=0;g<p.length;++g)x[g&7]=x[g&7]<<15^p.charCodeAt(g)+x[g+1&7]<<13;for(;x.length<8;)x.push(0);for(g=0;g<8&&x[g]===0;++g);for(g==8?x[7]=-1:x[g],h.x=x,h.i=0,g=256;g>0;--g)h.next()}f(c,l)}function s(l,c){return c.x=l.x.slice(),c.i=l.i,c}function o(l,c){l==null&&(l=+new Date);var f=new i(l),h=c&&c.state,p=function(){return(f.next()>>>0)/4294967296};return p.double=function(){do var g=f.next()>>>11,x=(f.next()>>>0)/4294967296,D=(g+x)/(1<<21);while(D===0);return D},p.int32=f.next,p.quick=p,h&&(h.x&&s(h,f),p.state=function(){return s(f,{})}),p}n.exports?n.exports=o:this.xorshift7=o})(xorshift7,e)}(xorshift7$1)),xorshift7$1.exports}var xor4096$1={exports:{}},xor4096=xor4096$1.exports,hasRequiredXor4096;function requireXor4096(){return hasRequiredXor4096||(hasRequiredXor4096=1,function(e){(function(t,n,r){function i(l){var c=this;c.next=function(){var h=c.w,p=c.X,g=c.i,x,D;return c.w=h=h+1640531527|0,D=p[g+34&127],x=p[g=g+1&127],D^=D<<13,x^=x<<17,D^=D>>>15,x^=x>>>12,D=p[g]=D^x,c.i=g,D+(h^h>>>16)|0};function f(h,p){var g,x,D,y,E,F=[],B=128;for(p===(p|0)?(x=p,p=null):(p=p+"\0",x=0,B=Math.max(B,p.length)),D=0,y=-32;y<B;++y)p&&(x^=p.charCodeAt((y+32)%p.length)),y===0&&(E=x),x^=x<<10,x^=x>>>15,x^=x<<4,x^=x>>>13,y>=0&&(E=E+1640531527|0,g=F[y&127]^=x+E,D=g==0?D+1:0);for(D>=128&&(F[(p&&p.length||0)&127]=-1),D=127,y=4*128;y>0;--y)x=F[D+34&127],g=F[D=D+1&127],x^=x<<13,g^=g<<17,x^=x>>>15,g^=g>>>12,F[D]=x^g;h.w=E,h.X=F,h.i=D}f(c,l)}function s(l,c){return c.i=l.i,c.w=l.w,c.X=l.X.slice(),c}function o(l,c){l==null&&(l=+new Date);var f=new i(l),h=c&&c.state,p=function(){return(f.next()>>>0)/4294967296};return p.double=function(){do var g=f.next()>>>11,x=(f.next()>>>0)/4294967296,D=(g+x)/(1<<21);while(D===0);return D},p.int32=f.next,p.quick=p,h&&(h.X&&s(h,f),p.state=function(){return s(f,{})}),p}n.exports?n.exports=o:this.xor4096=o})(xor4096,e)}(xor4096$1)),xor4096$1.exports}var tychei$1={exports:{}},tychei=tychei$1.exports,hasRequiredTychei;function requireTychei(){return hasRequiredTychei||(hasRequiredTychei=1,function(e){(function(t,n,r){function i(l){var c=this,f="";c.next=function(){var p=c.b,g=c.c,x=c.d,D=c.a;return p=p<<25^p>>>7^g,g=g-x|0,x=x<<24^x>>>8^D,D=D-p|0,c.b=p=p<<20^p>>>12^g,c.c=g=g-x|0,c.d=x<<16^g>>>16^D,c.a=D-p|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,l===Math.floor(l)?(c.a=l/4294967296|0,c.b=l|0):f+=l;for(var h=0;h<f.length+20;h++)c.b^=f.charCodeAt(h)|0,c.next()}function s(l,c){return c.a=l.a,c.b=l.b,c.c=l.c,c.d=l.d,c}function o(l,c){var f=new i(l),h=c&&c.state,p=function(){return(f.next()>>>0)/4294967296};return p.double=function(){do var g=f.next()>>>11,x=(f.next()>>>0)/4294967296,D=(g+x)/(1<<21);while(D===0);return D},p.int32=f.next,p.quick=p,h&&(typeof h=="object"&&s(h,f),p.state=function(){return s(f,{})}),p}n.exports?n.exports=o:this.tychei=o})(tychei,e)}(tychei$1)),tychei$1.exports}var seedrandom$3={exports:{}};const __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$0$4=getAugmentedNamespace(__viteBrowserExternal$1);var seedrandom$2=seedrandom$3.exports,hasRequiredSeedrandom$1;function requireSeedrandom$1(){return hasRequiredSeedrandom$1||(hasRequiredSeedrandom$1=1,function(e){(function(t,n,r){var i=256,s=6,o=52,l="random",c=r.pow(i,s),f=r.pow(2,o),h=f*2,p=i-1,g;function x(k,T,N){var $=[];T=T==!0?{entropy:!0}:T||{};var R=F(E(T.entropy?[k,M(n)]:k??B(),3),$),O=new D($),L=function(){for(var z=O.g(s),X=c,o0=0;z<f;)z=(z+o0)*i,X*=i,o0=O.g(1);for(;z>=h;)z/=2,X/=2,o0>>>=1;return(z+o0)/X};return L.int32=function(){return O.g(4)|0},L.quick=function(){return O.g(4)/4294967296},L.double=L,F(M(O.S),n),(T.pass||N||function(z,X,o0,Z){return Z&&(Z.S&&y(Z,O),z.state=function(){return y(O,{})}),o0?(r[l]=z,X):z})(L,R,"global"in T?T.global:this==r,T.state)}function D(k){var T,N=k.length,$=this,R=0,O=$.i=$.j=0,L=$.S=[];for(N||(k=[N++]);R<i;)L[R]=R++;for(R=0;R<i;R++)L[R]=L[O=p&O+k[R%N]+(T=L[R])],L[O]=T;($.g=function(z){for(var X,o0=0,Z=$.i,n0=$.j,s0=$.S;z--;)X=s0[Z=p&Z+1],o0=o0*i+s0[p&(s0[Z]=s0[n0=p&n0+X])+(s0[n0]=X)];return $.i=Z,$.j=n0,o0})(i)}function y(k,T){return T.i=k.i,T.j=k.j,T.S=k.S.slice(),T}function E(k,T){var N=[],$=typeof k,R;if(T&&$=="object")for(R in k)try{N.push(E(k[R],T-1))}catch{}return N.length?N:$=="string"?k:k+"\0"}function F(k,T){for(var N=k+"",$,R=0;R<N.length;)T[p&R]=p&($^=T[p&R]*19)+N.charCodeAt(R++);return M(T)}function B(){try{var k;return g&&(k=g.randomBytes)?k=k(i):(k=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(k)),M(k)}catch{var T=t.navigator,N=T&&T.plugins;return[+new Date,t,N,t.screen,M(n)]}}function M(k){return String.fromCharCode.apply(0,k)}if(F(r.random(),n),e.exports){e.exports=x;try{g=require$$0$4}catch{}}else r["seed"+l]=x})(typeof self<"u"?self:seedrandom$2,[],Math)}(seedrandom$3)),seedrandom$3.exports}var seedrandom$1,hasRequiredSeedrandom;function requireSeedrandom(){if(hasRequiredSeedrandom)return seedrandom$1;hasRequiredSeedrandom=1;var e=requireAlea(),t=requireXor128(),n=requireXorwow(),r=requireXorshift7(),i=requireXor4096(),s=requireTychei(),o=requireSeedrandom$1();return o.alea=e,o.xor128=t,o.xorwow=n,o.xorshift7=r,o.xor4096=i,o.tychei=s,seedrandom$1=o,seedrandom$1}var seedrandomExports=requireSeedrandom();const seedrandom=getDefaultExportFromCjs(seedrandomExports);var singletonRandom=seedrandom(Date.now());function createRng(e){var t;function n(i){t=i===null?singletonRandom:seedrandom(String(i))}n(e);function r(){return t()}return r}function randomMatrix(e,t){var n=[];if(e=e.slice(0),e.length>1)for(var r=0,i=e.shift();r<i;r++)n.push(randomMatrix(e,t));else for(var s=0,o=e.shift();s<o;s++)n.push(t());return n}var name$1="random",dependencies=["typed","config","?on"],createRandom=factory(name$1,dependencies,e=>{var{typed:t,config:n,on:r}=e,i=createRng(n.randomSeed);return r&&r("config",function(l,c){l.randomSeed!==c.randomSeed&&(i=createRng(l.randomSeed))}),t(name$1,{"":()=>o(0,1),number:l=>o(0,l),"number, number":(l,c)=>o(l,c),"Array | Matrix":l=>s(l,0,1),"Array | Matrix, number":(l,c)=>s(l,0,c),"Array | Matrix, number, number":(l,c,f)=>s(l,c,f)});function s(l,c,f){var h=randomMatrix(l.valueOf(),()=>o(c,f));return isMatrix(l)?l.create(h,"number"):h}function o(l,c){return l+i()*(c-l)}}),BigNumber=createBigNumberClass({config:config$1}),Complex=createComplexClass({}),Fraction=createFractionClass({}),Matrix$2=createMatrixClass({}),DenseMatrix=createDenseMatrixClass({Matrix:Matrix$2}),typed=createTyped({BigNumber,Complex,DenseMatrix,Fraction}),addScalar=createAddScalar({typed}),conj=createConj({typed}),equalScalar=createEqualScalar({config:config$1,typed}),exp=createExp({typed}),isInteger$2=createIsInteger({typed}),map$2=createMap({typed}),multiplyScalar=createMultiplyScalar({typed}),number=createNumber({typed}),random=createRandom({config:config$1,typed}),SparseMatrix=createSparseMatrixClass({Matrix:Matrix$2,equalScalar,typed}),subtractScalar=createSubtractScalar({typed}),bignumber=createBignumber({BigNumber,typed}),unaryMinus=createUnaryMinus({typed}),fraction=createFraction({Fraction,typed}),matrix$2=createMatrix({DenseMatrix,Matrix:Matrix$2,SparseMatrix,typed}),numeric=createNumeric({bignumber,fraction,number}),reshape=createReshape({isInteger:isInteger$2,matrix:matrix$2,typed}),size=createSize({matrix:matrix$2,config:config$1,typed}),concat=createConcat({isInteger:isInteger$2,matrix:matrix$2,typed}),divideScalar=createDivideScalar({numeric,typed}),dotDivide=createDotDivide({DenseMatrix,SparseMatrix,concat,divideScalar,equalScalar,matrix:matrix$2,typed}),subtract$1=createSubtract({DenseMatrix,concat,equalScalar,matrix:matrix$2,subtractScalar,typed,unaryMinus}),add$1=createAdd({DenseMatrix,SparseMatrix,addScalar,concat,equalScalar,matrix:matrix$2,typed}),dot=createDot({addScalar,conj,multiplyScalar,size,typed}),larger=createLarger({DenseMatrix,SparseMatrix,concat,config:config$1,matrix:matrix$2,typed}),multiply$1=createMultiply({addScalar,dot,equalScalar,matrix:matrix$2,multiplyScalar,typed}),sum$1=createSum({add:add$1,config:config$1,numeric,typed}),max$3=createMax({config:config$1,larger,numeric,typed});const bitMethods={getBit(e){return this.data[getSlot(e)]&1<<getShift(e)?1:0},setBit(e){this.data[getSlot(e)]|=1<<getShift(e)},clearBit(e){this.data[getSlot(e)]&=~(1<<getShift(e))},toggleBit(e){this.data[getSlot(e)]^=1<<getShift(e)},getBitXY(e,t){return e>=this.width||t>=this.height?0:this.getBit(t*this.width+e)},setBitXY(e,t){this.setBit(t*this.width+e)},clearBitXY(e,t){this.clearBit(t*this.width+e)},toggleBitXY(e,t){this.toggleBit(t*this.width+e)}};function getSlot(e){return e>>3}function getShift(e){return 7-(e&7)}function setBitMethods(e){for(const t in bitMethods)e.prototype[t]=bitMethods[t]}function checkProcessable(e,t={}){let{bitDepth:n,alpha:r,colorModel:i,components:s,channels:o}=t;if(typeof e!="string"||e.length===0)throw new TypeError("processName must be a string");if(n&&(Array.isArray(n)||(n=[n]),!n.includes(this.bitDepth)))throw new TypeError(`The process: ${e} can only be applied if bit depth is in: ${n}`);if(r&&(Array.isArray(r)||(r=[r]),!r.includes(this.alpha)))throw new TypeError(`The process: ${e} can only be applied if alpha is in: ${r}`);if(i&&(Array.isArray(i)||(i=[i]),!i.includes(this.colorModel)))throw new TypeError(`The process: ${e} can only be applied if color model is in: ${i}`);if(s&&(Array.isArray(s)||(s=[s]),!s.includes(this.components))){let l=`The process: ${e} can only be applied if the number of components is in: ${s}`;throw s.length===1&&s[0]===1?new TypeError(`${l}.\rYou should transform your image using "image.grey()" before applying the algorithm.`):new TypeError(l)}if(o&&(Array.isArray(o)||(o=[o]),!o.includes(this.channels)))throw new TypeError(`The process: ${e} can only be applied if the number of channels is in: ${o}`)}function createBlob(e,t){e=e||[],t=t||{},typeof t=="string"&&(t={type:t});try{return new Blob(e,t)}catch(s){if(s.name!=="TypeError")throw s;for(var n=typeof BlobBuilder<"u"?BlobBuilder:typeof MSBlobBuilder<"u"?MSBlobBuilder:typeof MozBlobBuilder<"u"?MozBlobBuilder:WebKitBlobBuilder,r=new n,i=0;i<e.length;i+=1)r.append(e[i]);return r.getBlob(t.type)}}function dataURLToBlob(e){var t=e.match(/data:([^;]+)/)[1],n=e.replace(/^[^,]+,/,""),r=binaryStringToArrayBuffer(atob(n));return createBlob([r],{type:t})}function canvasToBlob(e,t,n){return typeof e.toBlob=="function"?new Promise(function(r){e.toBlob(r,t,n)}):Promise.resolve(dataURLToBlob(e.toDataURL(t,n)))}function binaryStringToArrayBuffer(e){for(var t=e.length,n=new ArrayBuffer(t),r=new Uint8Array(n),i=-1;++i<t;)r[i]=e.charCodeAt(i);return n}var src$5={};(function(e){if(e.TextEncoder&&e.TextDecoder)return!1;function t(r="utf-8"){if(r!=="utf-8")throw new RangeError(`Failed to construct 'TextEncoder': The encoding label provided ('${r}') is invalid.`)}Object.defineProperty(t.prototype,"encoding",{value:"utf-8"}),t.prototype.encode=function(r,i={stream:!1}){if(i.stream)throw new Error("Failed to encode: the 'stream' option is unsupported.");let s=0;const o=r.length;let l=0,c=Math.max(32,o+(o>>1)+7),f=new Uint8Array(c>>3<<3);for(;s<o;){let h=r.charCodeAt(s++);if(h>=55296&&h<=56319){if(s<o){const p=r.charCodeAt(s);(p&64512)===56320&&(++s,h=((h&1023)<<10)+(p&1023)+65536)}if(h>=55296&&h<=56319)continue}if(l+4>f.length){c+=8,c*=1+s/r.length*2,c=c>>3<<3;const p=new Uint8Array(c);p.set(f),f=p}if(h&4294967168)if(!(h&4294965248))f[l++]=h>>6&31|192;else if(!(h&4294901760))f[l++]=h>>12&15|224,f[l++]=h>>6&63|128;else if(!(h&4292870144))f[l++]=h>>18&7|240,f[l++]=h>>12&63|128,f[l++]=h>>6&63|128;else continue;else{f[l++]=h;continue}f[l++]=h&63|128}return f.slice(0,l)};function n(r="utf-8",i={fatal:!1}){if(r!=="utf-8")throw new RangeError(`Failed to construct 'TextDecoder': The encoding label provided ('${r}') is invalid.`);if(i.fatal)throw new Error("Failed to construct 'TextDecoder': the 'fatal' option is unsupported.")}Object.defineProperty(n.prototype,"encoding",{value:"utf-8"}),Object.defineProperty(n.prototype,"fatal",{value:!1}),Object.defineProperty(n.prototype,"ignoreBOM",{value:!1}),n.prototype.decode=function(r,i={stream:!1}){if(i.stream)throw new Error("Failed to decode: the 'stream' option is unsupported.");const s=new Uint8Array(r);let o=0;const l=s.length,c=[];for(;o<l;){const f=s[o++];if(f===0)break;if(!(f&128))c.push(f);else if((f&224)===192){const h=s[o++]&63;c.push((f&31)<<6|h)}else if((f&240)===224){const h=s[o++]&63,p=s[o++]&63;c.push((f&31)<<12|h<<6|p)}else if((f&248)===240){const h=s[o++]&63,p=s[o++]&63,g=s[o++]&63;let x=(f&7)<<18|h<<12|p<<6|g;x>65535&&(x-=65536,c.push(x>>>10&1023|55296),x=56320|x&1023),c.push(x)}}return String.fromCharCode.apply(null,c)},e.TextEncoder=t,e.TextDecoder=n})(typeof window<"u"?window:typeof self<"u"?self:void 0);function decode$2(e,t="utf8"){return new TextDecoder(t).decode(e)}const encoder$1=new TextEncoder;function encode$1(e){return encoder$1.encode(e)}const defaultByteLength=1024*8,hostBigEndian=(()=>{const e=new Uint8Array(4),t=new Uint32Array(e.buffer);return!((t[0]=1)&e[0])})(),typedArrays={int8:globalThis.Int8Array,uint8:globalThis.Uint8Array,int16:globalThis.Int16Array,uint16:globalThis.Uint16Array,int32:globalThis.Int32Array,uint32:globalThis.Uint32Array,uint64:globalThis.BigUint64Array,int64:globalThis.BigInt64Array,float32:globalThis.Float32Array,float64:globalThis.Float64Array};class IOBuffer{constructor(t=defaultByteLength,n={}){let r=!1;typeof t=="number"?t=new ArrayBuffer(t):(r=!0,this.lastWrittenByte=t.byteLength);const i=n.offset?n.offset>>>0:0,s=t.byteLength-i;let o=i;(ArrayBuffer.isView(t)||t instanceof IOBuffer)&&(t.byteLength!==t.buffer.byteLength&&(o=t.byteOffset+i),t=t.buffer),r?this.lastWrittenByte=s:this.lastWrittenByte=0,this.buffer=t,this.length=s,this.byteLength=s,this.byteOffset=o,this.offset=0,this.littleEndian=!0,this._data=new DataView(this.buffer,o,s),this._mark=0,this._marks=[]}available(t=1){return this.offset+t<=this.length}isLittleEndian(){return this.littleEndian}setLittleEndian(){return this.littleEndian=!0,this}isBigEndian(){return!this.littleEndian}setBigEndian(){return this.littleEndian=!1,this}skip(t=1){return this.offset+=t,this}back(t=1){return this.offset-=t,this}seek(t){return this.offset=t,this}mark(){return this._mark=this.offset,this}reset(){return this.offset=this._mark,this}pushMark(){return this._marks.push(this.offset),this}popMark(){const t=this._marks.pop();if(t===void 0)throw new Error("Mark stack empty");return this.seek(t),this}rewind(){return this.offset=0,this}ensureAvailable(t=1){if(!this.available(t)){const r=(this.offset+t)*2,i=new Uint8Array(r);i.set(new Uint8Array(this.buffer)),this.buffer=i.buffer,this.length=this.byteLength=r,this._data=new DataView(this.buffer)}return this}readBoolean(){return this.readUint8()!==0}readInt8(){return this._data.getInt8(this.offset++)}readUint8(){return this._data.getUint8(this.offset++)}readByte(){return this.readUint8()}readBytes(t=1){return this.readArray(t,"uint8")}readArray(t,n){const r=typedArrays[n].BYTES_PER_ELEMENT*t,i=this.byteOffset+this.offset,s=this.buffer.slice(i,i+r);if(this.littleEndian===hostBigEndian&&n!=="uint8"&&n!=="int8"){const l=new Uint8Array(this.buffer.slice(i,i+r));l.reverse();const c=new typedArrays[n](l.buffer);return this.offset+=r,c.reverse(),c}const o=new typedArrays[n](s);return this.offset+=r,o}readInt16(){const t=this._data.getInt16(this.offset,this.littleEndian);return this.offset+=2,t}readUint16(){const t=this._data.getUint16(this.offset,this.littleEndian);return this.offset+=2,t}readInt32(){const t=this._data.getInt32(this.offset,this.littleEndian);return this.offset+=4,t}readUint32(){const t=this._data.getUint32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat32(){const t=this._data.getFloat32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat64(){const t=this._data.getFloat64(this.offset,this.littleEndian);return this.offset+=8,t}readBigInt64(){const t=this._data.getBigInt64(this.offset,this.littleEndian);return this.offset+=8,t}readBigUint64(){const t=this._data.getBigUint64(this.offset,this.littleEndian);return this.offset+=8,t}readChar(){return String.fromCharCode(this.readInt8())}readChars(t=1){let n="";for(let r=0;r<t;r++)n+=this.readChar();return n}readUtf8(t=1){return decode$2(this.readBytes(t))}decodeText(t=1,n="utf-8"){return decode$2(this.readBytes(t),n)}writeBoolean(t){return this.writeUint8(t?255:0),this}writeInt8(t){return this.ensureAvailable(1),this._data.setInt8(this.offset++,t),this._updateLastWrittenByte(),this}writeUint8(t){return this.ensureAvailable(1),this._data.setUint8(this.offset++,t),this._updateLastWrittenByte(),this}writeByte(t){return this.writeUint8(t)}writeBytes(t){this.ensureAvailable(t.length);for(let n=0;n<t.length;n++)this._data.setUint8(this.offset++,t[n]);return this._updateLastWrittenByte(),this}writeInt16(t){return this.ensureAvailable(2),this._data.setInt16(this.offset,t,this.littleEndian),this.offset+=2,this._updateLastWrittenByte(),this}writeUint16(t){return this.ensureAvailable(2),this._data.setUint16(this.offset,t,this.littleEndian),this.offset+=2,this._updateLastWrittenByte(),this}writeInt32(t){return this.ensureAvailable(4),this._data.setInt32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeUint32(t){return this.ensureAvailable(4),this._data.setUint32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeFloat32(t){return this.ensureAvailable(4),this._data.setFloat32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeFloat64(t){return this.ensureAvailable(8),this._data.setFloat64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeBigInt64(t){return this.ensureAvailable(8),this._data.setBigInt64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeBigUint64(t){return this.ensureAvailable(8),this._data.setBigUint64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeChar(t){return this.writeUint8(t.charCodeAt(0))}writeChars(t){for(let n=0;n<t.length;n++)this.writeUint8(t.charCodeAt(n));return this}writeUtf8(t){return this.writeBytes(encode$1(t))}toArray(){return new Uint8Array(this.buffer,this.byteOffset,this.lastWrittenByte)}_updateLastWrittenByte(){this.offset>this.lastWrittenByte&&(this.lastWrittenByte=this.offset)}}const IOBuffer$1=Object.freeze(Object.defineProperty({__proto__:null,IOBuffer},Symbol.toStringTag,{value:"Module"})),require$$0$3=getAugmentedNamespace(IOBuffer$1);var constants$3,hasRequiredConstants;function requireConstants(){return hasRequiredConstants||(hasRequiredConstants=1,constants$3={BITMAPV5HEADER:{LogicalColorSpace:{LCS_CALIBRATED_RGB:0,LCS_sRGB:1934772034,LCS_WINDOWS_COLOR_SPACE:1466527264},Compression:{BI_RGB:0,BI_RLE8:1,BI_RLE4:2,BI_BITFIELDS:3,BI_JPEG:4,BI_PNG:5,BI_CMYK:11,BI_CMYKRLE8:12,BI_CMYKRLE4:13},GamutMappingIntent:{LCS_GM_ABS_COLORIMETRIC:8,LCS_GM_BUSINESS:1,LCS_GM_GRAPHICS:2,LCS_GM_IMAGES:4}}}),constants$3}var BMPEncoder_1,hasRequiredBMPEncoder;function requireBMPEncoder(){if(hasRequiredBMPEncoder)return BMPEncoder_1;hasRequiredBMPEncoder=1;const{IOBuffer:e}=require$$0$3,t=requireConstants(),n=[];for(let i=0;i<=8;i++)n.push(255<<i);class r extends e{constructor(s){if(s.bitDepth!==1)throw new Error("Only bitDepth of 1 is supported");if(!s.height||!s.width)throw new Error("ImageData width and height are required");super(s.data),this.width=s.width,this.height=s.height,this.bitDepth=s.bitDepth,this.channels=s.channels,this.components=s.components}encode(){this.encoded=new e,this.encoded.skip(14),this.writeBitmapV5Header(),this.writeColorTable();const s=this.encoded.offset;return this.writePixelArray(),this.encoded.rewind(),this.writeBitmapFileHeader(s),this.encoded.toArray()}writePixelArray(){let s=this.encoded;const o=Math.floor((this.bitDepth*this.width+31)/32)*4,l=Math.ceil(this.bitDepth*this.width/8),c=o-l,f=this.bitDepth*this.width%8,h=f===0?0:8-f,p=o*this.height;let g,x,D=0,y=0,E=8;s.mark(),x=this.readUint8();for(let F=this.height-1;F>=0;F--){const B=F===0;s.reset(),s.skip(F*o);for(let M=0;M<l;M++){const k=M===l-1;y<=h&&k?(s.writeByte(x<<y),(h===0||h===y)&&!B&&(g=x,x=this.readByte())):y===0?(g=x,x=this.readUint8(),s.writeByte(g)):(g=x,x=this.readUint8(),s.writeByte(g<<y&n[y]|x>>E)),k&&(D+=f||0,s.skip(c),y=D%8,E=8-y)}}o>l&&(s.reset(),s.skip(p-1),s.writeUint8(0))}writeColorTable(){this.encoded.writeUint32(0).writeUint32(16777215)}writeBitmapFileHeader(s){this.encoded.writeChars("BM").writeInt32(this.encoded.lastWrittenByte).writeUint16(0).writeUint16(0).writeUint32(s)}writeBitmapV5Header(){const o=Math.floor((this.bitDepth*this.width+31)/32)*4*this.height;this.encoded.writeUint32(124).writeInt32(this.width).writeInt32(this.height).writeUint16(1).writeUint16(this.bitDepth).writeUint32(t.BITMAPV5HEADER.Compression.BI_RGB).writeUint32(o).writeInt32(0).writeInt32(0).writeUint32(Math.pow(2,this.bitDepth)).writeUint32(Math.pow(2,this.bitDepth)).writeUint32(4278190080).writeUint32(16711680).writeUint32(65280).writeUint32(255).writeUint32(t.BITMAPV5HEADER.LogicalColorSpace.LCS_sRGB).skip(36).skip(12).writeUint32(t.BITMAPV5HEADER.GamutMappingIntent.LCS_GM_IMAGES).skip(12)}}return BMPEncoder_1=r,BMPEncoder_1}var hasRequiredSrc$5;function requireSrc$5(){if(hasRequiredSrc$5)return src$5;hasRequiredSrc$5=1;const e=requireBMPEncoder();return src$5.encode=function(n){return new e(n).encode()},src$5}var srcExports$3=requireSrc$5();/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */const Z_FIXED$1=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN$1=2;function zero$1(e){let t=e.length;for(;--t>=0;)e[t]=0}const STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH$1=3,MAX_MATCH$1=258,LENGTH_CODES$1=29,LITERALS$1=256,L_CODES$1=LITERALS$1+1+LENGTH_CODES$1,D_CODES$1=30,BL_CODES$1=19,HEAP_SIZE$1=2*L_CODES$1+1,MAX_BITS$1=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),extra_dbits=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),extra_blbits=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),bl_order=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),DIST_CODE_LEN=512,static_ltree=new Array((L_CODES$1+2)*2);zero$1(static_ltree);const static_dtree=new Array(D_CODES$1*2);zero$1(static_dtree);const _dist_code=new Array(DIST_CODE_LEN);zero$1(_dist_code);const _length_code=new Array(MAX_MATCH$1-MIN_MATCH$1+1);zero$1(_length_code);const base_length=new Array(LENGTH_CODES$1);zero$1(base_length);const base_dist=new Array(D_CODES$1);zero$1(base_dist);function StaticTreeDesc(e,t,n,r,i){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=i,this.has_stree=e&&e.length}let static_l_desc,static_d_desc,static_bl_desc;function TreeDesc(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}const d_code=e=>e<256?_dist_code[e]:_dist_code[256+(e>>>7)],put_short=(e,t)=>{e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255},send_bits=(e,t,n)=>{e.bi_valid>Buf_size-n?(e.bi_buf|=t<<e.bi_valid&65535,put_short(e,e.bi_buf),e.bi_buf=t>>Buf_size-e.bi_valid,e.bi_valid+=n-Buf_size):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)},send_code=(e,t,n)=>{send_bits(e,n[t*2],n[t*2+1])},bi_reverse=(e,t)=>{let n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1},bi_flush=e=>{e.bi_valid===16?(put_short(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)},gen_bitlen=(e,t)=>{const n=t.dyn_tree,r=t.max_code,i=t.stat_desc.static_tree,s=t.stat_desc.has_stree,o=t.stat_desc.extra_bits,l=t.stat_desc.extra_base,c=t.stat_desc.max_length;let f,h,p,g,x,D,y=0;for(g=0;g<=MAX_BITS$1;g++)e.bl_count[g]=0;for(n[e.heap[e.heap_max]*2+1]=0,f=e.heap_max+1;f<HEAP_SIZE$1;f++)h=e.heap[f],g=n[n[h*2+1]*2+1]+1,g>c&&(g=c,y++),n[h*2+1]=g,!(h>r)&&(e.bl_count[g]++,x=0,h>=l&&(x=o[h-l]),D=n[h*2],e.opt_len+=D*(g+x),s&&(e.static_len+=D*(i[h*2+1]+x)));if(y!==0){do{for(g=c-1;e.bl_count[g]===0;)g--;e.bl_count[g]--,e.bl_count[g+1]+=2,e.bl_count[c]--,y-=2}while(y>0);for(g=c;g!==0;g--)for(h=e.bl_count[g];h!==0;)p=e.heap[--f],!(p>r)&&(n[p*2+1]!==g&&(e.opt_len+=(g-n[p*2+1])*n[p*2],n[p*2+1]=g),h--)}},gen_codes=(e,t,n)=>{const r=new Array(MAX_BITS$1+1);let i=0,s,o;for(s=1;s<=MAX_BITS$1;s++)i=i+n[s-1]<<1,r[s]=i;for(o=0;o<=t;o++){let l=e[o*2+1];l!==0&&(e[o*2]=bi_reverse(r[l]++,l))}},tr_static_init=()=>{let e,t,n,r,i;const s=new Array(MAX_BITS$1+1);for(n=0,r=0;r<LENGTH_CODES$1-1;r++)for(base_length[r]=n,e=0;e<1<<extra_lbits[r];e++)_length_code[n++]=r;for(_length_code[n-1]=r,i=0,r=0;r<16;r++)for(base_dist[r]=i,e=0;e<1<<extra_dbits[r];e++)_dist_code[i++]=r;for(i>>=7;r<D_CODES$1;r++)for(base_dist[r]=i<<7,e=0;e<1<<extra_dbits[r]-7;e++)_dist_code[256+i++]=r;for(t=0;t<=MAX_BITS$1;t++)s[t]=0;for(e=0;e<=143;)static_ltree[e*2+1]=8,e++,s[8]++;for(;e<=255;)static_ltree[e*2+1]=9,e++,s[9]++;for(;e<=279;)static_ltree[e*2+1]=7,e++,s[7]++;for(;e<=287;)static_ltree[e*2+1]=8,e++,s[8]++;for(gen_codes(static_ltree,L_CODES$1+1,s),e=0;e<D_CODES$1;e++)static_dtree[e*2+1]=5,static_dtree[e*2]=bi_reverse(e,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS$1+1,L_CODES$1,MAX_BITS$1),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES$1,MAX_BITS$1),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES$1,MAX_BL_BITS)},init_block=e=>{let t;for(t=0;t<L_CODES$1;t++)e.dyn_ltree[t*2]=0;for(t=0;t<D_CODES$1;t++)e.dyn_dtree[t*2]=0;for(t=0;t<BL_CODES$1;t++)e.bl_tree[t*2]=0;e.dyn_ltree[END_BLOCK*2]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},bi_windup=e=>{e.bi_valid>8?put_short(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},smaller=(e,t,n,r)=>{const i=t*2,s=n*2;return e[i]<e[s]||e[i]===e[s]&&r[t]<=r[n]},pqdownheap=(e,t,n)=>{const r=e.heap[n];let i=n<<1;for(;i<=e.heap_len&&(i<e.heap_len&&smaller(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!smaller(t,r,e.heap[i],e.depth));)e.heap[n]=e.heap[i],n=i,i<<=1;e.heap[n]=r},compress_block=(e,t,n)=>{let r,i,s=0,o,l;if(e.sym_next!==0)do r=e.pending_buf[e.sym_buf+s++]&255,r+=(e.pending_buf[e.sym_buf+s++]&255)<<8,i=e.pending_buf[e.sym_buf+s++],r===0?send_code(e,i,t):(o=_length_code[i],send_code(e,o+LITERALS$1+1,t),l=extra_lbits[o],l!==0&&(i-=base_length[o],send_bits(e,i,l)),r--,o=d_code(r),send_code(e,o,n),l=extra_dbits[o],l!==0&&(r-=base_dist[o],send_bits(e,r,l)));while(s<e.sym_next);send_code(e,END_BLOCK,t)},build_tree=(e,t)=>{const n=t.dyn_tree,r=t.stat_desc.static_tree,i=t.stat_desc.has_stree,s=t.stat_desc.elems;let o,l,c=-1,f;for(e.heap_len=0,e.heap_max=HEAP_SIZE$1,o=0;o<s;o++)n[o*2]!==0?(e.heap[++e.heap_len]=c=o,e.depth[o]=0):n[o*2+1]=0;for(;e.heap_len<2;)f=e.heap[++e.heap_len]=c<2?++c:0,n[f*2]=1,e.depth[f]=0,e.opt_len--,i&&(e.static_len-=r[f*2+1]);for(t.max_code=c,o=e.heap_len>>1;o>=1;o--)pqdownheap(e,n,o);f=s;do o=e.heap[1],e.heap[1]=e.heap[e.heap_len--],pqdownheap(e,n,1),l=e.heap[1],e.heap[--e.heap_max]=o,e.heap[--e.heap_max]=l,n[f*2]=n[o*2]+n[l*2],e.depth[f]=(e.depth[o]>=e.depth[l]?e.depth[o]:e.depth[l])+1,n[o*2+1]=n[l*2+1]=f,e.heap[1]=f++,pqdownheap(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],gen_bitlen(e,t),gen_codes(n,c,e.bl_count)},scan_tree=(e,t,n)=>{let r,i=-1,s,o=t[0*2+1],l=0,c=7,f=4;for(o===0&&(c=138,f=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)s=o,o=t[(r+1)*2+1],!(++l<c&&s===o)&&(l<f?e.bl_tree[s*2]+=l:s!==0?(s!==i&&e.bl_tree[s*2]++,e.bl_tree[REP_3_6*2]++):l<=10?e.bl_tree[REPZ_3_10*2]++:e.bl_tree[REPZ_11_138*2]++,l=0,i=s,o===0?(c=138,f=3):s===o?(c=6,f=3):(c=7,f=4))},send_tree=(e,t,n)=>{let r,i=-1,s,o=t[0*2+1],l=0,c=7,f=4;for(o===0&&(c=138,f=3),r=0;r<=n;r++)if(s=o,o=t[(r+1)*2+1],!(++l<c&&s===o)){if(l<f)do send_code(e,s,e.bl_tree);while(--l!==0);else s!==0?(s!==i&&(send_code(e,s,e.bl_tree),l--),send_code(e,REP_3_6,e.bl_tree),send_bits(e,l-3,2)):l<=10?(send_code(e,REPZ_3_10,e.bl_tree),send_bits(e,l-3,3)):(send_code(e,REPZ_11_138,e.bl_tree),send_bits(e,l-11,7));l=0,i=s,o===0?(c=138,f=3):s===o?(c=6,f=3):(c=7,f=4)}},build_bl_tree=e=>{let t;for(scan_tree(e,e.dyn_ltree,e.l_desc.max_code),scan_tree(e,e.dyn_dtree,e.d_desc.max_code),build_tree(e,e.bl_desc),t=BL_CODES$1-1;t>=3&&e.bl_tree[bl_order[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t},send_all_trees=(e,t,n,r)=>{let i;for(send_bits(e,t-257,5),send_bits(e,n-1,5),send_bits(e,r-4,4),i=0;i<r;i++)send_bits(e,e.bl_tree[bl_order[i]*2+1],3);send_tree(e,e.dyn_ltree,t-1),send_tree(e,e.dyn_dtree,n-1)},detect_data_type=e=>{let t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return Z_BINARY;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return Z_TEXT;for(n=32;n<LITERALS$1;n++)if(e.dyn_ltree[n*2]!==0)return Z_TEXT;return Z_BINARY};let static_init_done=!1;const _tr_init$1=e=>{static_init_done||(tr_static_init(),static_init_done=!0),e.l_desc=new TreeDesc(e.dyn_ltree,static_l_desc),e.d_desc=new TreeDesc(e.dyn_dtree,static_d_desc),e.bl_desc=new TreeDesc(e.bl_tree,static_bl_desc),e.bi_buf=0,e.bi_valid=0,init_block(e)},_tr_stored_block$1=(e,t,n,r)=>{send_bits(e,(STORED_BLOCK<<1)+(r?1:0),3),bi_windup(e),put_short(e,n),put_short(e,~n),n&&e.pending_buf.set(e.window.subarray(t,t+n),e.pending),e.pending+=n},_tr_align$1=e=>{send_bits(e,STATIC_TREES<<1,3),send_code(e,END_BLOCK,static_ltree),bi_flush(e)},_tr_flush_block$1=(e,t,n,r)=>{let i,s,o=0;e.level>0?(e.strm.data_type===Z_UNKNOWN$1&&(e.strm.data_type=detect_data_type(e)),build_tree(e,e.l_desc),build_tree(e,e.d_desc),o=build_bl_tree(e),i=e.opt_len+3+7>>>3,s=e.static_len+3+7>>>3,s<=i&&(i=s)):i=s=n+5,n+4<=i&&t!==-1?_tr_stored_block$1(e,t,n,r):e.strategy===Z_FIXED$1||s===i?(send_bits(e,(STATIC_TREES<<1)+(r?1:0),3),compress_block(e,static_ltree,static_dtree)):(send_bits(e,(DYN_TREES<<1)+(r?1:0),3),send_all_trees(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),compress_block(e,e.dyn_ltree,e.dyn_dtree)),init_block(e),r&&bi_windup(e)},_tr_tally$1=(e,t,n)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=n,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(_length_code[n]+LITERALS$1+1)*2]++,e.dyn_dtree[d_code(t)*2]++),e.sym_next===e.sym_end);var _tr_init_1=_tr_init$1,_tr_stored_block_1=_tr_stored_block$1,_tr_flush_block_1=_tr_flush_block$1,_tr_tally_1=_tr_tally$1,_tr_align_1=_tr_align$1,trees={_tr_init:_tr_init_1,_tr_stored_block:_tr_stored_block_1,_tr_flush_block:_tr_flush_block_1,_tr_tally:_tr_tally_1,_tr_align:_tr_align_1};const adler32=(e,t,n,r)=>{let i=e&65535|0,s=e>>>16&65535|0,o=0;for(;n!==0;){o=n>2e3?2e3:n,n-=o;do i=i+t[r++]|0,s=s+i|0;while(--o);i%=65521,s%=65521}return i|s<<16|0};var adler32_1=adler32;const makeTable=()=>{let e,t=[];for(var n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t},crcTable$1=new Uint32Array(makeTable()),crc32=(e,t,n,r)=>{const i=crcTable$1,s=r+n;e^=-1;for(let o=r;o<s;o++)e=e>>>8^i[(e^t[o])&255];return e^-1};var crc32_1=crc32,messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},constants$2={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init,_tr_stored_block,_tr_flush_block,_tr_tally,_tr_align}=trees,{Z_NO_FLUSH:Z_NO_FLUSH$2,Z_PARTIAL_FLUSH,Z_FULL_FLUSH:Z_FULL_FLUSH$1,Z_FINISH:Z_FINISH$3,Z_BLOCK:Z_BLOCK$1,Z_OK:Z_OK$3,Z_STREAM_END:Z_STREAM_END$3,Z_STREAM_ERROR:Z_STREAM_ERROR$2,Z_DATA_ERROR:Z_DATA_ERROR$2,Z_BUF_ERROR:Z_BUF_ERROR$1,Z_DEFAULT_COMPRESSION:Z_DEFAULT_COMPRESSION$1,Z_FILTERED,Z_HUFFMAN_ONLY,Z_RLE,Z_FIXED,Z_DEFAULT_STRATEGY:Z_DEFAULT_STRATEGY$1,Z_UNKNOWN,Z_DEFLATED:Z_DEFLATED$2}=constants$2,MAX_MEM_LEVEL=9,MAX_WBITS$1=15,DEF_MEM_LEVEL=8,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,MIN_MATCH=3,MAX_MATCH=258,MIN_LOOKAHEAD=MAX_MATCH+MIN_MATCH+1,PRESET_DICT=32,INIT_STATE=42,GZIP_STATE=57,EXTRA_STATE=69,NAME_STATE=73,COMMENT_STATE=91,HCRC_STATE=103,BUSY_STATE=113,FINISH_STATE=666,BS_NEED_MORE=1,BS_BLOCK_DONE=2,BS_FINISH_STARTED=3,BS_FINISH_DONE=4,OS_CODE=3,err=(e,t)=>(e.msg=messages[t],t),rank=e=>e*2-(e>4?9:0),zero=e=>{let t=e.length;for(;--t>=0;)e[t]=0},slide_hash=e=>{let t,n,r,i=e.w_size;t=e.hash_size,r=t;do n=e.head[--r],e.head[r]=n>=i?n-i:0;while(--t);t=i,r=t;do n=e.prev[--r],e.prev[r]=n>=i?n-i:0;while(--t)};let HASH_ZLIB=(e,t,n)=>(t<<e.hash_shift^n)&e.hash_mask,HASH=HASH_ZLIB;const flush_pending=e=>{const t=e.state;let n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+n),e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))},flush_block_only=(e,t)=>{_tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,flush_pending(e.strm)},put_byte=(e,t)=>{e.pending_buf[e.pending++]=t},putShortMSB=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255},read_buf=(e,t,n,r)=>{let i=e.avail_in;return i>r&&(i=r),i===0?0:(e.avail_in-=i,t.set(e.input.subarray(e.next_in,e.next_in+i),n),e.state.wrap===1?e.adler=adler32_1(e.adler,t,i,n):e.state.wrap===2&&(e.adler=crc32_1(e.adler,t,i,n)),e.next_in+=i,e.total_in+=i,i)},longest_match=(e,t)=>{let n=e.max_chain_length,r=e.strstart,i,s,o=e.prev_length,l=e.nice_match;const c=e.strstart>e.w_size-MIN_LOOKAHEAD?e.strstart-(e.w_size-MIN_LOOKAHEAD):0,f=e.window,h=e.w_mask,p=e.prev,g=e.strstart+MAX_MATCH;let x=f[r+o-1],D=f[r+o];e.prev_length>=e.good_match&&(n>>=2),l>e.lookahead&&(l=e.lookahead);do if(i=t,!(f[i+o]!==D||f[i+o-1]!==x||f[i]!==f[r]||f[++i]!==f[r+1])){r+=2,i++;do;while(f[++r]===f[++i]&&f[++r]===f[++i]&&f[++r]===f[++i]&&f[++r]===f[++i]&&f[++r]===f[++i]&&f[++r]===f[++i]&&f[++r]===f[++i]&&f[++r]===f[++i]&&r<g);if(s=MAX_MATCH-(g-r),r=g-MAX_MATCH,s>o){if(e.match_start=t,o=s,s>=l)break;x=f[r+o-1],D=f[r+o]}}while((t=p[t&h])>c&&--n!==0);return o<=e.lookahead?o:e.lookahead},fill_window=e=>{const t=e.w_size;let n,r,i;do{if(r=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-MIN_LOOKAHEAD)&&(e.window.set(e.window.subarray(t,t+t-r),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),slide_hash(e),r+=t),e.strm.avail_in===0)break;if(n=read_buf(e.strm,e.window,e.strstart+e.lookahead,r),e.lookahead+=n,e.lookahead+e.insert>=MIN_MATCH)for(i=e.strstart-e.insert,e.ins_h=e.window[i],e.ins_h=HASH(e,e.ins_h,e.window[i+1]);e.insert&&(e.ins_h=HASH(e,e.ins_h,e.window[i+MIN_MATCH-1]),e.prev[i&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=i,i++,e.insert--,!(e.lookahead+e.insert<MIN_MATCH)););}while(e.lookahead<MIN_LOOKAHEAD&&e.strm.avail_in!==0)},deflate_stored=(e,t)=>{let n=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,r,i,s,o=0,l=e.strm.avail_in;do{if(r=65535,s=e.bi_valid+42>>3,e.strm.avail_out<s||(s=e.strm.avail_out-s,i=e.strstart-e.block_start,r>i+e.strm.avail_in&&(r=i+e.strm.avail_in),r>s&&(r=s),r<n&&(r===0&&t!==Z_FINISH$3||t===Z_NO_FLUSH$2||r!==i+e.strm.avail_in)))break;o=t===Z_FINISH$3&&r===i+e.strm.avail_in?1:0,_tr_stored_block(e,0,0,o),e.pending_buf[e.pending-4]=r,e.pending_buf[e.pending-3]=r>>8,e.pending_buf[e.pending-2]=~r,e.pending_buf[e.pending-1]=~r>>8,flush_pending(e.strm),i&&(i>r&&(i=r),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+i),e.strm.next_out),e.strm.next_out+=i,e.strm.avail_out-=i,e.strm.total_out+=i,e.block_start+=i,r-=i),r&&(read_buf(e.strm,e.strm.output,e.strm.next_out,r),e.strm.next_out+=r,e.strm.avail_out-=r,e.strm.total_out+=r)}while(o===0);return l-=e.strm.avail_in,l&&(l>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=l&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-l,e.strm.next_in),e.strstart),e.strstart+=l,e.insert+=l>e.w_size-e.insert?e.w_size-e.insert:l),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),o?BS_FINISH_DONE:t!==Z_NO_FLUSH$2&&t!==Z_FINISH$3&&e.strm.avail_in===0&&e.strstart===e.block_start?BS_BLOCK_DONE:(s=e.window_size-e.strstart,e.strm.avail_in>s&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,s+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),s>e.strm.avail_in&&(s=e.strm.avail_in),s&&(read_buf(e.strm,e.window,e.strstart,s),e.strstart+=s,e.insert+=s>e.w_size-e.insert?e.w_size-e.insert:s),e.high_water<e.strstart&&(e.high_water=e.strstart),s=e.bi_valid+42>>3,s=e.pending_buf_size-s>65535?65535:e.pending_buf_size-s,n=s>e.w_size?e.w_size:s,i=e.strstart-e.block_start,(i>=n||(i||t===Z_FINISH$3)&&t!==Z_NO_FLUSH$2&&e.strm.avail_in===0&&i<=s)&&(r=i>s?s:i,o=t===Z_FINISH$3&&e.strm.avail_in===0&&r===i?1:0,_tr_stored_block(e,e.block_start,r,o),e.block_start+=r,flush_pending(e.strm)),o?BS_FINISH_STARTED:BS_NEED_MORE)},deflate_fast=(e,t)=>{let n,r;for(;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&t===Z_NO_FLUSH$2)return BS_NEED_MORE;if(e.lookahead===0)break}if(n=0,e.lookahead>=MIN_MATCH&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,n)),e.match_length>=MIN_MATCH)if(r=_tr_tally(e,e.strstart-e.match_start,e.match_length-MIN_MATCH),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=MIN_MATCH){e.match_length--;do e.strstart++,e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+1]);else r=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}return e.insert=e.strstart<MIN_MATCH-1?e.strstart:MIN_MATCH-1,t===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_slow=(e,t)=>{let n,r,i;for(;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&t===Z_NO_FLUSH$2)return BS_NEED_MORE;if(e.lookahead===0)break}if(n=0,e.lookahead>=MIN_MATCH&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=MIN_MATCH-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,n),e.match_length<=5&&(e.strategy===Z_FILTERED||e.match_length===MIN_MATCH&&e.strstart-e.match_start>4096)&&(e.match_length=MIN_MATCH-1)),e.prev_length>=MIN_MATCH&&e.match_length<=e.prev_length){i=e.strstart+e.lookahead-MIN_MATCH,r=_tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-MIN_MATCH),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=i&&(e.ins_h=HASH(e,e.ins_h,e.window[e.strstart+MIN_MATCH-1]),n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=MIN_MATCH-1,e.strstart++,r&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}else if(e.match_available){if(r=_tr_tally(e,0,e.window[e.strstart-1]),r&&flush_block_only(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return BS_NEED_MORE}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=_tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<MIN_MATCH-1?e.strstart:MIN_MATCH-1,t===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_rle=(e,t)=>{let n,r,i,s;const o=e.window;for(;;){if(e.lookahead<=MAX_MATCH){if(fill_window(e),e.lookahead<=MAX_MATCH&&t===Z_NO_FLUSH$2)return BS_NEED_MORE;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=MIN_MATCH&&e.strstart>0&&(i=e.strstart-1,r=o[i],r===o[++i]&&r===o[++i]&&r===o[++i])){s=e.strstart+MAX_MATCH;do;while(r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&r===o[++i]&&i<s);e.match_length=MAX_MATCH-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=MIN_MATCH?(n=_tr_tally(e,1,e.match_length-MIN_MATCH),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE},deflate_huff=(e,t)=>{let n;for(;;){if(e.lookahead===0&&(fill_window(e),e.lookahead===0)){if(t===Z_NO_FLUSH$2)return BS_NEED_MORE;break}if(e.match_length=0,n=_tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(flush_block_only(e,!1),e.strm.avail_out===0))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH$3?(flush_block_only(e,!0),e.strm.avail_out===0?BS_FINISH_STARTED:BS_FINISH_DONE):e.sym_next&&(flush_block_only(e,!1),e.strm.avail_out===0)?BS_NEED_MORE:BS_BLOCK_DONE};function Config$1(e,t,n,r,i){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=i}const configuration_table=[new Config$1(0,0,0,0,deflate_stored),new Config$1(4,4,8,4,deflate_fast),new Config$1(4,5,16,8,deflate_fast),new Config$1(4,6,32,32,deflate_fast),new Config$1(4,4,16,16,deflate_slow),new Config$1(8,16,32,32,deflate_slow),new Config$1(8,16,128,128,deflate_slow),new Config$1(8,32,128,256,deflate_slow),new Config$1(32,128,258,1024,deflate_slow),new Config$1(32,258,258,4096,deflate_slow)],lm_init=e=>{e.window_size=2*e.w_size,zero(e.head),e.max_lazy_match=configuration_table[e.level].max_lazy,e.good_match=configuration_table[e.level].good_length,e.nice_match=configuration_table[e.level].nice_length,e.max_chain_length=configuration_table[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=MIN_MATCH-1,e.match_available=0,e.ins_h=0};function DeflateState(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Z_DEFLATED$2,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(HEAP_SIZE*2),this.dyn_dtree=new Uint16Array((2*D_CODES+1)*2),this.bl_tree=new Uint16Array((2*BL_CODES+1)*2),zero(this.dyn_ltree),zero(this.dyn_dtree),zero(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(MAX_BITS+1),this.heap=new Uint16Array(2*L_CODES+1),zero(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(2*L_CODES+1),zero(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const deflateStateCheck=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==INIT_STATE&&t.status!==GZIP_STATE&&t.status!==EXTRA_STATE&&t.status!==NAME_STATE&&t.status!==COMMENT_STATE&&t.status!==HCRC_STATE&&t.status!==BUSY_STATE&&t.status!==FINISH_STATE?1:0},deflateResetKeep=e=>{if(deflateStateCheck(e))return err(e,Z_STREAM_ERROR$2);e.total_in=e.total_out=0,e.data_type=Z_UNKNOWN;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap===2?GZIP_STATE:t.wrap?INIT_STATE:BUSY_STATE,e.adler=t.wrap===2?0:1,t.last_flush=-2,_tr_init(t),Z_OK$3},deflateReset=e=>{const t=deflateResetKeep(e);return t===Z_OK$3&&lm_init(e.state),t},deflateSetHeader=(e,t)=>deflateStateCheck(e)||e.state.wrap!==2?Z_STREAM_ERROR$2:(e.state.gzhead=t,Z_OK$3),deflateInit2=(e,t,n,r,i,s)=>{if(!e)return Z_STREAM_ERROR$2;let o=1;if(t===Z_DEFAULT_COMPRESSION$1&&(t=6),r<0?(o=0,r=-r):r>15&&(o=2,r-=16),i<1||i>MAX_MEM_LEVEL||n!==Z_DEFLATED$2||r<8||r>15||t<0||t>9||s<0||s>Z_FIXED||r===8&&o!==1)return err(e,Z_STREAM_ERROR$2);r===8&&(r=9);const l=new DeflateState;return e.state=l,l.strm=e,l.status=INIT_STATE,l.wrap=o,l.gzhead=null,l.w_bits=r,l.w_size=1<<l.w_bits,l.w_mask=l.w_size-1,l.hash_bits=i+7,l.hash_size=1<<l.hash_bits,l.hash_mask=l.hash_size-1,l.hash_shift=~~((l.hash_bits+MIN_MATCH-1)/MIN_MATCH),l.window=new Uint8Array(l.w_size*2),l.head=new Uint16Array(l.hash_size),l.prev=new Uint16Array(l.w_size),l.lit_bufsize=1<<i+6,l.pending_buf_size=l.lit_bufsize*4,l.pending_buf=new Uint8Array(l.pending_buf_size),l.sym_buf=l.lit_bufsize,l.sym_end=(l.lit_bufsize-1)*3,l.level=t,l.strategy=s,l.method=n,deflateReset(e)},deflateInit=(e,t)=>deflateInit2(e,t,Z_DEFLATED$2,MAX_WBITS$1,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY$1),deflate$2=(e,t)=>{if(deflateStateCheck(e)||t>Z_BLOCK$1||t<0)return e?err(e,Z_STREAM_ERROR$2):Z_STREAM_ERROR$2;const n=e.state;if(!e.output||e.avail_in!==0&&!e.input||n.status===FINISH_STATE&&t!==Z_FINISH$3)return err(e,e.avail_out===0?Z_BUF_ERROR$1:Z_STREAM_ERROR$2);const r=n.last_flush;if(n.last_flush=t,n.pending!==0){if(flush_pending(e),e.avail_out===0)return n.last_flush=-1,Z_OK$3}else if(e.avail_in===0&&rank(t)<=rank(r)&&t!==Z_FINISH$3)return err(e,Z_BUF_ERROR$1);if(n.status===FINISH_STATE&&e.avail_in!==0)return err(e,Z_BUF_ERROR$1);if(n.status===INIT_STATE&&n.wrap===0&&(n.status=BUSY_STATE),n.status===INIT_STATE){let i=Z_DEFLATED$2+(n.w_bits-8<<4)<<8,s=-1;if(n.strategy>=Z_HUFFMAN_ONLY||n.level<2?s=0:n.level<6?s=1:n.level===6?s=2:s=3,i|=s<<6,n.strstart!==0&&(i|=PRESET_DICT),i+=31-i%31,putShortMSB(n,i),n.strstart!==0&&(putShortMSB(n,e.adler>>>16),putShortMSB(n,e.adler&65535)),e.adler=1,n.status=BUSY_STATE,flush_pending(e),n.pending!==0)return n.last_flush=-1,Z_OK$3}if(n.status===GZIP_STATE){if(e.adler=0,put_byte(n,31),put_byte(n,139),put_byte(n,8),n.gzhead)put_byte(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),put_byte(n,n.gzhead.time&255),put_byte(n,n.gzhead.time>>8&255),put_byte(n,n.gzhead.time>>16&255),put_byte(n,n.gzhead.time>>24&255),put_byte(n,n.level===9?2:n.strategy>=Z_HUFFMAN_ONLY||n.level<2?4:0),put_byte(n,n.gzhead.os&255),n.gzhead.extra&&n.gzhead.extra.length&&(put_byte(n,n.gzhead.extra.length&255),put_byte(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=EXTRA_STATE;else if(put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,n.level===9?2:n.strategy>=Z_HUFFMAN_ONLY||n.level<2?4:0),put_byte(n,OS_CODE),n.status=BUSY_STATE,flush_pending(e),n.pending!==0)return n.last_flush=-1,Z_OK$3}if(n.status===EXTRA_STATE){if(n.gzhead.extra){let i=n.pending,s=(n.gzhead.extra.length&65535)-n.gzindex;for(;n.pending+s>n.pending_buf_size;){let l=n.pending_buf_size-n.pending;if(n.pending_buf.set(n.gzhead.extra.subarray(n.gzindex,n.gzindex+l),n.pending),n.pending=n.pending_buf_size,n.gzhead.hcrc&&n.pending>i&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex+=l,flush_pending(e),n.pending!==0)return n.last_flush=-1,Z_OK$3;i=0,s-=l}let o=new Uint8Array(n.gzhead.extra);n.pending_buf.set(o.subarray(n.gzindex,n.gzindex+s),n.pending),n.pending+=s,n.gzhead.hcrc&&n.pending>i&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex=0}n.status=NAME_STATE}if(n.status===NAME_STATE){if(n.gzhead.name){let i=n.pending,s;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>i&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-i,i)),flush_pending(e),n.pending!==0)return n.last_flush=-1,Z_OK$3;i=0}n.gzindex<n.gzhead.name.length?s=n.gzhead.name.charCodeAt(n.gzindex++)&255:s=0,put_byte(n,s)}while(s!==0);n.gzhead.hcrc&&n.pending>i&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex=0}n.status=COMMENT_STATE}if(n.status===COMMENT_STATE){if(n.gzhead.comment){let i=n.pending,s;do{if(n.pending===n.pending_buf_size){if(n.gzhead.hcrc&&n.pending>i&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-i,i)),flush_pending(e),n.pending!==0)return n.last_flush=-1,Z_OK$3;i=0}n.gzindex<n.gzhead.comment.length?s=n.gzhead.comment.charCodeAt(n.gzindex++)&255:s=0,put_byte(n,s)}while(s!==0);n.gzhead.hcrc&&n.pending>i&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-i,i))}n.status=HCRC_STATE}if(n.status===HCRC_STATE){if(n.gzhead.hcrc){if(n.pending+2>n.pending_buf_size&&(flush_pending(e),n.pending!==0))return n.last_flush=-1,Z_OK$3;put_byte(n,e.adler&255),put_byte(n,e.adler>>8&255),e.adler=0}if(n.status=BUSY_STATE,flush_pending(e),n.pending!==0)return n.last_flush=-1,Z_OK$3}if(e.avail_in!==0||n.lookahead!==0||t!==Z_NO_FLUSH$2&&n.status!==FINISH_STATE){let i=n.level===0?deflate_stored(n,t):n.strategy===Z_HUFFMAN_ONLY?deflate_huff(n,t):n.strategy===Z_RLE?deflate_rle(n,t):configuration_table[n.level].func(n,t);if((i===BS_FINISH_STARTED||i===BS_FINISH_DONE)&&(n.status=FINISH_STATE),i===BS_NEED_MORE||i===BS_FINISH_STARTED)return e.avail_out===0&&(n.last_flush=-1),Z_OK$3;if(i===BS_BLOCK_DONE&&(t===Z_PARTIAL_FLUSH?_tr_align(n):t!==Z_BLOCK$1&&(_tr_stored_block(n,0,0,!1),t===Z_FULL_FLUSH$1&&(zero(n.head),n.lookahead===0&&(n.strstart=0,n.block_start=0,n.insert=0))),flush_pending(e),e.avail_out===0))return n.last_flush=-1,Z_OK$3}return t!==Z_FINISH$3?Z_OK$3:n.wrap<=0?Z_STREAM_END$3:(n.wrap===2?(put_byte(n,e.adler&255),put_byte(n,e.adler>>8&255),put_byte(n,e.adler>>16&255),put_byte(n,e.adler>>24&255),put_byte(n,e.total_in&255),put_byte(n,e.total_in>>8&255),put_byte(n,e.total_in>>16&255),put_byte(n,e.total_in>>24&255)):(putShortMSB(n,e.adler>>>16),putShortMSB(n,e.adler&65535)),flush_pending(e),n.wrap>0&&(n.wrap=-n.wrap),n.pending!==0?Z_OK$3:Z_STREAM_END$3)},deflateEnd=e=>{if(deflateStateCheck(e))return Z_STREAM_ERROR$2;const t=e.state.status;return e.state=null,t===BUSY_STATE?err(e,Z_DATA_ERROR$2):Z_OK$3},deflateSetDictionary=(e,t)=>{let n=t.length;if(deflateStateCheck(e))return Z_STREAM_ERROR$2;const r=e.state,i=r.wrap;if(i===2||i===1&&r.status!==INIT_STATE||r.lookahead)return Z_STREAM_ERROR$2;if(i===1&&(e.adler=adler32_1(e.adler,t,n,0)),r.wrap=0,n>=r.w_size){i===0&&(zero(r.head),r.strstart=0,r.block_start=0,r.insert=0);let c=new Uint8Array(r.w_size);c.set(t.subarray(n-r.w_size,n),0),t=c,n=r.w_size}const s=e.avail_in,o=e.next_in,l=e.input;for(e.avail_in=n,e.next_in=0,e.input=t,fill_window(r);r.lookahead>=MIN_MATCH;){let c=r.strstart,f=r.lookahead-(MIN_MATCH-1);do r.ins_h=HASH(r,r.ins_h,r.window[c+MIN_MATCH-1]),r.prev[c&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=c,c++;while(--f);r.strstart=c,r.lookahead=MIN_MATCH-1,fill_window(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=MIN_MATCH-1,r.match_available=0,e.next_in=o,e.input=l,e.avail_in=s,r.wrap=i,Z_OK$3};var deflateInit_1=deflateInit,deflateInit2_1=deflateInit2,deflateReset_1=deflateReset,deflateResetKeep_1=deflateResetKeep,deflateSetHeader_1=deflateSetHeader,deflate_2$1=deflate$2,deflateEnd_1=deflateEnd,deflateSetDictionary_1=deflateSetDictionary,deflateInfo="pako deflate (from Nodeca project)",deflate_1$2={deflateInit:deflateInit_1,deflateInit2:deflateInit2_1,deflateReset:deflateReset_1,deflateResetKeep:deflateResetKeep_1,deflateSetHeader:deflateSetHeader_1,deflate:deflate_2$1,deflateEnd:deflateEnd_1,deflateSetDictionary:deflateSetDictionary_1,deflateInfo};const _has=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var assign=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const n=t.shift();if(n){if(typeof n!="object")throw new TypeError(n+"must be non-object");for(const r in n)_has(n,r)&&(e[r]=n[r])}}return e},flattenChunks=e=>{let t=0;for(let r=0,i=e.length;r<i;r++)t+=e[r].length;const n=new Uint8Array(t);for(let r=0,i=0,s=e.length;r<s;r++){let o=e[r];n.set(o,i),i+=o.length}return n},common={assign,flattenChunks};let STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{STR_APPLY_UIA_OK=!1}const _utf8len=new Uint8Array(256);for(let e=0;e<256;e++)_utf8len[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;_utf8len[254]=_utf8len[254]=1;var string2buf=e=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(e);let t,n,r,i,s,o=e.length,l=0;for(i=0;i<o;i++)n=e.charCodeAt(i),(n&64512)===55296&&i+1<o&&(r=e.charCodeAt(i+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),i++)),l+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Uint8Array(l),s=0,i=0;s<l;i++)n=e.charCodeAt(i),(n&64512)===55296&&i+1<o&&(r=e.charCodeAt(i+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),i++)),n<128?t[s++]=n:n<2048?(t[s++]=192|n>>>6,t[s++]=128|n&63):n<65536?(t[s++]=224|n>>>12,t[s++]=128|n>>>6&63,t[s++]=128|n&63):(t[s++]=240|n>>>18,t[s++]=128|n>>>12&63,t[s++]=128|n>>>6&63,t[s++]=128|n&63);return t};const buf2binstring=(e,t)=>{if(t<65534&&e.subarray&&STR_APPLY_UIA_OK)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let n="";for(let r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n};var buf2string=(e,t)=>{const n=t||e.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(e.subarray(0,t));let r,i;const s=new Array(n*2);for(i=0,r=0;r<n;){let o=e[r++];if(o<128){s[i++]=o;continue}let l=_utf8len[o];if(l>4){s[i++]=65533,r+=l-1;continue}for(o&=l===2?31:l===3?15:7;l>1&&r<n;)o=o<<6|e[r++]&63,l--;if(l>1){s[i++]=65533;continue}o<65536?s[i++]=o:(o-=65536,s[i++]=55296|o>>10&1023,s[i++]=56320|o&1023)}return buf2binstring(s,i)},utf8border=(e,t)=>{t=t||e.length,t>e.length&&(t=e.length);let n=t-1;for(;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+_utf8len[e[n]]>t?n:t},strings={string2buf,buf2string,utf8border};function ZStream(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var zstream=ZStream;const toString$1=Object.prototype.toString,{Z_NO_FLUSH:Z_NO_FLUSH$1,Z_SYNC_FLUSH,Z_FULL_FLUSH,Z_FINISH:Z_FINISH$2,Z_OK:Z_OK$2,Z_STREAM_END:Z_STREAM_END$2,Z_DEFAULT_COMPRESSION,Z_DEFAULT_STRATEGY,Z_DEFLATED:Z_DEFLATED$1}=constants$2;function Deflate$1(e){this.options=common.assign({level:Z_DEFAULT_COMPRESSION,method:Z_DEFLATED$1,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let n=deflate_1$2.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==Z_OK$2)throw new Error(messages[n]);if(t.header&&deflate_1$2.deflateSetHeader(this.strm,t.header),t.dictionary){let r;if(typeof t.dictionary=="string"?r=strings.string2buf(t.dictionary):toString$1.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=deflate_1$2.deflateSetDictionary(this.strm,r),n!==Z_OK$2)throw new Error(messages[n]);this._dict_set=!0}}Deflate$1.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize;let i,s;if(this.ended)return!1;for(t===~~t?s=t:s=t===!0?Z_FINISH$2:Z_NO_FLUSH$1,typeof e=="string"?n.input=strings.string2buf(e):toString$1.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){if(n.avail_out===0&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),(s===Z_SYNC_FLUSH||s===Z_FULL_FLUSH)&&n.avail_out<=6){this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;continue}if(i=deflate_1$2.deflate(n,s),i===Z_STREAM_END$2)return n.next_out>0&&this.onData(n.output.subarray(0,n.next_out)),i=deflate_1$2.deflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===Z_OK$2;if(n.avail_out===0){this.onData(n.output);continue}if(s>0&&n.next_out>0){this.onData(n.output.subarray(0,n.next_out)),n.avail_out=0;continue}if(n.avail_in===0)break}return!0};Deflate$1.prototype.onData=function(e){this.chunks.push(e)};Deflate$1.prototype.onEnd=function(e){e===Z_OK$2&&(this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function deflate$1(e,t){const n=new Deflate$1(t);if(n.push(e,!0),n.err)throw n.msg||messages[n.err];return n.result}function deflateRaw$1(e,t){return t=t||{},t.raw=!0,deflate$1(e,t)}function gzip$1(e,t){return t=t||{},t.gzip=!0,deflate$1(e,t)}var Deflate_1$1=Deflate$1,deflate_2=deflate$1,deflateRaw_1$1=deflateRaw$1,gzip_1$1=gzip$1,constants$1=constants$2,deflate_1$1={Deflate:Deflate_1$1,deflate:deflate_2,deflateRaw:deflateRaw_1$1,gzip:gzip_1$1,constants:constants$1};const BAD$1=16209,TYPE$1=16191;var inffast=function(t,n){let r,i,s,o,l,c,f,h,p,g,x,D,y,E,F,B,M,k,T,N,$,R,O,L;const z=t.state;r=t.next_in,O=t.input,i=r+(t.avail_in-5),s=t.next_out,L=t.output,o=s-(n-t.avail_out),l=s+(t.avail_out-257),c=z.dmax,f=z.wsize,h=z.whave,p=z.wnext,g=z.window,x=z.hold,D=z.bits,y=z.lencode,E=z.distcode,F=(1<<z.lenbits)-1,B=(1<<z.distbits)-1;e:do{D<15&&(x+=O[r++]<<D,D+=8,x+=O[r++]<<D,D+=8),M=y[x&F];t:for(;;){if(k=M>>>24,x>>>=k,D-=k,k=M>>>16&255,k===0)L[s++]=M&65535;else if(k&16){T=M&65535,k&=15,k&&(D<k&&(x+=O[r++]<<D,D+=8),T+=x&(1<<k)-1,x>>>=k,D-=k),D<15&&(x+=O[r++]<<D,D+=8,x+=O[r++]<<D,D+=8),M=E[x&B];n:for(;;){if(k=M>>>24,x>>>=k,D-=k,k=M>>>16&255,k&16){if(N=M&65535,k&=15,D<k&&(x+=O[r++]<<D,D+=8,D<k&&(x+=O[r++]<<D,D+=8)),N+=x&(1<<k)-1,N>c){t.msg="invalid distance too far back",z.mode=BAD$1;break e}if(x>>>=k,D-=k,k=s-o,N>k){if(k=N-k,k>h&&z.sane){t.msg="invalid distance too far back",z.mode=BAD$1;break e}if($=0,R=g,p===0){if($+=f-k,k<T){T-=k;do L[s++]=g[$++];while(--k);$=s-N,R=L}}else if(p<k){if($+=f+p-k,k-=p,k<T){T-=k;do L[s++]=g[$++];while(--k);if($=0,p<T){k=p,T-=k;do L[s++]=g[$++];while(--k);$=s-N,R=L}}}else if($+=p-k,k<T){T-=k;do L[s++]=g[$++];while(--k);$=s-N,R=L}for(;T>2;)L[s++]=R[$++],L[s++]=R[$++],L[s++]=R[$++],T-=3;T&&(L[s++]=R[$++],T>1&&(L[s++]=R[$++]))}else{$=s-N;do L[s++]=L[$++],L[s++]=L[$++],L[s++]=L[$++],T-=3;while(T>2);T&&(L[s++]=L[$++],T>1&&(L[s++]=L[$++]))}}else if(k&64){t.msg="invalid distance code",z.mode=BAD$1;break e}else{M=E[(M&65535)+(x&(1<<k)-1)];continue n}break}}else if(k&64)if(k&32){z.mode=TYPE$1;break e}else{t.msg="invalid literal/length code",z.mode=BAD$1;break e}else{M=y[(M&65535)+(x&(1<<k)-1)];continue t}break}}while(r<i&&s<l);T=D>>3,r-=T,D-=T<<3,x&=(1<<D)-1,t.next_in=r,t.next_out=s,t.avail_in=r<i?5+(i-r):5-(r-i),t.avail_out=s<l?257+(l-s):257-(s-l),z.hold=x,z.bits=D};const MAXBITS=15,ENOUGH_LENS$1=852,ENOUGH_DISTS$1=592,CODES$1=0,LENS$1=1,DISTS$1=2,lbase=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),lext=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),dbase=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),dext=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),inflate_table=(e,t,n,r,i,s,o,l)=>{const c=l.bits;let f=0,h=0,p=0,g=0,x=0,D=0,y=0,E=0,F=0,B=0,M,k,T,N,$,R=null,O;const L=new Uint16Array(MAXBITS+1),z=new Uint16Array(MAXBITS+1);let X=null,o0,Z,n0;for(f=0;f<=MAXBITS;f++)L[f]=0;for(h=0;h<r;h++)L[t[n+h]]++;for(x=c,g=MAXBITS;g>=1&&L[g]===0;g--);if(x>g&&(x=g),g===0)return i[s++]=1<<24|64<<16|0,i[s++]=1<<24|64<<16|0,l.bits=1,0;for(p=1;p<g&&L[p]===0;p++);for(x<p&&(x=p),E=1,f=1;f<=MAXBITS;f++)if(E<<=1,E-=L[f],E<0)return-1;if(E>0&&(e===CODES$1||g!==1))return-1;for(z[1]=0,f=1;f<MAXBITS;f++)z[f+1]=z[f]+L[f];for(h=0;h<r;h++)t[n+h]!==0&&(o[z[t[n+h]]++]=h);if(e===CODES$1?(R=X=o,O=20):e===LENS$1?(R=lbase,X=lext,O=257):(R=dbase,X=dext,O=0),B=0,h=0,f=p,$=s,D=x,y=0,T=-1,F=1<<x,N=F-1,e===LENS$1&&F>ENOUGH_LENS$1||e===DISTS$1&&F>ENOUGH_DISTS$1)return 1;for(;;){o0=f-y,o[h]+1<O?(Z=0,n0=o[h]):o[h]>=O?(Z=X[o[h]-O],n0=R[o[h]-O]):(Z=96,n0=0),M=1<<f-y,k=1<<D,p=k;do k-=M,i[$+(B>>y)+k]=o0<<24|Z<<16|n0|0;while(k!==0);for(M=1<<f-1;B&M;)M>>=1;if(M!==0?(B&=M-1,B+=M):B=0,h++,--L[f]===0){if(f===g)break;f=t[n+o[h]]}if(f>x&&(B&N)!==T){for(y===0&&(y=x),$+=p,D=f-y,E=1<<D;D+y<g&&(E-=L[D+y],!(E<=0));)D++,E<<=1;if(F+=1<<D,e===LENS$1&&F>ENOUGH_LENS$1||e===DISTS$1&&F>ENOUGH_DISTS$1)return 1;T=B&N,i[T]=x<<24|D<<16|$-s|0}}return B!==0&&(i[$+B]=f-y<<24|64<<16|0),l.bits=x,0};var inftrees=inflate_table;const CODES=0,LENS=1,DISTS=2,{Z_FINISH:Z_FINISH$1,Z_BLOCK,Z_TREES,Z_OK:Z_OK$1,Z_STREAM_END:Z_STREAM_END$1,Z_NEED_DICT:Z_NEED_DICT$1,Z_STREAM_ERROR:Z_STREAM_ERROR$1,Z_DATA_ERROR:Z_DATA_ERROR$1,Z_MEM_ERROR:Z_MEM_ERROR$1,Z_BUF_ERROR,Z_DEFLATED}=constants$2,HEAD=16180,FLAGS=16181,TIME=16182,OS=16183,EXLEN=16184,EXTRA=16185,NAME=16186,COMMENT=16187,HCRC=16188,DICTID=16189,DICT=16190,TYPE=16191,TYPEDO=16192,STORED=16193,COPY_=16194,COPY=16195,TABLE=16196,LENLENS=16197,CODELENS=16198,LEN_=16199,LEN=16200,LENEXT=16201,DIST=16202,DISTEXT=16203,MATCH=16204,LIT=16205,CHECK=16206,LENGTH=16207,DONE=16208,BAD=16209,MEM=16210,SYNC=16211,ENOUGH_LENS=852,ENOUGH_DISTS=592,MAX_WBITS=15,DEF_WBITS=MAX_WBITS,zswap32=e=>(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24);function InflateState(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const inflateStateCheck=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<HEAD||t.mode>SYNC?1:0},inflateResetKeep=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=HEAD,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(ENOUGH_LENS),t.distcode=t.distdyn=new Int32Array(ENOUGH_DISTS),t.sane=1,t.back=-1,Z_OK$1},inflateReset=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,inflateResetKeep(e)},inflateReset2=(e,t)=>{let n;if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const r=e.state;return t<0?(n=0,t=-t):(n=(t>>4)+5,t<48&&(t&=15)),t&&(t<8||t>15)?Z_STREAM_ERROR$1:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,inflateReset(e))},inflateInit2=(e,t)=>{if(!e)return Z_STREAM_ERROR$1;const n=new InflateState;e.state=n,n.strm=e,n.window=null,n.mode=HEAD;const r=inflateReset2(e,t);return r!==Z_OK$1&&(e.state=null),r},inflateInit=e=>inflateInit2(e,DEF_WBITS);let virgin=!0,lenfix,distfix;const fixedtables=e=>{if(virgin){lenfix=new Int32Array(512),distfix=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(inftrees(LENS,e.lens,0,288,lenfix,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;inftrees(DISTS,e.lens,0,32,distfix,0,e.work,{bits:5}),virgin=!1}e.lencode=lenfix,e.lenbits=9,e.distcode=distfix,e.distbits=5},updatewindow=(e,t,n,r)=>{let i;const s=e.state;return s.window===null&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),r>=s.wsize?(s.window.set(t.subarray(n-s.wsize,n),0),s.wnext=0,s.whave=s.wsize):(i=s.wsize-s.wnext,i>r&&(i=r),s.window.set(t.subarray(n-r,n-r+i),s.wnext),r-=i,r?(s.window.set(t.subarray(n-r,n),0),s.wnext=r,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0},inflate$2=(e,t)=>{let n,r,i,s,o,l,c,f,h,p,g,x,D,y,E=0,F,B,M,k,T,N,$,R;const O=new Uint8Array(4);let L,z;const X=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(inflateStateCheck(e)||!e.output||!e.input&&e.avail_in!==0)return Z_STREAM_ERROR$1;n=e.state,n.mode===TYPE&&(n.mode=TYPEDO),o=e.next_out,i=e.output,c=e.avail_out,s=e.next_in,r=e.input,l=e.avail_in,f=n.hold,h=n.bits,p=l,g=c,R=Z_OK$1;e:for(;;)switch(n.mode){case HEAD:if(n.wrap===0){n.mode=TYPEDO;break}for(;h<16;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(n.wrap&2&&f===35615){n.wbits===0&&(n.wbits=15),n.check=0,O[0]=f&255,O[1]=f>>>8&255,n.check=crc32_1(n.check,O,2,0),f=0,h=0,n.mode=FLAGS;break}if(n.head&&(n.head.done=!1),!(n.wrap&1)||(((f&255)<<8)+(f>>8))%31){e.msg="incorrect header check",n.mode=BAD;break}if((f&15)!==Z_DEFLATED){e.msg="unknown compression method",n.mode=BAD;break}if(f>>>=4,h-=4,$=(f&15)+8,n.wbits===0&&(n.wbits=$),$>15||$>n.wbits){e.msg="invalid window size",n.mode=BAD;break}n.dmax=1<<n.wbits,n.flags=0,e.adler=n.check=1,n.mode=f&512?DICTID:TYPE,f=0,h=0;break;case FLAGS:for(;h<16;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(n.flags=f,(n.flags&255)!==Z_DEFLATED){e.msg="unknown compression method",n.mode=BAD;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=BAD;break}n.head&&(n.head.text=f>>8&1),n.flags&512&&n.wrap&4&&(O[0]=f&255,O[1]=f>>>8&255,n.check=crc32_1(n.check,O,2,0)),f=0,h=0,n.mode=TIME;case TIME:for(;h<32;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}n.head&&(n.head.time=f),n.flags&512&&n.wrap&4&&(O[0]=f&255,O[1]=f>>>8&255,O[2]=f>>>16&255,O[3]=f>>>24&255,n.check=crc32_1(n.check,O,4,0)),f=0,h=0,n.mode=OS;case OS:for(;h<16;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}n.head&&(n.head.xflags=f&255,n.head.os=f>>8),n.flags&512&&n.wrap&4&&(O[0]=f&255,O[1]=f>>>8&255,n.check=crc32_1(n.check,O,2,0)),f=0,h=0,n.mode=EXLEN;case EXLEN:if(n.flags&1024){for(;h<16;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}n.length=f,n.head&&(n.head.extra_len=f),n.flags&512&&n.wrap&4&&(O[0]=f&255,O[1]=f>>>8&255,n.check=crc32_1(n.check,O,2,0)),f=0,h=0}else n.head&&(n.head.extra=null);n.mode=EXTRA;case EXTRA:if(n.flags&1024&&(x=n.length,x>l&&(x=l),x&&(n.head&&($=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Uint8Array(n.head.extra_len)),n.head.extra.set(r.subarray(s,s+x),$)),n.flags&512&&n.wrap&4&&(n.check=crc32_1(n.check,r,x,s)),l-=x,s+=x,n.length-=x),n.length))break e;n.length=0,n.mode=NAME;case NAME:if(n.flags&2048){if(l===0)break e;x=0;do $=r[s+x++],n.head&&$&&n.length<65536&&(n.head.name+=String.fromCharCode($));while($&&x<l);if(n.flags&512&&n.wrap&4&&(n.check=crc32_1(n.check,r,x,s)),l-=x,s+=x,$)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=COMMENT;case COMMENT:if(n.flags&4096){if(l===0)break e;x=0;do $=r[s+x++],n.head&&$&&n.length<65536&&(n.head.comment+=String.fromCharCode($));while($&&x<l);if(n.flags&512&&n.wrap&4&&(n.check=crc32_1(n.check,r,x,s)),l-=x,s+=x,$)break e}else n.head&&(n.head.comment=null);n.mode=HCRC;case HCRC:if(n.flags&512){for(;h<16;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(n.wrap&4&&f!==(n.check&65535)){e.msg="header crc mismatch",n.mode=BAD;break}f=0,h=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=TYPE;break;case DICTID:for(;h<32;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}e.adler=n.check=zswap32(f),f=0,h=0,n.mode=DICT;case DICT:if(n.havedict===0)return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=l,n.hold=f,n.bits=h,Z_NEED_DICT$1;e.adler=n.check=1,n.mode=TYPE;case TYPE:if(t===Z_BLOCK||t===Z_TREES)break e;case TYPEDO:if(n.last){f>>>=h&7,h-=h&7,n.mode=CHECK;break}for(;h<3;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}switch(n.last=f&1,f>>>=1,h-=1,f&3){case 0:n.mode=STORED;break;case 1:if(fixedtables(n),n.mode=LEN_,t===Z_TREES){f>>>=2,h-=2;break e}break;case 2:n.mode=TABLE;break;case 3:e.msg="invalid block type",n.mode=BAD}f>>>=2,h-=2;break;case STORED:for(f>>>=h&7,h-=h&7;h<32;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if((f&65535)!==(f>>>16^65535)){e.msg="invalid stored block lengths",n.mode=BAD;break}if(n.length=f&65535,f=0,h=0,n.mode=COPY_,t===Z_TREES)break e;case COPY_:n.mode=COPY;case COPY:if(x=n.length,x){if(x>l&&(x=l),x>c&&(x=c),x===0)break e;i.set(r.subarray(s,s+x),o),l-=x,s+=x,c-=x,o+=x,n.length-=x;break}n.mode=TYPE;break;case TABLE:for(;h<14;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(n.nlen=(f&31)+257,f>>>=5,h-=5,n.ndist=(f&31)+1,f>>>=5,h-=5,n.ncode=(f&15)+4,f>>>=4,h-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=BAD;break}n.have=0,n.mode=LENLENS;case LENLENS:for(;n.have<n.ncode;){for(;h<3;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}n.lens[X[n.have++]]=f&7,f>>>=3,h-=3}for(;n.have<19;)n.lens[X[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,L={bits:n.lenbits},R=inftrees(CODES,n.lens,0,19,n.lencode,0,n.work,L),n.lenbits=L.bits,R){e.msg="invalid code lengths set",n.mode=BAD;break}n.have=0,n.mode=CODELENS;case CODELENS:for(;n.have<n.nlen+n.ndist;){for(;E=n.lencode[f&(1<<n.lenbits)-1],F=E>>>24,B=E>>>16&255,M=E&65535,!(F<=h);){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(M<16)f>>>=F,h-=F,n.lens[n.have++]=M;else{if(M===16){for(z=F+2;h<z;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(f>>>=F,h-=F,n.have===0){e.msg="invalid bit length repeat",n.mode=BAD;break}$=n.lens[n.have-1],x=3+(f&3),f>>>=2,h-=2}else if(M===17){for(z=F+3;h<z;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}f>>>=F,h-=F,$=0,x=3+(f&7),f>>>=3,h-=3}else{for(z=F+7;h<z;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}f>>>=F,h-=F,$=0,x=11+(f&127),f>>>=7,h-=7}if(n.have+x>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=BAD;break}for(;x--;)n.lens[n.have++]=$}}if(n.mode===BAD)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=BAD;break}if(n.lenbits=9,L={bits:n.lenbits},R=inftrees(LENS,n.lens,0,n.nlen,n.lencode,0,n.work,L),n.lenbits=L.bits,R){e.msg="invalid literal/lengths set",n.mode=BAD;break}if(n.distbits=6,n.distcode=n.distdyn,L={bits:n.distbits},R=inftrees(DISTS,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,L),n.distbits=L.bits,R){e.msg="invalid distances set",n.mode=BAD;break}if(n.mode=LEN_,t===Z_TREES)break e;case LEN_:n.mode=LEN;case LEN:if(l>=6&&c>=258){e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=l,n.hold=f,n.bits=h,inffast(e,g),o=e.next_out,i=e.output,c=e.avail_out,s=e.next_in,r=e.input,l=e.avail_in,f=n.hold,h=n.bits,n.mode===TYPE&&(n.back=-1);break}for(n.back=0;E=n.lencode[f&(1<<n.lenbits)-1],F=E>>>24,B=E>>>16&255,M=E&65535,!(F<=h);){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(B&&!(B&240)){for(k=F,T=B,N=M;E=n.lencode[N+((f&(1<<k+T)-1)>>k)],F=E>>>24,B=E>>>16&255,M=E&65535,!(k+F<=h);){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}f>>>=k,h-=k,n.back+=k}if(f>>>=F,h-=F,n.back+=F,n.length=M,B===0){n.mode=LIT;break}if(B&32){n.back=-1,n.mode=TYPE;break}if(B&64){e.msg="invalid literal/length code",n.mode=BAD;break}n.extra=B&15,n.mode=LENEXT;case LENEXT:if(n.extra){for(z=n.extra;h<z;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}n.length+=f&(1<<n.extra)-1,f>>>=n.extra,h-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=DIST;case DIST:for(;E=n.distcode[f&(1<<n.distbits)-1],F=E>>>24,B=E>>>16&255,M=E&65535,!(F<=h);){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(!(B&240)){for(k=F,T=B,N=M;E=n.distcode[N+((f&(1<<k+T)-1)>>k)],F=E>>>24,B=E>>>16&255,M=E&65535,!(k+F<=h);){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}f>>>=k,h-=k,n.back+=k}if(f>>>=F,h-=F,n.back+=F,B&64){e.msg="invalid distance code",n.mode=BAD;break}n.offset=M,n.extra=B&15,n.mode=DISTEXT;case DISTEXT:if(n.extra){for(z=n.extra;h<z;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}n.offset+=f&(1<<n.extra)-1,f>>>=n.extra,h-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=BAD;break}n.mode=MATCH;case MATCH:if(c===0)break e;if(x=g-c,n.offset>x){if(x=n.offset-x,x>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=BAD;break}x>n.wnext?(x-=n.wnext,D=n.wsize-x):D=n.wnext-x,x>n.length&&(x=n.length),y=n.window}else y=i,D=o-n.offset,x=n.length;x>c&&(x=c),c-=x,n.length-=x;do i[o++]=y[D++];while(--x);n.length===0&&(n.mode=LEN);break;case LIT:if(c===0)break e;i[o++]=n.length,c--,n.mode=LEN;break;case CHECK:if(n.wrap){for(;h<32;){if(l===0)break e;l--,f|=r[s++]<<h,h+=8}if(g-=c,e.total_out+=g,n.total+=g,n.wrap&4&&g&&(e.adler=n.check=n.flags?crc32_1(n.check,i,g,o-g):adler32_1(n.check,i,g,o-g)),g=c,n.wrap&4&&(n.flags?f:zswap32(f))!==n.check){e.msg="incorrect data check",n.mode=BAD;break}f=0,h=0}n.mode=LENGTH;case LENGTH:if(n.wrap&&n.flags){for(;h<32;){if(l===0)break e;l--,f+=r[s++]<<h,h+=8}if(n.wrap&4&&f!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=BAD;break}f=0,h=0}n.mode=DONE;case DONE:R=Z_STREAM_END$1;break e;case BAD:R=Z_DATA_ERROR$1;break e;case MEM:return Z_MEM_ERROR$1;case SYNC:default:return Z_STREAM_ERROR$1}return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=l,n.hold=f,n.bits=h,(n.wsize||g!==e.avail_out&&n.mode<BAD&&(n.mode<CHECK||t!==Z_FINISH$1))&&updatewindow(e,e.output,e.next_out,g-e.avail_out),p-=e.avail_in,g-=e.avail_out,e.total_in+=p,e.total_out+=g,n.total+=g,n.wrap&4&&g&&(e.adler=n.check=n.flags?crc32_1(n.check,i,g,e.next_out-g):adler32_1(n.check,i,g,e.next_out-g)),e.data_type=n.bits+(n.last?64:0)+(n.mode===TYPE?128:0)+(n.mode===LEN_||n.mode===COPY_?256:0),(p===0&&g===0||t===Z_FINISH$1)&&R===Z_OK$1&&(R=Z_BUF_ERROR),R},inflateEnd=e=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;let t=e.state;return t.window&&(t.window=null),e.state=null,Z_OK$1},inflateGetHeader=(e,t)=>{if(inflateStateCheck(e))return Z_STREAM_ERROR$1;const n=e.state;return n.wrap&2?(n.head=t,t.done=!1,Z_OK$1):Z_STREAM_ERROR$1},inflateSetDictionary=(e,t)=>{const n=t.length;let r,i,s;return inflateStateCheck(e)||(r=e.state,r.wrap!==0&&r.mode!==DICT)?Z_STREAM_ERROR$1:r.mode===DICT&&(i=1,i=adler32_1(i,t,n,0),i!==r.check)?Z_DATA_ERROR$1:(s=updatewindow(e,t,n,n),s?(r.mode=MEM,Z_MEM_ERROR$1):(r.havedict=1,Z_OK$1))};var inflateReset_1=inflateReset,inflateReset2_1=inflateReset2,inflateResetKeep_1=inflateResetKeep,inflateInit_1=inflateInit,inflateInit2_1=inflateInit2,inflate_2$1=inflate$2,inflateEnd_1=inflateEnd,inflateGetHeader_1=inflateGetHeader,inflateSetDictionary_1=inflateSetDictionary,inflateInfo="pako inflate (from Nodeca project)",inflate_1$2={inflateReset:inflateReset_1,inflateReset2:inflateReset2_1,inflateResetKeep:inflateResetKeep_1,inflateInit:inflateInit_1,inflateInit2:inflateInit2_1,inflate:inflate_2$1,inflateEnd:inflateEnd_1,inflateGetHeader:inflateGetHeader_1,inflateSetDictionary:inflateSetDictionary_1,inflateInfo};function GZheader(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gzheader=GZheader;const toString$2=Object.prototype.toString,{Z_NO_FLUSH,Z_FINISH,Z_OK,Z_STREAM_END,Z_NEED_DICT,Z_STREAM_ERROR,Z_DATA_ERROR,Z_MEM_ERROR}=constants$2;function Inflate$1(e){this.options=common.assign({chunkSize:1024*64,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15||(t.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;let n=inflate_1$2.inflateInit2(this.strm,t.windowBits);if(n!==Z_OK)throw new Error(messages[n]);if(this.header=new gzheader,inflate_1$2.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=strings.string2buf(t.dictionary):toString$2.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=inflate_1$2.inflateSetDictionary(this.strm,t.dictionary),n!==Z_OK)))throw new Error(messages[n])}Inflate$1.prototype.push=function(e,t){const n=this.strm,r=this.options.chunkSize,i=this.options.dictionary;let s,o,l;if(this.ended)return!1;for(t===~~t?o=t:o=t===!0?Z_FINISH:Z_NO_FLUSH,toString$2.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;;){for(n.avail_out===0&&(n.output=new Uint8Array(r),n.next_out=0,n.avail_out=r),s=inflate_1$2.inflate(n,o),s===Z_NEED_DICT&&i&&(s=inflate_1$2.inflateSetDictionary(n,i),s===Z_OK?s=inflate_1$2.inflate(n,o):s===Z_DATA_ERROR&&(s=Z_NEED_DICT));n.avail_in>0&&s===Z_STREAM_END&&n.state.wrap>0&&e[n.next_in]!==0;)inflate_1$2.inflateReset(n),s=inflate_1$2.inflate(n,o);switch(s){case Z_STREAM_ERROR:case Z_DATA_ERROR:case Z_NEED_DICT:case Z_MEM_ERROR:return this.onEnd(s),this.ended=!0,!1}if(l=n.avail_out,n.next_out&&(n.avail_out===0||s===Z_STREAM_END))if(this.options.to==="string"){let c=strings.utf8border(n.output,n.next_out),f=n.next_out-c,h=strings.buf2string(n.output,c);n.next_out=f,n.avail_out=r-f,f&&n.output.set(n.output.subarray(c,c+f),0),this.onData(h)}else this.onData(n.output.length===n.next_out?n.output:n.output.subarray(0,n.next_out));if(!(s===Z_OK&&l===0)){if(s===Z_STREAM_END)return s=inflate_1$2.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(n.avail_in===0)break}}return!0};Inflate$1.prototype.onData=function(e){this.chunks.push(e)};Inflate$1.prototype.onEnd=function(e){e===Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=common.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function inflate$1(e,t){const n=new Inflate$1(t);if(n.push(e),n.err)throw n.msg||messages[n.err];return n.result}function inflateRaw$1(e,t){return t=t||{},t.raw=!0,inflate$1(e,t)}var Inflate_1$1=Inflate$1,inflate_2=inflate$1,inflateRaw_1$1=inflateRaw$1,ungzip$1=inflate$1,constants=constants$2,inflate_1$1={Inflate:Inflate_1$1,inflate:inflate_2,inflateRaw:inflateRaw_1$1,ungzip:ungzip$1,constants};const{Deflate,deflate,deflateRaw,gzip}=deflate_1$1,{Inflate,inflate,inflateRaw,ungzip}=inflate_1$1;var deflate_1=deflate,Inflate_1=Inflate,inflate_1=inflate;const pngSignature=[137,80,78,71,13,10,26,10],crcTable=[];for(let e=0;e<256;e++){let t=e;for(let n=0;n<8;n++)t&1?t=3988292384^t>>>1:t=t>>>1;crcTable[e]=t}const initialCrc=4294967295;function updateCrc(e,t,n){let r=e;for(let i=0;i<n;i++)r=crcTable[(r^t[i])&255]^r>>>8;return r}function crc(e,t){return(updateCrc(initialCrc,e,t)^initialCrc)>>>0}var ColorType;(function(e){e[e.UNKNOWN=-1]="UNKNOWN",e[e.GREYSCALE=0]="GREYSCALE",e[e.TRUECOLOUR=2]="TRUECOLOUR",e[e.INDEXED_COLOUR=3]="INDEXED_COLOUR",e[e.GREYSCALE_ALPHA=4]="GREYSCALE_ALPHA",e[e.TRUECOLOUR_ALPHA=6]="TRUECOLOUR_ALPHA"})(ColorType||(ColorType={}));var CompressionMethod;(function(e){e[e.UNKNOWN=-1]="UNKNOWN",e[e.DEFLATE=0]="DEFLATE"})(CompressionMethod||(CompressionMethod={}));var FilterMethod;(function(e){e[e.UNKNOWN=-1]="UNKNOWN",e[e.ADAPTIVE=0]="ADAPTIVE"})(FilterMethod||(FilterMethod={}));var InterlaceMethod;(function(e){e[e.UNKNOWN=-1]="UNKNOWN",e[e.NO_INTERLACE=0]="NO_INTERLACE",e[e.ADAM7=1]="ADAM7"})(InterlaceMethod||(InterlaceMethod={}));const empty=new Uint8Array(0),NULL="\0",uint16=new Uint16Array([255]),uint8=new Uint8Array(uint16.buffer),osIsLittleEndian=uint8[0]===255;class PngDecoder extends IOBuffer{constructor(t,n={}){super(t);const{checkCrc:r=!1}=n;this._checkCrc=r,this._inflator=new Inflate_1,this._png={width:-1,height:-1,channels:-1,data:new Uint8Array(0),depth:1,text:{}},this._end=!1,this._hasPalette=!1,this._palette=[],this._hasTransparency=!1,this._transparency=new Uint16Array(0),this._compressionMethod=CompressionMethod.UNKNOWN,this._filterMethod=FilterMethod.UNKNOWN,this._interlaceMethod=InterlaceMethod.UNKNOWN,this._colorType=ColorType.UNKNOWN,this.setBigEndian()}decode(){for(this.decodeSignature();!this._end;)this.decodeChunk();return this.decodeImage(),this._png}decodeSignature(){for(let t=0;t<pngSignature.length;t++)if(this.readUint8()!==pngSignature[t])throw new Error(`wrong PNG signature. Byte at ${t} should be ${pngSignature[t]}.`)}decodeChunk(){const t=this.readUint32(),n=this.readChars(4),r=this.offset;switch(n){case"IHDR":this.decodeIHDR();break;case"PLTE":this.decodePLTE(t);break;case"IDAT":this.decodeIDAT(t);break;case"IEND":this._end=!0;break;case"tRNS":this.decodetRNS(t);break;case"iCCP":this.decodeiCCP(t);break;case"tEXt":this.decodetEXt(t);break;case"pHYs":this.decodepHYs();break;default:this.skip(t);break}if(this.offset-r!==t)throw new Error(`Length mismatch while decoding chunk ${n}`);if(this._checkCrc){const i=this.readUint32(),s=t+4,o=crc(new Uint8Array(this.buffer,this.byteOffset+this.offset-s-4,s),s);if(o!==i)throw new Error(`CRC mismatch for chunk ${n}. Expected ${i}, found ${o}`)}else this.skip(4)}decodeIHDR(){const t=this._png;t.width=this.readUint32(),t.height=this.readUint32(),t.depth=checkBitDepth(this.readUint8());const n=this.readUint8();this._colorType=n;let r;switch(n){case ColorType.GREYSCALE:r=1;break;case ColorType.TRUECOLOUR:r=3;break;case ColorType.INDEXED_COLOUR:r=1;break;case ColorType.GREYSCALE_ALPHA:r=2;break;case ColorType.TRUECOLOUR_ALPHA:r=4;break;default:throw new Error(`Unknown color type: ${n}`)}if(this._png.channels=r,this._compressionMethod=this.readUint8(),this._compressionMethod!==CompressionMethod.DEFLATE)throw new Error(`Unsupported compression method: ${this._compressionMethod}`);this._filterMethod=this.readUint8(),this._interlaceMethod=this.readUint8()}decodePLTE(t){if(t%3!==0)throw new RangeError(`PLTE field length must be a multiple of 3. Got ${t}`);const n=t/3;this._hasPalette=!0;const r=[];this._palette=r;for(let i=0;i<n;i++)r.push([this.readUint8(),this.readUint8(),this.readUint8()])}decodeIDAT(t){this._inflator.push(new Uint8Array(this.buffer,this.offset+this.byteOffset,t)),this.skip(t)}decodetRNS(t){switch(this._colorType){case ColorType.GREYSCALE:case ColorType.TRUECOLOUR:{if(t%2!==0)throw new RangeError(`tRNS chunk length must be a multiple of 2. Got ${t}`);if(t/2>this._png.width*this._png.height)throw new Error(`tRNS chunk contains more alpha values than there are pixels (${t/2} vs ${this._png.width*this._png.height})`);this._hasTransparency=!0,this._transparency=new Uint16Array(t/2);for(let n=0;n<t/2;n++)this._transparency[n]=this.readUint16();break}case ColorType.INDEXED_COLOUR:{if(t>this._palette.length)throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${t} vs ${this._palette.length})`);let n=0;for(;n<t;n++){const r=this.readByte();this._palette[n].push(r)}for(;n<this._palette.length;n++)this._palette[n].push(255);break}default:throw new Error(`tRNS chunk is not supported for color type ${this._colorType}`)}}decodeiCCP(t){let n="",r;for(;(r=this.readChar())!==NULL;)n+=r;const i=this.readUint8();if(i!==CompressionMethod.DEFLATE)throw new Error(`Unsupported iCCP compression method: ${i}`);const s=this.readBytes(t-n.length-2);this._png.iccEmbeddedProfile={name:n,profile:inflate_1(s)}}decodetEXt(t){let n="",r;for(;(r=this.readChar())!==NULL;)n+=r;this._png.text[n]=this.readChars(t-n.length-1)}decodepHYs(){const t=this.readUint32(),n=this.readUint32(),r=this.readByte();this._png.resolution={x:t,y:n,unit:r}}decodeImage(){if(this._inflator.err)throw new Error(`Error while decompressing the data: ${this._inflator.err}`);const t=this._inflator.result;if(this._filterMethod!==FilterMethod.ADAPTIVE)throw new Error(`Filter method ${this._filterMethod} not supported`);if(this._interlaceMethod===InterlaceMethod.NO_INTERLACE)this.decodeInterlaceNull(t);else throw new Error(`Interlace method ${this._interlaceMethod} not supported`)}decodeInterlaceNull(t){const n=this._png.height,r=this._png.channels*this._png.depth/8,i=this._png.width*r,s=new Uint8Array(this._png.height*i);let o=empty,l=0,c,f;for(let h=0;h<n;h++){switch(c=t.subarray(l+1,l+1+i),f=s.subarray(h*i,(h+1)*i),t[l]){case 0:unfilterNone(c,f,i);break;case 1:unfilterSub(c,f,i,r);break;case 2:unfilterUp(c,f,o,i);break;case 3:unfilterAverage(c,f,o,i,r);break;case 4:unfilterPaeth(c,f,o,i,r);break;default:throw new Error(`Unsupported filter: ${t[l]}`)}o=f,l+=i+1}if(this._hasPalette&&(this._png.palette=this._palette),this._hasTransparency&&(this._png.transparency=this._transparency),this._png.depth===16){const h=new Uint16Array(s.buffer);if(osIsLittleEndian)for(let p=0;p<h.length;p++)h[p]=swap16(h[p]);this._png.data=h}else this._png.data=s}}function unfilterNone(e,t,n){for(let r=0;r<n;r++)t[r]=e[r]}function unfilterSub(e,t,n,r){let i=0;for(;i<r;i++)t[i]=e[i];for(;i<n;i++)t[i]=e[i]+t[i-r]&255}function unfilterUp(e,t,n,r){let i=0;if(n.length===0)for(;i<r;i++)t[i]=e[i];else for(;i<r;i++)t[i]=e[i]+n[i]&255}function unfilterAverage(e,t,n,r,i){let s=0;if(n.length===0){for(;s<i;s++)t[s]=e[s];for(;s<r;s++)t[s]=e[s]+(t[s-i]>>1)&255}else{for(;s<i;s++)t[s]=e[s]+(n[s]>>1)&255;for(;s<r;s++)t[s]=e[s]+(t[s-i]+n[s]>>1)&255}}function unfilterPaeth(e,t,n,r,i){let s=0;if(n.length===0){for(;s<i;s++)t[s]=e[s];for(;s<r;s++)t[s]=e[s]+t[s-i]&255}else{for(;s<i;s++)t[s]=e[s]+n[s]&255;for(;s<r;s++)t[s]=e[s]+paethPredictor(t[s-i],n[s],n[s-i])&255}}function paethPredictor(e,t,n){const r=e+t-n,i=Math.abs(r-e),s=Math.abs(r-t),o=Math.abs(r-n);return i<=s&&i<=o?e:s<=o?t:n}function swap16(e){return(e&255)<<8|e>>8&255}function checkBitDepth(e){if(e!==1&&e!==2&&e!==4&&e!==8&&e!==16)throw new Error(`invalid bit depth: ${e}`);return e}const defaultZlibOptions={level:3};class PngEncoder extends IOBuffer{constructor(t,n={}){super(),this._colorType=ColorType.UNKNOWN,this._zlibOptions={...defaultZlibOptions,...n.zlib},this._png=this._checkData(t),this.setBigEndian()}encode(){return this.encodeSignature(),this.encodeIHDR(),this.encodeData(),this.encodeIEND(),this.toArray()}encodeSignature(){this.writeBytes(pngSignature)}encodeIHDR(){this.writeUint32(13),this.writeChars("IHDR"),this.writeUint32(this._png.width),this.writeUint32(this._png.height),this.writeByte(this._png.depth),this.writeByte(this._colorType),this.writeByte(CompressionMethod.DEFLATE),this.writeByte(FilterMethod.ADAPTIVE),this.writeByte(InterlaceMethod.NO_INTERLACE),this.writeCrc(17)}encodeIEND(){this.writeUint32(0),this.writeChars("IEND"),this.writeCrc(4)}encodeIDAT(t){this.writeUint32(t.length),this.writeChars("IDAT"),this.writeBytes(t),this.writeCrc(t.length+4)}encodeData(){const{width:t,height:n,channels:r,depth:i,data:s}=this._png,o=r*t,l=new IOBuffer().setBigEndian();let c=0;for(let p=0;p<n;p++)if(l.writeByte(0),i===8)c=writeDataBytes(s,l,o,c);else if(i===16)c=writeDataUint16(s,l,o,c);else throw new Error("unreachable");const f=l.toArray(),h=deflate_1(f,this._zlibOptions);this.encodeIDAT(h)}_checkData(t){const{colorType:n,channels:r,depth:i}=getColorType(t),s={width:checkInteger(t.width,"width"),height:checkInteger(t.height,"height"),channels:r,data:t.data,depth:i,text:{}};this._colorType=n;const o=s.width*s.height*r;if(s.data.length!==o)throw new RangeError(`wrong data size. Found ${s.data.length}, expected ${o}`);return s}writeCrc(t){this.writeUint32(crc(new Uint8Array(this.buffer,this.byteOffset+this.offset-t,t),t))}}function checkInteger(e,t){if(Number.isInteger(e)&&e>0)return e;throw new TypeError(`${t} must be a positive integer`)}function getColorType(e){const{channels:t=4,depth:n=8}=e;if(t!==4&&t!==3&&t!==2&&t!==1)throw new RangeError(`unsupported number of channels: ${t}`);if(n!==8&&n!==16)throw new RangeError(`unsupported bit depth: ${n}`);const r={channels:t,depth:n,colorType:ColorType.UNKNOWN};switch(t){case 4:r.colorType=ColorType.TRUECOLOUR_ALPHA;break;case 3:r.colorType=ColorType.TRUECOLOUR;break;case 1:r.colorType=ColorType.GREYSCALE;break;case 2:r.colorType=ColorType.GREYSCALE_ALPHA;break;default:throw new Error("unsupported number of channels")}return r}function writeDataBytes(e,t,n,r){for(let i=0;i<n;i++)t.writeByte(e[r++]);return r}function writeDataUint16(e,t,n,r){for(let i=0;i<n;i++)t.writeUint16(e[r++]);return r}var ResolutionUnitSpecifier;(function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.METRE=1]="METRE"})(ResolutionUnitSpecifier||(ResolutionUnitSpecifier={}));function decodePng(e,t){return new PngDecoder(e,t).decode()}function encodePng$1(e,t){return new PngEncoder(e,t).encode()}var encoder={exports:{}},hasRequiredEncoder;function requireEncoder(){return hasRequiredEncoder||(hasRequiredEncoder=1,function(e){function t(r){var i=Math.floor,s=new Array(64),o=new Array(64),l=new Array(64),c=new Array(64),f,h,p,g,x=new Array(65535),D=new Array(65535),y=new Array(64),E=new Array(64),F=[],B=0,M=7,k=new Array(64),T=new Array(64),N=new Array(64),$=new Array(256),R=new Array(2048),O,L=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],z=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],X=[0,1,2,3,4,5,6,7,8,9,10,11],o0=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],Z=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],n0=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],s0=[0,1,2,3,4,5,6,7,8,9,10,11],S0=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],r0=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function p0(w0){for(var Z0=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],K0=0;K0<64;K0++){var J0=i((Z0[K0]*w0+50)/100);J0<1?J0=1:J0>255&&(J0=255),s[L[K0]]=J0}for(var H=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],t0=0;t0<64;t0++){var f0=i((H[t0]*w0+50)/100);f0<1?f0=1:f0>255&&(f0=255),o[L[t0]]=f0}for(var c0=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],d0=0,g0=0;g0<8;g0++)for(var y0=0;y0<8;y0++)l[d0]=1/(s[L[d0]]*c0[g0]*c0[y0]*8),c[d0]=1/(o[L[d0]]*c0[g0]*c0[y0]*8),d0++}function h0(w0,Z0){for(var K0=0,J0=0,H=new Array,t0=1;t0<=16;t0++){for(var f0=1;f0<=w0[t0];f0++)H[Z0[J0]]=[],H[Z0[J0]][0]=K0,H[Z0[J0]][1]=t0,J0++,K0++;K0*=2}return H}function G(){f=h0(z,X),h=h0(n0,s0),p=h0(o0,Z),g=h0(S0,r0)}function Q(){for(var w0=1,Z0=2,K0=1;K0<=15;K0++){for(var J0=w0;J0<Z0;J0++)D[32767+J0]=K0,x[32767+J0]=[],x[32767+J0][1]=K0,x[32767+J0][0]=J0;for(var H=-(Z0-1);H<=-w0;H++)D[32767+H]=K0,x[32767+H]=[],x[32767+H][1]=K0,x[32767+H][0]=Z0-1+H;w0<<=1,Z0<<=1}}function M0(){for(var w0=0;w0<256;w0++)R[w0]=19595*w0,R[w0+256>>0]=38470*w0,R[w0+512>>0]=7471*w0+32768,R[w0+768>>0]=-11059*w0,R[w0+1024>>0]=-21709*w0,R[w0+1280>>0]=32768*w0+8421375,R[w0+1536>>0]=-27439*w0,R[w0+1792>>0]=-5329*w0}function C0(w0){for(var Z0=w0[0],K0=w0[1]-1;K0>=0;)Z0&1<<K0&&(B|=1<<M),K0--,M--,M<0&&(B==255?(e0(255),e0(0)):e0(B),M=7,B=0)}function e0(w0){F.push(w0)}function F0(w0){e0(w0>>8&255),e0(w0&255)}function O0(w0,Z0){var K0,J0,H,t0,f0,c0,d0,g0,y0=0,E0,k0=8,_0=64;for(E0=0;E0<k0;++E0){K0=w0[y0],J0=w0[y0+1],H=w0[y0+2],t0=w0[y0+3],f0=w0[y0+4],c0=w0[y0+5],d0=w0[y0+6],g0=w0[y0+7];var Q0=K0+g0,e1=K0-g0,p1=J0+d0,D1=J0-d0,y1=H+c0,C1=H-c0,R1=t0+f0,K1=t0-f0,B1=Q0+R1,q1=Q0-R1,x2=p1+y1,Z1=p1-y1;w0[y0]=B1+x2,w0[y0+4]=B1-x2;var I1=(Z1+q1)*.707106781;w0[y0+2]=q1+I1,w0[y0+6]=q1-I1,B1=K1+C1,x2=C1+D1,Z1=D1+e1;var o2=(B1-Z1)*.382683433,A=.5411961*B1+o2,v=1.306562965*Z1+o2,w=x2*.707106781,m=e1+w,b=e1-w;w0[y0+5]=b+A,w0[y0+3]=b-A,w0[y0+1]=m+v,w0[y0+7]=m-v,y0+=8}for(y0=0,E0=0;E0<k0;++E0){K0=w0[y0],J0=w0[y0+8],H=w0[y0+16],t0=w0[y0+24],f0=w0[y0+32],c0=w0[y0+40],d0=w0[y0+48],g0=w0[y0+56];var S=K0+g0,q=K0-g0,j=J0+d0,V=J0-d0,Y=H+c0,u0=H-c0,W=t0+f0,D0=t0-f0,I0=S+W,m0=S-W,A0=j+Y,Y0=j-Y;w0[y0]=I0+A0,w0[y0+32]=I0-A0;var J=(Y0+m0)*.707106781;w0[y0+16]=m0+J,w0[y0+48]=m0-J,I0=D0+u0,A0=u0+V,Y0=V+q;var N0=(I0-Y0)*.382683433,W0=.5411961*I0+N0,g1=1.306562965*Y0+N0,m1=A0*.707106781,k1=q+m1,i1=q-m1;w0[y0+40]=i1+W0,w0[y0+24]=i1-W0,w0[y0+8]=k1+g1,w0[y0+56]=k1-g1,y0++}var R0;for(E0=0;E0<_0;++E0)R0=w0[E0]*Z0[E0],y[E0]=R0>0?R0+.5|0:R0-.5|0;return y}function L0(){F0(65504),F0(16),e0(74),e0(70),e0(73),e0(70),e0(0),e0(1),e0(1),e0(0),F0(1),F0(1),e0(0),e0(0)}function B0(w0){if(w0){F0(65505),w0[0]===69&&w0[1]===120&&w0[2]===105&&w0[3]===102?F0(w0.length+2):(F0(w0.length+5+2),e0(69),e0(120),e0(105),e0(102),e0(0));for(var Z0=0;Z0<w0.length;Z0++)e0(w0[Z0])}}function H0(w0,Z0){F0(65472),F0(17),e0(8),F0(Z0),F0(w0),e0(3),e0(1),e0(17),e0(0),e0(2),e0(17),e0(1),e0(3),e0(17),e0(1)}function a1(){F0(65499),F0(132),e0(0);for(var w0=0;w0<64;w0++)e0(s[w0]);e0(1);for(var Z0=0;Z0<64;Z0++)e0(o[Z0])}function c1(){F0(65476),F0(418),e0(0);for(var w0=0;w0<16;w0++)e0(z[w0+1]);for(var Z0=0;Z0<=11;Z0++)e0(X[Z0]);e0(16);for(var K0=0;K0<16;K0++)e0(o0[K0+1]);for(var J0=0;J0<=161;J0++)e0(Z[J0]);e0(1);for(var H=0;H<16;H++)e0(n0[H+1]);for(var t0=0;t0<=11;t0++)e0(s0[t0]);e0(17);for(var f0=0;f0<16;f0++)e0(S0[f0+1]);for(var c0=0;c0<=161;c0++)e0(r0[c0])}function G0(w0){typeof w0>"u"||w0.constructor!==Array||w0.forEach(Z0=>{if(typeof Z0=="string"){F0(65534);var K0=Z0.length;F0(K0+2);var J0;for(J0=0;J0<K0;J0++)e0(Z0.charCodeAt(J0))}})}function j0(){F0(65498),F0(12),e0(3),e0(1),e0(0),e0(2),e0(17),e0(3),e0(17),e0(0),e0(63),e0(0)}function P0(w0,Z0,K0,J0,H){for(var t0=H[0],f0=H[240],c0,d0=16,g0=63,y0=64,E0=O0(w0,Z0),k0=0;k0<y0;++k0)E[L[k0]]=E0[k0];var _0=E[0]-K0;K0=E[0],_0==0?C0(J0[0]):(c0=32767+_0,C0(J0[D[c0]]),C0(x[c0]));for(var Q0=63;Q0>0&&E[Q0]==0;Q0--);if(Q0==0)return C0(t0),K0;for(var e1=1,p1;e1<=Q0;){for(var D1=e1;E[e1]==0&&e1<=Q0;++e1);var y1=e1-D1;if(y1>=d0){p1=y1>>4;for(var C1=1;C1<=p1;++C1)C0(f0);y1=y1&15}c0=32767+E[e1],C0(H[(y1<<4)+D[c0]]),C0(x[c0]),e1++}return Q0!=g0&&C0(t0),K0}function d1(){for(var w0=String.fromCharCode,Z0=0;Z0<256;Z0++)$[Z0]=w0(Z0)}this.encode=function(w0,Z0){new Date().getTime(),Z0&&r1(Z0),F=new Array,B=0,M=7,F0(65496),L0(),G0(w0.comments),B0(w0.exifBuffer),a1(),H0(w0.width,w0.height),c1(),j0();var K0=0,J0=0,H=0;B=0,M=7,this.encode.displayName="_encode_";for(var t0=w0.data,f0=w0.width,c0=w0.height,d0=f0*4,g0,y0=0,E0,k0,_0,Q0,e1,p1,D1,y1;y0<c0;){for(g0=0;g0<d0;){for(Q0=d0*y0+g0,e1=Q0,p1=-1,D1=0,y1=0;y1<64;y1++)D1=y1>>3,p1=(y1&7)*4,e1=Q0+D1*d0+p1,y0+D1>=c0&&(e1-=d0*(y0+1+D1-c0)),g0+p1>=d0&&(e1-=g0+p1-d0+4),E0=t0[e1++],k0=t0[e1++],_0=t0[e1++],k[y1]=(R[E0]+R[k0+256>>0]+R[_0+512>>0]>>16)-128,T[y1]=(R[E0+768>>0]+R[k0+1024>>0]+R[_0+1280>>0]>>16)-128,N[y1]=(R[E0+1280>>0]+R[k0+1536>>0]+R[_0+1792>>0]>>16)-128;K0=P0(k,l,K0,f,p),J0=P0(T,c,J0,h,g),H=P0(N,c,H,h,g),g0+=32}y0+=8}if(M>=0){var C1=[];C1[1]=M+1,C1[0]=(1<<M+1)-1,C0(C1)}return F0(65497),Buffer.from(F)};function r1(w0){if(w0<=0&&(w0=1),w0>100&&(w0=100),O!=w0){var Z0=0;w0<50?Z0=Math.floor(5e3/w0):Z0=Math.floor(200-w0*2),p0(Z0),O=w0}}function u1(){var w0=new Date().getTime();r||(r=50),d1(),G(),Q(),M0(),r1(r),new Date().getTime()-w0}u1()}e.exports=n;function n(r,i){typeof i>"u"&&(i=50);var s=new t(i),o=s.encode(r,i);return{data:o,width:r.width,height:r.height}}}(encoder)),encoder.exports}var decoder={exports:{}},hasRequiredDecoder;function requireDecoder(){return hasRequiredDecoder||(hasRequiredDecoder=1,function(e){var t=function(){var i=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),s=4017,o=799,l=3406,c=2276,f=1567,h=3784,p=5793,g=2896;function x(){}function D(T,N){for(var $=0,R=[],O,L,z=16;z>0&&!T[z-1];)z--;R.push({children:[],index:0});var X=R[0],o0;for(O=0;O<z;O++){for(L=0;L<T[O];L++){for(X=R.pop(),X.children[X.index]=N[$];X.index>0;){if(R.length===0)throw new Error("Could not recreate Huffman Table");X=R.pop()}for(X.index++,R.push(X);R.length<=O;)R.push(o0={children:[],index:0}),X.children[X.index]=o0.children,X=o0;$++}O+1<z&&(R.push(o0={children:[],index:0}),X.children[X.index]=o0.children,X=o0)}return R[0].children}function y(T,N,$,R,O,L,z,X,o0,Z){$.precision,$.samplesPerLine,$.scanLines;var n0=$.mcusPerLine,s0=$.progressive;$.maxH,$.maxV;var S0=N,r0=0,p0=0;function h0(){if(p0>0)return p0--,r0>>p0&1;if(r0=T[N++],r0==255){var c0=T[N++];if(c0)throw new Error("unexpected marker: "+(r0<<8|c0).toString(16))}return p0=7,r0>>>7}function G(c0){for(var d0=c0,g0;(g0=h0())!==null;){if(d0=d0[g0],typeof d0=="number")return d0;if(typeof d0!="object")throw new Error("invalid huffman sequence")}return null}function Q(c0){for(var d0=0;c0>0;){var g0=h0();if(g0===null)return;d0=d0<<1|g0,c0--}return d0}function M0(c0){var d0=Q(c0);return d0>=1<<c0-1?d0:d0+(-1<<c0)+1}function C0(c0,d0){var g0=G(c0.huffmanTableDC),y0=g0===0?0:M0(g0);d0[0]=c0.pred+=y0;for(var E0=1;E0<64;){var k0=G(c0.huffmanTableAC),_0=k0&15,Q0=k0>>4;if(_0===0){if(Q0<15)break;E0+=16;continue}E0+=Q0;var e1=i[E0];d0[e1]=M0(_0),E0++}}function e0(c0,d0){var g0=G(c0.huffmanTableDC),y0=g0===0?0:M0(g0)<<o0;d0[0]=c0.pred+=y0}function F0(c0,d0){d0[0]|=h0()<<o0}var O0=0;function L0(c0,d0){if(O0>0){O0--;return}for(var g0=L,y0=z;g0<=y0;){var E0=G(c0.huffmanTableAC),k0=E0&15,_0=E0>>4;if(k0===0){if(_0<15){O0=Q(_0)+(1<<_0)-1;break}g0+=16;continue}g0+=_0;var Q0=i[g0];d0[Q0]=M0(k0)*(1<<o0),g0++}}var B0=0,H0;function a1(c0,d0){for(var g0=L,y0=z,E0=0;g0<=y0;){var k0=i[g0],_0=d0[k0]<0?-1:1;switch(B0){case 0:var Q0=G(c0.huffmanTableAC),e1=Q0&15,E0=Q0>>4;if(e1===0)E0<15?(O0=Q(E0)+(1<<E0),B0=4):(E0=16,B0=1);else{if(e1!==1)throw new Error("invalid ACn encoding");H0=M0(e1),B0=E0?2:3}continue;case 1:case 2:d0[k0]?d0[k0]+=(h0()<<o0)*_0:(E0--,E0===0&&(B0=B0==2?3:0));break;case 3:d0[k0]?d0[k0]+=(h0()<<o0)*_0:(d0[k0]=H0<<o0,B0=0);break;case 4:d0[k0]&&(d0[k0]+=(h0()<<o0)*_0);break}g0++}B0===4&&(O0--,O0===0&&(B0=0))}function c1(c0,d0,g0,y0,E0){var k0=g0/n0|0,_0=g0%n0,Q0=k0*c0.v+y0,e1=_0*c0.h+E0;c0.blocks[Q0]===void 0&&Z.tolerantDecoding||d0(c0,c0.blocks[Q0][e1])}function G0(c0,d0,g0){var y0=g0/c0.blocksPerLine|0,E0=g0%c0.blocksPerLine;c0.blocks[y0]===void 0&&Z.tolerantDecoding||d0(c0,c0.blocks[y0][E0])}var j0=R.length,P0,d1,r1,u1,w0,Z0;s0?L===0?Z0=X===0?e0:F0:Z0=X===0?L0:a1:Z0=C0;var K0=0,J0,H;j0==1?H=R[0].blocksPerLine*R[0].blocksPerColumn:H=n0*$.mcusPerColumn,O||(O=H);for(var t0,f0;K0<H;){for(d1=0;d1<j0;d1++)R[d1].pred=0;if(O0=0,j0==1)for(P0=R[0],w0=0;w0<O;w0++)G0(P0,Z0,K0),K0++;else for(w0=0;w0<O;w0++){for(d1=0;d1<j0;d1++)for(P0=R[d1],t0=P0.h,f0=P0.v,r1=0;r1<f0;r1++)for(u1=0;u1<t0;u1++)c1(P0,Z0,K0,r1,u1);if(K0++,K0===H)break}if(K0===H)do{if(T[N]===255&&T[N+1]!==0)break;N+=1}while(N<T.length-2);if(p0=0,J0=T[N]<<8|T[N+1],J0<65280)throw new Error("marker was not found");if(J0>=65488&&J0<=65495)N+=2;else break}return N-S0}function E(T,N){var $=[],R=N.blocksPerLine,O=N.blocksPerColumn,L=R<<3,z=new Int32Array(64),X=new Uint8Array(64);function o0(Q,M0,C0){var e0=N.quantizationTable,F0,O0,L0,B0,H0,a1,c1,G0,j0,P0=C0,d1;for(d1=0;d1<64;d1++)P0[d1]=Q[d1]*e0[d1];for(d1=0;d1<8;++d1){var r1=8*d1;if(P0[1+r1]==0&&P0[2+r1]==0&&P0[3+r1]==0&&P0[4+r1]==0&&P0[5+r1]==0&&P0[6+r1]==0&&P0[7+r1]==0){j0=p*P0[0+r1]+512>>10,P0[0+r1]=j0,P0[1+r1]=j0,P0[2+r1]=j0,P0[3+r1]=j0,P0[4+r1]=j0,P0[5+r1]=j0,P0[6+r1]=j0,P0[7+r1]=j0;continue}F0=p*P0[0+r1]+128>>8,O0=p*P0[4+r1]+128>>8,L0=P0[2+r1],B0=P0[6+r1],H0=g*(P0[1+r1]-P0[7+r1])+128>>8,G0=g*(P0[1+r1]+P0[7+r1])+128>>8,a1=P0[3+r1]<<4,c1=P0[5+r1]<<4,j0=F0-O0+1>>1,F0=F0+O0+1>>1,O0=j0,j0=L0*h+B0*f+128>>8,L0=L0*f-B0*h+128>>8,B0=j0,j0=H0-c1+1>>1,H0=H0+c1+1>>1,c1=j0,j0=G0+a1+1>>1,a1=G0-a1+1>>1,G0=j0,j0=F0-B0+1>>1,F0=F0+B0+1>>1,B0=j0,j0=O0-L0+1>>1,O0=O0+L0+1>>1,L0=j0,j0=H0*c+G0*l+2048>>12,H0=H0*l-G0*c+2048>>12,G0=j0,j0=a1*o+c1*s+2048>>12,a1=a1*s-c1*o+2048>>12,c1=j0,P0[0+r1]=F0+G0,P0[7+r1]=F0-G0,P0[1+r1]=O0+c1,P0[6+r1]=O0-c1,P0[2+r1]=L0+a1,P0[5+r1]=L0-a1,P0[3+r1]=B0+H0,P0[4+r1]=B0-H0}for(d1=0;d1<8;++d1){var u1=d1;if(P0[8+u1]==0&&P0[16+u1]==0&&P0[24+u1]==0&&P0[32+u1]==0&&P0[40+u1]==0&&P0[48+u1]==0&&P0[56+u1]==0){j0=p*C0[d1+0]+8192>>14,P0[0+u1]=j0,P0[8+u1]=j0,P0[16+u1]=j0,P0[24+u1]=j0,P0[32+u1]=j0,P0[40+u1]=j0,P0[48+u1]=j0,P0[56+u1]=j0;continue}F0=p*P0[0+u1]+2048>>12,O0=p*P0[32+u1]+2048>>12,L0=P0[16+u1],B0=P0[48+u1],H0=g*(P0[8+u1]-P0[56+u1])+2048>>12,G0=g*(P0[8+u1]+P0[56+u1])+2048>>12,a1=P0[24+u1],c1=P0[40+u1],j0=F0-O0+1>>1,F0=F0+O0+1>>1,O0=j0,j0=L0*h+B0*f+2048>>12,L0=L0*f-B0*h+2048>>12,B0=j0,j0=H0-c1+1>>1,H0=H0+c1+1>>1,c1=j0,j0=G0+a1+1>>1,a1=G0-a1+1>>1,G0=j0,j0=F0-B0+1>>1,F0=F0+B0+1>>1,B0=j0,j0=O0-L0+1>>1,O0=O0+L0+1>>1,L0=j0,j0=H0*c+G0*l+2048>>12,H0=H0*l-G0*c+2048>>12,G0=j0,j0=a1*o+c1*s+2048>>12,a1=a1*s-c1*o+2048>>12,c1=j0,P0[0+u1]=F0+G0,P0[56+u1]=F0-G0,P0[8+u1]=O0+c1,P0[48+u1]=O0-c1,P0[16+u1]=L0+a1,P0[40+u1]=L0-a1,P0[24+u1]=B0+H0,P0[32+u1]=B0-H0}for(d1=0;d1<64;++d1){var w0=128+(P0[d1]+8>>4);M0[d1]=w0<0?0:w0>255?255:w0}}k(L*O*8);for(var Z,n0,s0=0;s0<O;s0++){var S0=s0<<3;for(Z=0;Z<8;Z++)$.push(new Uint8Array(L));for(var r0=0;r0<R;r0++){o0(N.blocks[s0][r0],X,z);var p0=0,h0=r0<<3;for(n0=0;n0<8;n0++){var G=$[S0+n0];for(Z=0;Z<8;Z++)G[h0+Z]=X[p0++]}}}return $}function F(T){return T<0?0:T>255?255:T}x.prototype={load:function(N){var $=new XMLHttpRequest;$.open("GET",N,!0),$.responseType="arraybuffer",$.onload=(function(){var R=new Uint8Array($.response||$.mozResponseArrayBuffer);this.parse(R),this.onload&&this.onload()}).bind(this),$.send(null)},parse:function(N){var $=this.opts.maxResolutionInMP*1e3*1e3,R=0;N.length;function O(){var _0=N[R]<<8|N[R+1];return R+=2,_0}function L(){var _0=O(),Q0=N.subarray(R,R+_0-2);return R+=Q0.length,Q0}function z(_0){var Q0=1,e1=1,p1,D1;for(D1 in _0.components)_0.components.hasOwnProperty(D1)&&(p1=_0.components[D1],Q0<p1.h&&(Q0=p1.h),e1<p1.v&&(e1=p1.v));var y1=Math.ceil(_0.samplesPerLine/8/Q0),C1=Math.ceil(_0.scanLines/8/e1);for(D1 in _0.components)if(_0.components.hasOwnProperty(D1)){p1=_0.components[D1];var R1=Math.ceil(Math.ceil(_0.samplesPerLine/8)*p1.h/Q0),K1=Math.ceil(Math.ceil(_0.scanLines/8)*p1.v/e1),B1=y1*p1.h,q1=C1*p1.v,x2=q1*B1,Z1=[];k(x2*256);for(var I1=0;I1<q1;I1++){for(var o2=[],A=0;A<B1;A++)o2.push(new Int32Array(64));Z1.push(o2)}p1.blocksPerLine=R1,p1.blocksPerColumn=K1,p1.blocks=Z1}_0.maxH=Q0,_0.maxV=e1,_0.mcusPerLine=y1,_0.mcusPerColumn=C1}var X=null,o0=null,Z,n0,s0=[],S0=[],r0=[],p0=[],h0=O(),G=-1;if(this.comments=[],h0!=65496)throw new Error("SOI not found");for(h0=O();h0!=65497;){var Q,M0;switch(h0){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var C0=L();if(h0===65534){var e0=String.fromCharCode.apply(null,C0);this.comments.push(e0)}h0===65504&&C0[0]===74&&C0[1]===70&&C0[2]===73&&C0[3]===70&&C0[4]===0&&(X={version:{major:C0[5],minor:C0[6]},densityUnits:C0[7],xDensity:C0[8]<<8|C0[9],yDensity:C0[10]<<8|C0[11],thumbWidth:C0[12],thumbHeight:C0[13],thumbData:C0.subarray(14,14+3*C0[12]*C0[13])}),h0===65505&&C0[0]===69&&C0[1]===120&&C0[2]===105&&C0[3]===102&&C0[4]===0&&(this.exifBuffer=C0.subarray(5,C0.length)),h0===65518&&C0[0]===65&&C0[1]===100&&C0[2]===111&&C0[3]===98&&C0[4]===101&&C0[5]===0&&(o0={version:C0[6],flags0:C0[7]<<8|C0[8],flags1:C0[9]<<8|C0[10],transformCode:C0[11]});break;case 65499:for(var F0=O(),O0=F0+R-2;R<O0;){var L0=N[R++];k(256);var B0=new Int32Array(64);if(L0>>4)if(L0>>4===1)for(M0=0;M0<64;M0++){var H0=i[M0];B0[H0]=O()}else throw new Error("DQT: invalid table spec");else for(M0=0;M0<64;M0++){var H0=i[M0];B0[H0]=N[R++]}s0[L0&15]=B0}break;case 65472:case 65473:case 65474:O(),Z={},Z.extended=h0===65473,Z.progressive=h0===65474,Z.precision=N[R++],Z.scanLines=O(),Z.samplesPerLine=O(),Z.components={},Z.componentsOrder=[];var a1=Z.scanLines*Z.samplesPerLine;if(a1>$){var c1=Math.ceil((a1-$)/1e6);throw new Error(`maxResolutionInMP limit exceeded by ${c1}MP`)}var G0=N[R++],j0;for(Q=0;Q<G0;Q++){j0=N[R];var P0=N[R+1]>>4,d1=N[R+1]&15,r1=N[R+2];if(P0<=0||d1<=0)throw new Error("Invalid sampling factor, expected values above 0");Z.componentsOrder.push(j0),Z.components[j0]={h:P0,v:d1,quantizationIdx:r1},R+=3}z(Z),S0.push(Z);break;case 65476:var u1=O();for(Q=2;Q<u1;){var w0=N[R++],Z0=new Uint8Array(16),K0=0;for(M0=0;M0<16;M0++,R++)K0+=Z0[M0]=N[R];k(16+K0);var J0=new Uint8Array(K0);for(M0=0;M0<K0;M0++,R++)J0[M0]=N[R];Q+=17+K0,(w0>>4?r0:p0)[w0&15]=D(Z0,J0)}break;case 65501:O(),n0=O();break;case 65500:O(),O();break;case 65498:O();var H=N[R++],t0=[],f0;for(Q=0;Q<H;Q++){f0=Z.components[N[R++]];var c0=N[R++];f0.huffmanTableDC=p0[c0>>4],f0.huffmanTableAC=r0[c0&15],t0.push(f0)}var d0=N[R++],g0=N[R++],y0=N[R++],E0=y(N,R,Z,t0,n0,d0,g0,y0>>4,y0&15,this.opts);R+=E0;break;case 65535:N[R]!==255&&R--;break;default:if(N[R-3]==255&&N[R-2]>=192&&N[R-2]<=254){R-=3;break}else if(h0===224||h0==225){if(G!==-1)throw new Error(`first unknown JPEG marker at offset ${G.toString(16)}, second unknown JPEG marker ${h0.toString(16)} at offset ${(R-1).toString(16)}`);G=R-1;const _0=O();if(N[R+_0-2]===255){R+=_0-2;break}}throw new Error("unknown JPEG marker "+h0.toString(16))}h0=O()}if(S0.length!=1)throw new Error("only single frame JPEGs supported");for(var Q=0;Q<S0.length;Q++){var k0=S0[Q].components;for(var M0 in k0)k0[M0].quantizationTable=s0[k0[M0].quantizationIdx],delete k0[M0].quantizationIdx}this.width=Z.samplesPerLine,this.height=Z.scanLines,this.jfif=X,this.adobe=o0,this.components=[];for(var Q=0;Q<Z.componentsOrder.length;Q++){var f0=Z.components[Z.componentsOrder[Q]];this.components.push({lines:E(Z,f0),scaleX:f0.h/Z.maxH,scaleY:f0.v/Z.maxV})}},getData:function(N,$){var R=this.width/N,O=this.height/$,L,z,X,o0,Z,n0,s0,S0,r0,p0,h0=0,G,Q,M0,C0,e0,F0,O0,L0,B0,H0,a1,c1=N*$*this.components.length;k(c1);var G0=new Uint8Array(c1);switch(this.components.length){case 1:for(L=this.components[0],p0=0;p0<$;p0++)for(Z=L.lines[0|p0*L.scaleY*O],r0=0;r0<N;r0++)G=Z[0|r0*L.scaleX*R],G0[h0++]=G;break;case 2:for(L=this.components[0],z=this.components[1],p0=0;p0<$;p0++)for(Z=L.lines[0|p0*L.scaleY*O],n0=z.lines[0|p0*z.scaleY*O],r0=0;r0<N;r0++)G=Z[0|r0*L.scaleX*R],G0[h0++]=G,G=n0[0|r0*z.scaleX*R],G0[h0++]=G;break;case 3:for(a1=!0,this.adobe&&this.adobe.transformCode?a1=!0:typeof this.opts.colorTransform<"u"&&(a1=!!this.opts.colorTransform),L=this.components[0],z=this.components[1],X=this.components[2],p0=0;p0<$;p0++)for(Z=L.lines[0|p0*L.scaleY*O],n0=z.lines[0|p0*z.scaleY*O],s0=X.lines[0|p0*X.scaleY*O],r0=0;r0<N;r0++)a1?(G=Z[0|r0*L.scaleX*R],Q=n0[0|r0*z.scaleX*R],M0=s0[0|r0*X.scaleX*R],L0=F(G+1.402*(M0-128)),B0=F(G-.3441363*(Q-128)-.71413636*(M0-128)),H0=F(G+1.772*(Q-128))):(L0=Z[0|r0*L.scaleX*R],B0=n0[0|r0*z.scaleX*R],H0=s0[0|r0*X.scaleX*R]),G0[h0++]=L0,G0[h0++]=B0,G0[h0++]=H0;break;case 4:if(!this.adobe)throw new Error("Unsupported color mode (4 components)");for(a1=!1,this.adobe&&this.adobe.transformCode?a1=!0:typeof this.opts.colorTransform<"u"&&(a1=!!this.opts.colorTransform),L=this.components[0],z=this.components[1],X=this.components[2],o0=this.components[3],p0=0;p0<$;p0++)for(Z=L.lines[0|p0*L.scaleY*O],n0=z.lines[0|p0*z.scaleY*O],s0=X.lines[0|p0*X.scaleY*O],S0=o0.lines[0|p0*o0.scaleY*O],r0=0;r0<N;r0++)a1?(G=Z[0|r0*L.scaleX*R],Q=n0[0|r0*z.scaleX*R],M0=s0[0|r0*X.scaleX*R],C0=S0[0|r0*o0.scaleX*R],e0=255-F(G+1.402*(M0-128)),F0=255-F(G-.3441363*(Q-128)-.71413636*(M0-128)),O0=255-F(G+1.772*(Q-128))):(e0=Z[0|r0*L.scaleX*R],F0=n0[0|r0*z.scaleX*R],O0=s0[0|r0*X.scaleX*R],C0=S0[0|r0*o0.scaleX*R]),G0[h0++]=255-e0,G0[h0++]=255-F0,G0[h0++]=255-O0,G0[h0++]=255-C0;break;default:throw new Error("Unsupported color mode")}return G0},copyToImageData:function(N,$){var R=N.width,O=N.height,L=N.data,z=this.getData(R,O),X=0,o0=0,Z,n0,s0,S0,r0,p0,h0,G,Q;switch(this.components.length){case 1:for(n0=0;n0<O;n0++)for(Z=0;Z<R;Z++)s0=z[X++],L[o0++]=s0,L[o0++]=s0,L[o0++]=s0,$&&(L[o0++]=255);break;case 3:for(n0=0;n0<O;n0++)for(Z=0;Z<R;Z++)h0=z[X++],G=z[X++],Q=z[X++],L[o0++]=h0,L[o0++]=G,L[o0++]=Q,$&&(L[o0++]=255);break;case 4:for(n0=0;n0<O;n0++)for(Z=0;Z<R;Z++)r0=z[X++],p0=z[X++],s0=z[X++],S0=z[X++],h0=255-F(r0*(1-S0/255)+S0),G=255-F(p0*(1-S0/255)+S0),Q=255-F(s0*(1-S0/255)+S0),L[o0++]=h0,L[o0++]=G,L[o0++]=Q,$&&(L[o0++]=255);break;default:throw new Error("Unsupported color mode")}}};var B=0,M=0;function k(T=0){var N=B+T;if(N>M){var $=Math.ceil((N-M)/1024/1024);throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${$}MB`)}B=N}return x.resetMaxMemoryUsage=function(T){B=0,M=T},x.getBytesAllocated=function(){return B},x.requestMemoryAllocation=k,x}();e.exports=n;function n(r,i={}){var s={colorTransform:void 0,useTArray:!1,formatAsRGBA:!0,tolerantDecoding:!0,maxResolutionInMP:100,maxMemoryUsageInMB:512},o={...s,...i},l=new Uint8Array(r),c=new t;c.opts=o,t.resetMaxMemoryUsage(o.maxMemoryUsageInMB*1024*1024),c.parse(l);var f=o.formatAsRGBA?4:3,h=c.width*c.height*f;try{t.requestMemoryAllocation(h);var p={width:c.width,height:c.height,exifBuffer:c.exifBuffer,data:o.useTArray?new Uint8Array(h):Buffer.alloc(h)};c.comments.length>0&&(p.comments=c.comments)}catch(g){throw g instanceof RangeError?new Error("Could not allocate enough memory for the image. Required: "+h):g instanceof ReferenceError&&g.message==="Buffer is not defined"?new Error("Buffer is not globally defined in this environment. Consider setting useTArray to true"):g}return c.copyToImageData(p,o.formatAsRGBA),p}}(decoder)),decoder.exports}var jpegJs,hasRequiredJpegJs;function requireJpegJs(){if(hasRequiredJpegJs)return jpegJs;hasRequiredJpegJs=1;var e=requireEncoder(),t=requireDecoder();return jpegJs={encode:e,decode:t},jpegJs}var jpegJsExports=requireJpegJs();let chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",lookup=new Uint8Array(256);for(let e=0;e<chars.length;e++)lookup[chars.charCodeAt(e)]=e;function encode(e){let t,n=e.length,r="";for(t=0;t<n;t+=3)r+=chars[e[t]>>2],r+=chars[(e[t]&3)<<4|e[t+1]>>4],r+=chars[(e[t+1]&15)<<2|e[t+2]>>6],r+=chars[e[t+2]&63];return n%3===2?r=`${r.substring(0,r.length-1)}=`:n%3===1&&(r=`${r.substring(0,r.length-2)}==`),r}function decode$1(e){let t=e.length*.75,n=e.length,r=0,i,s,o,l;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);const c=new Uint8Array(t);for(let f=0;f<n;f+=4)i=lookup[e.charCodeAt(f)],s=lookup[e.charCodeAt(f+1)],o=lookup[e.charCodeAt(f+2)],l=lookup[e.charCodeAt(f+3)],c[r++]=i<<2|s>>4,c[r++]=(s&15)<<4|o>>2,c[r++]=(o&3)<<6|l&63;return c}function toBase64URL(e,t){const n=encode(e);return`data:${t};base64,${n}`}const ImageData=self.ImageData,DOMImage=self.Image;function createCanvas(e,t){let n=self.document.createElement("canvas");return n.width=e,n.height=t,n}function fetchBinary(e,{withCredentials:t=!1}={}){return new Promise(function(n,r){let i=new self.XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.withCredentials=t,i.onload=function(s){this.status!==200?r(s):n(this.response)},i.onerror=r,i.send()})}function createWriteStream(){throw new Error("createWriteStream does not exist in the browser")}function writeFile(){throw new Error("writeFile does not exist in the browser")}function getType(e){return e.includes("/")||(e=`image/${e}`),e}function encodeJpeg(e,t={}){const n={width:e.width,height:e.height,data:e.getRGBAData()};return jpegJsExports.encode(n,t.quality).data}function encodePng(e,t){const n={width:e.width,height:e.height,channels:e.channels,depth:e.bitDepth,data:e.data};return(n.depth===1||n.depth===32)&&(n.depth=8,n.channels=4,n.data=e.getRGBAData()),encodePng$1(n,t)}const exportMethods={save(e,t={}){const{useCanvas:n=!1,encoder:r=void 0}=t;let{format:i}=t;if(!i){const s=/\.(?<format>[a-zA-Z]+)$/.exec(e);s&&(i=s.groups.format.toLowerCase())}if(!i)throw new Error("file format not provided");return new Promise((s,o)=>{let l,c;switch(i.toLowerCase()){case"png":{n?l=this.getCanvas().pngStream():c=encodePng(this,r);break}case"jpg":case"jpeg":n?l=this.getCanvas().jpegStream():c=encodeJpeg(this,r);break;case"bmp":c=srcExports$3.encode(this,r);break;default:throw new RangeError(`invalid output format: ${i}`)}if(l){let f=createWriteStream();f.on("finish",s),f.on("error",o),l.pipe(f)}else c&&writeFile()})},toDataURL(e="image/png",t={}){typeof e=="object"&&(t=e,e="image/png");const{useCanvas:n=!1,encoder:r=void 0}=t;e=getType(e);function i(s,o){const l=s(o,r);return toBase64URL(l,e)}return e==="image/bmp"?i(srcExports$3.encode,this):e==="image/png"&&!n?i(encodePng,this):e==="image/jpeg"&&!n?i(encodeJpeg,this):this.getCanvas().toDataURL(e)},toBuffer(e={}){const{format:t="png",encoder:n=void 0}=e;switch(t.toLowerCase()){case"png":return encodePng(this,n);case"jpeg":case"jpg":return encodeJpeg(this,n);case"bmp":return srcExports$3.encode(this,n);default:throw new RangeError(`invalid output format: ${t}`)}},toBase64(e="image/png",t={}){if(t.async)return this.toDataURL(e,t).then(function(n){return n.substring(n.indexOf(",")+1)});{const n=this.toDataURL(e,t);return n.substring(n.indexOf(",")+1)}},toBlob(e="image/png",t=.8){return canvasToBlob(this.getCanvas(),e,t)},getCanvas(){const e=new ImageData(this.getRGBAData({clamped:!0}),this.width,this.height);let t=createCanvas(this.width,this.height);return t.getContext("2d").putImageData(e,0,0),t}};function setExportMethods(e){for(const t in exportMethods)e.prototype[t]=exportMethods[t]}var hasOwn$1={exports:{}};const name="has-own",version$1="1.0.1",description="A safer .hasOwnProperty() - hasOwn(name, obj)",main="index.js",scripts={test:"make test"},author="Aaron Heckmann <aaron.heckmann+github@gmail.com>",license="MIT",repository={type:"git",url:"git://github.com/aheckmann/has-own.git"},homepage="https://github.com/aheckmann/has-own/",devDependencies={mocha:"^6.2.2"},require$$0$2={name,version:version$1,description,main,scripts,author,license,repository,homepage,devDependencies};var hasRequiredHasOwn;function requireHasOwn(){return hasRequiredHasOwn||(hasRequiredHasOwn=1,function(e,t){var n=Object.prototype.hasOwnProperty;e.exports=t=function(i,s){return n.call(s,i)},t.version=require$$0$2.version}(hasOwn$1,hasOwn$1.exports)),hasOwn$1.exports}var hasOwnExports=requireHasOwn();const hasOwn=getDefaultExportFromCjs(hasOwnExports);let computedPropertyDescriptor$1={configurable:!0,enumerable:!1,get:void 0};function extendMethod(e,t,n={}){let{inPlace:r=!1,returnThis:i=!0,partialArgs:s=[]}=n;return r?Image.prototype[e]=function(...o){this.computed=null;let l=t.apply(this,[...s,...o]);return i?this:l}:Image.prototype[e]=function(...o){return t.apply(this,[...s,...o])},Image}function extendProperty(e,t,n={}){let{partialArgs:r=[]}=n;return computedPropertyDescriptor$1.get=function(){if(this.computed===null)this.computed={};else if(hasOwn(e,this.computed))return this.computed[e];let i=t.apply(this,r);return this.computed[e]=i,i},Object.defineProperty(Image.prototype,e,computedPropertyDescriptor$1),Image}const GREY$1="GREY",RGB$1="RGB",HSL="HSL",HSV="HSV",CMYK$1="CMYK",ColorModel=Object.freeze(Object.defineProperty({__proto__:null,CMYK:CMYK$1,GREY:GREY$1,HSL,HSV,RGB:RGB$1},Symbol.toStringTag,{value:"Module"}));function getRGBAData(e={}){const{clamped:t}=e;this.checkProcessable("getRGBAData",{components:[1,3],bitDepth:[1,8,16,32]});const n=this.width*this.height*4;let r=t?new Uint8ClampedArray(n):new Uint8Array(n);return this.bitDepth===1?fillDataFromBinary(this,r):this.bitDepth===32?(this.checkProcessable("getRGBAData",{alpha:0}),this.components===1?fillDataFromGrey32(this,r):this.components===3&&(this.checkProcessable("getRGBAData",{colorModel:[RGB$1]}),fillDataFromRGB32(this,r))):this.components===1?fillDataFromGrey(this,r):this.components===3&&(this.checkProcessable("getRGBAData",{colorModel:[RGB$1]}),fillDataFromRGB(this,r)),this.alpha===1?(this.checkProcessable("getRGBAData",{bitDepth:[8,16]}),copyAlpha(this,r)):fillAlpha(this,r),r}function fillDataFromBinary(e,t){for(let n=0;n<e.size;n++){const r=e.getBit(n);t[n*4]=r*255,t[n*4+1]=r*255,t[n*4+2]=r*255}}function fillDataFromGrey32(e,t){const n=e.min[0],i=e.max[0]-n;for(let s=0;s<e.size;s++){const o=Math.floor(255*(e.data[s]-n)/i);t[s*4]=o,t[s*4+1]=o,t[s*4+2]=o}}function fillDataFromRGB32(e,t){const n=Math.min(...e.min),i=Math.max(...e.max)-n;for(let s=0;s<e.size;s++){const o=Math.floor(255*(e.data[s*3]-n)/i),l=Math.floor(255*(e.data[s*3+1]-n)/i),c=Math.floor(255*(e.data[s*3+2]-n)/i);t[s*4]=o,t[s*4+1]=l,t[s*4+2]=c}}function fillDataFromGrey(e,t){for(let n=0;n<e.size;n++)t[n*4]=e.data[n*e.channels]>>>e.bitDepth-8,t[n*4+1]=e.data[n*e.channels]>>>e.bitDepth-8,t[n*4+2]=e.data[n*e.channels]>>>e.bitDepth-8}function fillDataFromRGB(e,t){for(let n=0;n<e.size;n++)t[n*4]=e.data[n*e.channels]>>>e.bitDepth-8,t[n*4+1]=e.data[n*e.channels+1]>>>e.bitDepth-8,t[n*4+2]=e.data[n*e.channels+2]>>>e.bitDepth-8}function copyAlpha(e,t){for(let n=0;n<e.size;n++)t[n*4+3]=e.data[n*e.channels+e.components]>>e.bitDepth-8}function fillAlpha(e,t){for(let n=0;n<e.size;n++)t[n*4+3]=255}const BINARY="BINARY",GREY="GREY",GREYA="GREYA",RGB="RGB",RGBA="RGBA",CMYK="CMYK",CMYKA="CMYKA",kinds={};kinds[BINARY]={components:1,alpha:0,bitDepth:1,colorModel:GREY$1};kinds[GREYA]={components:1,alpha:1,bitDepth:8,colorModel:GREY$1};kinds[GREY]={components:1,alpha:0,bitDepth:8,colorModel:GREY$1};kinds[RGBA]={components:3,alpha:1,bitDepth:8,colorModel:RGB$1};kinds[RGB]={components:3,alpha:0,bitDepth:8,colorModel:RGB$1};kinds[CMYK]={components:4,alpha:0,bitDepth:8,colorModel:CMYK$1};kinds[CMYKA]={components:4,alpha:1,bitDepth:8,colorModel:CMYK$1};function getKind(e){const t=kinds[e];if(!t)throw new RangeError(`invalid image kind: ${e}`);return t}const validBitDepth=[1,8,16,32];function verifyKindDefinition(e){const{components:t,alpha:n,bitDepth:r,colorModel:i}=e;if(!Number.isInteger(t)||t<=0)throw new RangeError(`invalid components: ${t}. Must be a positive integer`);if(n!==0&&n!==1&&typeof n!="boolean")throw new TypeError(`invalid alpha: ${n}: must be a boolean, 0 or 1`);if(!validBitDepth.includes(r))throw new RangeError(`invalid bitDepth: ${r}. Must be one of ${validBitDepth.join(", ")}`);if(!ColorModel[i])throw new RangeError(`invalid colorModel: ${i}. Must be one of ${Object.keys(ColorModel).join(", ")}`)}function getTheoreticalPixelArraySize(e,t,n){let r=t*e;return n===1&&(r=Math.ceil(r/8)),r}function createPixelArray(e,t,n,r,i,s){const o=r*e;let l;switch(i){case 1:l=new Uint8Array(Math.ceil(o/8));break;case 8:l=new Uint8Array(o);break;case 16:l=new Uint16Array(o);break;case 32:l=new Float32Array(o);break;default:throw new Error(`Cannot create pixel array for bit depth ${i}`)}if(n)for(let c=t;c<l.length;c+=r)l[c]=s;return l}var src$4={},IOBuffer_1,hasRequiredIOBuffer;function requireIOBuffer(){if(hasRequiredIOBuffer)return IOBuffer_1;hasRequiredIOBuffer=1;const e=1024*8,t=[];class n{constructor(i,s){s=s||{},i===void 0&&(i=e),typeof i=="number"&&(i=new ArrayBuffer(i));let o=i.byteLength;const l=s.offset?s.offset>>>0:0;i.buffer&&(o=i.byteLength-l,i.byteLength!==i.buffer.byteLength?i=i.buffer.slice(i.byteOffset+l,i.byteOffset+i.byteLength):l?i=i.buffer.slice(l):i=i.buffer),this.buffer=i,this.length=o,this.byteLength=o,this.byteOffset=0,this.offset=0,this.littleEndian=!0,this._data=new DataView(this.buffer),this._increment=o||e,this._mark=0}available(i){return i===void 0&&(i=1),this.offset+i<=this.length}isLittleEndian(){return this.littleEndian}setLittleEndian(){this.littleEndian=!0}isBigEndian(){return!this.littleEndian}setBigEndian(){this.littleEndian=!1}skip(i){i===void 0&&(i=1),this.offset+=i}seek(i){this.offset=i}mark(){this._mark=this.offset}reset(){this.offset=this._mark}rewind(){this.offset=0}ensureAvailable(i){if(i===void 0&&(i=1),!this.available(i)){const s=this._increment+this._increment;this._increment=s;const o=this.length+s,l=new Uint8Array(o);l.set(new Uint8Array(this.buffer)),this.buffer=l.buffer,this.length=o,this._data=new DataView(this.buffer)}}readBoolean(){return this.readUint8()!==0}readInt8(){return this._data.getInt8(this.offset++)}readUint8(){return this._data.getUint8(this.offset++)}readByte(){return this.readUint8()}readBytes(i){i===void 0&&(i=1);for(var s=new Uint8Array(i),o=0;o<i;o++)s[o]=this.readByte();return s}readInt16(){var i=this._data.getInt16(this.offset,this.littleEndian);return this.offset+=2,i}readUint16(){var i=this._data.getUint16(this.offset,this.littleEndian);return this.offset+=2,i}readInt32(){var i=this._data.getInt32(this.offset,this.littleEndian);return this.offset+=4,i}readUint32(){var i=this._data.getUint32(this.offset,this.littleEndian);return this.offset+=4,i}readFloat32(){var i=this._data.getFloat32(this.offset,this.littleEndian);return this.offset+=4,i}readFloat64(){var i=this._data.getFloat64(this.offset,this.littleEndian);return this.offset+=8,i}readChar(){return String.fromCharCode(this.readInt8())}readChars(i){i===void 0&&(i=1),t.length=i;for(var s=0;s<i;s++)t[s]=this.readChar();return t.join("")}writeBoolean(i){this.writeUint8(i?255:0)}writeInt8(i){this.ensureAvailable(1),this._data.setInt8(this.offset++,i)}writeUint8(i){this.ensureAvailable(1),this._data.setUint8(this.offset++,i)}writeByte(i){this.writeUint8(i)}writeBytes(i){this.ensureAvailable(i.length);for(var s=0;s<i.length;s++)this._data.setUint8(this.offset++,i[s])}writeInt16(i){this.ensureAvailable(2),this._data.setInt16(this.offset,i,this.littleEndian),this.offset+=2}writeUint16(i){this.ensureAvailable(2),this._data.setUint16(this.offset,i,this.littleEndian),this.offset+=2}writeInt32(i){this.ensureAvailable(4),this._data.setInt32(this.offset,i,this.littleEndian),this.offset+=4}writeUint32(i){this.ensureAvailable(4),this._data.setUint32(this.offset,i,this.littleEndian),this.offset+=4}writeFloat32(i){this.ensureAvailable(4),this._data.setFloat32(this.offset,i,this.littleEndian),this.offset+=4}writeFloat64(i){this.ensureAvailable(8),this._data.setFloat64(this.offset,i,this.littleEndian),this.offset+=8}writeChar(i){this.writeUint8(i.charCodeAt(0))}writeChars(i){for(var s=0;s<i.length;s++)this.writeUint8(i.charCodeAt(s))}toArray(){return new Uint8Array(this.buffer,0,this.offset)}}return IOBuffer_1=n,IOBuffer_1}var src$3={},standard$1,hasRequiredStandard;function requireStandard(){if(hasRequiredStandard)return standard$1;hasRequiredStandard=1;const e={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Threshholding",264:"CellWidth",265:"CellLength",266:"FillOrder",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",296:"ResolutionUnit",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",320:"ColorMap",338:"ExtraSamples",33432:"Copyright",269:"DocumentName",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",293:"T6Options",297:"PageNumber",301:"TransferFunction",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFDs",332:"InkSet",333:"InkNames",334:"NumberOfInks",336:"DotRange",337:"TargetPrinter",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"XMP",32781:"ImageID",34732:"ImageLayer",32932:"WangAnnotatio",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"ModelPixelScaleTag",33723:"IPTC",33918:"INGRPacketDataTag",33919:"INGRFlagRegisters",33920:"IrasBTransformationMatrix",33922:"ModelTiepointTag",34264:"ModelTransformationTag",34377:"Photoshop",34665:"ExifIFD",34675:"ICCProfile",34735:"GeoKeyDirectoryTag",34736:"GeoDoubleParamsTag",34737:"GeoAsciiParamsTag",34853:"GPSIFD",34908:"HylaFAXFaxRecvParams",34909:"HylaFAXFaxSubAddress",34910:"HylaFAXFaxRecvTime",37724:"ImageSourceData",40965:"InteroperabilityIFD",42112:"GDAL_METADATA",42113:"GDAL_NODATA",50215:"OceScanjobDescription",50216:"OceApplicationSelector",50217:"OceIdentificationNumber",50218:"OceImageLogicCharacteristics",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50784:"AliasLayerMetadata"},t={};for(var n in e)t[e[n]]=n;return standard$1={tagsById:e,tagsByName:t},standard$1}var exif$1,hasRequiredExif;function requireExif(){if(hasRequiredExif)return exif$1;hasRequiredExif=1;const e={33434:"ExposureTime",33437:"FNumber",34850:"ExposureProgram",34852:"SpectralSensitivity",34855:"ISOSpeedRatings",34856:"OECF",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureBiasValue",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37396:"SubjectArea",37500:"MakerNote",37510:"UserComment",37520:"SubsecTime",37521:"SubsecTimeOriginal",37522:"SubsecTimeDigitized",40960:"FlashpixVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",40964:"RelatedSoundFile",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41492:"SubjectLocation",41493:"ExposureIndex",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFilm",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"CameraOwnerName",42033:"BodySerialNumber",42034:"LensSpecification",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42240:"Gamma"},t={};for(var n in e)t[e[n]]=n;return exif$1={tagsById:e,tagsByName:t},exif$1}var gps$1,hasRequiredGps;function requireGps(){if(hasRequiredGps)return gps$1;hasRequiredGps=1;const e={0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"},t={};for(var n in e)t[e[n]]=n;return gps$1={tagsById:e,tagsByName:t},gps$1}var ifd,hasRequiredIfd;function requireIfd(){if(hasRequiredIfd)return ifd;hasRequiredIfd=1;const e={standard:requireStandard(),exif:requireExif(),gps:requireGps()};class t{constructor(r){if(!r)throw new Error("missing kind");this.data=null,this.fields=new Map,this.kind=r,this._map=null}get(r){if(typeof r=="number")return this.fields.get(r);if(typeof r=="string")return this.fields.get(e[this.kind].tagsByName[r]);throw new Error("expected a number or string")}get map(){if(!this._map){this._map={};const i=e[this.kind].tagsById;for(var r of this.fields.keys())i[r]&&(this._map[i[r]]=this.fields.get(r))}return this._map}}return ifd=t,ifd}var tiffIfd,hasRequiredTiffIfd;function requireTiffIfd(){if(hasRequiredTiffIfd)return tiffIfd;hasRequiredTiffIfd=1;const e=requireIfd(),t=/^(\d{4}):(\d{2}):(\d{2}) (\d{2}):(\d{2}):(\d{2})$/;class n extends e{constructor(){super("standard")}get size(){return this.width*this.height}get width(){return this.imageWidth}get height(){return this.imageLength}get components(){return this.samplesPerPixel}get date(){var s=new Date,o=t.exec(this.dateTime);return s.setFullYear(o[1],o[2]-1,o[3]),s.setHours(o[4],o[5],o[6]),s}get newSubfileType(){return this.get(254)}get imageWidth(){return this.get(256)}get imageLength(){return this.get(257)}get bitsPerSample(){return this.get(258)}get compression(){return this.get(259)||1}get type(){return this.get(262)}get fillOrder(){return this.get(266)||1}get documentName(){return this.get(269)}get imageDescription(){return this.get(270)}get stripOffsets(){return r(this.get(273))}get orientation(){return this.get(274)}get samplesPerPixel(){return this.get(277)}get rowsPerStrip(){return this.get(278)}get stripByteCounts(){return r(this.get(279))}get minSampleValue(){return this.get(280)||0}get maxSampleValue(){return this.get(281)||Math.pow(2,this.bitsPerSample)-1}get xResolution(){return this.get(282)}get yResolution(){return this.get(283)}get planarConfiguration(){return this.get(284)||1}get resolutionUnit(){return this.get(296)||2}get dateTime(){return this.get(306)}get predictor(){return this.get(317)||1}get sampleFormat(){return this.get(339)||1}get sMinSampleValue(){return this.get(340)||this.minSampleValue}get sMaxSampleValue(){return this.get(341)||this.maxSampleValue}}function r(i){return typeof i=="number"?[i]:i}return tiffIfd=n,tiffIfd}var ifdValue={},hasRequiredIfdValue;function requireIfdValue(){if(hasRequiredIfdValue)return ifdValue;hasRequiredIfdValue=1;var e=new Map([[1,[1,t]],[2,[1,n]],[3,[2,r]],[4,[4,i]],[5,[8,s]],[6,[1,o]],[7,[1,t]],[8,[2,l]],[9,[4,c]],[10,[8,f]],[11,[4,h]],[12,[8,p]]]);ifdValue.getByteLength=function(g,x){return e.get(g)[0]*x},ifdValue.readData=function(g,x,D){return e.get(x)[1](g,D)};function t(g,x){if(x===1)return g.readUint8();for(var D=new Uint8Array(x),y=0;y<x;y++)D[y]=g.readUint8();return D}function n(g,x){for(var D=[],y="",E=0;E<x;E++){var F=String.fromCharCode(g.readUint8());F==="\0"?(D.push(y),y=""):y+=F}return D.length===1?D[0]:D}function r(g,x){if(x===1)return g.readUint16();for(var D=new Uint16Array(x),y=0;y<x;y++)D[y]=g.readUint16();return D}function i(g,x){if(x===1)return g.readUint32();for(var D=new Uint32Array(x),y=0;y<x;y++)D[y]=g.readUint32();return D}function s(g,x){if(x===1)return g.readUint32()/g.readUint32();for(var D=new Array(x),y=0;y<x;y++)D[y]=g.readUint32()/g.readUint32();return D}function o(g,x){if(x===1)return g.readInt8();for(var D=new Int8Array(x),y=0;y<x;y++)D[y]=g.readInt8();return D}function l(g,x){if(x===1)return g.readInt16();for(var D=new Int16Array(x),y=0;y<x;y++)D[y]=g.readInt16();return D}function c(g,x){if(x===1)return g.readInt32();for(var D=new Int32Array(x),y=0;y<x;y++)D[y]=g.readInt32();return D}function f(g,x){if(x===1)return g.readInt32()/g.readInt32();for(var D=new Array(x),y=0;y<x;y++)D[y]=g.readInt32()/g.readInt32();return D}function h(g,x){if(x===1)return g.readFloat32();for(var D=new Float32Array(x),y=0;y<x;y++)D[y]=g.readFloat32();return D}function p(g,x){if(x===1)return g.readFloat64();for(var D=new Float64Array(x),y=0;y<x;y++)D[y]=g.readFloat64();return D}return ifdValue}var tiffDecoder,hasRequiredTiffDecoder;function requireTiffDecoder(){if(hasRequiredTiffDecoder)return tiffDecoder;hasRequiredTiffDecoder=1;const e=requireIOBuffer(),t=requireIfd(),n=requireTiffIfd(),r=requireIfdValue(),i={ignoreImageData:!1,onlyFirst:!1};class s extends e{constructor(x,D){super(x,D),this._nextIFD=0}decode(x){x=Object.assign({},i,x);const D=[];for(this.decodeHeader();this._nextIFD;)if(D.push(this.decodeIFD(x)),x.onlyFirst)return D[0];return D}decodeHeader(){let x=this.readUint16();if(x===18761)this.setLittleEndian();else if(x===19789)this.setBigEndian();else throw new Error("invalid byte order: 0x"+x.toString(16));if(x=this.readUint16(),x!==42)throw new Error("not a TIFF file");this._nextIFD=this.readUint32()}decodeIFD(x){this.seek(this._nextIFD);var D;x.kind?D=new t(x.kind):D=new n;const y=this.readUint16();for(var E=0;E<y;E++)this.decodeIFDEntry(D);return x.ignoreImageData||this.decodeImageData(D),this._nextIFD=this.readUint32(),D}decodeIFDEntry(x){const D=this.offset,y=this.readUint16(),E=this.readUint16(),F=this.readUint32();if(E<1||E>12){this.skip(4);return}r.getByteLength(E,F)>4&&this.seek(this.readUint32());const M=r.readData(this,E,F);if(x.fields.set(y,M),y===34665||y===34853){let k=this.offset,T;y===34665?T="exif":y===34853&&(T="gps"),this._nextIFD=M,x[T]=this.decodeIFD({kind:T,ignoreImageData:!0}),this.offset=k}this.seek(D),this.skip(12)}decodeImageData(x){const D=x.orientation;switch(D&&D!==1&&h("orientation",D),x.type){case 1:case 2:this.readStripData(x);break;default:h("image type",x.type);break}}readStripData(x){const D=x.width,y=x.height,E=p(x.bitsPerSample),F=x.sampleFormat;let B=D*y;const M=o(B,1,E,F),k=x.compression,N=x.rowsPerStrip*D,$=x.stripOffsets,R=x.stripByteCounts;for(var O=0,L=0;L<$.length;L++){var z=this.getStripData(k,$[L],R[L]),X=B>N?N:B;B-=X,E===8?O=l(M,z,O,X):E===16?O=c(M,z,O,X,this.isLittleEndian()):E===32&&F===3?O=f(M,z,O,X,this.isLittleEndian()):h("bitDepth",E)}x.data=M}getStripData(x,D,y){switch(x){case 1:return new DataView(this.buffer,D,y);case 2:case 32773:return h("Compression",x);default:throw new Error("invalid compression: "+x)}}}tiffDecoder=s;function o(g,x,D,y){return D===8?new Uint8Array(g*x):D===16?new Uint16Array(g*x):D===32&&y===3?new Float32Array(g*x):h("bit depth / sample format",D+" / "+y)}function l(g,x,D,y){for(var E=0;E<y;E++)g[D++]=x.getUint8(E);return D}function c(g,x,D,y,E){for(var F=0;F<y*2;F+=2)g[D++]=x.getUint16(F,E);return D}function f(g,x,D,y,E){for(var F=0;F<y*4;F+=4)g[D++]=x.getFloat32(F,E);return D}function h(g,x){throw new Error("Unsupported "+g+": "+x)}function p(g){if(g.length){const D=g;g=D[0];for(var x=0;x<D.length;x++)D[x]!==g&&h("bit depth",D)}return g}return tiffDecoder}var decode,hasRequiredDecode$1;function requireDecode$1(){if(hasRequiredDecode$1)return decode;hasRequiredDecode$1=1;const e=requireTiffDecoder();return decode=function(n,r){return new e(n,r).decode(r)},decode}var hasRequiredSrc$4;function requireSrc$4(){return hasRequiredSrc$4||(hasRequiredSrc$4=1,src$3.decode=requireDecode$1()),src$3}var decode_1,hasRequiredDecode;function requireDecode(){if(hasRequiredDecode)return decode_1;hasRequiredDecode=1;const e=requireIOBuffer(),t=requireSrc$4();function n(r){const i=new e(r),s={};if(i.setBigEndian(),i.readUint16()!==65496)throw new Error("SOI marker not found. Not a valid JPEG file");if(i.readUint16()===65505){i.readUint16();const c=i.readBytes(6);if(c[0]===69&&c[1]===120&&c[2]===105&&c[3]===102&&c[4]===0&&c[5]===0){const f=t.decode(i,{onlyFirst:!0,ignoreImageData:!0,offset:i.offset});s.exif=f}}return s}return decode_1=n,decode_1}var hasRequiredSrc$3;function requireSrc$3(){return hasRequiredSrc$3||(hasRequiredSrc$3=1,src$4.decode=requireDecode()),src$4}var srcExports$2=requireSrc$3(),imageType$1={exports:{}},fileType={exports:{}},hasRequiredFileType;function requireFileType(){return hasRequiredFileType||(hasRequiredFileType=1,function(module){const toBytes=e=>[...e].map(t=>t.charCodeAt(0)),xpiZipFilename=toBytes("META-INF/mozilla.rsa"),oxmlContentTypes=toBytes("[Content_Types].xml"),oxmlRels=toBytes("_rels/.rels");function readUInt64LE(e,t=0){let n=e[t],r=1,i=0;for(;++i<8;)r*=256,n+=e[t+i]*r;return n}const fileType=e=>{if(!(e instanceof Uint8Array||e instanceof ArrayBuffer||Buffer.isBuffer(e)))throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`Buffer\` or \`ArrayBuffer\`, got \`${typeof e}\``);const t=e instanceof Uint8Array?e:new Uint8Array(e);if(!(t&&t.length>1))return null;const n=(i,s)=>{s=Object.assign({offset:0},s);for(let o=0;o<i.length;o++)if(s.mask){if(i[o]!==(s.mask[o]&t[o+s.offset]))return!1}else if(i[o]!==t[o+s.offset])return!1;return!0},r=(i,s)=>n(toBytes(i),s);if(n([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(n([137,80,78,71,13,10,26,10]))return{ext:"png",mime:"image/png"};if(n([71,73,70]))return{ext:"gif",mime:"image/gif"};if(n([87,69,66,80],{offset:8}))return{ext:"webp",mime:"image/webp"};if(n([70,76,73,70]))return{ext:"flif",mime:"image/flif"};if((n([73,73,42,0])||n([77,77,0,42]))&&n([67,82],{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(n([73,73,42,0])||n([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(n([66,77]))return{ext:"bmp",mime:"image/bmp"};if(n([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(n([56,66,80,83]))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(n([80,75,3,4])){if(n([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30}))return{ext:"epub",mime:"application/epub+zip"};if(n(xpiZipFilename,{offset:30}))return{ext:"xpi",mime:"application/x-xpinstall"};if(r("mimetypeapplication/vnd.oasis.opendocument.text",{offset:30}))return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};if(r("mimetypeapplication/vnd.oasis.opendocument.spreadsheet",{offset:30}))return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};if(r("mimetypeapplication/vnd.oasis.opendocument.presentation",{offset:30}))return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"};const i=(c,f=0)=>c.findIndex((h,p,g)=>p>=f&&g[p]===80&&g[p+1]===75&&g[p+2]===3&&g[p+3]===4);let s=0,o=!1,l=null;do{const c=s+30;if(o||(o=n(oxmlContentTypes,{offset:c})||n(oxmlRels,{offset:c})),l||(r("word/",{offset:c})?l={ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}:r("ppt/",{offset:c})?l={ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"}:r("xl/",{offset:c})&&(l={ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"})),o&&l)return l;s=i(t,c)}while(s>=0);if(l)return l}if(n([80,75])&&(t[2]===3||t[2]===5||t[2]===7)&&(t[3]===4||t[3]===6||t[3]===8))return{ext:"zip",mime:"application/zip"};if(n([117,115,116,97,114],{offset:257}))return{ext:"tar",mime:"application/x-tar"};if(n([82,97,114,33,26,7])&&(t[6]===0||t[6]===1))return{ext:"rar",mime:"application/x-rar-compressed"};if(n([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(n([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(n([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(n([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(n([51,103,112,53])||n([0,0,0])&&n([102,116,121,112],{offset:4})&&(n([109,112,52,49],{offset:8})||n([109,112,52,50],{offset:8})||n([105,115,111,109],{offset:8})||n([105,115,111,50],{offset:8})||n([109,109,112,52],{offset:8})||n([77,52,86],{offset:8})||n([100,97,115,104],{offset:8})))return{ext:"mp4",mime:"video/mp4"};if(n([77,84,104,100]))return{ext:"mid",mime:"audio/midi"};if(n([26,69,223,163])){const i=t.subarray(4,4100),s=i.findIndex((o,l,c)=>c[l]===66&&c[l+1]===130);if(s!==-1){const o=s+3,l=c=>[...c].every((f,h)=>i[o+h]===f.charCodeAt(0));if(l("matroska"))return{ext:"mkv",mime:"video/x-matroska"};if(l("webm"))return{ext:"webm",mime:"video/webm"}}}if(n([0,0,0,20,102,116,121,112,113,116,32,32])||n([102,114,101,101],{offset:4})||n([102,116,121,112,113,116,32,32],{offset:4})||n([109,100,97,116],{offset:4})||n([109,111,111,118],{offset:4})||n([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(n([82,73,70,70])){if(n([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(n([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(n([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(n([48,38,178,117,142,102,207,17,166,217])){let i=30;do{const s=readUInt64LE(t,i+16);if(n([145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101],{offset:i})){if(n([64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43],{offset:i+24}))return{ext:"wma",mime:"audio/x-ms-wma"};if(n([192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43],{offset:i+24}))return{ext:"wmv",mime:"video/x-ms-asf"};break}i+=s}while(i+24<=t.length);return{ext:"asf",mime:"application/vnd.ms-asf"}}if(n([0,0,1,186])||n([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(n([102,116,121,112,51,103],{offset:4}))return{ext:"3gp",mime:"video/3gpp"};for(let i=0;i<2&&i<t.length-16;i++){if(n([73,68,51],{offset:i})||n([255,226],{offset:i,mask:[255,226]}))return{ext:"mp3",mime:"audio/mpeg"};if(n([255,228],{offset:i,mask:[255,228]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,248],{offset:i,mask:[255,252]}))return{ext:"mp2",mime:"audio/mpeg"};if(n([255,240],{offset:i,mask:[255,252]}))return{ext:"mp4",mime:"audio/mpeg"}}if(n([102,116,121,112,77,52,65],{offset:4}))return{ext:"m4a",mime:"audio/mp4"};if(n([79,112,117,115,72,101,97,100],{offset:28}))return{ext:"opus",mime:"audio/opus"};if(n([79,103,103,83]))return n([128,116,104,101,111,114,97],{offset:28})?{ext:"ogv",mime:"video/ogg"}:n([1,118,105,100,101,111,0],{offset:28})?{ext:"ogm",mime:"video/ogg"}:n([127,70,76,65,67],{offset:28})?{ext:"oga",mime:"audio/ogg"}:n([83,112,101,101,120,32,32],{offset:28})?{ext:"spx",mime:"audio/ogg"}:n([1,118,111,114,98,105,115],{offset:28})?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"};if(n([102,76,97,67]))return{ext:"flac",mime:"audio/x-flac"};if(n([77,65,67,32]))return{ext:"ape",mime:"audio/ape"};if(n([119,118,112,107]))return{ext:"wv",mime:"audio/wavpack"};if(n([35,33,65,77,82,10]))return{ext:"amr",mime:"audio/amr"};if(n([37,80,68,70]))return{ext:"pdf",mime:"application/pdf"};if(n([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if((t[0]===67||t[0]===70)&&n([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(n([123,92,114,116,102]))return{ext:"rtf",mime:"application/rtf"};if(n([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(n([119,79,70,70])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff",mime:"font/woff"};if(n([119,79,70,50])&&(n([0,1,0,0],{offset:4})||n([79,84,84,79],{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(n([76,80],{offset:34})&&(n([0,0,1],{offset:8})||n([1,0,2],{offset:8})||n([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(n([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(n([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(n([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(n([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(n([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(n([37,33]))return{ext:"ps",mime:"application/postscript"};if(n([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(n([83,81,76,105]))return{ext:"sqlite",mime:"application/x-sqlite3"};if(n([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(n([67,114,50,52]))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(n([77,83,67,70])||n([73,83,99,40]))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(n([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121]))return{ext:"deb",mime:"application/x-deb"};if(n([33,60,97,114,99,104,62]))return{ext:"ar",mime:"application/x-unix-archive"};if(n([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(n([31,160])||n([31,157]))return{ext:"Z",mime:"application/x-compress"};if(n([76,90,73,80]))return{ext:"lz",mime:"application/x-lzip"};if(n([208,207,17,224,161,177,26,225]))return{ext:"msi",mime:"application/x-msi"};if(n([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(n([71],{offset:4})&&(n([71],{offset:192})||n([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(n([66,76,69,78,68,69,82]))return{ext:"blend",mime:"application/x-blender"};if(n([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(n([0,0,0,12,106,80,32,32,13,10,135,10])){if(n([106,112,50,32],{offset:20}))return{ext:"jp2",mime:"image/jp2"};if(n([106,112,120,32],{offset:20}))return{ext:"jpx",mime:"image/jpx"};if(n([106,112,109,32],{offset:20}))return{ext:"jpm",mime:"image/jpm"};if(n([109,106,112,50],{offset:20}))return{ext:"mj2",mime:"image/mj2"}}if(n([70,79,82,77]))return{ext:"aif",mime:"audio/aiff"};if(r("<?xml "))return{ext:"xml",mime:"application/xml"};if(n([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(n([102,116,121,112],{offset:4})){if(n([109,105,102,49],{offset:8}))return{ext:"heic",mime:"image/heif"};if(n([109,115,102,49],{offset:8}))return{ext:"heic",mime:"image/heif-sequence"};if(n([104,101,105,99],{offset:8})||n([104,101,105,120],{offset:8}))return{ext:"heic",mime:"image/heic"};if(n([104,101,118,99],{offset:8})||n([104,101,118,120],{offset:8}))return{ext:"heic",mime:"image/heic-sequence"}}return n([171,75,84,88,32,49,49,187,13,10,26,10])?{ext:"ktx",mime:"image/ktx"}:n([68,73,67,77],{offset:128})?{ext:"dcm",mime:"application/dicom"}:n([77,80,43])?{ext:"mpc",mime:"audio/x-musepack"}:n([77,80,67,75])?{ext:"mpc",mime:"audio/x-musepack"}:n([66,69,71,73,78,58])?{ext:"ics",mime:"text/calendar"}:n([103,108,84,70,2,0,0,0])?{ext:"glb",mime:"model/gltf-binary"}:n([212,195,178,161])||n([161,178,195,212])?{ext:"pcap",mime:"application/vnd.tcpdump.pcap"}:null};module.exports=fileType,module.exports.default=fileType,Object.defineProperty(fileType,"minimumBytes",{value:4100}),module.exports.stream=readableStream=>new Promise((resolve,reject)=>{const stream=eval("require")("stream");readableStream.once("readable",()=>{const e=new stream.PassThrough,t=readableStream.read(module.exports.minimumBytes)||readableStream.read();try{e.fileType=fileType(t)}catch(n){reject(n)}readableStream.unshift(t),stream.pipeline?resolve(stream.pipeline(readableStream,e,()=>{})):resolve(readableStream.pipe(e))})})}(fileType)),fileType.exports}var hasRequiredImageType;function requireImageType(){if(hasRequiredImageType)return imageType$1.exports;hasRequiredImageType=1;const e=requireFileType(),t=new Set(["jpg","png","gif","webp","flif","cr2","tif","bmp","jxr","psd","ico","bpg","jp2","jpm","jpx","heic","cur","dcm"]),n=r=>{const i=e(r);return t.has(i&&i.ext)?i:null};return imageType$1.exports=n,imageType$1.exports.default=n,Object.defineProperty(n,"minimumBytes",{value:e.minimumBytes}),imageType$1.exports}var imageTypeExports=requireImageType();const imageType=getDefaultExportFromCjs(imageTypeExports);function guessStripByteCounts(e){if(e.compression!==1)throw new Error("missing mandatory StripByteCounts field in compressed image");const t=e.rowsPerStrip*e.width*e.samplesPerPixel*(e.bitsPerSample/8);return new Array(e.stripOffsets.length).fill(t)}function applyHorizontalDifferencing8Bit(e,t,n){let r=0;for(;r<e.length;){for(let i=n;i<t*n;i+=n)for(let s=0;s<n;s++)e[r+i+s]=e[r+i+s]+e[r+i-(n-s)]&255;r+=t*n}}function applyHorizontalDifferencing16Bit(e,t,n){let r=0;for(;r<e.length;){for(let i=n;i<t*n;i+=n)for(let s=0;s<n;s++)e[r+i+s]=e[r+i+s]+e[r+i-(n-s)]&65535;r+=t*n}}const tagsById$2={33434:"ExposureTime",33437:"FNumber",34850:"ExposureProgram",34852:"SpectralSensitivity",34855:"ISOSpeedRatings",34856:"OECF",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureBiasValue",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37396:"SubjectArea",37500:"MakerNote",37510:"UserComment",37520:"SubsecTime",37521:"SubsecTimeOriginal",37522:"SubsecTimeDigitized",40960:"FlashpixVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",40964:"RelatedSoundFile",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41492:"SubjectLocation",41493:"ExposureIndex",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFilm",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"CameraOwnerName",42033:"BodySerialNumber",42034:"LensSpecification",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42240:"Gamma"},tagsByName$2={};for(let e in tagsById$2)tagsByName$2[tagsById$2[e]]=Number(e);const exif=Object.freeze(Object.defineProperty({__proto__:null,tagsById:tagsById$2,tagsByName:tagsByName$2},Symbol.toStringTag,{value:"Module"})),tagsById$1={0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"},tagsByName$1={};for(let e in tagsById$1)tagsByName$1[tagsById$1[e]]=Number(e);const gps=Object.freeze(Object.defineProperty({__proto__:null,tagsById:tagsById$1,tagsByName:tagsByName$1},Symbol.toStringTag,{value:"Module"})),tagsById={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Threshholding",264:"CellWidth",265:"CellLength",266:"FillOrder",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",296:"ResolutionUnit",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",320:"ColorMap",338:"ExtraSamples",33432:"Copyright",269:"DocumentName",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",293:"T6Options",297:"PageNumber",301:"TransferFunction",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFDs",332:"InkSet",333:"InkNames",334:"NumberOfInks",336:"DotRange",337:"TargetPrinter",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"XMP",32781:"ImageID",34732:"ImageLayer",32932:"WangAnnotatio",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"ModelPixelScaleTag",33723:"IPTC",33918:"INGRPacketDataTag",33919:"INGRFlagRegisters",33920:"IrasBTransformationMatrix",33922:"ModelTiepointTag",34264:"ModelTransformationTag",34377:"Photoshop",34665:"ExifIFD",34675:"ICCProfile",34735:"GeoKeyDirectoryTag",34736:"GeoDoubleParamsTag",34737:"GeoAsciiParamsTag",34853:"GPSIFD",34908:"HylaFAXFaxRecvParams",34909:"HylaFAXFaxSubAddress",34910:"HylaFAXFaxRecvTime",37724:"ImageSourceData",40965:"InteroperabilityIFD",42112:"GDAL_METADATA",42113:"GDAL_NODATA",50215:"OceScanjobDescription",50216:"OceApplicationSelector",50217:"OceIdentificationNumber",50218:"OceImageLogicCharacteristics",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50784:"AliasLayerMetadata"},tagsByName={};for(let e in tagsById)tagsByName[tagsById[e]]=Number(e);const standard=Object.freeze(Object.defineProperty({__proto__:null,tagsById,tagsByName},Symbol.toStringTag,{value:"Module"})),tags={standard,exif,gps};class IFD{constructor(t){if(!t)throw new Error("missing kind");this.data=new Uint8Array,this.fields=new Map,this.kind=t,this._hasMap=!1,this._map={}}get(t){if(typeof t=="number")return this.fields.get(t);if(typeof t=="string")return this.fields.get(tags[this.kind].tagsByName[t]);throw new Error("expected a number or string")}get map(){if(!this._hasMap){const t=tags[this.kind].tagsById;for(let n of this.fields.keys())t[n]&&(this._map[t[n]]=this.fields.get(n));this._hasMap=!0}return this._map}}let types=new Map([[1,[1,readByte]],[2,[1,readASCII]],[3,[2,readShort]],[4,[4,readLong]],[5,[8,readRational]],[6,[1,readSByte]],[7,[1,readByte]],[8,[2,readSShort]],[9,[4,readSLong]],[10,[8,readSRational]],[11,[4,readFloat]],[12,[8,readDouble]]]);function getByteLength(e,t){const n=types.get(e);if(!n)throw new Error(`type not found: ${e}`);return n[0]*t}function readData(e,t,n){const r=types.get(t);if(!r)throw new Error(`type not found: ${t}`);return r[1](e,n)}function readByte(e,t){if(t===1)return e.readUint8();let n=new Uint8Array(t);for(let r=0;r<t;r++)n[r]=e.readUint8();return n}function readASCII(e,t){let n=[],r="";for(let i=0;i<t;i++){let s=String.fromCharCode(e.readUint8());s==="\0"?(n.push(r),r=""):r+=s}return n.length===1?n[0]:n}function readShort(e,t){if(t===1)return e.readUint16();let n=new Uint16Array(t);for(let r=0;r<t;r++)n[r]=e.readUint16();return n}function readLong(e,t){if(t===1)return e.readUint32();let n=new Uint32Array(t);for(let r=0;r<t;r++)n[r]=e.readUint32();return n}function readRational(e,t){if(t===1)return e.readUint32()/e.readUint32();let n=new Array(t);for(let r=0;r<t;r++)n[r]=e.readUint32()/e.readUint32();return n}function readSByte(e,t){if(t===1)return e.readInt8();let n=new Int8Array(t);for(let r=0;r<t;r++)n[r]=e.readInt8();return n}function readSShort(e,t){if(t===1)return e.readInt16();let n=new Int16Array(t);for(let r=0;r<t;r++)n[r]=e.readInt16();return n}function readSLong(e,t){if(t===1)return e.readInt32();let n=new Int32Array(t);for(let r=0;r<t;r++)n[r]=e.readInt32();return n}function readSRational(e,t){if(t===1)return e.readInt32()/e.readInt32();let n=new Array(t);for(let r=0;r<t;r++)n[r]=e.readInt32()/e.readInt32();return n}function readFloat(e,t){if(t===1)return e.readFloat32();let n=new Float32Array(t);for(let r=0;r<t;r++)n[r]=e.readFloat32();return n}function readDouble(e,t){if(t===1)return e.readFloat64();let n=new Float64Array(t);for(let r=0;r<t;r++)n[r]=e.readFloat64();return n}const CLEAR_CODE=256,EOI_CODE=257,TABLE_START=258,MIN_BIT_LENGTH=9;let stringTable=[];function initializeStringTable(){if(stringTable.length===0){for(let t=0;t<256;t++)stringTable.push([t]);const e=[];for(let t=256;t<4096;t++)stringTable.push(e)}}const andTable=[511,1023,2047,4095],bitJumps=[0,0,0,0,0,0,0,0,0,511,1023,2047,4095];class LzwDecoder{constructor(t){this.nextData=0,this.nextBits=0,this.bytePointer=0,this.tableLength=TABLE_START,this.currentBitLength=MIN_BIT_LENGTH,this.stripArray=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),this.outData=new IOBuffer(t.byteLength),this.initializeTable()}decode(){let t=0,n=0;for(;(t=this.getNextCode())!==EOI_CODE;)if(t===CLEAR_CODE){if(this.initializeTable(),t=this.getNextCode(),t===EOI_CODE)break;this.writeString(this.stringFromCode(t)),n=t}else if(this.isInTable(t))this.writeString(this.stringFromCode(t)),this.addStringToTable(this.stringFromCode(n).concat(this.stringFromCode(t)[0])),n=t;else{const i=this.stringFromCode(n).concat(this.stringFromCode(n)[0]);this.writeString(i),this.addStringToTable(i),n=t}const r=this.outData.toArray();return new DataView(r.buffer,r.byteOffset,r.byteLength)}initializeTable(){initializeStringTable(),this.tableLength=TABLE_START,this.currentBitLength=MIN_BIT_LENGTH}writeString(t){this.outData.writeBytes(t)}stringFromCode(t){return stringTable[t]}isInTable(t){return t<this.tableLength}addStringToTable(t){if(stringTable[this.tableLength++]=t,stringTable.length>4096)throw stringTable=[],new Error("LZW decoding error. Please open an issue at https://github.com/image-js/tiff/issues/new/choose (include a test image).");this.tableLength===bitJumps[this.currentBitLength]&&this.currentBitLength++}getNextCode(){this.nextData=this.nextData<<8|this.stripArray[this.bytePointer++]&255,this.nextBits+=8,this.nextBits<this.currentBitLength&&(this.nextData=this.nextData<<8|this.stripArray[this.bytePointer++]&255,this.nextBits+=8);const t=this.nextData>>this.nextBits-this.currentBitLength&andTable[this.currentBitLength-9];return this.nextBits-=this.currentBitLength,this.bytePointer>this.stripArray.length?257:t}}function decompressLzw(e){return new LzwDecoder(e).decode()}const dateTimeRegex=/^(\d{4}):(\d{2}):(\d{2}) (\d{2}):(\d{2}):(\d{2})$/;class TiffIfd extends IFD{constructor(){super("standard")}get size(){return this.width*this.height}get width(){return this.imageWidth}get height(){return this.imageLength}get components(){return this.samplesPerPixel}get date(){let t=new Date,n=dateTimeRegex.exec(this.dateTime);if(n===null)throw new Error(`invalid dateTime: ${this.dateTime}`);return t.setFullYear(Number(n[1]),Number(n[2])-1,Number(n[3])),t.setHours(Number(n[4]),Number(n[5]),Number(n[6])),t}get newSubfileType(){return this.get("NewSubfileType")}get imageWidth(){return this.get("ImageWidth")}get imageLength(){return this.get("ImageLength")}get bitsPerSample(){const t=this.get("BitsPerSample");return t&&typeof t!="number"?t[0]:t}get alpha(){const t=this.extraSamples;return t?t[0]!==0:!1}get associatedAlpha(){const t=this.extraSamples;return t?t[0]===1:!1}get extraSamples(){return alwaysArray(this.get("ExtraSamples"))}get compression(){return this.get("Compression")||1}get type(){return this.get("PhotometricInterpretation")}get fillOrder(){return this.get("FillOrder")||1}get documentName(){return this.get("DocumentName")}get imageDescription(){return this.get("ImageDescription")}get stripOffsets(){return alwaysArray(this.get("StripOffsets"))}get orientation(){return this.get("Orientation")}get samplesPerPixel(){return this.get("SamplesPerPixel")||1}get rowsPerStrip(){return this.get("RowsPerStrip")}get stripByteCounts(){return alwaysArray(this.get("StripByteCounts"))}get minSampleValue(){return this.get("MinSampleValue")||0}get maxSampleValue(){return this.get("MaxSampleValue")||Math.pow(2,this.bitsPerSample)-1}get xResolution(){return this.get("XResolution")}get yResolution(){return this.get("YResolution")}get planarConfiguration(){return this.get("PlanarConfiguration")||1}get resolutionUnit(){return this.get("ResolutionUnit")||2}get dateTime(){return this.get("DateTime")}get predictor(){return this.get("Predictor")||1}get sampleFormat(){return this.get("SampleFormat")||1}get sMinSampleValue(){return this.get("SMinSampleValue")||this.minSampleValue}get sMaxSampleValue(){return this.get("SMaxSampleValue")||this.maxSampleValue}get palette(){const t=2**this.bitsPerSample,n=this.get("ColorMap");if(!n)return;if(n.length!==3*t)throw new Error(`ColorMap size must be ${t}`);const r=[];for(let i=0;i<t;i++)r.push([n[i],n[i+t],n[i+2*t]]);return r}}function alwaysArray(e){return typeof e=="number"?[e]:e}function decompressZlib(e){const t=new Uint8Array(e.buffer,e.byteOffset,e.byteLength),n=inflate_1(t);return new DataView(n.buffer,n.byteOffset,n.byteLength)}const defaultOptions$3={ignoreImageData:!1,onlyFirst:!1};class TIFFDecoder extends IOBuffer{constructor(t){super(t),this._nextIFD=0}get isMultiPage(){let t=0;for(this.decodeHeader();this._nextIFD;)if(t++,this.decodeIFD({ignoreImageData:!0},!0),t===2)return!0;if(t===1)return!1;throw unsupported("ifdCount",t)}get pageCount(){let t=0;for(this.decodeHeader();this._nextIFD;)t++,this.decodeIFD({ignoreImageData:!0},!0);if(t>0)return t;throw unsupported("ifdCount",t)}decode(t={}){t=Object.assign({},defaultOptions$3,t);const n=[];for(this.decodeHeader();this._nextIFD;)if(n.push(this.decodeIFD(t,!0)),t.onlyFirst)return[n[0]];return n}decodeHeader(){const t=this.readUint16();if(t===18761)this.setLittleEndian();else if(t===19789)this.setBigEndian();else throw new Error(`invalid byte order: 0x${t.toString(16)}`);if(this.readUint16()!==42)throw new Error("not a TIFF file");this._nextIFD=this.readUint32()}decodeIFD(t,n){this.seek(this._nextIFD);let r;if(n)r=new TiffIfd;else{if(!t.kind)throw new Error("kind is missing");r=new IFD(t.kind)}const i=this.readUint16();for(let s=0;s<i;s++)this.decodeIFDEntry(r);if(!t.ignoreImageData){if(!(r instanceof TiffIfd))throw new Error("must be a tiff ifd");this.decodeImageData(r)}return this._nextIFD=this.readUint32(),r}decodeIFDEntry(t){const n=this.offset,r=this.readUint16(),i=this.readUint16(),s=this.readUint32();if(i<1||i>12){this.skip(4);return}getByteLength(i,s)>4&&this.seek(this.readUint32());const l=readData(this,i,s);if(t.fields.set(r,l),r===34665||r===34853){let c=this.offset,f="exif";r===34665?f="exif":r===34853&&(f="gps"),this._nextIFD=l,t[f]=this.decodeIFD({kind:f,ignoreImageData:!0},!1),this.offset=c}this.seek(n),this.skip(12)}decodeImageData(t){const n=t.orientation;if(n&&n!==1)throw unsupported("orientation",n);switch(t.type){case 0:case 1:case 2:case 3:this.readStripData(t);break;default:throw unsupported("image type",t.type)}if(this.applyPredictor(t),this.convertAlpha(t),t.type===0){const r=t.bitsPerSample,i=Math.pow(2,r)-1;for(let s=0;s<t.data.length;s++)t.data[s]=i-t.data[s]}}readStripData(t){const n=t.width,r=t.height,i=t.bitsPerSample,s=t.sampleFormat,o=n*r*t.samplesPerPixel,l=getDataArray(o,i,s),f=t.rowsPerStrip*n*t.samplesPerPixel,h=t.stripOffsets,p=t.stripByteCounts||guessStripByteCounts(t);let g=o,x=0;for(let D=0;D<h.length;D++){let y=new DataView(this.buffer,this.byteOffset+h[D],p[D]),E=g>f?f:g;g-=E;let F=y;switch(t.compression){case 1:break;case 5:{F=decompressLzw(y);break}case 8:{F=decompressZlib(y);break}case 2:throw unsupported("Compression","CCITT Group 3");case 32773:throw unsupported("Compression","PackBits");default:throw unsupported("Compression",t.compression)}x=this.fillUncompressed(i,s,l,F,x,E)}t.data=l}fillUncompressed(t,n,r,i,s,o){if(t===8)return fill8bit(r,i,s,o);if(t===16)return fill16bit(r,i,s,o,this.isLittleEndian());if(t===32&&n===3)return fillFloat32(r,i,s,o,this.isLittleEndian());throw unsupported("bitDepth",t)}applyPredictor(t){const n=t.bitsPerSample;switch(t.predictor){case 1:break;case 2:{if(n===8)applyHorizontalDifferencing8Bit(t.data,t.width,t.components);else if(n===16)applyHorizontalDifferencing16Bit(t.data,t.width,t.components);else throw new Error(`Horizontal differencing is only supported for images with a bit depth of ${n}`);break}default:throw new Error(`invalid predictor: ${t.predictor}`)}}convertAlpha(t){if(t.alpha&&t.associatedAlpha){const{data:n,components:r,maxSampleValue:i}=t;for(let s=0;s<n.length;s+=r){const o=n[s+r-1];for(let l=0;l<r-1;l++)n[s+l]=Math.round(n[s+l]*i/o)}}}}function getDataArray(e,t,n){if(t===8)return new Uint8Array(e);if(t===16)return new Uint16Array(e);if(t===32&&n===3)return new Float32Array(e);throw unsupported("bit depth / sample format",`${t} / ${n}`)}function fill8bit(e,t,n,r){for(let i=0;i<r;i++)e[n++]=t.getUint8(i);return n}function fill16bit(e,t,n,r,i){for(let s=0;s<r*2;s+=2)e[n++]=t.getUint16(s,i);return n}function fillFloat32(e,t,n,r,i){for(let s=0;s<r*4;s+=4)e[n++]=t.getFloat32(s,i);return n}function unsupported(e,t){return new Error(`Unsupported ${e}: ${t}`)}function decodeTIFF(e,t){return new TIFFDecoder(e).decode(t)}function matchAndCrop(e={}){let{algorithm:t="matchToPrevious",ignoreBorder:n=[0,0]}=e;this.checkProcessable("matchAndCrop",{bitDepth:[8,16]});let r=t==="matchToPrevious",i=this[0],s=[];s[0]={position:[0,0],image:this[0]};let o=[0,0];for(let g=1;g<this.length;g++){let x=i.getBestMatch(this[g],{border:n});s[g]={position:[x[0]+o[0],x[1]+o[1]],image:this[g]},r&&(o[0]+=x[0],o[1]+=x[1],i=this[g])}let l=0,c=0,f=0,h=0;for(let g=0;g<s.length;g++){let x=s[g];x.position[0]>l&&(l=x.position[0]),x.position[0]<c&&(c=x.position[0]),x.position[1]>f&&(f=x.position[1]),x.position[1]<h&&(h=x.position[1])}c=0-c,h=0-h;for(let g=0;g<s.length;g++){let x=s[g];x.crop=x.image.crop({x:l-x.position[0],y:f-x.position[1],width:i.width-c-l,height:i.height-h-f})}let p=[];for(let g=0;g<s.length;g++)p[g]=s[g].crop;return new Stack(p)}function min$2(){this.checkProcessable("min",{bitDepth:[8,16]});let e=this[0].min;for(let t=1;t<this.length;t++)for(let n=0;n<e.length;n++)e[n]=Math.min(e[n],this[t].min[n]);return e}function max$2(){this.checkProcessable("min",{bitDepth:[8,16]});let e=this[0].max;for(let t=1;t<this.length;t++)for(let n=0;n<e.length;n++)e[n]=Math.max(e[n],this[t].max[n]);return e}function median$2(e){let t=e.reduce((o,l)=>o+l);if(t===0)throw new Error("unreachable");let n=0,r=0,i=t/2,s;for(;;){if(e[n]>0){if(s!==void 0)return(s+n)/2;if(r+=e[n],r>i)return n;r===i&&(s=n)}n++}}function mean$2(e){let t=0,n=0;for(let r=0;r<e.length;r++)t+=e[r],n+=e[r]*r;return t===0?0:n/t}function median$1(){this.checkProcessable("median",{bitDepth:[8,16]});let e=this.getHistograms({maxSlots:this[0].maxValue+1}),t=new Array(e.length);for(let n=0;n<e.length;n++){let r=e[n];t[n]=median$2(r)}return t}function histogram(e){this.checkProcessable("min",{bitDepth:[8,16]});let t=this[0].getHistogram(e);for(let n=1;n<this.length;n++){let r=this[n].getHistogram(e);for(let i=0;i<t.length;i++)t[i]+=r[i]}return t}function histograms(e){this.checkProcessable("min",{bitDepth:[8,16]});let t=this[0].getHistograms(e),n=t[0].length;for(let r=1;r<this.length;r++){let i=this[r].getHistograms(e);for(let s=0;s<t.length;s++)for(let o=0;o<n;o++)t[s][o]+=i[s][o]}return t}function averageImage(){this.checkProcessable("averageImage",{bitDepth:[8,16]});let e=new Uint32Array(this[0].data.length);for(let r=0;r<this.length;r++){let i=this[r];for(let s=0;s<this[0].data.length;s++)e[s]+=i.data[s]}let t=Image.createFrom(this[0]),n=t.data;for(let r=0;r<this[0].data.length;r++)n[r]=e[r]/this.length;return t}function maxImage(){this.checkProcessable("max",{bitDepth:[8,16]});let e=Image.createFrom(this[0]);e.data.fill(0);for(const t of this)for(let n=0;n<e.data.length;n++)e.data[n]=Math.max(t.data[n],e.data[n]);return e}function minImage(){this.checkProcessable("max",{bitDepth:[8,16]});let e=Image.createFrom(this[0]);e.data.fill(e.maxValue);for(const t of this)for(let n=0;n<e.data.length;n++)e.data[n]=Math.min(t.data[n],e.data[n]);return e}function extend$2(e){e.extendMethod("matchAndCrop",matchAndCrop),e.extendMethod("getMin",min$2),e.extendMethod("getMax",max$2),e.extendMethod("getMedian",median$1),e.extendMethod("getHistogram",histogram),e.extendMethod("getHistograms",histograms),e.extendMethod("getAverage",averageImage),e.extendMethod("getAverageImage",averageImage),e.extendMethod("getMaxImage",maxImage),e.extendMethod("getMinImage",minImage)}let computedPropertyDescriptor={configurable:!0,enumerable:!1,get:void 0};class Stack extends Array{constructor(t){if(Array.isArray(t)){super(t.length);for(let n=0;n<t.length;n++)this[n]=t[n]}else typeof t=="number"?super(t):super();this.computed=null}static load(t){return Promise.all(t.map(Image.load)).then(n=>new Stack(n))}static extendMethod(t,n,r={}){let{inPlace:i=!1,returnThis:s=!0,partialArgs:o=[]}=r;return i?Stack.prototype[t]=function(...l){this.computed=null;let c=n.apply(this,[...o,...l]);return s?this:c}:Stack.prototype[t]=function(...l){return n.apply(this,[...o,...l])},Stack}static extendProperty(t,n,r={}){let{partialArgs:i=[]}=r;return computedPropertyDescriptor.get=function(){if(this.computed===null)this.computed={};else if(hasOwn(t,this.computed))return this.computed[t];let s=n.apply(this,i);return this.computed[t]=s,s},Object.defineProperty(Stack.prototype,t,computedPropertyDescriptor),Stack}checkProcessable(t,n={}){if(typeof t!="string")throw new TypeError("checkProcessable requires as first parameter the processName (a string)");if(this.size===0)throw new TypeError(`The process: ${t} can not be applied on an empty stack`);this[0].checkProcessable(t,n);for(let r=1;r<this.length;r++){if((n.sameSize===void 0||n.sameSize)&&this[0].width!==this[r].width)throw new TypeError(`The process: ${t} can not be applied if width is not identical in all images`);if((n.sameSize===void 0||n.sameSize)&&this[0].height!==this[r].height)throw new TypeError(`The process: ${t} can not be applied if height is not identical in all images`);if((n.sameAlpha===void 0||n.sameAlpha)&&this[0].alpha!==this[r].alpha)throw new TypeError(`The process: ${t} can not be applied if alpha is not identical in all images`);if((n.sameBitDepth===void 0||n.sameBitDepth)&&this[0].bitDepth!==this[r].bitDepth)throw new TypeError(`The process: ${t} can not be applied if bitDepth is not identical in all images`);if((n.sameColorModel===void 0||n.sameColorModel)&&this[0].colorModel!==this[r].colorModel)throw new TypeError(`The process: ${t} can not be applied if colorModel is not identical in all images`);if((n.sameNumberChannels===void 0||n.sameNumberChannels)&&this[0].channels!==this[r].channels)throw new TypeError(`The process: ${t} can not be applied if channels is not identical in all images`)}}}Array[Symbol.species]||(Stack.prototype.map=function(e,t){if(typeof e!="function")throw new TypeError(`${e} is not a function`);let n=new Stack(this.length);for(let r=0;r<this.length;r++)n[r]=e.call(t,this[r],r,this);return n});extend$2(Stack);const isDataURL=/^data:[a-z]+\/(?:[a-z]+);base64,/;function load(e,t){if(typeof e=="string")return loadURL(e,t);if(e instanceof ArrayBuffer)return Promise.resolve(loadBinary(new Uint8Array(e),void 0,t&&t.ignorePalette));if(e.buffer)return Promise.resolve(loadBinary(e,void 0,t&&t.ignorePalette));throw new Error('argument to "load" must be a string or buffer.')}function loadBinary(e,t,n){const r=imageType(e);if(r)switch(r.mime){case"image/png":return loadPNG(e);case"image/jpeg":return loadJPEG(e);case"image/tiff":return loadTIFF(e,n);default:return loadGeneric(i(r.mime))}return loadGeneric(i("application/octet-stream"));function i(s){return t||toBase64URL(e,s)}}function loadURL(e,t){const n=e.slice(0,64).match(isDataURL);let r;return n!==null?r=Promise.resolve(decode$1(e.slice(n[0].length))):r=fetchBinary(e,t),r.then(i=>{const s=new Uint8Array(i);return loadBinary(s,n?e:void 0,t&&t.ignorePalette)})}function loadPNG(e){const t=decodePng(e);let n=t.channels,r,i=0;return n===2||n===4?(r=n-1,i=1):r=n,t.palette?loadPNGFromPalette(t):new Image(t.width,t.height,t.data,{components:r,alpha:i,bitDepth:t.depth,meta:{text:t.text}})}function loadPNGFromPalette(e){const t=e.width*e.height,n=e.palette[0].length,r=new Uint8Array(t*n),i=8/e.depth,s=e.depth<8?i:1,o=parseInt("1".repeat(e.depth),2),l=n===4;let c=0;for(let f=0;f<t;f++){const h=Math.floor(f/s);let p=e.data[h];e.depth<8&&(p=p>>>e.depth*(i-1-f%i)&o);const g=e.palette[p];r[c++]=g[0],r[c++]=g[1],r[c++]=g[2],l&&(r[c++]=g[3])}return new Image(e.width,e.height,r,{components:3,alpha:l,bitDepth:8})}function loadJPEG(e){const t=srcExports$2.decode(e);let n;t.exif&&(n=getMetadata(t.exif));const r=jpegJsExports.decode(e,{useTArray:!0,maxMemoryUsageInMB:1024});let i=new Image(r.width,r.height,r.data,{meta:n});if(n&&n.tiff.tags.Orientation){const s=n.tiff.tags.Orientation;s>2&&(i=i.rotate({3:180,4:180,5:90,6:90,7:270,8:270}[s])),[2,4,5,7].includes(s)&&(i=i.flipX())}return i}function loadTIFF(e,t){let n=decodeTIFF(e);return n.length===1?getImageFromIFD(n[0],t):new Stack(n.map(function(r){return getImageFromIFD(r,t)}))}function getMetadata(e){const t={tiff:{fields:e.fields,tags:e.map}};return e.exif&&(t.exif=e.exif),e.gps&&(t.gps=e.gps),t}function getImageFromIFD(e,t){if(!t&&e.type===3){const n=new Uint16Array(3*e.width*e.height),r=e.palette;let i=0;for(let s=0;s<e.data.length;s++){const o=e.data[s],l=r[o];n[i++]=l[0],n[i++]=l[1],n[i++]=l[2]}return new Image(e.width,e.height,n,{components:3,alpha:e.alpha,colorModel:RGB$1,bitDepth:16,meta:getMetadata(e)})}else return new Image(e.width,e.height,e.data,{components:e.type===2?3:1,alpha:e.alpha,colorModel:e.type===2?RGB$1:GREY$1,bitDepth:e.bitsPerSample.length?e.bitsPerSample[0]:e.bitsPerSample,meta:getMetadata(e)})}function loadGeneric(e,t){return t=t||{},new Promise(function(n,r){let i=new DOMImage;i.onload=function(){let s=i.width,o=i.height,c=createCanvas(s,o).getContext("2d");c.drawImage(i,0,0,s,o);let f=c.getImageData(0,0,s,o).data;n(new Image(s,o,f,t))},i.onerror=function(){r(new Error(`Could not load ${e}`))},i.src=e})}const valueMethods={getValueXY(e,t,n){return this.data[(t*this.width+e)*this.channels+n]},setValueXY(e,t,n,r){return this.data[(t*this.width+e)*this.channels+n]=r,this.computed=null,this},getValue(e,t){return this.data[e*this.channels+t]},setValue(e,t,n){return this.data[e*this.channels+t]=n,this.computed=null,this},getPixelXY(e,t){return this.getPixel(t*this.width+e)},setPixelXY(e,t,n){return this.setPixel(t*this.width+e,n)},getPixel(e){const t=new Array(this.channels),n=e*this.channels;for(let r=0;r<this.channels;r++)t[r]=this.data[n+r];return t},setPixel(e,t){const n=e*this.channels;for(let r=0;r<t.length;r++)this.data[n+r]=t[r];return this.computed=null,this}};function setValueMethods(e){for(const t in valueMethods)e.prototype[t]=valueMethods[t]}function getImageParameters(e){return{width:e.width,height:e.height,components:e.components,alpha:e.alpha,colorModel:e.colorModel,bitDepth:e.bitDepth}}function getOutputImage(e,t,n,r={}){const{out:i}=t;if(i===void 0)return r.copy?e.clone():Image.createFrom(e,n);{if(!Image.isImage(i))throw new TypeError("out must be an Image object");const s=Object.assign(getImageParameters(e),n);for(const o in s)if(i[o]!==s[o])throw new RangeError(`cannot use out. Its ${o} must be "${s[o]}" (found "${i[o]}")`);return i}}function getOutputImageOrInPlace(e,t,n){if(t.inPlace!==void 0&&typeof t.inPlace!="boolean")throw new TypeError("inPlace option must be a boolean");if(t.inPlace){if(t.out!==void 0)throw new TypeError("out option must not be set if inPlace option is true");return e}return getOutputImage(e,t,null,n)}function abs(e={}){this.checkProcessable("abs",{bitDepth:[32]});const t=getOutputImageOrInPlace(this,e);return absolute(this,t),t}function absolute(e,t){for(let n=0;n<e.data.length;n++)t.data[n]=Math.abs(e.data[n])}function copyAlphaChannel(e,t){if(e.alpha===1&&t.alpha===1)for(let n=0;n<e.size;n++)t.data[n*t.channels+t.components]=e.data[n*e.channels+e.components]}function invert(e={}){this.checkProcessable("invert",{bitDepth:[1,8,16]});const t=getOutputImageOrInPlace(this,e);return this.bitDepth===1?invertBinary(this,t):(invertColor(this,t),this!==t&&copyAlphaChannel(this,t)),t}function invertBinary(e,t){for(let n=0;n<e.data.length;n++)t.data[n]=~e.data[n]}function invertColor(e,t){for(let n=0;n<e.data.length;n+=e.channels)for(let r=0;r<e.components;r++)t.data[n+r]=e.maxValue-e.data[n+r]}function flipX(){this.checkProcessable("flipX",{bitDepth:[8,16]});for(let e=0;e<this.height;e++){let t=e*this.width*this.channels;for(let n=0;n<Math.floor(this.width/2);n++){let r=n*this.channels+t,i=(this.width-n-1)*this.channels+t;for(let s=0;s<this.channels;s++){let o=this.data[r+s];this.data[r+s]=this.data[i+s],this.data[i+s]=o}}}return this}function flipY(){this.checkProcessable("flipY",{bitDepth:[8,16]});for(let e=0;e<Math.floor(this.height/2);e++)for(let t=0;t<this.width;t++){let n=t*this.channels+e*this.width*this.channels,r=t*this.channels+(this.height-1-e)*this.channels*this.width;for(let i=0;i<this.channels;i++){let s=this.data[n+i];this.data[n+i]=this.data[r+i],this.data[r+i]=s}}return this}function blurFilter(e={}){const{radius:t=1}=e;if(t<1)throw new Error("radius must be greater than 1");const n=2*t+1,r=new Array(n);for(let i=0;i<n;i++){r[i]=new Array(n);for(let s=0;s<n;s++)r[i][s]=1/(n*n)}return this.convolution(r)}var medianQuickselect_min={exports:{}},hasRequiredMedianQuickselect_min;function requireMedianQuickselect_min(){return hasRequiredMedianQuickselect_min||(hasRequiredMedianQuickselect_min=1,function(e){(function(){function t(i){for(var s=0,o=i.length-1,l=void 0,c=void 0,f=void 0,h=r(s,o);;){if(o<=s)return i[h];if(o==s+1)return i[s]>i[o]&&n(i,s,o),i[h];for(l=r(s,o),i[l]>i[o]&&n(i,l,o),i[s]>i[o]&&n(i,s,o),i[l]>i[s]&&n(i,l,s),n(i,l,s+1),c=s+1,f=o;;){do c++;while(i[s]>i[c]);do f--;while(i[f]>i[s]);if(f<c)break;n(i,c,f)}n(i,s,f),f<=h&&(s=c),f>=h&&(o=f-1)}}var n=function(s,o,l){var c;return c=[s[l],s[o]],s[o]=c[0],s[l]=c[1],c},r=function(s,o){return~~((s+o)/2)};e.exports?e.exports=t:window.median=t})()}(medianQuickselect_min)),medianQuickselect_min.exports}var medianQuickselect_minExports=requireMedianQuickselect_min();const quickSelectMedian=getDefaultExportFromCjs(medianQuickselect_minExports);function validateArrayOfChannels(e,t={}){let{channels:n,allowAlpha:r,defaultAlpha:i}=t;return typeof r!="boolean"&&(r=!0),typeof n>"u"?allChannels(e,i):validateChannels(e,n,r)}function allChannels(e,t){let n=t?e.channels:e.components,r=new Array(n);for(let i=0;i<n;i++)r[i]=i;return r}function validateChannels(e,t,n){Array.isArray(t)||(t=[t]);for(let r=0;r<t.length;r++)t[r]=validateChannel(e,t[r],n);return t}function validateChannel(e,t,n=!0){if(t===void 0)throw new RangeError(`validateChannel : the channel has to be >=0 and <${e.channels}`);if(typeof t=="string"){switch(e.colorModel){case GREY$1:break;case RGB$1:if("rgb".includes(t))switch(t){case"r":t=0;break;case"g":t=1;break;case"b":t=2;break}break;case HSL:if("hsl".includes(t))switch(t){case"h":t=0;break;case"s":t=1;break;case"l":t=2;break}break;case HSV:if("hsv".includes(t))switch(t){case"h":t=0;break;case"s":t=1;break;case"v":t=2;break}break;case CMYK$1:if("cmyk".includes(t))switch(t){case"c":t=0;break;case"m":t=1;break;case"y":t=2;break;case"k":t=3;break}break;default:throw new Error(`Unexpected color model: ${e.colorModel}`)}if(t==="a"){if(!e.alpha)throw new Error("validateChannel : the image does not contain alpha channel");t=e.components}if(typeof t=="string")throw new Error(`validateChannel : undefined channel: ${t}`)}if(t>=e.channels)throw new RangeError(`validateChannel : the channel has to be >=0 and <${e.channels}`);if(!n&&t>=e.components)throw new RangeError("validateChannel : alpha channel may not be selected");return t}function medianFilter(e={}){let{radius:t=1,border:n="copy",channels:r}=e;if(this.checkProcessable("medianFilter",{bitDepth:[8,16]}),t<1)throw new Error("radius must be greater than 0");r=validateArrayOfChannels(this,r);let i=t,s=t,o=Image.createFrom(this),l=(i*2+1)*(s*2+1),c=new Array(l);for(let f=0;f<r.length;f++){let h=r[f];for(let p=s;p<this.height-s;p++)for(let g=i;g<this.width-i;g++){let x=0;for(let y=-s;y<=s;y++)for(let E=-i;E<=i;E++){let F=((p+y)*this.width+g+E)*this.channels+h;c[x++]=this.data[F]}let D=(p*this.width+g)*this.channels+h;o.data[D]=quickSelectMedian(c)}}if(this.alpha&&!r.includes(this.channels))for(let f=this.components;f<this.data.length;f=f+this.channels)o.data[f]=this.data[f];return o.setBorder({size:[i,s],algorithm:n}),o}function gaussianFilter(e={}){let{radius:t=1,sigma:n,channels:r,border:i="copy"}=e;this.checkProcessable("gaussian",{bitDepth:[8,16]});const s=getKernel(t,n);return this.convolution([s,s],{border:i,channels:r,algorithm:"separable"})}function getKernel(e,t){const n=e*2+1,r=new Array(n),i=t||((n-1)*.5-1)*.3+.8,s=-.5/(i*i);let o=0;for(let l=0;l<n;l++){const c=l-e,f=Math.exp(s*c*c);r[l]=f,o+=f}for(let l=0;l<n;l++)r[l]/=o;return r}const SOBEL_X=[[-1,0,1],[-2,0,2],[-1,0,1]],SOBEL_Y=[[-1,-2,-1],[0,0,0],[1,2,1]],SCHARR_X=[[3,0,-3],[10,0,-10],[3,0,-3]],SCHARR_Y=[[3,10,3],[0,0,0],[-3,-10,-3]];var src$2={},fftlib={},hasRequiredFftlib;function requireFftlib(){return hasRequiredFftlib||(hasRequiredFftlib=1,function(e){(function(){var t;t=e;var n={release:"0.3.0",date:"2013-03"};t.toString=function(){return"version "+n.release+", released "+n.date};for(var r=0,i=null,s=null,o={init:function(f){if(f!==0&&!(f&f-1))r=f,o._initArray(),o._makeBitReversalTable(),o._makeCosSinTable();else throw new Error("init: radix-2 required")},fft1d:function(f,h){o.fft(f,h,1)},ifft1d:function(f,h){var p=1/r;o.fft(f,h,-1);for(var g=0;g<r;g++)f[g]*=p,h[g]*=p},bt1d:function(f,h){o.fft(f,h,-1)},fft2d:function(f,h){for(var p=[],g=[],x=0,D=0;D<r;D++){x=D*r;for(var y=0;y<r;y++)p[y]=f[y+x],g[y]=h[y+x];o.fft1d(p,g);for(var E=0;E<r;E++)f[E+x]=p[E],h[E+x]=g[E]}for(var F=0;F<r;F++){for(var B=0;B<r;B++)x=F+B*r,p[B]=f[x],g[B]=h[x];o.fft1d(p,g);for(var M=0;M<r;M++)x=F+M*r,f[x]=p[M],h[x]=g[M]}},ifft2d:function(f,h){for(var p=[],g=[],x=0,D=0;D<r;D++){x=D*r;for(var y=0;y<r;y++)p[y]=f[y+x],g[y]=h[y+x];o.ifft1d(p,g);for(var E=0;E<r;E++)f[E+x]=p[E],h[E+x]=g[E]}for(var F=0;F<r;F++){for(var B=0;B<r;B++)x=F+B*r,p[B]=f[x],g[B]=h[x];o.ifft1d(p,g);for(var M=0;M<r;M++)x=F+M*r,f[x]=p[M],h[x]=g[M]}},fft:function(f,h,p){for(var g,x,D,y,E,F,B,M,k,T=r>>2,N=0;N<r;N++)y=i[N],N<y&&(E=f[N],f[N]=f[y],f[y]=E,E=h[N],h[N]=h[y],h[y]=E);for(var $=1;$<r;$<<=1){x=0,g=r/($<<1);for(var R=0;R<$;R++){F=s[x+T],B=p*s[x];for(var O=R;O<r;O+=$<<1)D=O+$,M=F*f[D]+B*h[D],k=F*h[D]-B*f[D],f[D]=f[O]-M,f[O]+=M,h[D]=h[O]-k,h[O]+=k;x+=g}}},_initArray:function(){typeof Uint32Array<"u"?i=new Uint32Array(r):i=[],typeof Float64Array<"u"?s=new Float64Array(r*1.25):s=[]},_paddingZero:function(){},_makeBitReversalTable:function(){var f=0,h=0,p=0;for(i[0]=0;++f<r;){for(p=r>>1;p<=h;)h-=p,p>>=1;h+=p,i[f]=h}},_makeCosSinTable:function(){var f=r>>1,h=r>>2,p=r>>3,g=f+h,x=Math.sin(Math.PI/r),D=2*x*x,y=Math.sqrt(D*(2-D)),E=s[h]=1,F=s[0]=0;x=2*D;for(var B=1;B<p;B++)E-=D,D+=x*E,F+=y,y-=x*F,s[B]=F,s[h-B]=E;p!==0&&(s[p]=Math.sqrt(.5));for(var M=0;M<h;M++)s[f-M]=s[M];for(var k=0;k<g;k++)s[k+f]=-s[k]}},l=["init","fft1d","ifft1d","fft2d","ifft2d"],c=0;c<l.length;c++)t[l[c]]=o[l[c]];return t.bt=o.bt1d,t.fft=o.fft1d,t.ifft=o.ifft1d,t}).call(fftlib)}(fftlib)),fftlib}var FFTUtils_1,hasRequiredFFTUtils;function requireFFTUtils(){if(hasRequiredFFTUtils)return FFTUtils_1;hasRequiredFFTUtils=1;var e=requireFftlib(),t={DEBUG:!1,ifft2DArray:function(n,r,i){var s=new Array(r*i),o=r/2,l=(i-1)*2;e.init(o);for(var c={re:new Array(o),im:new Array(o)},f=0;f<i;f++){for(var h=o-1;h>=0;h--)c.re[h]=n[h*2*i+f],c.im[h]=n[(h*2+1)*i+f];e.bt(c.re,c.im);for(var h=o-1;h>=0;h--)s[h*2*i+f]=c.re[h],s[(h*2+1)*i+f]=c.im[h]}var p=new Array(o*l);e.init(l);for(var g={re:new Array(l),im:new Array(l)},x=l*o,h=0;h<r;h+=2){g.re[0]=s[h*i],g.im[0]=s[(h+1)*i];for(var f=1;f<i;f++)g.re[f]=s[h*i+f],g.im[f]=s[(h+1)*i+f],g.re[l-f]=s[h*i+f],g.im[l-f]=-s[(h+1)*i+f];e.bt(g.re,g.im);for(var D=h/2*l,f=l-1;f>=0;f--)p[D+f]=g.re[f]/x}return p},fft2DArray:function(n,r,i,s){Object.assign({},{inplace:!0});var o=i/2+1,l=r*2,c=new Array(l*o);e.init(i);for(var f={re:new Array(i),im:new Array(i)},h={re:new Array(i),im:new Array(i)},p={re:new Array(i),im:new Array(i)},g,x,D,y,E,F=0;F<r/2;F++){g=F*2*i,f.re=n.slice(g,g+i),g=(F*2+1)*i,f.im=n.slice(g,g+i),e.fft1d(f.re,f.im),this.reconstructTwoRealFFT(f,h,p),x=F*4*o,D=(F*4+1)*o,y=(F*4+2)*o,E=(F*4+3)*o;for(var B=o-1;B>=0;B--)c[x+B]=h.re[B],c[D+B]=h.im[B],c[y+B]=p.re[B],c[E+B]=p.im[B]}h=null,p=null;var M=new Array(l*o);e.init(r);for(var k={re:new Array(r),im:new Array(r)},T=o-1;T>=0;T--){for(var F=r-1;F>=0;F--)k.re[F]=c[F*2*o+T],k.im[F]=c[(F*2+1)*o+T],isNaN(k.re[F])&&(k.re[F]=0),isNaN(k.im[F])&&(k.im[F]=0);e.fft1d(k.re,k.im);for(var F=r-1;F>=0;F--)M[F*2*o+T]=k.re[F],M[(F*2+1)*o+T]=k.im[F]}return M},reconstructTwoRealFFT:function(n,r,i){var s=n.re.length;r.re[0]=n.re[0],r.im[0]=0,i.re[0]=n.im[0],i.im[0]=0;for(var o,l,c,f,h,p=s/2;p>0;p--)h=s-p,o=.5*(n.re[p]-n.re[h]),l=.5*(n.re[p]+n.re[h]),c=.5*(n.im[p]-n.im[h]),f=.5*(n.im[p]+n.im[h]),r.re[p]=l,r.im[p]=c,r.re[h]=l,r.im[h]=-c,i.re[p]=f,i.im[p]=-o,i.re[h]=f,i.im[h]=o},convolute2DI:function(n,r,i,s){for(var o,l,c=0;c<i/2;c++)for(var f=0;f<s;f++)o=n[c*2*s+f]*r[c*2*s+f]-n[(c*2+1)*s+f]*r[(c*2+1)*s+f],l=n[c*2*s+f]*r[(c*2+1)*s+f]+n[(c*2+1)*s+f]*r[c*2*s+f],n[c*2*s+f]=o,n[(c*2+1)*s+f]=l},convolute:function(n,r,i,s,o){for(var l=new Array(s*i),c=0;c<i*s;c++)l[c]=n[c];l=this.fft2DArray(l,i,s);for(var f=r.length,h=r[0].length,p=new Array(s*i),c=0;c<s*i;c++)p[c]=0;for(var g,x,D=Math.floor((f-1)/2),y=Math.floor((h-1)/2),E=0;E<f;E++){g=(E-D+i)%i;for(var F=0;F<h;F++)x=(F-y+s)%s,p[g*s+x]=r[E][F]}p=this.fft2DArray(p,i,s);var B=i*2,M=s/2+1;return this.convolute2DI(l,p,B,M),this.ifft2DArray(l,B,M)},toRadix2:function(n,r,i){var s,o,l,c,f=i,h=r;if(!(i!==0&&!(i&i-1))){for(f=0;i>>++f;);f=1<<f}if(!(r!==0&&!(r&r-1))){for(h=0;r>>++h;);h=1<<h}if(h==r&&f==i)return{data:n,rows:r,cols:i};var p=new Array(h*f),g=Math.floor((h-r)/2)-r,x=Math.floor((f-i)/2)-i;for(s=0;s<h;s++)for(l=s*f,c=(s-g)%r*i,o=0;o<f;o++)p[l+o]=n[c+(o-x)%i];return{data:p,rows:h,cols:f}},crop:function(n,r,i,s,o,l){if(r==s&&i==o)return n;Object.assign({},l);var c=new Array(o*s),f=Math.floor((r-s)/2),h=Math.floor((i-o)/2),p,g,x,D;for(x=0;x<s;x++)for(p=x*o,g=(x+f)*i,D=0;D<o;D++)c[p+D]=n[g+(D+h)];return c}};return FFTUtils_1=t,FFTUtils_1}var hasRequiredSrc$2;function requireSrc$2(){return hasRequiredSrc$2||(hasRequiredSrc$2=1,src$2.FFTUtils=requireFFTUtils(),src$2.FFT=requireFftlib()),src$2}var src$1,hasRequiredSrc$1;function requireSrc$1(){if(hasRequiredSrc$1)return src$1;hasRequiredSrc$1=1;var e=requireSrc$2().FFTUtils;function t(s,o,l){var c=i(s),f=c.data,h=Object.assign({normalize:!1,divisor:1,rows:c.rows,cols:c.cols},l),p,g;if(h.rows&&h.cols)p=h.rows,g=h.cols;else throw new Error("Invalid number of rows or columns "+p+" "+g);var x=h.divisor,D,y,E=o.length,F=o[0].length;if(h.normalize)for(x=0,D=0;D<E;D++)for(y=0;y<F;y++)x+=o[D][y];if(x===0)throw new RangeError("convolution: The divisor is equal to zero");var B=e.toRadix2(f,p,g),M=e.convolute(B.data,o,B.rows,B.cols);if(M=e.crop(M,B.rows,B.cols,p,g),x!=0&&x!=1)for(D=0;D<M.length;D++)M[D]/=x;return M}function n(s,o,l){var c=i(s),f=c.data,h=Object.assign({normalize:!1,divisor:1,rows:c.rows,cols:c.cols},l),p,g;if(h.rows&&h.cols)p=h.rows,g=h.cols;else throw new Error("Invalid number of rows or columns "+p+" "+g);var x=h.divisor,D=o.length,y=o[0].length,E,F,B,M,k,T,N,$,R;if(h.normalize)for(x=0,E=0;E<D;E++)for(F=0;F<y;F++)x+=o[E][F];if(x===0)throw new RangeError("convolution: The divisor is equal to zero");var O=new Array(p*g),L=Math.floor(D/2),z=Math.floor(y/2);for(M=0;M<p;M++)for(B=0;B<g;B++){for(T=0,F=0;F<D;F++)for(E=0;E<y;E++)N=o[D-F-1][y-E-1],$=(M+F-L+p)%p,R=(B+E-z+g)%g,k=$*g+R,T+=f[k]*N;k=M*g+B,O[k]=T/x}return O}function r(s,o,l){var c=1e3;l&&l.factor&&(c=l.factor);var f=new Array(o),h,p,g,x;c*=-1;var D=(o-1)/2,y=2*s*s;for(h=0;h<o;h++)for(f[h]=new Array(o),x=(h-D)*(h-D),p=0;p<o;p++)g=-((p-D)*(p-D)+x)/y,f[h][p]=Math.round(c*(1+g)*Math.exp(g));return f}function i(s){var o=s,l,c;if(typeof s[0]!="number"){l=s.length,c=s[0].length,o=new Array(l*c);for(var f=0;f<l;f++)for(var h=0;h<c;h++)o[f*c+h]=s[f][h]}else{var p=Math.sqrt(s.length);Number.isInteger(p)&&(l=p,c=p)}return{data:o,rows:l,cols:c}}return src$1={fft:t,direct:n,kernelFactory:{LoG:r},matrix2Array:i},src$1}var srcExports$1=requireSrc$1(),_isFinite,hasRequired_isFinite;function require_isFinite(){return hasRequired_isFinite||(hasRequired_isFinite=1,_isFinite=Number.isFinite||function(e){return!(typeof e!="number"||e!==e||e===1/0||e===-1/0)}),_isFinite}var isInteger$1,hasRequiredIsInteger;function requireIsInteger(){if(hasRequiredIsInteger)return isInteger$1;hasRequiredIsInteger=1;var e=require_isFinite();return isInteger$1=Number.isInteger||function(t){return typeof t=="number"&&e(t)&&Math.floor(t)===t},isInteger$1}var isIntegerExports=requireIsInteger();const isInteger=getDefaultExportFromCjs(isIntegerExports);function validateKernel(e){let t,n;if(Array.isArray(e))if(Array.isArray(e[0])){if(!(e.length&1)||!(e[0].length&1))throw new RangeError("validateKernel: Kernel rows and columns should be odd numbers");t=Math.floor(e.length/2),n=Math.floor(e[0].length/2)}else{let r=Math.sqrt(e.length);if(isInteger(r))n=t=Math.floor(Math.sqrt(e.length)/2);else throw new RangeError("validateKernel: Kernel array should be a square");let i=new Array(r);for(let s=0;s<r;s++){i[s]=new Array(r);for(let o=0;o<r;o++)i[s][o]=e[s*r+o]}e=i}else throw new Error(`validateKernel: Invalid Kernel: ${e}`);return{kernel:e,kWidth:n,kHeight:t}}function clamp(e,t){return Math.round(Math.min(Math.max(e,0),t.maxValue))}function directConvolution(e,t,n){if(n===void 0){const s=e.length+t.length-1;n=new Array(s)}fill(n);for(var r=0;r<e.length;r++)for(var i=0;i<t.length;i++)n[r+i]+=e[r]*t[i];return n}function fill(e){for(var t=0;t<e.length;t++)e[t]=0}var fft,hasRequiredFft;function requireFft(){if(hasRequiredFft)return fft;hasRequiredFft=1;function e(t){if(this.size=t|0,this.size<=1||this.size&this.size-1)throw new Error("FFT size must be a power of two and bigger than 1");this._csize=t<<1;for(var n=new Array(this.size*2),r=0;r<n.length;r+=2){const f=Math.PI*r/this.size;n[r]=Math.cos(f),n[r+1]=-Math.sin(f)}this.table=n;for(var i=0,s=1;this.size>s;s<<=1)i++;this._width=i%2===0?i-1:i,this._bitrev=new Array(1<<this._width);for(var o=0;o<this._bitrev.length;o++){this._bitrev[o]=0;for(var l=0;l<this._width;l+=2){var c=this._width-l-2;this._bitrev[o]|=(o>>>l&3)<<c}}this._out=null,this._data=null,this._inv=0}return fft=e,e.prototype.fromComplexArray=function(n,r){for(var i=r||new Array(n.length>>>1),s=0;s<n.length;s+=2)i[s>>>1]=n[s];return i},e.prototype.createComplexArray=function(){const n=new Array(this._csize);for(var r=0;r<n.length;r++)n[r]=0;return n},e.prototype.toComplexArray=function(n,r){for(var i=r||this.createComplexArray(),s=0;s<i.length;s+=2)i[s]=n[s>>>1],i[s+1]=0;return i},e.prototype.completeSpectrum=function(n){for(var r=this._csize,i=r>>>1,s=2;s<i;s+=2)n[r-s]=n[s],n[r-s+1]=-n[s+1]},e.prototype.transform=function(n,r){if(n===r)throw new Error("Input and output buffers must be different");this._out=n,this._data=r,this._inv=0,this._transform4(),this._out=null,this._data=null},e.prototype.realTransform=function(n,r){if(n===r)throw new Error("Input and output buffers must be different");this._out=n,this._data=r,this._inv=0,this._realTransform4(),this._out=null,this._data=null},e.prototype.inverseTransform=function(n,r){if(n===r)throw new Error("Input and output buffers must be different");this._out=n,this._data=r,this._inv=1,this._transform4();for(var i=0;i<n.length;i++)n[i]/=this.size;this._out=null,this._data=null},e.prototype._transform4=function(){var n=this._out,r=this._csize,i=this._width,s=1<<i,o=r/s<<1,l,c,f=this._bitrev;if(o===4)for(l=0,c=0;l<r;l+=o,c++){const E=f[c];this._singleTransform2(l,E,s)}else for(l=0,c=0;l<r;l+=o,c++){const E=f[c];this._singleTransform4(l,E,s)}var h=this._inv?-1:1,p=this.table;for(s>>=2;s>=2;s>>=2){o=r/s<<1;var g=o>>>2;for(l=0;l<r;l+=o)for(var x=l+g,D=l,y=0;D<x;D+=2,y+=s){const E=D,F=E+g,B=F+g,M=B+g,k=n[E],T=n[E+1],N=n[F],$=n[F+1],R=n[B],O=n[B+1],L=n[M],z=n[M+1],X=k,o0=T,Z=p[y],n0=h*p[y+1],s0=N*Z-$*n0,S0=N*n0+$*Z,r0=p[2*y],p0=h*p[2*y+1],h0=R*r0-O*p0,G=R*p0+O*r0,Q=p[3*y],M0=h*p[3*y+1],C0=L*Q-z*M0,e0=L*M0+z*Q,F0=X+h0,O0=o0+G,L0=X-h0,B0=o0-G,H0=s0+C0,a1=S0+e0,c1=h*(s0-C0),G0=h*(S0-e0),j0=F0+H0,P0=O0+a1,d1=F0-H0,r1=O0-a1,u1=L0+G0,w0=B0-c1,Z0=L0-G0,K0=B0+c1;n[E]=j0,n[E+1]=P0,n[F]=u1,n[F+1]=w0,n[B]=d1,n[B+1]=r1,n[M]=Z0,n[M+1]=K0}}},e.prototype._singleTransform2=function(n,r,i){const s=this._out,o=this._data,l=o[r],c=o[r+1],f=o[r+i],h=o[r+i+1],p=l+f,g=c+h,x=l-f,D=c-h;s[n]=p,s[n+1]=g,s[n+2]=x,s[n+3]=D},e.prototype._singleTransform4=function(n,r,i){const s=this._out,o=this._data,l=this._inv?-1:1,c=i*2,f=i*3,h=o[r],p=o[r+1],g=o[r+i],x=o[r+i+1],D=o[r+c],y=o[r+c+1],E=o[r+f],F=o[r+f+1],B=h+D,M=p+y,k=h-D,T=p-y,N=g+E,$=x+F,R=l*(g-E),O=l*(x-F),L=B+N,z=M+$,X=k+O,o0=T-R,Z=B-N,n0=M-$,s0=k-O,S0=T+R;s[n]=L,s[n+1]=z,s[n+2]=X,s[n+3]=o0,s[n+4]=Z,s[n+5]=n0,s[n+6]=s0,s[n+7]=S0},e.prototype._realTransform4=function(){var n=this._out,r=this._csize,i=this._width,s=1<<i,o=r/s<<1,l,c,f=this._bitrev;if(o===4)for(l=0,c=0;l<r;l+=o,c++){const p1=f[c];this._singleRealTransform2(l,p1>>>1,s>>>1)}else for(l=0,c=0;l<r;l+=o,c++){const p1=f[c];this._singleRealTransform4(l,p1>>>1,s>>>1)}var h=this._inv?-1:1,p=this.table;for(s>>=2;s>=2;s>>=2){o=r/s<<1;var g=o>>>1,x=g>>>1,D=x>>>1;for(l=0;l<r;l+=o)for(var y=0,E=0;y<=D;y+=2,E+=s){var F=l+y,B=F+x,M=B+x,k=M+x,T=n[F],N=n[F+1],$=n[B],R=n[B+1],O=n[M],L=n[M+1],z=n[k],X=n[k+1],o0=T,Z=N,n0=p[E],s0=h*p[E+1],S0=$*n0-R*s0,r0=$*s0+R*n0,p0=p[2*E],h0=h*p[2*E+1],G=O*p0-L*h0,Q=O*h0+L*p0,M0=p[3*E],C0=h*p[3*E+1],e0=z*M0-X*C0,F0=z*C0+X*M0,O0=o0+G,L0=Z+Q,B0=o0-G,H0=Z-Q,a1=S0+e0,c1=r0+F0,G0=h*(S0-e0),j0=h*(r0-F0),P0=O0+a1,d1=L0+c1,r1=B0+j0,u1=H0-G0;if(n[F]=P0,n[F+1]=d1,n[B]=r1,n[B+1]=u1,y===0){var w0=O0-a1,Z0=L0-c1;n[M]=w0,n[M+1]=Z0;continue}if(y!==D){var K0=B0,J0=-H0,H=O0,t0=-L0,f0=-h*j0,c0=-h*G0,d0=-h*c1,g0=-h*a1,y0=K0+f0,E0=J0+c0,k0=H+g0,_0=t0-d0,Q0=l+x-y,e1=l+g-y;n[Q0]=y0,n[Q0+1]=E0,n[e1]=k0,n[e1+1]=_0}}}},e.prototype._singleRealTransform2=function(n,r,i){const s=this._out,o=this._data,l=o[r],c=o[r+i],f=l+c,h=l-c;s[n]=f,s[n+1]=0,s[n+2]=h,s[n+3]=0},e.prototype._singleRealTransform4=function(n,r,i){const s=this._out,o=this._data,l=this._inv?-1:1,c=i*2,f=i*3,h=o[r],p=o[r+i],g=o[r+c],x=o[r+f],D=h+g,y=h-g,E=p+x,F=l*(p-x),B=D+E,M=y,k=-F,T=D-E,N=y,$=F;s[n]=B,s[n+1]=0,s[n+2]=M,s[n+3]=k,s[n+4]=T,s[n+5]=0,s[n+6]=N,s[n+7]=$},fft}requireFft();function convolutionSeparable(e,t,n,r){const i=new Array(e.length);let s,o,l,c;c=t[1],l=(c.length-1)/2,o=new Array(n+c.length-1),s=new Array(n);for(let f=0;f<r;f++){for(let h=0;h<n;h++)s[h]=e[f*n+h];directConvolution(s,c,o);for(let h=0;h<n;h++)i[f*n+h]=o[l+h]}c=t[0],l=(c.length-1)/2,o=new Array(r+c.length-1),s=new Array(r);for(let f=0;f<n;f++){for(let h=0;h<r;h++)s[h]=i[h*n+f];directConvolution(s,c,o);for(let h=0;h<r;h++)i[h*n+f]=o[l+h]}return i}var matrix$1={};const toString=Object.prototype.toString;function isAnyArray(e){const t=toString.call(e);return t.endsWith("Array]")&&!t.includes("Big")}const libEsm=Object.freeze(Object.defineProperty({__proto__:null,isAnyArray},Symbol.toStringTag,{value:"Module"})),require$$0$1=getAugmentedNamespace(libEsm);function max$1(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!isAnyArray(e))throw new TypeError("input must be an array");if(e.length===0)throw new TypeError("input must not be empty");var n=t.fromIndex,r=n===void 0?0:n,i=t.toIndex,s=i===void 0?e.length:i;if(r<0||r>=e.length||!Number.isInteger(r))throw new Error("fromIndex must be a positive integer smaller than length");if(s<=r||s>e.length||!Number.isInteger(s))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=e[r],l=r+1;l<s;l++)e[l]>o&&(o=e[l]);return o}function min$1(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!isAnyArray(e))throw new TypeError("input must be an array");if(e.length===0)throw new TypeError("input must not be empty");var n=t.fromIndex,r=n===void 0?0:n,i=t.toIndex,s=i===void 0?e.length:i;if(r<0||r>=e.length||!Number.isInteger(r))throw new Error("fromIndex must be a positive integer smaller than length");if(s<=r||s>e.length||!Number.isInteger(s))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=e[r],l=r+1;l<s;l++)e[l]<o&&(o=e[l]);return o}function rescale(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(isAnyArray(e)){if(e.length===0)throw new TypeError("input must not be empty")}else throw new TypeError("input must be an array");var n;if(t.output!==void 0){if(!isAnyArray(t.output))throw new TypeError("output option must be an array if specified");n=t.output}else n=new Array(e.length);var r=min$1(e),i=max$1(e);if(r===i)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var s=t.min,o=s===void 0?t.autoMinMax?r:0:s,l=t.max,c=l===void 0?t.autoMinMax?i:1:l;if(o>=c)throw new RangeError("min option must be smaller than max option");for(var f=(c-o)/(i-r),h=0;h<e.length;h++)n[h]=(e[h]-r)*f+o;return n}const libEs6=Object.freeze(Object.defineProperty({__proto__:null,default:rescale},Symbol.toStringTag,{value:"Module"})),require$$1=getAugmentedNamespace(libEs6);var hasRequiredMatrix;function requireMatrix(){var q1,y7,I1;if(hasRequiredMatrix)return matrix$1;hasRequiredMatrix=1,Object.defineProperty(matrix$1,"__esModule",{value:!0});var e=require$$0$1,t=require$$1;const n=" ".repeat(2),r=" ".repeat(4);function i(){return s(this)}function s(A,v={}){const{maxRows:w=15,maxColumns:m=10,maxNumSize:b=8,padMinus:S="auto"}=v;return`${A.constructor.name} {
${n}[
${r}${o(A,w,m,b,S)}
${n}]
${n}rows: ${A.rows}
${n}columns: ${A.columns}
}`}function o(A,v,w,m,b){const{rows:S,columns:q}=A,j=Math.min(S,v),V=Math.min(q,w),Y=[];if(b==="auto"){b=!1;e:for(let u0=0;u0<j;u0++)for(let W=0;W<V;W++)if(A.get(u0,W)<0){b=!0;break e}}for(let u0=0;u0<j;u0++){let W=[];for(let D0=0;D0<V;D0++)W.push(l(A.get(u0,D0),m,b));Y.push(`${W.join(" ")}`)}return V!==q&&(Y[Y.length-1]+=` ... ${q-w} more columns`),j!==S&&Y.push(`... ${S-v} more rows`),Y.join(`
${r}`)}function l(A,v,w){return(A>=0&&w?` ${c(A,v-1)}`:c(A,v)).padEnd(v)}function c(A,v){let w=A.toString();if(w.length<=v)return w;let m=A.toFixed(v);if(m.length>v&&(m=A.toFixed(Math.max(0,v-(m.length-v)))),m.length<=v&&!m.startsWith("0.000")&&!m.startsWith("-0.000"))return m;let b=A.toExponential(v);return b.length>v&&(b=A.toExponential(Math.max(0,v-(b.length-v)))),b.slice(0)}function f(A,v){A.prototype.add=function(m){return typeof m=="number"?this.addS(m):this.addM(m)},A.prototype.addS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)+m);return this},A.prototype.addM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)+m.get(b,S));return this},A.add=function(m,b){return new v(m).add(b)},A.prototype.sub=function(m){return typeof m=="number"?this.subS(m):this.subM(m)},A.prototype.subS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)-m);return this},A.prototype.subM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)-m.get(b,S));return this},A.sub=function(m,b){return new v(m).sub(b)},A.prototype.subtract=A.prototype.sub,A.prototype.subtractS=A.prototype.subS,A.prototype.subtractM=A.prototype.subM,A.subtract=A.sub,A.prototype.mul=function(m){return typeof m=="number"?this.mulS(m):this.mulM(m)},A.prototype.mulS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)*m);return this},A.prototype.mulM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)*m.get(b,S));return this},A.mul=function(m,b){return new v(m).mul(b)},A.prototype.multiply=A.prototype.mul,A.prototype.multiplyS=A.prototype.mulS,A.prototype.multiplyM=A.prototype.mulM,A.multiply=A.mul,A.prototype.div=function(m){return typeof m=="number"?this.divS(m):this.divM(m)},A.prototype.divS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)/m);return this},A.prototype.divM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)/m.get(b,S));return this},A.div=function(m,b){return new v(m).div(b)},A.prototype.divide=A.prototype.div,A.prototype.divideS=A.prototype.divS,A.prototype.divideM=A.prototype.divM,A.divide=A.div,A.prototype.mod=function(m){return typeof m=="number"?this.modS(m):this.modM(m)},A.prototype.modS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)%m);return this},A.prototype.modM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)%m.get(b,S));return this},A.mod=function(m,b){return new v(m).mod(b)},A.prototype.modulus=A.prototype.mod,A.prototype.modulusS=A.prototype.modS,A.prototype.modulusM=A.prototype.modM,A.modulus=A.mod,A.prototype.and=function(m){return typeof m=="number"?this.andS(m):this.andM(m)},A.prototype.andS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)&m);return this},A.prototype.andM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)&m.get(b,S));return this},A.and=function(m,b){return new v(m).and(b)},A.prototype.or=function(m){return typeof m=="number"?this.orS(m):this.orM(m)},A.prototype.orS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)|m);return this},A.prototype.orM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)|m.get(b,S));return this},A.or=function(m,b){return new v(m).or(b)},A.prototype.xor=function(m){return typeof m=="number"?this.xorS(m):this.xorM(m)},A.prototype.xorS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)^m);return this},A.prototype.xorM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)^m.get(b,S));return this},A.xor=function(m,b){return new v(m).xor(b)},A.prototype.leftShift=function(m){return typeof m=="number"?this.leftShiftS(m):this.leftShiftM(m)},A.prototype.leftShiftS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)<<m);return this},A.prototype.leftShiftM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)<<m.get(b,S));return this},A.leftShift=function(m,b){return new v(m).leftShift(b)},A.prototype.signPropagatingRightShift=function(m){return typeof m=="number"?this.signPropagatingRightShiftS(m):this.signPropagatingRightShiftM(m)},A.prototype.signPropagatingRightShiftS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)>>m);return this},A.prototype.signPropagatingRightShiftM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)>>m.get(b,S));return this},A.signPropagatingRightShift=function(m,b){return new v(m).signPropagatingRightShift(b)},A.prototype.rightShift=function(m){return typeof m=="number"?this.rightShiftS(m):this.rightShiftM(m)},A.prototype.rightShiftS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)>>>m);return this},A.prototype.rightShiftM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)>>>m.get(b,S));return this},A.rightShift=function(m,b){return new v(m).rightShift(b)},A.prototype.zeroFillRightShift=A.prototype.rightShift,A.prototype.zeroFillRightShiftS=A.prototype.rightShiftS,A.prototype.zeroFillRightShiftM=A.prototype.rightShiftM,A.zeroFillRightShift=A.rightShift,A.prototype.not=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,~this.get(m,b));return this},A.not=function(m){return new v(m).not()},A.prototype.abs=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.abs(this.get(m,b)));return this},A.abs=function(m){return new v(m).abs()},A.prototype.acos=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.acos(this.get(m,b)));return this},A.acos=function(m){return new v(m).acos()},A.prototype.acosh=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.acosh(this.get(m,b)));return this},A.acosh=function(m){return new v(m).acosh()},A.prototype.asin=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.asin(this.get(m,b)));return this},A.asin=function(m){return new v(m).asin()},A.prototype.asinh=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.asinh(this.get(m,b)));return this},A.asinh=function(m){return new v(m).asinh()},A.prototype.atan=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.atan(this.get(m,b)));return this},A.atan=function(m){return new v(m).atan()},A.prototype.atanh=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.atanh(this.get(m,b)));return this},A.atanh=function(m){return new v(m).atanh()},A.prototype.cbrt=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.cbrt(this.get(m,b)));return this},A.cbrt=function(m){return new v(m).cbrt()},A.prototype.ceil=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.ceil(this.get(m,b)));return this},A.ceil=function(m){return new v(m).ceil()},A.prototype.clz32=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.clz32(this.get(m,b)));return this},A.clz32=function(m){return new v(m).clz32()},A.prototype.cos=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.cos(this.get(m,b)));return this},A.cos=function(m){return new v(m).cos()},A.prototype.cosh=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.cosh(this.get(m,b)));return this},A.cosh=function(m){return new v(m).cosh()},A.prototype.exp=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.exp(this.get(m,b)));return this},A.exp=function(m){return new v(m).exp()},A.prototype.expm1=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.expm1(this.get(m,b)));return this},A.expm1=function(m){return new v(m).expm1()},A.prototype.floor=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.floor(this.get(m,b)));return this},A.floor=function(m){return new v(m).floor()},A.prototype.fround=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.fround(this.get(m,b)));return this},A.fround=function(m){return new v(m).fround()},A.prototype.log=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.log(this.get(m,b)));return this},A.log=function(m){return new v(m).log()},A.prototype.log1p=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.log1p(this.get(m,b)));return this},A.log1p=function(m){return new v(m).log1p()},A.prototype.log10=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.log10(this.get(m,b)));return this},A.log10=function(m){return new v(m).log10()},A.prototype.log2=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.log2(this.get(m,b)));return this},A.log2=function(m){return new v(m).log2()},A.prototype.round=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.round(this.get(m,b)));return this},A.round=function(m){return new v(m).round()},A.prototype.sign=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.sign(this.get(m,b)));return this},A.sign=function(m){return new v(m).sign()},A.prototype.sin=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.sin(this.get(m,b)));return this},A.sin=function(m){return new v(m).sin()},A.prototype.sinh=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.sinh(this.get(m,b)));return this},A.sinh=function(m){return new v(m).sinh()},A.prototype.sqrt=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.sqrt(this.get(m,b)));return this},A.sqrt=function(m){return new v(m).sqrt()},A.prototype.tan=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.tan(this.get(m,b)));return this},A.tan=function(m){return new v(m).tan()},A.prototype.tanh=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.tanh(this.get(m,b)));return this},A.tanh=function(m){return new v(m).tanh()},A.prototype.trunc=function(){for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.set(m,b,Math.trunc(this.get(m,b)));return this},A.trunc=function(m){return new v(m).trunc()},A.pow=function(m,b){return new v(m).pow(b)},A.prototype.pow=function(m){return typeof m=="number"?this.powS(m):this.powM(m)},A.prototype.powS=function(m){for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)**m);return this},A.prototype.powM=function(m){if(m=v.checkMatrix(m),this.rows!==m.rows||this.columns!==m.columns)throw new RangeError("Matrices dimensions must be equal");for(let b=0;b<this.rows;b++)for(let S=0;S<this.columns;S++)this.set(b,S,this.get(b,S)**m.get(b,S));return this}}function h(A,v,w){let m=w?A.rows:A.rows-1;if(v<0||v>m)throw new RangeError("Row index out of range")}function p(A,v,w){let m=w?A.columns:A.columns-1;if(v<0||v>m)throw new RangeError("Column index out of range")}function g(A,v){if(v.to1DArray&&(v=v.to1DArray()),v.length!==A.columns)throw new RangeError("vector size must be the same as the number of columns");return v}function x(A,v){if(v.to1DArray&&(v=v.to1DArray()),v.length!==A.rows)throw new RangeError("vector size must be the same as the number of rows");return v}function D(A,v){if(!e.isAnyArray(v))throw new TypeError("row indices must be an array");for(let w=0;w<v.length;w++)if(v[w]<0||v[w]>=A.rows)throw new RangeError("row indices are out of range")}function y(A,v){if(!e.isAnyArray(v))throw new TypeError("column indices must be an array");for(let w=0;w<v.length;w++)if(v[w]<0||v[w]>=A.columns)throw new RangeError("column indices are out of range")}function E(A,v,w,m,b){if(arguments.length!==5)throw new RangeError("expected 4 arguments");if(B("startRow",v),B("endRow",w),B("startColumn",m),B("endColumn",b),v>w||m>b||v<0||v>=A.rows||w<0||w>=A.rows||m<0||m>=A.columns||b<0||b>=A.columns)throw new RangeError("Submatrix indices are out of range")}function F(A,v=0){let w=[];for(let m=0;m<A;m++)w.push(v);return w}function B(A,v){if(typeof v!="number")throw new TypeError(`${A} must be a number`)}function M(A){if(A.isEmpty())throw new Error("Empty matrix has no elements to index")}function k(A){let v=F(A.rows);for(let w=0;w<A.rows;++w)for(let m=0;m<A.columns;++m)v[w]+=A.get(w,m);return v}function T(A){let v=F(A.columns);for(let w=0;w<A.rows;++w)for(let m=0;m<A.columns;++m)v[m]+=A.get(w,m);return v}function N(A){let v=0;for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)v+=A.get(w,m);return v}function $(A){let v=F(A.rows,1);for(let w=0;w<A.rows;++w)for(let m=0;m<A.columns;++m)v[w]*=A.get(w,m);return v}function R(A){let v=F(A.columns,1);for(let w=0;w<A.rows;++w)for(let m=0;m<A.columns;++m)v[m]*=A.get(w,m);return v}function O(A){let v=1;for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)v*=A.get(w,m);return v}function L(A,v,w){const m=A.rows,b=A.columns,S=[];for(let q=0;q<m;q++){let j=0,V=0,Y=0;for(let u0=0;u0<b;u0++)Y=A.get(q,u0)-w[q],j+=Y,V+=Y*Y;v?S.push((V-j*j/b)/(b-1)):S.push((V-j*j/b)/b)}return S}function z(A,v,w){const m=A.rows,b=A.columns,S=[];for(let q=0;q<b;q++){let j=0,V=0,Y=0;for(let u0=0;u0<m;u0++)Y=A.get(u0,q)-w[q],j+=Y,V+=Y*Y;v?S.push((V-j*j/m)/(m-1)):S.push((V-j*j/m)/m)}return S}function X(A,v,w){const m=A.rows,b=A.columns,S=m*b;let q=0,j=0,V=0;for(let Y=0;Y<m;Y++)for(let u0=0;u0<b;u0++)V=A.get(Y,u0)-w,q+=V,j+=V*V;return v?(j-q*q/S)/(S-1):(j-q*q/S)/S}function o0(A,v){for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)A.set(w,m,A.get(w,m)-v[w])}function Z(A,v){for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)A.set(w,m,A.get(w,m)-v[m])}function n0(A,v){for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)A.set(w,m,A.get(w,m)-v)}function s0(A){const v=[];for(let w=0;w<A.rows;w++){let m=0;for(let b=0;b<A.columns;b++)m+=A.get(w,b)**2/(A.columns-1);v.push(Math.sqrt(m))}return v}function S0(A,v){for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)A.set(w,m,A.get(w,m)/v[w])}function r0(A){const v=[];for(let w=0;w<A.columns;w++){let m=0;for(let b=0;b<A.rows;b++)m+=A.get(b,w)**2/(A.rows-1);v.push(Math.sqrt(m))}return v}function p0(A,v){for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)A.set(w,m,A.get(w,m)/v[m])}function h0(A){const v=A.size-1;let w=0;for(let m=0;m<A.columns;m++)for(let b=0;b<A.rows;b++)w+=A.get(b,m)**2/v;return Math.sqrt(w)}function G(A,v){for(let w=0;w<A.rows;w++)for(let m=0;m<A.columns;m++)A.set(w,m,A.get(w,m)/v)}class Q{static from1DArray(v,w,m){if(v*w!==m.length)throw new RangeError("data length does not match given dimensions");let S=new e0(v,w);for(let q=0;q<v;q++)for(let j=0;j<w;j++)S.set(q,j,m[q*w+j]);return S}static rowVector(v){let w=new e0(1,v.length);for(let m=0;m<v.length;m++)w.set(0,m,v[m]);return w}static columnVector(v){let w=new e0(v.length,1);for(let m=0;m<v.length;m++)w.set(m,0,v[m]);return w}static zeros(v,w){return new e0(v,w)}static ones(v,w){return new e0(v,w).fill(1)}static rand(v,w,m={}){if(typeof m!="object")throw new TypeError("options must be an object");const{random:b=Math.random}=m;let S=new e0(v,w);for(let q=0;q<v;q++)for(let j=0;j<w;j++)S.set(q,j,b());return S}static randInt(v,w,m={}){if(typeof m!="object")throw new TypeError("options must be an object");const{min:b=0,max:S=1e3,random:q=Math.random}=m;if(!Number.isInteger(b))throw new TypeError("min must be an integer");if(!Number.isInteger(S))throw new TypeError("max must be an integer");if(b>=S)throw new RangeError("min must be smaller than max");let j=S-b,V=new e0(v,w);for(let Y=0;Y<v;Y++)for(let u0=0;u0<w;u0++){let W=b+Math.round(q()*j);V.set(Y,u0,W)}return V}static eye(v,w,m){w===void 0&&(w=v),m===void 0&&(m=1);let b=Math.min(v,w),S=this.zeros(v,w);for(let q=0;q<b;q++)S.set(q,q,m);return S}static diag(v,w,m){let b=v.length;w===void 0&&(w=b),m===void 0&&(m=w);let S=Math.min(b,w,m),q=this.zeros(w,m);for(let j=0;j<S;j++)q.set(j,j,v[j]);return q}static min(v,w){v=this.checkMatrix(v),w=this.checkMatrix(w);let m=v.rows,b=v.columns,S=new e0(m,b);for(let q=0;q<m;q++)for(let j=0;j<b;j++)S.set(q,j,Math.min(v.get(q,j),w.get(q,j)));return S}static max(v,w){v=this.checkMatrix(v),w=this.checkMatrix(w);let m=v.rows,b=v.columns,S=new this(m,b);for(let q=0;q<m;q++)for(let j=0;j<b;j++)S.set(q,j,Math.max(v.get(q,j),w.get(q,j)));return S}static checkMatrix(v){return Q.isMatrix(v)?v:new e0(v)}static isMatrix(v){return v!=null&&v.klass==="Matrix"}get size(){return this.rows*this.columns}apply(v){if(typeof v!="function")throw new TypeError("callback must be a function");for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)v.call(this,w,m);return this}to1DArray(){let v=[];for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)v.push(this.get(w,m));return v}to2DArray(){let v=[];for(let w=0;w<this.rows;w++){v.push([]);for(let m=0;m<this.columns;m++)v[w].push(this.get(w,m))}return v}toJSON(){return this.to2DArray()}isRowVector(){return this.rows===1}isColumnVector(){return this.columns===1}isVector(){return this.rows===1||this.columns===1}isSquare(){return this.rows===this.columns}isEmpty(){return this.rows===0||this.columns===0}isSymmetric(){if(this.isSquare()){for(let v=0;v<this.rows;v++)for(let w=0;w<=v;w++)if(this.get(v,w)!==this.get(w,v))return!1;return!0}return!1}isDistance(){if(!this.isSymmetric())return!1;for(let v=0;v<this.rows;v++)if(this.get(v,v)!==0)return!1;return!0}isEchelonForm(){let v=0,w=0,m=-1,b=!0,S=!1;for(;v<this.rows&&b;){for(w=0,S=!1;w<this.columns&&S===!1;)this.get(v,w)===0?w++:this.get(v,w)===1&&w>m?(S=!0,m=w):(b=!1,S=!0);v++}return b}isReducedEchelonForm(){let v=0,w=0,m=-1,b=!0,S=!1;for(;v<this.rows&&b;){for(w=0,S=!1;w<this.columns&&S===!1;)this.get(v,w)===0?w++:this.get(v,w)===1&&w>m?(S=!0,m=w):(b=!1,S=!0);for(let q=w+1;q<this.rows;q++)this.get(v,q)!==0&&(b=!1);v++}return b}echelonForm(){let v=this.clone(),w=0,m=0;for(;w<v.rows&&m<v.columns;){let b=w;for(let S=w;S<v.rows;S++)v.get(S,m)>v.get(b,m)&&(b=S);if(v.get(b,m)===0)m++;else{v.swapRows(w,b);let S=v.get(w,m);for(let q=m;q<v.columns;q++)v.set(w,q,v.get(w,q)/S);for(let q=w+1;q<v.rows;q++){let j=v.get(q,m)/v.get(w,m);v.set(q,m,0);for(let V=m+1;V<v.columns;V++)v.set(q,V,v.get(q,V)-v.get(w,V)*j)}w++,m++}}return v}reducedEchelonForm(){let v=this.echelonForm(),w=v.columns,m=v.rows,b=m-1;for(;b>=0;)if(v.maxRow(b)===0)b--;else{let S=0,q=!1;for(;S<m&&q===!1;)v.get(b,S)===1?q=!0:S++;for(let j=0;j<b;j++){let V=v.get(j,S);for(let Y=S;Y<w;Y++){let u0=v.get(j,Y)-V*v.get(b,Y);v.set(j,Y,u0)}}b--}return v}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(v={}){if(typeof v!="object")throw new TypeError("options must be an object");const{rows:w=1,columns:m=1}=v;if(!Number.isInteger(w)||w<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(m)||m<=0)throw new TypeError("columns must be a positive integer");let b=new e0(this.rows*w,this.columns*m);for(let S=0;S<w;S++)for(let q=0;q<m;q++)b.setSubMatrix(this,this.rows*S,this.columns*q);return b}fill(v){for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,v);return this}neg(){return this.mulS(-1)}getRow(v){h(this,v);let w=[];for(let m=0;m<this.columns;m++)w.push(this.get(v,m));return w}getRowVector(v){return e0.rowVector(this.getRow(v))}setRow(v,w){h(this,v),w=g(this,w);for(let m=0;m<this.columns;m++)this.set(v,m,w[m]);return this}swapRows(v,w){h(this,v),h(this,w);for(let m=0;m<this.columns;m++){let b=this.get(v,m);this.set(v,m,this.get(w,m)),this.set(w,m,b)}return this}getColumn(v){p(this,v);let w=[];for(let m=0;m<this.rows;m++)w.push(this.get(m,v));return w}getColumnVector(v){return e0.columnVector(this.getColumn(v))}setColumn(v,w){p(this,v),w=x(this,w);for(let m=0;m<this.rows;m++)this.set(m,v,w[m]);return this}swapColumns(v,w){p(this,v),p(this,w);for(let m=0;m<this.rows;m++){let b=this.get(m,v);this.set(m,v,this.get(m,w)),this.set(m,w,b)}return this}addRowVector(v){v=g(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)+v[m]);return this}subRowVector(v){v=g(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)-v[m]);return this}mulRowVector(v){v=g(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)*v[m]);return this}divRowVector(v){v=g(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)/v[m]);return this}addColumnVector(v){v=x(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)+v[w]);return this}subColumnVector(v){v=x(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)-v[w]);return this}mulColumnVector(v){v=x(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)*v[w]);return this}divColumnVector(v){v=x(this,v);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)this.set(w,m,this.get(w,m)/v[w]);return this}mulRow(v,w){h(this,v);for(let m=0;m<this.columns;m++)this.set(v,m,this.get(v,m)*w);return this}mulColumn(v,w){p(this,v);for(let m=0;m<this.rows;m++)this.set(m,v,this.get(m,v)*w);return this}max(v){if(this.isEmpty())return NaN;switch(v){case"row":{const w=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)>w[m]&&(w[m]=this.get(m,b));return w}case"column":{const w=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)>w[b]&&(w[b]=this.get(m,b));return w}case void 0:{let w=this.get(0,0);for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)>w&&(w=this.get(m,b));return w}default:throw new Error(`invalid option: ${v}`)}}maxIndex(){M(this);let v=this.get(0,0),w=[0,0];for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)>v&&(v=this.get(m,b),w[0]=m,w[1]=b);return w}min(v){if(this.isEmpty())return NaN;switch(v){case"row":{const w=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)<w[m]&&(w[m]=this.get(m,b));return w}case"column":{const w=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)<w[b]&&(w[b]=this.get(m,b));return w}case void 0:{let w=this.get(0,0);for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)<w&&(w=this.get(m,b));return w}default:throw new Error(`invalid option: ${v}`)}}minIndex(){M(this);let v=this.get(0,0),w=[0,0];for(let m=0;m<this.rows;m++)for(let b=0;b<this.columns;b++)this.get(m,b)<v&&(v=this.get(m,b),w[0]=m,w[1]=b);return w}maxRow(v){if(h(this,v),this.isEmpty())return NaN;let w=this.get(v,0);for(let m=1;m<this.columns;m++)this.get(v,m)>w&&(w=this.get(v,m));return w}maxRowIndex(v){h(this,v),M(this);let w=this.get(v,0),m=[v,0];for(let b=1;b<this.columns;b++)this.get(v,b)>w&&(w=this.get(v,b),m[1]=b);return m}minRow(v){if(h(this,v),this.isEmpty())return NaN;let w=this.get(v,0);for(let m=1;m<this.columns;m++)this.get(v,m)<w&&(w=this.get(v,m));return w}minRowIndex(v){h(this,v),M(this);let w=this.get(v,0),m=[v,0];for(let b=1;b<this.columns;b++)this.get(v,b)<w&&(w=this.get(v,b),m[1]=b);return m}maxColumn(v){if(p(this,v),this.isEmpty())return NaN;let w=this.get(0,v);for(let m=1;m<this.rows;m++)this.get(m,v)>w&&(w=this.get(m,v));return w}maxColumnIndex(v){p(this,v),M(this);let w=this.get(0,v),m=[0,v];for(let b=1;b<this.rows;b++)this.get(b,v)>w&&(w=this.get(b,v),m[0]=b);return m}minColumn(v){if(p(this,v),this.isEmpty())return NaN;let w=this.get(0,v);for(let m=1;m<this.rows;m++)this.get(m,v)<w&&(w=this.get(m,v));return w}minColumnIndex(v){p(this,v),M(this);let w=this.get(0,v),m=[0,v];for(let b=1;b<this.rows;b++)this.get(b,v)<w&&(w=this.get(b,v),m[0]=b);return m}diag(){let v=Math.min(this.rows,this.columns),w=[];for(let m=0;m<v;m++)w.push(this.get(m,m));return w}norm(v="frobenius"){switch(v){case"max":return this.max();case"frobenius":return Math.sqrt(this.dot(this));default:throw new RangeError(`unknown norm type: ${v}`)}}cumulativeSum(){let v=0;for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)v+=this.get(w,m),this.set(w,m,v);return this}dot(v){Q.isMatrix(v)&&(v=v.to1DArray());let w=this.to1DArray();if(w.length!==v.length)throw new RangeError("vectors do not have the same size");let m=0;for(let b=0;b<w.length;b++)m+=w[b]*v[b];return m}mmul(v){v=e0.checkMatrix(v);let w=this.rows,m=this.columns,b=v.columns,S=new e0(w,b),q=new Float64Array(m);for(let j=0;j<b;j++){for(let V=0;V<m;V++)q[V]=v.get(V,j);for(let V=0;V<w;V++){let Y=0;for(let u0=0;u0<m;u0++)Y+=this.get(V,u0)*q[u0];S.set(V,j,Y)}}return S}mpow(v){if(!this.isSquare())throw new RangeError("Matrix must be square");if(!Number.isInteger(v)||v<0)throw new RangeError("Exponent must be a non-negative integer");let w=e0.eye(this.rows),m=this;for(let b=v;b>1;b/=2)b&1&&(w=w.mmul(m)),m=m.mmul(m);return w}strassen2x2(v){v=e0.checkMatrix(v);let w=new e0(2,2);const m=this.get(0,0),b=v.get(0,0),S=this.get(0,1),q=v.get(0,1),j=this.get(1,0),V=v.get(1,0),Y=this.get(1,1),u0=v.get(1,1),W=(m+Y)*(b+u0),D0=(j+Y)*b,I0=m*(q-u0),m0=Y*(V-b),A0=(m+S)*u0,Y0=(j-m)*(b+q),J=(S-Y)*(V+u0),N0=W+m0-A0+J,W0=I0+A0,g1=D0+m0,m1=W-D0+I0+Y0;return w.set(0,0,N0),w.set(0,1,W0),w.set(1,0,g1),w.set(1,1,m1),w}strassen3x3(v){v=e0.checkMatrix(v);let w=new e0(3,3);const m=this.get(0,0),b=this.get(0,1),S=this.get(0,2),q=this.get(1,0),j=this.get(1,1),V=this.get(1,2),Y=this.get(2,0),u0=this.get(2,1),W=this.get(2,2),D0=v.get(0,0),I0=v.get(0,1),m0=v.get(0,2),A0=v.get(1,0),Y0=v.get(1,1),J=v.get(1,2),N0=v.get(2,0),W0=v.get(2,1),g1=v.get(2,2),m1=(m+b+S-q-j-u0-W)*Y0,k1=(m-q)*(-I0+Y0),i1=j*(-D0+I0+A0-Y0-J-N0+g1),R0=(-m+q+j)*(D0-I0+Y0),_1=(q+j)*(-D0+I0),a0=m*D0,T0=(-m+Y+u0)*(D0-m0+J),X0=(-m+Y)*(m0-J),U0=(Y+u0)*(-D0+m0),N1=(m+b+S-j-V-Y-u0)*J,S1=u0*(-D0+m0+A0-Y0-J-N0+W0),E1=(-S+u0+W)*(Y0+N0-W0),O1=(S-W)*(Y0-W0),P1=S*N0,E2=(u0+W)*(-N0+W0),X1=(-S+j+V)*(J+N0-g1),F2=(S-V)*(J-g1),w2=(j+V)*(-N0+g1),b1=b*A0,j1=V*W0,t2=q*m0,p2=Y*I0,G1=W*g1,n3=a0+P1+b1,N3=m1+R0+_1+a0+E1+P1+E2,r3=a0+T0+U0+N1+P1+X1+w2,_4=k1+i1+R0+a0+P1+X1+F2,z5=k1+R0+_1+a0+j1,i3=P1+X1+F2+w2+t2,T1=a0+T0+X0+S1+E1+O1+P1,O3=E1+O1+P1+E2+p2,$3=a0+T0+X0+U0+G1;return w.set(0,0,n3),w.set(0,1,N3),w.set(0,2,r3),w.set(1,0,_4),w.set(1,1,z5),w.set(1,2,i3),w.set(2,0,T1),w.set(2,1,O3),w.set(2,2,$3),w}mmulStrassen(v){v=e0.checkMatrix(v);let w=this.clone(),m=w.rows,b=w.columns,S=v.rows,q=v.columns;b!==S&&console.warn(`Multiplying ${m} x ${b} and ${S} x ${q} matrix: dimensions do not match.`);function j(W,D0,I0){let m0=W.rows,A0=W.columns;if(m0===D0&&A0===I0)return W;{let Y0=Q.zeros(D0,I0);return Y0=Y0.setSubMatrix(W,0,0),Y0}}let V=Math.max(m,S),Y=Math.max(b,q);w=j(w,V,Y),v=j(v,V,Y);function u0(W,D0,I0,m0){if(I0<=512||m0<=512)return W.mmul(D0);I0%2===1&&m0%2===1?(W=j(W,I0+1,m0+1),D0=j(D0,I0+1,m0+1)):I0%2===1?(W=j(W,I0+1,m0),D0=j(D0,I0+1,m0)):m0%2===1&&(W=j(W,I0,m0+1),D0=j(D0,I0,m0+1));let A0=parseInt(W.rows/2,10),Y0=parseInt(W.columns/2,10),J=W.subMatrix(0,A0-1,0,Y0-1),N0=D0.subMatrix(0,A0-1,0,Y0-1),W0=W.subMatrix(0,A0-1,Y0,W.columns-1),g1=D0.subMatrix(0,A0-1,Y0,D0.columns-1),m1=W.subMatrix(A0,W.rows-1,0,Y0-1),k1=D0.subMatrix(A0,D0.rows-1,0,Y0-1),i1=W.subMatrix(A0,W.rows-1,Y0,W.columns-1),R0=D0.subMatrix(A0,D0.rows-1,Y0,D0.columns-1),_1=u0(Q.add(J,i1),Q.add(N0,R0),A0,Y0),a0=u0(Q.add(m1,i1),N0,A0,Y0),T0=u0(J,Q.sub(g1,R0),A0,Y0),X0=u0(i1,Q.sub(k1,N0),A0,Y0),U0=u0(Q.add(J,W0),R0,A0,Y0),N1=u0(Q.sub(m1,J),Q.add(N0,g1),A0,Y0),S1=u0(Q.sub(W0,i1),Q.add(k1,R0),A0,Y0),E1=Q.add(_1,X0);E1.sub(U0),E1.add(S1);let O1=Q.add(T0,U0),P1=Q.add(a0,X0),E2=Q.sub(_1,a0);E2.add(T0),E2.add(N1);let X1=Q.zeros(2*E1.rows,2*E1.columns);return X1=X1.setSubMatrix(E1,0,0),X1=X1.setSubMatrix(O1,E1.rows,0),X1=X1.setSubMatrix(P1,0,E1.columns),X1=X1.setSubMatrix(E2,E1.rows,E1.columns),X1.subMatrix(0,I0-1,0,m0-1)}return u0(w,v,V,Y)}scaleRows(v={}){if(typeof v!="object")throw new TypeError("options must be an object");const{min:w=0,max:m=1}=v;if(!Number.isFinite(w))throw new TypeError("min must be a number");if(!Number.isFinite(m))throw new TypeError("max must be a number");if(w>=m)throw new RangeError("min must be smaller than max");let b=new e0(this.rows,this.columns);for(let S=0;S<this.rows;S++){const q=this.getRow(S);q.length>0&&t(q,{min:w,max:m,output:q}),b.setRow(S,q)}return b}scaleColumns(v={}){if(typeof v!="object")throw new TypeError("options must be an object");const{min:w=0,max:m=1}=v;if(!Number.isFinite(w))throw new TypeError("min must be a number");if(!Number.isFinite(m))throw new TypeError("max must be a number");if(w>=m)throw new RangeError("min must be smaller than max");let b=new e0(this.rows,this.columns);for(let S=0;S<this.columns;S++){const q=this.getColumn(S);q.length&&t(q,{min:w,max:m,output:q}),b.setColumn(S,q)}return b}flipRows(){const v=Math.ceil(this.columns/2);for(let w=0;w<this.rows;w++)for(let m=0;m<v;m++){let b=this.get(w,m),S=this.get(w,this.columns-1-m);this.set(w,m,S),this.set(w,this.columns-1-m,b)}return this}flipColumns(){const v=Math.ceil(this.rows/2);for(let w=0;w<this.columns;w++)for(let m=0;m<v;m++){let b=this.get(m,w),S=this.get(this.rows-1-m,w);this.set(m,w,S),this.set(this.rows-1-m,w,b)}return this}kroneckerProduct(v){v=e0.checkMatrix(v);let w=this.rows,m=this.columns,b=v.rows,S=v.columns,q=new e0(w*b,m*S);for(let j=0;j<w;j++)for(let V=0;V<m;V++)for(let Y=0;Y<b;Y++)for(let u0=0;u0<S;u0++)q.set(b*j+Y,S*V+u0,this.get(j,V)*v.get(Y,u0));return q}kroneckerSum(v){if(v=e0.checkMatrix(v),!this.isSquare()||!v.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let w=this.rows,m=v.rows,b=this.kroneckerProduct(e0.eye(m,m)),S=e0.eye(w,w).kroneckerProduct(v);return b.add(S)}transpose(){let v=new e0(this.columns,this.rows);for(let w=0;w<this.rows;w++)for(let m=0;m<this.columns;m++)v.set(m,w,this.get(w,m));return v}sortRows(v=M0){for(let w=0;w<this.rows;w++)this.setRow(w,this.getRow(w).sort(v));return this}sortColumns(v=M0){for(let w=0;w<this.columns;w++)this.setColumn(w,this.getColumn(w).sort(v));return this}subMatrix(v,w,m,b){E(this,v,w,m,b);let S=new e0(w-v+1,b-m+1);for(let q=v;q<=w;q++)for(let j=m;j<=b;j++)S.set(q-v,j-m,this.get(q,j));return S}subMatrixRow(v,w,m){if(w===void 0&&(w=0),m===void 0&&(m=this.columns-1),w>m||w<0||w>=this.columns||m<0||m>=this.columns)throw new RangeError("Argument out of range");let b=new e0(v.length,m-w+1);for(let S=0;S<v.length;S++)for(let q=w;q<=m;q++){if(v[S]<0||v[S]>=this.rows)throw new RangeError(`Row index out of range: ${v[S]}`);b.set(S,q-w,this.get(v[S],q))}return b}subMatrixColumn(v,w,m){if(w===void 0&&(w=0),m===void 0&&(m=this.rows-1),w>m||w<0||w>=this.rows||m<0||m>=this.rows)throw new RangeError("Argument out of range");let b=new e0(m-w+1,v.length);for(let S=0;S<v.length;S++)for(let q=w;q<=m;q++){if(v[S]<0||v[S]>=this.columns)throw new RangeError(`Column index out of range: ${v[S]}`);b.set(q-w,S,this.get(q,v[S]))}return b}setSubMatrix(v,w,m){if(v=e0.checkMatrix(v),v.isEmpty())return this;let b=w+v.rows-1,S=m+v.columns-1;E(this,w,b,m,S);for(let q=0;q<v.rows;q++)for(let j=0;j<v.columns;j++)this.set(w+q,m+j,v.get(q,j));return this}selection(v,w){D(this,v),y(this,w);let m=new e0(v.length,w.length);for(let b=0;b<v.length;b++){let S=v[b];for(let q=0;q<w.length;q++){let j=w[q];m.set(b,q,this.get(S,j))}}return m}trace(){let v=Math.min(this.rows,this.columns),w=0;for(let m=0;m<v;m++)w+=this.get(m,m);return w}clone(){return this.constructor.copy(this,new e0(this.rows,this.columns))}static copy(v,w){for(const[m,b,S]of v.entries())w.set(m,b,S);return w}sum(v){switch(v){case"row":return k(this);case"column":return T(this);case void 0:return N(this);default:throw new Error(`invalid option: ${v}`)}}product(v){switch(v){case"row":return $(this);case"column":return R(this);case void 0:return O(this);default:throw new Error(`invalid option: ${v}`)}}mean(v){const w=this.sum(v);switch(v){case"row":{for(let m=0;m<this.rows;m++)w[m]/=this.columns;return w}case"column":{for(let m=0;m<this.columns;m++)w[m]/=this.rows;return w}case void 0:return w/this.size;default:throw new Error(`invalid option: ${v}`)}}variance(v,w={}){if(typeof v=="object"&&(w=v,v=void 0),typeof w!="object")throw new TypeError("options must be an object");const{unbiased:m=!0,mean:b=this.mean(v)}=w;if(typeof m!="boolean")throw new TypeError("unbiased must be a boolean");switch(v){case"row":{if(!e.isAnyArray(b))throw new TypeError("mean must be an array");return L(this,m,b)}case"column":{if(!e.isAnyArray(b))throw new TypeError("mean must be an array");return z(this,m,b)}case void 0:{if(typeof b!="number")throw new TypeError("mean must be a number");return X(this,m,b)}default:throw new Error(`invalid option: ${v}`)}}standardDeviation(v,w){typeof v=="object"&&(w=v,v=void 0);const m=this.variance(v,w);if(v===void 0)return Math.sqrt(m);for(let b=0;b<m.length;b++)m[b]=Math.sqrt(m[b]);return m}center(v,w={}){if(typeof v=="object"&&(w=v,v=void 0),typeof w!="object")throw new TypeError("options must be an object");const{center:m=this.mean(v)}=w;switch(v){case"row":{if(!e.isAnyArray(m))throw new TypeError("center must be an array");return o0(this,m),this}case"column":{if(!e.isAnyArray(m))throw new TypeError("center must be an array");return Z(this,m),this}case void 0:{if(typeof m!="number")throw new TypeError("center must be a number");return n0(this,m),this}default:throw new Error(`invalid option: ${v}`)}}scale(v,w={}){if(typeof v=="object"&&(w=v,v=void 0),typeof w!="object")throw new TypeError("options must be an object");let m=w.scale;switch(v){case"row":{if(m===void 0)m=s0(this);else if(!e.isAnyArray(m))throw new TypeError("scale must be an array");return S0(this,m),this}case"column":{if(m===void 0)m=r0(this);else if(!e.isAnyArray(m))throw new TypeError("scale must be an array");return p0(this,m),this}case void 0:{if(m===void 0)m=h0(this);else if(typeof m!="number")throw new TypeError("scale must be a number");return G(this,m),this}default:throw new Error(`invalid option: ${v}`)}}toString(v){return s(this,v)}[Symbol.iterator](){return this.entries()}*entries(){for(let v=0;v<this.rows;v++)for(let w=0;w<this.columns;w++)yield[v,w,this.get(v,w)]}*values(){for(let v=0;v<this.rows;v++)for(let w=0;w<this.columns;w++)yield this.get(v,w)}}Q.prototype.klass="Matrix",typeof Symbol<"u"&&(Q.prototype[Symbol.for("nodejs.util.inspect.custom")]=i);function M0(A,v){return A-v}function C0(A){return A.every(v=>typeof v=="number")}Q.random=Q.rand,Q.randomInt=Q.randInt,Q.diagonal=Q.diag,Q.prototype.diagonal=Q.prototype.diag,Q.identity=Q.eye,Q.prototype.negate=Q.prototype.neg,Q.prototype.tensorProduct=Q.prototype.kroneckerProduct;const Z1=class Z1 extends Q{constructor(w,m){super();w7(this,q1);A1(this,"data");if(Z1.isMatrix(w))v7(this,q1,y7).call(this,w.rows,w.columns),Z1.copy(w,this);else if(Number.isInteger(w)&&w>=0)v7(this,q1,y7).call(this,w,m);else if(e.isAnyArray(w)){const b=w;if(w=b.length,m=w?b[0].length:0,typeof m!="number")throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let S=0;S<w;S++){if(b[S].length!==m)throw new RangeError("Inconsistent array dimensions");if(!C0(b[S]))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(b[S]))}this.rows=w,this.columns=m}else throw new TypeError("First argument must be a positive number or an array")}set(w,m,b){return this.data[w][m]=b,this}get(w,m){return this.data[w][m]}removeRow(w){return h(this,w),this.data.splice(w,1),this.rows-=1,this}addRow(w,m){return m===void 0&&(m=w,w=this.rows),h(this,w,!0),m=Float64Array.from(g(this,m)),this.data.splice(w,0,m),this.rows+=1,this}removeColumn(w){p(this,w);for(let m=0;m<this.rows;m++){const b=new Float64Array(this.columns-1);for(let S=0;S<w;S++)b[S]=this.data[m][S];for(let S=w+1;S<this.columns;S++)b[S-1]=this.data[m][S];this.data[m]=b}return this.columns-=1,this}addColumn(w,m){typeof m>"u"&&(m=w,w=this.columns),p(this,w,!0),m=x(this,m);for(let b=0;b<this.rows;b++){const S=new Float64Array(this.columns+1);let q=0;for(;q<w;q++)S[q]=this.data[b][q];for(S[q++]=m[b];q<this.columns+1;q++)S[q]=this.data[b][q-1];this.data[b]=S}return this.columns+=1,this}};q1=new WeakSet,y7=function(w,m){if(this.data=[],Number.isInteger(m)&&m>=0)for(let b=0;b<w;b++)this.data.push(new Float64Array(m));else throw new TypeError("nColumns must be a positive integer");this.rows=w,this.columns=m};let e0=Z1;f(Q,e0);const o2=class o2 extends Q{constructor(w){super();w7(this,I1);if(e0.isMatrix(w)){if(!w.isSymmetric())throw new TypeError("not symmetric data");L5(this,I1,e0.copy(w,new e0(w.rows,w.rows)))}else if(Number.isInteger(w)&&w>=0)L5(this,I1,new e0(w,w));else if(L5(this,I1,new e0(w)),!this.isSymmetric())throw new TypeError("not symmetric data")}get size(){return q2(this,I1).size}get rows(){return q2(this,I1).rows}get columns(){return q2(this,I1).columns}get diagonalSize(){return this.rows}static isSymmetricMatrix(w){return e0.isMatrix(w)&&w.klassType==="SymmetricMatrix"}static zeros(w){return new this(w)}static ones(w){return new this(w).fill(1)}clone(){const w=new o2(this.diagonalSize);for(const[m,b,S]of this.upperRightEntries())w.set(m,b,S);return w}toMatrix(){return new e0(this)}get(w,m){return q2(this,I1).get(w,m)}set(w,m,b){return q2(this,I1).set(w,m,b),q2(this,I1).set(m,w,b),this}removeCross(w){return q2(this,I1).removeRow(w),q2(this,I1).removeColumn(w),this}addCross(w,m){m===void 0&&(m=w,w=this.diagonalSize);const b=m.slice();return b.splice(w,1),q2(this,I1).addRow(w,b),q2(this,I1).addColumn(w,m),this}applyMask(w){if(w.length!==this.diagonalSize)throw new RangeError("Mask size do not match with matrix size");const m=[];for(const[b,S]of w.entries())S||m.push(b);m.reverse();for(const b of m)this.removeCross(b);return this}toCompact(){const{diagonalSize:w}=this,m=new Array(w*(w+1)/2);for(let b=0,S=0,q=0;q<m.length;q++)m[q]=this.get(S,b),++b>=w&&(b=++S);return m}static fromCompact(w){const m=w.length,b=(Math.sqrt(8*m+1)-1)/2;if(!Number.isInteger(b))throw new TypeError(`This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(w)}`);const S=new o2(b);for(let q=0,j=0,V=0;V<m;V++)S.set(q,j,w[V]),++q>=b&&(q=++j);return S}*upperRightEntries(){for(let w=0,m=0;w<this.diagonalSize;void 0){const b=this.get(w,m);yield[w,m,b],++m>=this.diagonalSize&&(m=++w)}}*upperRightValues(){for(let w=0,m=0;w<this.diagonalSize;void 0)yield this.get(w,m),++m>=this.diagonalSize&&(m=++w)}};I1=new WeakMap;let F0=o2;F0.prototype.klassType="SymmetricMatrix";class O0 extends F0{static isDistanceMatrix(v){return F0.isSymmetricMatrix(v)&&v.klassSubType==="DistanceMatrix"}constructor(v){if(super(v),!this.isDistance())throw new TypeError("Provided arguments do no produce a distance matrix")}set(v,w,m){return v===w&&(m=0),super.set(v,w,m)}addCross(v,w){return w===void 0&&(w=v,v=this.diagonalSize),w=w.slice(),w[v]=0,super.addCross(v,w)}toSymmetricMatrix(){return new F0(this)}clone(){const v=new O0(this.diagonalSize);for(const[w,m,b]of this.upperRightEntries())w!==m&&v.set(w,m,b);return v}toCompact(){const{diagonalSize:v}=this,w=(v-1)*v/2,m=new Array(w);for(let b=1,S=0,q=0;q<m.length;q++)m[q]=this.get(S,b),++b>=v&&(b=++S+1);return m}static fromCompact(v){const w=v.length;if(w===0)return new this(0);const m=(Math.sqrt(8*w+1)+1)/2;if(!Number.isInteger(m))throw new TypeError(`This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(v)}`);const b=new this(m);for(let S=1,q=0,j=0;j<w;j++)b.set(S,q,v[j]),++S>=m&&(S=++q+1);return b}}O0.prototype.klassSubType="DistanceMatrix";class L0 extends Q{constructor(v,w,m){super(),this.matrix=v,this.rows=w,this.columns=m}}class B0 extends L0{constructor(v,w){p(v,w),super(v,v.rows,1),this.column=w}set(v,w,m){return this.matrix.set(v,this.column,m),this}get(v){return this.matrix.get(v,this.column)}}class H0 extends L0{constructor(v,w){y(v,w),super(v,v.rows,w.length),this.columnIndices=w}set(v,w,m){return this.matrix.set(v,this.columnIndices[w],m),this}get(v,w){return this.matrix.get(v,this.columnIndices[w])}}class a1 extends L0{constructor(v){super(v,v.rows,v.columns)}set(v,w,m){return this.matrix.set(v,this.columns-w-1,m),this}get(v,w){return this.matrix.get(v,this.columns-w-1)}}class c1 extends L0{constructor(v){super(v,v.rows,v.columns)}set(v,w,m){return this.matrix.set(this.rows-v-1,w,m),this}get(v,w){return this.matrix.get(this.rows-v-1,w)}}class G0 extends L0{constructor(v,w){h(v,w),super(v,1,v.columns),this.row=w}set(v,w,m){return this.matrix.set(this.row,w,m),this}get(v,w){return this.matrix.get(this.row,w)}}class j0 extends L0{constructor(v,w){D(v,w),super(v,w.length,v.columns),this.rowIndices=w}set(v,w,m){return this.matrix.set(this.rowIndices[v],w,m),this}get(v,w){return this.matrix.get(this.rowIndices[v],w)}}class P0 extends L0{constructor(v,w,m){D(v,w),y(v,m),super(v,w.length,m.length),this.rowIndices=w,this.columnIndices=m}set(v,w,m){return this.matrix.set(this.rowIndices[v],this.columnIndices[w],m),this}get(v,w){return this.matrix.get(this.rowIndices[v],this.columnIndices[w])}}class d1 extends L0{constructor(v,w,m,b,S){E(v,w,m,b,S),super(v,m-w+1,S-b+1),this.startRow=w,this.startColumn=b}set(v,w,m){return this.matrix.set(this.startRow+v,this.startColumn+w,m),this}get(v,w){return this.matrix.get(this.startRow+v,this.startColumn+w)}}class r1 extends L0{constructor(v){super(v,v.columns,v.rows)}set(v,w,m){return this.matrix.set(w,v,m),this}get(v,w){return this.matrix.get(w,v)}}class u1 extends Q{constructor(v,w={}){const{rows:m=1}=w;if(v.length%m!==0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=m,this.columns=v.length/m,this.data=v}set(v,w,m){let b=this._calculateIndex(v,w);return this.data[b]=m,this}get(v,w){let m=this._calculateIndex(v,w);return this.data[m]}_calculateIndex(v,w){return v*this.columns+w}}class w0 extends Q{constructor(v){super(),this.data=v,this.rows=v.length,this.columns=v[0].length}set(v,w,m){return this.data[v][w]=m,this}get(v,w){return this.data[v][w]}}function Z0(A,v){if(e.isAnyArray(A))return A[0]&&e.isAnyArray(A[0])?new w0(A):new u1(A,v);throw new Error("the argument is not an array")}class K0{constructor(v){v=w0.checkMatrix(v);let w=v.clone(),m=w.rows,b=w.columns,S=new Float64Array(m),q=1,j,V,Y,u0,W,D0,I0,m0,A0;for(j=0;j<m;j++)S[j]=j;for(m0=new Float64Array(m),V=0;V<b;V++){for(j=0;j<m;j++)m0[j]=w.get(j,V);for(j=0;j<m;j++){for(A0=Math.min(j,V),W=0,Y=0;Y<A0;Y++)W+=w.get(j,Y)*m0[Y];m0[j]-=W,w.set(j,V,m0[j])}for(u0=V,j=V+1;j<m;j++)Math.abs(m0[j])>Math.abs(m0[u0])&&(u0=j);if(u0!==V){for(Y=0;Y<b;Y++)D0=w.get(u0,Y),w.set(u0,Y,w.get(V,Y)),w.set(V,Y,D0);I0=S[u0],S[u0]=S[V],S[V]=I0,q=-q}if(V<m&&w.get(V,V)!==0)for(j=V+1;j<m;j++)w.set(j,V,w.get(j,V)/w.get(V,V))}this.LU=w,this.pivotVector=S,this.pivotSign=q}isSingular(){let v=this.LU,w=v.columns;for(let m=0;m<w;m++)if(v.get(m,m)===0)return!0;return!1}solve(v){v=e0.checkMatrix(v);let w=this.LU;if(w.rows!==v.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let b=v.columns,S=v.subMatrixRow(this.pivotVector,0,b-1),q=w.columns,j,V,Y;for(Y=0;Y<q;Y++)for(j=Y+1;j<q;j++)for(V=0;V<b;V++)S.set(j,V,S.get(j,V)-S.get(Y,V)*w.get(j,Y));for(Y=q-1;Y>=0;Y--){for(V=0;V<b;V++)S.set(Y,V,S.get(Y,V)/w.get(Y,Y));for(j=0;j<Y;j++)for(V=0;V<b;V++)S.set(j,V,S.get(j,V)-S.get(Y,V)*w.get(j,Y))}return S}get determinant(){let v=this.LU;if(!v.isSquare())throw new Error("Matrix must be square");let w=this.pivotSign,m=v.columns;for(let b=0;b<m;b++)w*=v.get(b,b);return w}get lowerTriangularMatrix(){let v=this.LU,w=v.rows,m=v.columns,b=new e0(w,m);for(let S=0;S<w;S++)for(let q=0;q<m;q++)S>q?b.set(S,q,v.get(S,q)):S===q?b.set(S,q,1):b.set(S,q,0);return b}get upperTriangularMatrix(){let v=this.LU,w=v.rows,m=v.columns,b=new e0(w,m);for(let S=0;S<w;S++)for(let q=0;q<m;q++)S<=q?b.set(S,q,v.get(S,q)):b.set(S,q,0);return b}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function J0(A,v){let w=0;return Math.abs(A)>Math.abs(v)?(w=v/A,Math.abs(A)*Math.sqrt(1+w*w)):v!==0?(w=A/v,Math.abs(v)*Math.sqrt(1+w*w)):0}class H{constructor(v){v=w0.checkMatrix(v);let w=v.clone(),m=v.rows,b=v.columns,S=new Float64Array(b),q,j,V,Y;for(V=0;V<b;V++){let u0=0;for(q=V;q<m;q++)u0=J0(u0,w.get(q,V));if(u0!==0){for(w.get(V,V)<0&&(u0=-u0),q=V;q<m;q++)w.set(q,V,w.get(q,V)/u0);for(w.set(V,V,w.get(V,V)+1),j=V+1;j<b;j++){for(Y=0,q=V;q<m;q++)Y+=w.get(q,V)*w.get(q,j);for(Y=-Y/w.get(V,V),q=V;q<m;q++)w.set(q,j,w.get(q,j)+Y*w.get(q,V))}}S[V]=-u0}this.QR=w,this.Rdiag=S}solve(v){v=e0.checkMatrix(v);let w=this.QR,m=w.rows;if(v.rows!==m)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let b=v.columns,S=v.clone(),q=w.columns,j,V,Y,u0;for(Y=0;Y<q;Y++)for(V=0;V<b;V++){for(u0=0,j=Y;j<m;j++)u0+=w.get(j,Y)*S.get(j,V);for(u0=-u0/w.get(Y,Y),j=Y;j<m;j++)S.set(j,V,S.get(j,V)+u0*w.get(j,Y))}for(Y=q-1;Y>=0;Y--){for(V=0;V<b;V++)S.set(Y,V,S.get(Y,V)/this.Rdiag[Y]);for(j=0;j<Y;j++)for(V=0;V<b;V++)S.set(j,V,S.get(j,V)-S.get(Y,V)*w.get(j,Y))}return S.subMatrix(0,q-1,0,b-1)}isFullRank(){let v=this.QR.columns;for(let w=0;w<v;w++)if(this.Rdiag[w]===0)return!1;return!0}get upperTriangularMatrix(){let v=this.QR,w=v.columns,m=new e0(w,w),b,S;for(b=0;b<w;b++)for(S=0;S<w;S++)b<S?m.set(b,S,v.get(b,S)):b===S?m.set(b,S,this.Rdiag[b]):m.set(b,S,0);return m}get orthogonalMatrix(){let v=this.QR,w=v.rows,m=v.columns,b=new e0(w,m),S,q,j,V;for(j=m-1;j>=0;j--){for(S=0;S<w;S++)b.set(S,j,0);for(b.set(j,j,1),q=j;q<m;q++)if(v.get(j,j)!==0){for(V=0,S=j;S<w;S++)V+=v.get(S,j)*b.get(S,q);for(V=-V/v.get(j,j),S=j;S<w;S++)b.set(S,q,b.get(S,q)+V*v.get(S,j))}}return b}}class t0{constructor(v,w={}){if(v=w0.checkMatrix(v),v.isEmpty())throw new Error("Matrix must be non-empty");let m=v.rows,b=v.columns;const{computeLeftSingularVectors:S=!0,computeRightSingularVectors:q=!0,autoTranspose:j=!1}=w;let V=!!S,Y=!!q,u0=!1,W;if(m<b)if(!j)W=v.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else{W=v.transpose(),m=W.rows,b=W.columns,u0=!0;let a0=V;V=Y,Y=a0}else W=v.clone();let D0=Math.min(m,b),I0=Math.min(m+1,b),m0=new Float64Array(I0),A0=new e0(m,D0),Y0=new e0(b,b),J=new Float64Array(b),N0=new Float64Array(m),W0=new Float64Array(I0);for(let a0=0;a0<I0;a0++)W0[a0]=a0;let g1=Math.min(m-1,b),m1=Math.max(0,Math.min(b-2,m)),k1=Math.max(g1,m1);for(let a0=0;a0<k1;a0++){if(a0<g1){m0[a0]=0;for(let T0=a0;T0<m;T0++)m0[a0]=J0(m0[a0],W.get(T0,a0));if(m0[a0]!==0){W.get(a0,a0)<0&&(m0[a0]=-m0[a0]);for(let T0=a0;T0<m;T0++)W.set(T0,a0,W.get(T0,a0)/m0[a0]);W.set(a0,a0,W.get(a0,a0)+1)}m0[a0]=-m0[a0]}for(let T0=a0+1;T0<b;T0++){if(a0<g1&&m0[a0]!==0){let X0=0;for(let U0=a0;U0<m;U0++)X0+=W.get(U0,a0)*W.get(U0,T0);X0=-X0/W.get(a0,a0);for(let U0=a0;U0<m;U0++)W.set(U0,T0,W.get(U0,T0)+X0*W.get(U0,a0))}J[T0]=W.get(a0,T0)}if(V&&a0<g1)for(let T0=a0;T0<m;T0++)A0.set(T0,a0,W.get(T0,a0));if(a0<m1){J[a0]=0;for(let T0=a0+1;T0<b;T0++)J[a0]=J0(J[a0],J[T0]);if(J[a0]!==0){J[a0+1]<0&&(J[a0]=0-J[a0]);for(let T0=a0+1;T0<b;T0++)J[T0]/=J[a0];J[a0+1]+=1}if(J[a0]=-J[a0],a0+1<m&&J[a0]!==0){for(let T0=a0+1;T0<m;T0++)N0[T0]=0;for(let T0=a0+1;T0<m;T0++)for(let X0=a0+1;X0<b;X0++)N0[T0]+=J[X0]*W.get(T0,X0);for(let T0=a0+1;T0<b;T0++){let X0=-J[T0]/J[a0+1];for(let U0=a0+1;U0<m;U0++)W.set(U0,T0,W.get(U0,T0)+X0*N0[U0])}}if(Y)for(let T0=a0+1;T0<b;T0++)Y0.set(T0,a0,J[T0])}}let i1=Math.min(b,m+1);if(g1<b&&(m0[g1]=W.get(g1,g1)),m<i1&&(m0[i1-1]=0),m1+1<i1&&(J[m1]=W.get(m1,i1-1)),J[i1-1]=0,V){for(let a0=g1;a0<D0;a0++){for(let T0=0;T0<m;T0++)A0.set(T0,a0,0);A0.set(a0,a0,1)}for(let a0=g1-1;a0>=0;a0--)if(m0[a0]!==0){for(let T0=a0+1;T0<D0;T0++){let X0=0;for(let U0=a0;U0<m;U0++)X0+=A0.get(U0,a0)*A0.get(U0,T0);X0=-X0/A0.get(a0,a0);for(let U0=a0;U0<m;U0++)A0.set(U0,T0,A0.get(U0,T0)+X0*A0.get(U0,a0))}for(let T0=a0;T0<m;T0++)A0.set(T0,a0,-A0.get(T0,a0));A0.set(a0,a0,1+A0.get(a0,a0));for(let T0=0;T0<a0-1;T0++)A0.set(T0,a0,0)}else{for(let T0=0;T0<m;T0++)A0.set(T0,a0,0);A0.set(a0,a0,1)}}if(Y)for(let a0=b-1;a0>=0;a0--){if(a0<m1&&J[a0]!==0)for(let T0=a0+1;T0<b;T0++){let X0=0;for(let U0=a0+1;U0<b;U0++)X0+=Y0.get(U0,a0)*Y0.get(U0,T0);X0=-X0/Y0.get(a0+1,a0);for(let U0=a0+1;U0<b;U0++)Y0.set(U0,T0,Y0.get(U0,T0)+X0*Y0.get(U0,a0))}for(let T0=0;T0<b;T0++)Y0.set(T0,a0,0);Y0.set(a0,a0,1)}let R0=i1-1,_1=Number.EPSILON;for(;i1>0;){let a0,T0;for(a0=i1-2;a0>=-1&&a0!==-1;a0--){const X0=Number.MIN_VALUE+_1*Math.abs(m0[a0]+Math.abs(m0[a0+1]));if(Math.abs(J[a0])<=X0||Number.isNaN(J[a0])){J[a0]=0;break}}if(a0===i1-2)T0=4;else{let X0;for(X0=i1-1;X0>=a0&&X0!==a0;X0--){let U0=(X0!==i1?Math.abs(J[X0]):0)+(X0!==a0+1?Math.abs(J[X0-1]):0);if(Math.abs(m0[X0])<=_1*U0){m0[X0]=0;break}}X0===a0?T0=3:X0===i1-1?T0=1:(T0=2,a0=X0)}switch(a0++,T0){case 1:{let X0=J[i1-2];J[i1-2]=0;for(let U0=i1-2;U0>=a0;U0--){let N1=J0(m0[U0],X0),S1=m0[U0]/N1,E1=X0/N1;if(m0[U0]=N1,U0!==a0&&(X0=-E1*J[U0-1],J[U0-1]=S1*J[U0-1]),Y)for(let O1=0;O1<b;O1++)N1=S1*Y0.get(O1,U0)+E1*Y0.get(O1,i1-1),Y0.set(O1,i1-1,-E1*Y0.get(O1,U0)+S1*Y0.get(O1,i1-1)),Y0.set(O1,U0,N1)}break}case 2:{let X0=J[a0-1];J[a0-1]=0;for(let U0=a0;U0<i1;U0++){let N1=J0(m0[U0],X0),S1=m0[U0]/N1,E1=X0/N1;if(m0[U0]=N1,X0=-E1*J[U0],J[U0]=S1*J[U0],V)for(let O1=0;O1<m;O1++)N1=S1*A0.get(O1,U0)+E1*A0.get(O1,a0-1),A0.set(O1,a0-1,-E1*A0.get(O1,U0)+S1*A0.get(O1,a0-1)),A0.set(O1,U0,N1)}break}case 3:{const X0=Math.max(Math.abs(m0[i1-1]),Math.abs(m0[i1-2]),Math.abs(J[i1-2]),Math.abs(m0[a0]),Math.abs(J[a0])),U0=m0[i1-1]/X0,N1=m0[i1-2]/X0,S1=J[i1-2]/X0,E1=m0[a0]/X0,O1=J[a0]/X0,P1=((N1+U0)*(N1-U0)+S1*S1)/2,E2=U0*S1*(U0*S1);let X1=0;(P1!==0||E2!==0)&&(P1<0?X1=0-Math.sqrt(P1*P1+E2):X1=Math.sqrt(P1*P1+E2),X1=E2/(P1+X1));let F2=(E1+U0)*(E1-U0)+X1,w2=E1*O1;for(let b1=a0;b1<i1-1;b1++){let j1=J0(F2,w2);j1===0&&(j1=Number.MIN_VALUE);let t2=F2/j1,p2=w2/j1;if(b1!==a0&&(J[b1-1]=j1),F2=t2*m0[b1]+p2*J[b1],J[b1]=t2*J[b1]-p2*m0[b1],w2=p2*m0[b1+1],m0[b1+1]=t2*m0[b1+1],Y)for(let G1=0;G1<b;G1++)j1=t2*Y0.get(G1,b1)+p2*Y0.get(G1,b1+1),Y0.set(G1,b1+1,-p2*Y0.get(G1,b1)+t2*Y0.get(G1,b1+1)),Y0.set(G1,b1,j1);if(j1=J0(F2,w2),j1===0&&(j1=Number.MIN_VALUE),t2=F2/j1,p2=w2/j1,m0[b1]=j1,F2=t2*J[b1]+p2*m0[b1+1],m0[b1+1]=-p2*J[b1]+t2*m0[b1+1],w2=p2*J[b1+1],J[b1+1]=t2*J[b1+1],V&&b1<m-1)for(let G1=0;G1<m;G1++)j1=t2*A0.get(G1,b1)+p2*A0.get(G1,b1+1),A0.set(G1,b1+1,-p2*A0.get(G1,b1)+t2*A0.get(G1,b1+1)),A0.set(G1,b1,j1)}J[i1-2]=F2;break}case 4:{if(m0[a0]<=0&&(m0[a0]=m0[a0]<0?-m0[a0]:0,Y))for(let X0=0;X0<=R0;X0++)Y0.set(X0,a0,-Y0.get(X0,a0));for(;a0<R0&&!(m0[a0]>=m0[a0+1]);){let X0=m0[a0];if(m0[a0]=m0[a0+1],m0[a0+1]=X0,Y&&a0<b-1)for(let U0=0;U0<b;U0++)X0=Y0.get(U0,a0+1),Y0.set(U0,a0+1,Y0.get(U0,a0)),Y0.set(U0,a0,X0);if(V&&a0<m-1)for(let U0=0;U0<m;U0++)X0=A0.get(U0,a0+1),A0.set(U0,a0+1,A0.get(U0,a0)),A0.set(U0,a0,X0);a0++}i1--;break}}}if(u0){let a0=Y0;Y0=A0,A0=a0}this.m=m,this.n=b,this.s=m0,this.U=A0,this.V=Y0}solve(v){let w=v,m=this.threshold,b=this.s.length,S=e0.zeros(b,b);for(let D0=0;D0<b;D0++)Math.abs(this.s[D0])<=m?S.set(D0,D0,0):S.set(D0,D0,1/this.s[D0]);let q=this.U,j=this.rightSingularVectors,V=j.mmul(S),Y=j.rows,u0=q.rows,W=e0.zeros(Y,u0);for(let D0=0;D0<Y;D0++)for(let I0=0;I0<u0;I0++){let m0=0;for(let A0=0;A0<b;A0++)m0+=V.get(D0,A0)*q.get(I0,A0);W.set(D0,I0,m0)}return W.mmul(w)}solveForDiagonal(v){return this.solve(e0.diag(v))}inverse(){let v=this.V,w=this.threshold,m=v.rows,b=v.columns,S=new e0(m,this.s.length);for(let u0=0;u0<m;u0++)for(let W=0;W<b;W++)Math.abs(this.s[W])>w&&S.set(u0,W,v.get(u0,W)/this.s[W]);let q=this.U,j=q.rows,V=q.columns,Y=new e0(m,j);for(let u0=0;u0<m;u0++)for(let W=0;W<j;W++){let D0=0;for(let I0=0;I0<V;I0++)D0+=S.get(u0,I0)*q.get(W,I0);Y.set(u0,W,D0)}return Y}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let v=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,w=0,m=this.s;for(let b=0,S=m.length;b<S;b++)m[b]>v&&w++;return w}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return e0.diag(this.s)}}function f0(A,v=!1){return A=w0.checkMatrix(A),v?new t0(A).inverse():c0(A,e0.eye(A.rows))}function c0(A,v,w=!1){return A=w0.checkMatrix(A),v=w0.checkMatrix(v),w?new t0(A).solve(v):A.isSquare()?new K0(A).solve(v):new H(A).solve(v)}function d0(A){if(A=e0.checkMatrix(A),A.isSquare()){if(A.columns===0)return 1;let v,w,m,b;if(A.columns===2)return v=A.get(0,0),w=A.get(0,1),m=A.get(1,0),b=A.get(1,1),v*b-w*m;if(A.columns===3){let S,q,j;return S=new P0(A,[1,2],[1,2]),q=new P0(A,[1,2],[0,2]),j=new P0(A,[1,2],[0,1]),v=A.get(0,0),w=A.get(0,1),m=A.get(0,2),v*d0(S)-w*d0(q)+m*d0(j)}else return new K0(A).determinant}else throw Error("determinant can only be calculated for a square matrix")}function g0(A,v){let w=[];for(let m=0;m<A;m++)m!==v&&w.push(m);return w}function y0(A,v,w,m=1e-9,b=1e-9){if(A>b)return new Array(v.rows+1).fill(0);{let S=v.addRow(w,[0]);for(let q=0;q<S.rows;q++)Math.abs(S.get(q,0))<m&&S.set(q,0,0);return S.to1DArray()}}function E0(A,v={}){const{thresholdValue:w=1e-9,thresholdError:m=1e-9}=v;A=e0.checkMatrix(A);let b=A.rows,S=new e0(b,b);for(let q=0;q<b;q++){let j=e0.columnVector(A.getRow(q)),V=A.subMatrixRow(g0(b,q)).transpose(),u0=new t0(V).solve(j),W=e0.sub(j,V.mmul(u0)).abs().max();S.setRow(q,y0(W,u0,q,w,m))}return S}function k0(A,v=Number.EPSILON){if(A=e0.checkMatrix(A),A.isEmpty())return A.transpose();let w=new t0(A,{autoTranspose:!0}),m=w.leftSingularVectors,b=w.rightSingularVectors,S=w.diagonal;for(let q=0;q<S.length;q++)Math.abs(S[q])>v?S[q]=1/S[q]:S[q]=0;return b.mmul(e0.diag(S).mmul(m.transpose()))}function _0(A,v=A,w={}){A=new e0(A);let m=!1;if(typeof v=="object"&&!e0.isMatrix(v)&&!e.isAnyArray(v)?(w=v,v=A,m=!0):v=new e0(v),A.rows!==v.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:b=!0}=w;b&&(A=A.center("column"),m||(v=v.center("column")));const S=A.transpose().mmul(v);for(let q=0;q<S.rows;q++)for(let j=0;j<S.columns;j++)S.set(q,j,S.get(q,j)*(1/(A.rows-1)));return S}function Q0(A,v=A,w={}){A=new e0(A);let m=!1;if(typeof v=="object"&&!e0.isMatrix(v)&&!e.isAnyArray(v)?(w=v,v=A,m=!0):v=new e0(v),A.rows!==v.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:b=!0,scale:S=!0}=w;b&&(A.center("column"),m||v.center("column")),S&&(A.scale("column"),m||v.scale("column"));const q=A.standardDeviation("column",{unbiased:!0}),j=m?q:v.standardDeviation("column",{unbiased:!0}),V=A.transpose().mmul(v);for(let Y=0;Y<V.rows;Y++)for(let u0=0;u0<V.columns;u0++)V.set(Y,u0,V.get(Y,u0)*(1/(q[Y]*j[u0]))*(1/(A.rows-1)));return V}class e1{constructor(v,w={}){const{assumeSymmetric:m=!1}=w;if(v=w0.checkMatrix(v),!v.isSquare())throw new Error("Matrix is not a square matrix");if(v.isEmpty())throw new Error("Matrix must be non-empty");let b=v.columns,S=new e0(b,b),q=new Float64Array(b),j=new Float64Array(b),V=v,Y,u0,W=!1;if(m?W=!0:W=v.isSymmetric(),W){for(Y=0;Y<b;Y++)for(u0=0;u0<b;u0++)S.set(Y,u0,V.get(Y,u0));p1(b,j,q,S),D1(b,j,q,S)}else{let D0=new e0(b,b),I0=new Float64Array(b);for(u0=0;u0<b;u0++)for(Y=0;Y<b;Y++)D0.set(Y,u0,V.get(Y,u0));y1(b,D0,I0,S),C1(b,j,q,S,D0)}this.n=b,this.e=j,this.d=q,this.V=S}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let v=this.n,w=this.e,m=this.d,b=new e0(v,v),S,q;for(S=0;S<v;S++){for(q=0;q<v;q++)b.set(S,q,0);b.set(S,S,m[S]),w[S]>0?b.set(S,S+1,w[S]):w[S]<0&&b.set(S,S-1,w[S])}return b}}function p1(A,v,w,m){let b,S,q,j,V,Y,u0,W;for(V=0;V<A;V++)w[V]=m.get(A-1,V);for(j=A-1;j>0;j--){for(W=0,q=0,Y=0;Y<j;Y++)W=W+Math.abs(w[Y]);if(W===0)for(v[j]=w[j-1],V=0;V<j;V++)w[V]=m.get(j-1,V),m.set(j,V,0),m.set(V,j,0);else{for(Y=0;Y<j;Y++)w[Y]/=W,q+=w[Y]*w[Y];for(b=w[j-1],S=Math.sqrt(q),b>0&&(S=-S),v[j]=W*S,q=q-b*S,w[j-1]=b-S,V=0;V<j;V++)v[V]=0;for(V=0;V<j;V++){for(b=w[V],m.set(V,j,b),S=v[V]+m.get(V,V)*b,Y=V+1;Y<=j-1;Y++)S+=m.get(Y,V)*w[Y],v[Y]+=m.get(Y,V)*b;v[V]=S}for(b=0,V=0;V<j;V++)v[V]/=q,b+=v[V]*w[V];for(u0=b/(q+q),V=0;V<j;V++)v[V]-=u0*w[V];for(V=0;V<j;V++){for(b=w[V],S=v[V],Y=V;Y<=j-1;Y++)m.set(Y,V,m.get(Y,V)-(b*v[Y]+S*w[Y]));w[V]=m.get(j-1,V),m.set(j,V,0)}}w[j]=q}for(j=0;j<A-1;j++){if(m.set(A-1,j,m.get(j,j)),m.set(j,j,1),q=w[j+1],q!==0){for(Y=0;Y<=j;Y++)w[Y]=m.get(Y,j+1)/q;for(V=0;V<=j;V++){for(S=0,Y=0;Y<=j;Y++)S+=m.get(Y,j+1)*m.get(Y,V);for(Y=0;Y<=j;Y++)m.set(Y,V,m.get(Y,V)-S*w[Y])}}for(Y=0;Y<=j;Y++)m.set(Y,j+1,0)}for(V=0;V<A;V++)w[V]=m.get(A-1,V),m.set(A-1,V,0);m.set(A-1,A-1,1),v[0]=0}function D1(A,v,w,m){let b,S,q,j,V,Y,u0,W,D0,I0,m0,A0,Y0,J,N0,W0;for(q=1;q<A;q++)v[q-1]=v[q];v[A-1]=0;let g1=0,m1=0,k1=Number.EPSILON;for(Y=0;Y<A;Y++){for(m1=Math.max(m1,Math.abs(w[Y])+Math.abs(v[Y])),u0=Y;u0<A&&!(Math.abs(v[u0])<=k1*m1);)u0++;if(u0>Y)do{for(b=w[Y],W=(w[Y+1]-b)/(2*v[Y]),D0=J0(W,1),W<0&&(D0=-D0),w[Y]=v[Y]/(W+D0),w[Y+1]=v[Y]*(W+D0),I0=w[Y+1],S=b-w[Y],q=Y+2;q<A;q++)w[q]-=S;for(g1=g1+S,W=w[u0],m0=1,A0=m0,Y0=m0,J=v[Y+1],N0=0,W0=0,q=u0-1;q>=Y;q--)for(Y0=A0,A0=m0,W0=N0,b=m0*v[q],S=m0*W,D0=J0(W,v[q]),v[q+1]=N0*D0,N0=v[q]/D0,m0=W/D0,W=m0*w[q]-N0*b,w[q+1]=S+N0*(m0*b+N0*w[q]),V=0;V<A;V++)S=m.get(V,q+1),m.set(V,q+1,N0*m.get(V,q)+m0*S),m.set(V,q,m0*m.get(V,q)-N0*S);W=-N0*W0*Y0*J*v[Y]/I0,v[Y]=N0*W,w[Y]=m0*W}while(Math.abs(v[Y])>k1*m1);w[Y]=w[Y]+g1,v[Y]=0}for(q=0;q<A-1;q++){for(V=q,W=w[q],j=q+1;j<A;j++)w[j]<W&&(V=j,W=w[j]);if(V!==q)for(w[V]=w[q],w[q]=W,j=0;j<A;j++)W=m.get(j,q),m.set(j,q,m.get(j,V)),m.set(j,V,W)}}function y1(A,v,w,m){let b=0,S=A-1,q,j,V,Y,u0,W,D0;for(W=b+1;W<=S-1;W++){for(D0=0,Y=W;Y<=S;Y++)D0=D0+Math.abs(v.get(Y,W-1));if(D0!==0){for(V=0,Y=S;Y>=W;Y--)w[Y]=v.get(Y,W-1)/D0,V+=w[Y]*w[Y];for(j=Math.sqrt(V),w[W]>0&&(j=-j),V=V-w[W]*j,w[W]=w[W]-j,u0=W;u0<A;u0++){for(q=0,Y=S;Y>=W;Y--)q+=w[Y]*v.get(Y,u0);for(q=q/V,Y=W;Y<=S;Y++)v.set(Y,u0,v.get(Y,u0)-q*w[Y])}for(Y=0;Y<=S;Y++){for(q=0,u0=S;u0>=W;u0--)q+=w[u0]*v.get(Y,u0);for(q=q/V,u0=W;u0<=S;u0++)v.set(Y,u0,v.get(Y,u0)-q*w[u0])}w[W]=D0*w[W],v.set(W,W-1,D0*j)}}for(Y=0;Y<A;Y++)for(u0=0;u0<A;u0++)m.set(Y,u0,Y===u0?1:0);for(W=S-1;W>=b+1;W--)if(v.get(W,W-1)!==0){for(Y=W+1;Y<=S;Y++)w[Y]=v.get(Y,W-1);for(u0=W;u0<=S;u0++){for(j=0,Y=W;Y<=S;Y++)j+=w[Y]*m.get(Y,u0);for(j=j/w[W]/v.get(W,W-1),Y=W;Y<=S;Y++)m.set(Y,u0,m.get(Y,u0)+j*w[Y])}}}function C1(A,v,w,m,b){let S=A-1,q=0,j=A-1,V=Number.EPSILON,Y=0,u0=0,W=0,D0=0,I0=0,m0=0,A0=0,Y0=0,J,N0,W0,g1,m1,k1,i1,R0,_1,a0,T0,X0,U0,N1,S1;for(J=0;J<A;J++)for((J<q||J>j)&&(w[J]=b.get(J,J),v[J]=0),N0=Math.max(J-1,0);N0<A;N0++)u0=u0+Math.abs(b.get(J,N0));for(;S>=q;){for(g1=S;g1>q&&(m0=Math.abs(b.get(g1-1,g1-1))+Math.abs(b.get(g1,g1)),m0===0&&(m0=u0),!(Math.abs(b.get(g1,g1-1))<V*m0));)g1--;if(g1===S)b.set(S,S,b.get(S,S)+Y),w[S]=b.get(S,S),v[S]=0,S--,Y0=0;else if(g1===S-1){if(i1=b.get(S,S-1)*b.get(S-1,S),W=(b.get(S-1,S-1)-b.get(S,S))/2,D0=W*W+i1,A0=Math.sqrt(Math.abs(D0)),b.set(S,S,b.get(S,S)+Y),b.set(S-1,S-1,b.get(S-1,S-1)+Y),R0=b.get(S,S),D0>=0){for(A0=W>=0?W+A0:W-A0,w[S-1]=R0+A0,w[S]=w[S-1],A0!==0&&(w[S]=R0-i1/A0),v[S-1]=0,v[S]=0,R0=b.get(S,S-1),m0=Math.abs(R0)+Math.abs(A0),W=R0/m0,D0=A0/m0,I0=Math.sqrt(W*W+D0*D0),W=W/I0,D0=D0/I0,N0=S-1;N0<A;N0++)A0=b.get(S-1,N0),b.set(S-1,N0,D0*A0+W*b.get(S,N0)),b.set(S,N0,D0*b.get(S,N0)-W*A0);for(J=0;J<=S;J++)A0=b.get(J,S-1),b.set(J,S-1,D0*A0+W*b.get(J,S)),b.set(J,S,D0*b.get(J,S)-W*A0);for(J=q;J<=j;J++)A0=m.get(J,S-1),m.set(J,S-1,D0*A0+W*m.get(J,S)),m.set(J,S,D0*m.get(J,S)-W*A0)}else w[S-1]=R0+W,w[S]=R0+W,v[S-1]=A0,v[S]=-A0;S=S-2,Y0=0}else{if(R0=b.get(S,S),_1=0,i1=0,g1<S&&(_1=b.get(S-1,S-1),i1=b.get(S,S-1)*b.get(S-1,S)),Y0===10){for(Y+=R0,J=q;J<=S;J++)b.set(J,J,b.get(J,J)-R0);m0=Math.abs(b.get(S,S-1))+Math.abs(b.get(S-1,S-2)),R0=_1=.75*m0,i1=-.4375*m0*m0}if(Y0===30&&(m0=(_1-R0)/2,m0=m0*m0+i1,m0>0)){for(m0=Math.sqrt(m0),_1<R0&&(m0=-m0),m0=R0-i1/((_1-R0)/2+m0),J=q;J<=S;J++)b.set(J,J,b.get(J,J)-m0);Y+=m0,R0=_1=i1=.964}for(Y0=Y0+1,m1=S-2;m1>=g1&&(A0=b.get(m1,m1),I0=R0-A0,m0=_1-A0,W=(I0*m0-i1)/b.get(m1+1,m1)+b.get(m1,m1+1),D0=b.get(m1+1,m1+1)-A0-I0-m0,I0=b.get(m1+2,m1+1),m0=Math.abs(W)+Math.abs(D0)+Math.abs(I0),W=W/m0,D0=D0/m0,I0=I0/m0,!(m1===g1||Math.abs(b.get(m1,m1-1))*(Math.abs(D0)+Math.abs(I0))<V*(Math.abs(W)*(Math.abs(b.get(m1-1,m1-1))+Math.abs(A0)+Math.abs(b.get(m1+1,m1+1))))));)m1--;for(J=m1+2;J<=S;J++)b.set(J,J-2,0),J>m1+2&&b.set(J,J-3,0);for(W0=m1;W0<=S-1&&(N1=W0!==S-1,W0!==m1&&(W=b.get(W0,W0-1),D0=b.get(W0+1,W0-1),I0=N1?b.get(W0+2,W0-1):0,R0=Math.abs(W)+Math.abs(D0)+Math.abs(I0),R0!==0&&(W=W/R0,D0=D0/R0,I0=I0/R0)),R0!==0);W0++)if(m0=Math.sqrt(W*W+D0*D0+I0*I0),W<0&&(m0=-m0),m0!==0){for(W0!==m1?b.set(W0,W0-1,-m0*R0):g1!==m1&&b.set(W0,W0-1,-b.get(W0,W0-1)),W=W+m0,R0=W/m0,_1=D0/m0,A0=I0/m0,D0=D0/W,I0=I0/W,N0=W0;N0<A;N0++)W=b.get(W0,N0)+D0*b.get(W0+1,N0),N1&&(W=W+I0*b.get(W0+2,N0),b.set(W0+2,N0,b.get(W0+2,N0)-W*A0)),b.set(W0,N0,b.get(W0,N0)-W*R0),b.set(W0+1,N0,b.get(W0+1,N0)-W*_1);for(J=0;J<=Math.min(S,W0+3);J++)W=R0*b.get(J,W0)+_1*b.get(J,W0+1),N1&&(W=W+A0*b.get(J,W0+2),b.set(J,W0+2,b.get(J,W0+2)-W*I0)),b.set(J,W0,b.get(J,W0)-W),b.set(J,W0+1,b.get(J,W0+1)-W*D0);for(J=q;J<=j;J++)W=R0*m.get(J,W0)+_1*m.get(J,W0+1),N1&&(W=W+A0*m.get(J,W0+2),m.set(J,W0+2,m.get(J,W0+2)-W*I0)),m.set(J,W0,m.get(J,W0)-W),m.set(J,W0+1,m.get(J,W0+1)-W*D0)}}}if(u0!==0){for(S=A-1;S>=0;S--)if(W=w[S],D0=v[S],D0===0)for(g1=S,b.set(S,S,1),J=S-1;J>=0;J--){for(i1=b.get(J,J)-W,I0=0,N0=g1;N0<=S;N0++)I0=I0+b.get(J,N0)*b.get(N0,S);if(v[J]<0)A0=i1,m0=I0;else if(g1=J,v[J]===0?b.set(J,S,i1!==0?-I0/i1:-I0/(V*u0)):(R0=b.get(J,J+1),_1=b.get(J+1,J),D0=(w[J]-W)*(w[J]-W)+v[J]*v[J],k1=(R0*m0-A0*I0)/D0,b.set(J,S,k1),b.set(J+1,S,Math.abs(R0)>Math.abs(A0)?(-I0-i1*k1)/R0:(-m0-_1*k1)/A0)),k1=Math.abs(b.get(J,S)),V*k1*k1>1)for(N0=J;N0<=S;N0++)b.set(N0,S,b.get(N0,S)/k1)}else if(D0<0)for(g1=S-1,Math.abs(b.get(S,S-1))>Math.abs(b.get(S-1,S))?(b.set(S-1,S-1,D0/b.get(S,S-1)),b.set(S-1,S,-(b.get(S,S)-W)/b.get(S,S-1))):(S1=R1(0,-b.get(S-1,S),b.get(S-1,S-1)-W,D0),b.set(S-1,S-1,S1[0]),b.set(S-1,S,S1[1])),b.set(S,S-1,0),b.set(S,S,1),J=S-2;J>=0;J--){for(a0=0,T0=0,N0=g1;N0<=S;N0++)a0=a0+b.get(J,N0)*b.get(N0,S-1),T0=T0+b.get(J,N0)*b.get(N0,S);if(i1=b.get(J,J)-W,v[J]<0)A0=i1,I0=a0,m0=T0;else if(g1=J,v[J]===0?(S1=R1(-a0,-T0,i1,D0),b.set(J,S-1,S1[0]),b.set(J,S,S1[1])):(R0=b.get(J,J+1),_1=b.get(J+1,J),X0=(w[J]-W)*(w[J]-W)+v[J]*v[J]-D0*D0,U0=(w[J]-W)*2*D0,X0===0&&U0===0&&(X0=V*u0*(Math.abs(i1)+Math.abs(D0)+Math.abs(R0)+Math.abs(_1)+Math.abs(A0))),S1=R1(R0*I0-A0*a0+D0*T0,R0*m0-A0*T0-D0*a0,X0,U0),b.set(J,S-1,S1[0]),b.set(J,S,S1[1]),Math.abs(R0)>Math.abs(A0)+Math.abs(D0)?(b.set(J+1,S-1,(-a0-i1*b.get(J,S-1)+D0*b.get(J,S))/R0),b.set(J+1,S,(-T0-i1*b.get(J,S)-D0*b.get(J,S-1))/R0)):(S1=R1(-I0-_1*b.get(J,S-1),-m0-_1*b.get(J,S),A0,D0),b.set(J+1,S-1,S1[0]),b.set(J+1,S,S1[1]))),k1=Math.max(Math.abs(b.get(J,S-1)),Math.abs(b.get(J,S))),V*k1*k1>1)for(N0=J;N0<=S;N0++)b.set(N0,S-1,b.get(N0,S-1)/k1),b.set(N0,S,b.get(N0,S)/k1)}for(J=0;J<A;J++)if(J<q||J>j)for(N0=J;N0<A;N0++)m.set(J,N0,b.get(J,N0));for(N0=A-1;N0>=q;N0--)for(J=q;J<=j;J++){for(A0=0,W0=q;W0<=Math.min(N0,j);W0++)A0=A0+m.get(J,W0)*b.get(W0,N0);m.set(J,N0,A0)}}}function R1(A,v,w,m){let b,S;return Math.abs(w)>Math.abs(m)?(b=m/w,S=w+b*m,[(A+b*v)/S,(v-b*A)/S]):(b=w/m,S=m+b*w,[(b*A+v)/S,(b*v-A)/S])}class K1{constructor(v){if(v=w0.checkMatrix(v),!v.isSymmetric())throw new Error("Matrix is not symmetric");let w=v,m=w.rows,b=new e0(m,m),S=!0,q,j,V;for(j=0;j<m;j++){let Y=0;for(V=0;V<j;V++){let u0=0;for(q=0;q<V;q++)u0+=b.get(V,q)*b.get(j,q);u0=(w.get(j,V)-u0)/b.get(V,V),b.set(j,V,u0),Y=Y+u0*u0}for(Y=w.get(j,j)-Y,S&&(S=Y>0),b.set(j,j,Math.sqrt(Math.max(Y,0))),V=j+1;V<m;V++)b.set(j,V,0)}this.L=b,this.positiveDefinite=S}isPositiveDefinite(){return this.positiveDefinite}solve(v){v=w0.checkMatrix(v);let w=this.L,m=w.rows;if(v.rows!==m)throw new Error("Matrix dimensions do not match");if(this.isPositiveDefinite()===!1)throw new Error("Matrix is not positive definite");let b=v.columns,S=v.clone(),q,j,V;for(V=0;V<m;V++)for(j=0;j<b;j++){for(q=0;q<V;q++)S.set(V,j,S.get(V,j)-S.get(q,j)*w.get(V,q));S.set(V,j,S.get(V,j)/w.get(V,V))}for(V=m-1;V>=0;V--)for(j=0;j<b;j++){for(q=V+1;q<m;q++)S.set(V,j,S.get(V,j)-S.get(q,j)*w.get(q,V));S.set(V,j,S.get(V,j)/w.get(V,V))}return S}get lowerTriangularMatrix(){return this.L}}class B1{constructor(v,w={}){v=w0.checkMatrix(v);let{Y:m}=w;const{scaleScores:b=!1,maxIterations:S=1e3,terminationCriteria:q=1e-10}=w;let j;if(m){if(e.isAnyArray(m)&&typeof m[0]=="number"?m=e0.columnVector(m):m=w0.checkMatrix(m),m.rows!==v.rows)throw new Error("Y should have the same number of rows as X");j=m.getColumnVector(0)}else j=v.getColumnVector(0);let V=1,Y,u0,W,D0;for(let I0=0;I0<S&&V>q;I0++)W=v.transpose().mmul(j).div(j.transpose().mmul(j).get(0,0)),W=W.div(W.norm()),Y=v.mmul(W).div(W.transpose().mmul(W).get(0,0)),I0>0&&(V=Y.clone().sub(D0).pow(2).sum()),D0=Y.clone(),m?(u0=m.transpose().mmul(Y).div(Y.transpose().mmul(Y).get(0,0)),u0=u0.div(u0.norm()),j=m.mmul(u0).div(u0.transpose().mmul(u0).get(0,0))):j=Y;if(m){let I0=v.transpose().mmul(Y).div(Y.transpose().mmul(Y).get(0,0));I0=I0.div(I0.norm());let m0=v.clone().sub(Y.clone().mmul(I0.transpose())),A0=j.transpose().mmul(Y).div(Y.transpose().mmul(Y).get(0,0)),Y0=m.clone().sub(Y.clone().mulS(A0.get(0,0)).mmul(u0.transpose()));this.t=Y,this.p=I0.transpose(),this.w=W.transpose(),this.q=u0,this.u=j,this.s=Y.transpose().mmul(Y),this.xResidual=m0,this.yResidual=Y0,this.betas=A0}else this.w=W.transpose(),this.s=Y.transpose().mmul(Y).sqrt(),b?this.t=Y.clone().div(this.s.get(0,0)):this.t=Y,this.xResidual=v.sub(Y.mmul(W.transpose()))}}return matrix$1.AbstractMatrix=Q,matrix$1.CHO=K1,matrix$1.CholeskyDecomposition=K1,matrix$1.DistanceMatrix=O0,matrix$1.EVD=e1,matrix$1.EigenvalueDecomposition=e1,matrix$1.LU=K0,matrix$1.LuDecomposition=K0,matrix$1.Matrix=e0,matrix$1.MatrixColumnSelectionView=H0,matrix$1.MatrixColumnView=B0,matrix$1.MatrixFlipColumnView=a1,matrix$1.MatrixFlipRowView=c1,matrix$1.MatrixRowSelectionView=j0,matrix$1.MatrixRowView=G0,matrix$1.MatrixSelectionView=P0,matrix$1.MatrixSubView=d1,matrix$1.MatrixTransposeView=r1,matrix$1.NIPALS=B1,matrix$1.Nipals=B1,matrix$1.QR=H,matrix$1.QrDecomposition=H,matrix$1.SVD=t0,matrix$1.SingularValueDecomposition=t0,matrix$1.SymmetricMatrix=F0,matrix$1.WrapperMatrix1D=u1,matrix$1.WrapperMatrix2D=w0,matrix$1.correlation=Q0,matrix$1.covariance=_0,matrix$1.default=e0,matrix$1.determinant=d0,matrix$1.inverse=f0,matrix$1.linearDependencies=E0,matrix$1.pseudoInverse=k0,matrix$1.solve=c0,matrix$1.wrap=Z0,matrix$1}var matrixExports=requireMatrix();const matrix=getDefaultExportFromCjs(matrixExports),Matrix$1=matrixExports.Matrix,SVD=matrixExports.SVD,SingularValueDecomposition=matrixExports.SingularValueDecomposition;matrix.Matrix?matrix.Matrix:matrixExports.Matrix;const inverse=matrixExports.inverse,solve=matrixExports.solve;function getSeparatedKernel(e){const t=new SVD(e,{autoTranspose:!0});if(t.rank!==1)return null;const n=Math.sqrt(t.s[0]),r=t.U.to2DArray().map(s=>s[0]*n),i=t.V.to2DArray().map(s=>s[0]*n);return[r,i]}function convolution(e,t={}){let{channels:n,bitDepth:r,normalize:i=!1,divisor:s=1,border:o="copy",algorithm:l="auto"}=t,c={};r&&(c.bitDepth=r);let f=Image.createFrom(this,c);if(n=validateArrayOfChannels(this,n),l!=="separable")({kernel:e}=validateKernel(e));else if(!Array.isArray(e)||e.length!==2)throw new RangeError("separable convolution requires two arrays of numbers to represent the kernel");if(l==="auto"){let k=getSeparatedKernel(e);k!==null?(l="separable",e=k):(e.length>9||e[0].length>9)&&this.width<=4096&&this.height<=4096?l="fft":l="direct"}let h,p;l==="separable"?(h=Math.floor(e[0].length/2),p=Math.floor(e[1].length/2)):(h=Math.floor(e.length/2),p=Math.floor(e[0].length/2));let g=f.isClamped,x=new Array(this.height*this.width),D,y,E,F,B,M;for(F=0;F<n.length;F++){for(B=n[F],E=0;E<this.height;E++)for(y=0;y<this.width;y++)D=E*this.width+y,x[D]=this.data[D*this.channels+B];if(l==="direct")M=srcExports$1.direct(x,e,{rows:this.height,cols:this.width,normalize:i,divisor:s});else if(l==="separable"){if(M=convolutionSeparable(x,e,this.width,this.height),i){s=0;for(let k=0;k<e[0].length;k++)for(let T=0;T<e[1].length;T++)s+=e[0][k]*e[1][T]}if(s!==1)for(let k=0;k<M.length;k++)M[k]/=s}else M=srcExports$1.fft(x,e,{rows:this.height,cols:this.width,normalize:i,divisor:s});for(E=0;E<this.height;E++)for(y=0;y<this.width;y++)D=E*this.width+y,g?f.data[D*this.channels+B]=clamp(M[D],f):f.data[D*this.channels+B]=M[D]}if(this.alpha&&!n.includes(this.channels))for(y=this.components;y<this.data.length;y=y+this.channels)f.data[y]=this.data[y];return o!=="periodic"&&f.setBorder({size:[p,h],algorithm:o}),f}function gradientFilter(e={}){let{direction:t="xy",border:n="copy",kernelX:r,kernelY:i,channels:s,bitDepth:o=this.bitDepth}=e;switch(this.checkProcessable("gradientFilter",{bitDepth:[8,16]}),t){case"x":if(!r)throw new Error("kernelX option is missing");return convolution.call(this,r,{channels:s,border:n,bitDepth:o});case"y":if(!i)throw new Error("kernelY option is missing");return convolution.call(this,i,{channels:s,border:n,bitDepth:o});case"xy":{if(!r)throw new Error("kernelX option is missing");if(!i)throw new Error("kernelY option is missing");const l=convolution.call(this,r,{channels:s,border:n,bitDepth:32}),c=convolution.call(this,i,{channels:s,border:n,bitDepth:32});return l.hypotenuse(c,{bitDepth:o,channels:s})}default:throw new Error(`Unknown parameter direction: ${t}`)}}function sobelFilter(e){return gradientFilter.call(this,Object.assign({},e,{kernelX:SOBEL_X,kernelY:SOBEL_Y}))}function scharrFilter(e){return gradientFilter.call(this,Object.assign({},e,{kernelX:SCHARR_X,kernelY:SCHARR_Y}))}var newArray_1,hasRequiredNewArray;function requireNewArray(){if(hasRequiredNewArray)return newArray_1;hasRequiredNewArray=1,newArray_1=e;function e(t,n){t=t||0;for(var r=new Array(t),i=0;i<t;i++)r[i]=n;return r}return newArray_1}var newArrayExports=requireNewArray();const newArray=getDefaultExportFromCjs(newArrayExports);function level(e={}){let{algorithm:t="range",channels:n,min:r=this.min,max:i=this.max}=e;switch(this.checkProcessable("level",{bitDepth:[8,16,32]}),n=validateArrayOfChannels(this,{channels:n}),n.length!==this.channel&&(Array.isArray(r)&&r.length===this.channels&&(r=r.filter((s,o)=>n.includes(o))),Array.isArray(i)&&i.length===this.channels&&(i=i.filter((s,o)=>n.includes(o)))),t){case"range":r<0&&(r=0),i>this.maxValue&&(i=this.maxValue),Array.isArray(r)||(r=newArray(n.length,r)),Array.isArray(i)||(i=newArray(n.length,i)),processImage(this,r,i,n);break;default:throw new Error(`level: algorithm not implement: ${t}`)}return this}function processImage(e,t,n,r){let i=1e-5,s=new Array(r.length);for(let o=0;o<r.length;o++)t[o]===0&&n[o]===e.maxValue||n[o]===t[o]?s[o]=0:s[o]=(e.maxValue+1-i)/(n[o]-t[o]),t[o]+=(.5-i/2)/s[o];for(let o=0;o<r.length;o++){let l=r[o];if(s[o]!==0)for(let c=0;c<e.data.length;c+=e.channels)e.data[c+l]=Math.min(Math.max(0,(e.data[c+l]-t[o])*s[o]+.5|0),e.maxValue)}}var isArrayType,hasRequiredIsArrayType;function requireIsArrayType(){if(hasRequiredIsArrayType)return isArrayType;hasRequiredIsArrayType=1;var e=Object.prototype.toString;return isArrayType=function(n){return e.call(n).substr(-6,5)==="Array"},isArrayType}var isArrayTypeExports=requireIsArrayType();const isArray$1=getDefaultExportFromCjs(isArrayTypeExports);function checkNumberArray(e){if(isNaN(e)){if(e instanceof Image)return e.data;if(!isArray$1(e))throw new Error("checkNumberArray: the value should be either a number, array or Image");return e}else{if(e<=0)throw new Error("checkNumberArray: the value must be greater than 0");return e}}function add(e,t={}){let{channels:n}=t;if(this.checkProcessable("add",{bitDepth:[8,16]}),n=validateArrayOfChannels(this,{channels:n}),e=checkNumberArray(e),isNaN(e)){if(this.data.length!==e.length)throw new Error("add: the data size is different");for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.max(0,Math.min(this.maxValue,this.data[s+i]+e[s+i]>>0))}}else for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.min(this.maxValue,this.data[s+i]+e>>0)}return this}function subtract(e,t={}){let{channels:n}=t;if(this.checkProcessable("subtract",{bitDepth:[8,16]}),n=validateArrayOfChannels(this,{channels:n}),e=checkNumberArray(e),isNaN(e)){if(this.data.length!==e.length)throw new Error("subtract: the data size is different");for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.max(0,Math.min(this.maxValue,this.data[s+i]-e[s+i]>>0))}}else for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.max(0,this.data[s+i]-e>>0)}return this}function subtractImage(e,t={}){let{channels:n,absolute:r=!1}=t;if(this.checkProcessable("subtractImage",{bitDepth:[8,16]}),this.width!==e.width||this.height!==e.height)throw new Error("subtractImage: both images must have the same size");if(this.alpha!==e.alpha||this.bitDepth!==e.bitDepth)throw new Error("subtractImage: both images must have the same alpha and bitDepth");if(this.channels!==e.channels)throw new Error("subtractImage: both images must have the same number of channels");let i=this.clone();n=validateArrayOfChannels(this,{channels:n});for(let s=0;s<n.length;s++){let o=n[s];for(let l=o;l<this.data.length;l+=this.channels){let c=this.data[l]-e.data[l];r?i.data[l]=Math.abs(c):i.data[l]=Math.max(c,0)}}return i}function hypotenuse(e,t={}){let{bitDepth:n=this.bitDepth,channels:r}=t;if(this.checkProcessable("hypotenuse",{bitDepth:[8,16,32]}),this.width!==e.width||this.height!==e.height)throw new Error("hypotenuse: both images must have the same size");if(this.alpha!==e.alpha||this.bitDepth!==e.bitDepth)throw new Error("hypotenuse: both images must have the same alpha and bitDepth");if(this.channels!==e.channels)throw new Error("hypotenuse: both images must have the same number of channels");let i=Image.createFrom(this,{bitDepth:n});r=validateArrayOfChannels(this,{channels:r});let s=i.isClamped;for(let o=0;o<r.length;o++){let l=r[o];for(let c=l;c<this.data.length;c+=this.channels){let f=Math.hypot(this.data[c],e.data[c]);s?i.data[c]=Math.min(Math.max(Math.round(f),0),i.maxValue):i.data[c]=f}}return i}function multiply(e,t={}){let{channels:n}=t;if(this.checkProcessable("multiply",{bitDepth:[8,16]}),e<=0)throw new Error("multiply: the value must be greater than 0");if(n=validateArrayOfChannels(this,{channels:n}),e=checkNumberArray(e),isNaN(e)){if(this.data.length!==e.length)throw new Error("multiply: the data size is different");for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.max(0,Math.min(this.maxValue,this.data[s+i]*e[s+i]>>0))}}else for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.min(this.maxValue,this.data[s+i]*e>>0)}return this}function divide(e,t={}){let{channels:n}=t;if(this.checkProcessable("divide",{bitDepth:[8,16]}),n=validateArrayOfChannels(this,{channels:n}),e=checkNumberArray(e),isNaN(e)){if(this.data.length!==e.length)throw new Error("divide: the: the data size is different");for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.max(0,Math.min(this.maxValue,this.data[s+i]/e[s+i]>>0))}}else for(let r=0;r<n.length;r++){let i=n[r];for(let s=0;s<this.data.length;s+=this.channels)this.data[s+i]=Math.min(this.maxValue,this.data[s+i]/e>>0)}return this}class BaseRegression{constructor(){if(new.target===BaseRegression)throw new Error("BaseRegression must be subclassed")}predict(t){if(typeof t=="number")return this._predict(t);if(isAnyArray(t)){const n=[];for(let r=0;r<t.length;r++)n.push(this._predict(t[r]));return n}else throw new TypeError("x must be a number or array")}_predict(){throw new Error("_predict must be implemented")}train(){}toString(){return""}toLaTeX(){return""}score(t,n){if(!isAnyArray(t)||!isAnyArray(n)||t.length!==n.length)throw new Error("x and y must be arrays of the same length");const r=t.length,i=new Array(r);for(let x=0;x<r;x++)i[x]=this._predict(t[x]);let s=0,o=0,l=0,c=0,f=0,h=0,p=0;for(let x=0;x<r;x++)s+=i[x],o+=n[x],f+=i[x]*i[x],h+=n[x]*n[x],p+=i[x]*n[x],n[x]!==0&&(l+=(n[x]-i[x])*(n[x]-i[x])/n[x]),c+=(n[x]-i[x])*(n[x]-i[x]);const g=(r*p-s*o)/Math.sqrt((r*f-s*s)*(r*h-o*o));return{r:g,r2:g*g,chi2:l,rmsd:Math.sqrt(c/r)}}}function squaredEuclidean(e,t){let n=0;for(let r=0;r<e.length;r++)n+=(e[r]-t[r])*(e[r]-t[r]);return n}function euclidean(e,t){return Math.sqrt(squaredEuclidean(e,t))}const euclidean$1=Object.freeze(Object.defineProperty({__proto__:null,euclidean,squaredEuclidean},Symbol.toStringTag,{value:"Module"})),require$$0=getAugmentedNamespace(euclidean$1);var gaussianKernel,hasRequiredGaussianKernel;function requireGaussianKernel(){if(hasRequiredGaussianKernel)return gaussianKernel;hasRequiredGaussianKernel=1;const{squaredEuclidean:e}=require$$0,t={sigma:1};class n{constructor(i){i=Object.assign({},t,i),this.sigma=i.sigma,this.divisor=2*i.sigma*i.sigma}compute(i,s){const o=e(i,s);return Math.exp(-o/this.divisor)}}return gaussianKernel=n,gaussianKernel}var polynomialKernel,hasRequiredPolynomialKernel;function requirePolynomialKernel(){if(hasRequiredPolynomialKernel)return polynomialKernel;hasRequiredPolynomialKernel=1;const e={degree:1,constant:1,scale:1};class t{constructor(r){r=Object.assign({},e,r),this.degree=r.degree,this.constant=r.constant,this.scale=r.scale}compute(r,i){for(var s=0,o=0;o<r.length;o++)s+=r[o]*i[o];return Math.pow(this.scale*s+this.constant,this.degree)}}return polynomialKernel=t,polynomialKernel}var sigmoidKernel,hasRequiredSigmoidKernel;function requireSigmoidKernel(){if(hasRequiredSigmoidKernel)return sigmoidKernel;hasRequiredSigmoidKernel=1;const e={alpha:.01,constant:-Math.E};class t{constructor(r){r=Object.assign({},e,r),this.alpha=r.alpha,this.constant=r.constant}compute(r,i){for(var s=0,o=0;o<r.length;o++)s+=r[o]*i[o];return Math.tanh(this.alpha*s+this.constant)}}return sigmoidKernel=t,sigmoidKernel}var anovaKernel,hasRequiredAnovaKernel;function requireAnovaKernel(){if(hasRequiredAnovaKernel)return anovaKernel;hasRequiredAnovaKernel=1;const e={sigma:1,degree:1};class t{constructor(r){r=Object.assign({},e,r),this.sigma=r.sigma,this.degree=r.degree}compute(r,i){for(var s=0,o=Math.min(r.length,i.length),l=1;l<=o;++l)s+=Math.pow(Math.exp(-this.sigma*Math.pow(Math.pow(r[l-1],l)-Math.pow(i[l-1],l),2)),this.degree);return s}}return anovaKernel=t,anovaKernel}var cauchyKernel,hasRequiredCauchyKernel;function requireCauchyKernel(){if(hasRequiredCauchyKernel)return cauchyKernel;hasRequiredCauchyKernel=1;const{squaredEuclidean:e}=require$$0,t={sigma:1};class n{constructor(i){i=Object.assign({},t,i),this.sigma=i.sigma}compute(i,s){return 1/(1+e(i,s)/(this.sigma*this.sigma))}}return cauchyKernel=n,cauchyKernel}var exponentialKernel,hasRequiredExponentialKernel;function requireExponentialKernel(){if(hasRequiredExponentialKernel)return exponentialKernel;hasRequiredExponentialKernel=1;const{euclidean:e}=require$$0,t={sigma:1};class n{constructor(i){i=Object.assign({},t,i),this.sigma=i.sigma,this.divisor=2*i.sigma*i.sigma}compute(i,s){const o=e(i,s);return Math.exp(-o/this.divisor)}}return exponentialKernel=n,exponentialKernel}var histogramIntersectionKernel,hasRequiredHistogramIntersectionKernel;function requireHistogramIntersectionKernel(){if(hasRequiredHistogramIntersectionKernel)return histogramIntersectionKernel;hasRequiredHistogramIntersectionKernel=1;class e{compute(n,r){for(var i=Math.min(n.length,r.length),s=0,o=0;o<i;++o)s+=Math.min(n[o],r[o]);return s}}return histogramIntersectionKernel=e,histogramIntersectionKernel}var laplacianKernel,hasRequiredLaplacianKernel;function requireLaplacianKernel(){if(hasRequiredLaplacianKernel)return laplacianKernel;hasRequiredLaplacianKernel=1;const{euclidean:e}=require$$0,t={sigma:1};class n{constructor(i){i=Object.assign({},t,i),this.sigma=i.sigma}compute(i,s){const o=e(i,s);return Math.exp(-o/this.sigma)}}return laplacianKernel=n,laplacianKernel}var multiquadraticKernel,hasRequiredMultiquadraticKernel;function requireMultiquadraticKernel(){if(hasRequiredMultiquadraticKernel)return multiquadraticKernel;hasRequiredMultiquadraticKernel=1;const{squaredEuclidean:e}=require$$0,t={constant:1};class n{constructor(i){i=Object.assign({},t,i),this.constant=i.constant}compute(i,s){return Math.sqrt(e(i,s)+this.constant*this.constant)}}return multiquadraticKernel=n,multiquadraticKernel}var rationalQuadraticKernel,hasRequiredRationalQuadraticKernel;function requireRationalQuadraticKernel(){if(hasRequiredRationalQuadraticKernel)return rationalQuadraticKernel;hasRequiredRationalQuadraticKernel=1;const{squaredEuclidean:e}=require$$0,t={constant:1};class n{constructor(i){i=Object.assign({},t,i),this.constant=i.constant}compute(i,s){const o=e(i,s);return 1-o/(o+this.constant)}}return rationalQuadraticKernel=n,rationalQuadraticKernel}var kernel,hasRequiredKernel;function requireKernel(){if(hasRequiredKernel)return kernel;hasRequiredKernel=1;const{Matrix:e,MatrixTransposeView:t}=requireMatrix(),n=requireGaussianKernel(),r=requirePolynomialKernel(),i=requireSigmoidKernel(),s=requireAnovaKernel(),o=requireCauchyKernel(),l=requireExponentialKernel(),c=requireHistogramIntersectionKernel(),f=requireLaplacianKernel(),h=requireMultiquadraticKernel(),p=requireRationalQuadraticKernel(),g={gaussian:n,rbf:n,polynomial:r,poly:r,anova:s,cauchy:o,exponential:l,histogram:c,min:c,laplacian:f,multiquadratic:h,rational:p,sigmoid:i,mlp:i};class x{constructor(y,E){if(this.kernelType=y,y!=="linear")if(typeof y=="string"){y=y.toLowerCase();var F=g[y];if(F)this.kernelFunction=new F(E);else throw new Error(`unsupported kernel type: ${y}`)}else if(typeof y=="object"&&typeof y.compute=="function")this.kernelFunction=y;else throw new TypeError("first argument must be a valid kernel type or instance")}compute(y,E){if(y=e.checkMatrix(y),E===void 0?E=y:E=e.checkMatrix(E),this.kernelType==="linear")return y.mmul(new t(E));const F=new e(y.rows,E.rows);if(y===E)for(let B=0;B<y.rows;B++)for(let M=B;M<y.rows;M++){const k=this.kernelFunction.compute(y.getRow(B),y.getRow(M));F.set(B,M,k),F.set(M,B,k)}else for(let B=0;B<y.rows;B++)for(let M=0;M<E.rows;M++)F.set(B,M,this.kernelFunction.compute(y.getRow(B),E.getRow(M)));return F}}return kernel=x,kernel}var kernelExports=requireKernel();const Kernel=getDefaultExportFromCjs(kernelExports),defaultOptions$2={lambda:.1,kernelType:"gaussian",kernelOptions:{},computeCoefficient:!1};class KernelRidgeRegression extends BaseRegression{constructor(t,n,r){if(super(),t===!0)this.alpha=n.alpha,this.inputs=n.inputs,this.kernelType=n.kernelType,this.kernelOptions=n.kernelOptions,this.kernel=new Kernel(n.kernelType,n.kernelOptions);else{t=Matrix$1.checkMatrix(t),r=Object.assign({},defaultOptions$2,r);const i=new Kernel(r.kernelType,r.kernelOptions),s=i.compute(t),o=t.rows;s.add(Matrix$1.eye(o,o).mul(r.lambda)),this.alpha=solve(s,n),this.inputs=t,this.kernelType=r.kernelType,this.kernelOptions=r.kernelOptions,this.kernel=i}}_predict(t){return this.kernel.compute([t],this.inputs).mmul(this.alpha).getRow(0)}toJSON(){return{name:"kernelRidgeRegression",alpha:this.alpha,inputs:this.inputs,kernelType:this.kernelType,kernelOptions:this.kernelOptions}}static load(t){if(t.name!=="kernelRidgeRegression")throw new TypeError("not a KRR model");return new KernelRidgeRegression(!0,t)}}function background$1(e,t,n){const r=new KernelRidgeRegression(e,t,n),i=new Array(this.size);for(let l=0;l<this.width;l++)for(let c=0;c<this.height;c++)i[c*this.width+l]=[l,c];const s=r.predict(i),o=Image.createFrom(this);for(let l=0;l<this.size;l++)o.data[l]=Math.min(this.maxValue,Math.max(0,s[l][0]));return o}function dilate(e={}){let{kernel:t=[[1,1,1],[1,1,1],[1,1,1]],iterations:n=1}=e;if(this.checkProcessable("dilate",{bitDepth:[1,8,16],components:1,alpha:0}),t.columns%2===0||t.rows%2===0)throw new TypeError("dilate: The number of rows and columns of the kernel must be odd");let r=!0;e:for(const s of t)for(const o of s)if(o!==1){r=!1;break e}let i=this;for(let s=0;s<n;s++)if(this.bitDepth===1)if(r){const o=i.clone();i=dilateOnceBinaryOnlyOnes(i,o,t.length,t[0].length)}else{const o=Image.createFrom(i);i=dilateOnceBinary(i,o,t)}else if(r){const o=Image.createFrom(i);i=dilateOnceGreyOnlyOnes(i,o,t.length,t[0].length)}else{const o=Image.createFrom(i);i=dilateOnceGrey(i,o,t)}return i}function dilateOnceGrey(e,t,n){const r=n.length,i=n[0].length;let s=(r-1)/2,o=(i-1)/2;for(let l=0;l<e.height;l++)for(let c=0;c<e.width;c++){let f=0;for(let h=0;h<i;h++)for(let p=0;p<r;p++){if(n[p][h]!==1)continue;let g=p-s+c,x=h-o+l;if(g<0||x<0||g>=e.width||x>=e.height)continue;const D=e.getValueXY(g,x,0);D>f&&(f=D)}t.setValueXY(c,l,0,f)}return t}function dilateOnceGreyOnlyOnes(e,t,n,r){const i=(n-1)/2,s=(r-1)/2,o=[];for(let l=0;l<e.width;l++)o.push(0);for(let l=0;l<e.height;l++){for(let c=0;c<e.width;c++){let f=0;for(let h=Math.max(0,l-s);h<Math.min(e.height,l+s+1);h++){const p=e.getValueXY(c,h,0);p>f&&(f=p)}o[c]=f}for(let c=0;c<e.width;c++){let f=0;for(let h=Math.max(0,c-i);h<Math.min(e.width,c+i+1);h++)o[h]>f&&(f=o[h]);t.setValueXY(c,l,0,f)}}return t}function dilateOnceBinary(e,t,n){const r=n.length,i=n[0].length;let s=(r-1)/2,o=(i-1)/2;for(let l=0;l<e.height;l++)for(let c=0;c<e.width;c++){let f=0;e:for(let h=0;h<i;h++)for(let p=0;p<r;p++){if(n[p][h]!==1)continue;let g=p-s+c,x=h-o+l;if(x<0||g<0||g>=e.width||x>=e.height)continue;if(e.getBitXY(g,x)===1){f=1;break e}}f===1&&t.setBitXY(c,l)}return t}function dilateOnceBinaryOnlyOnes(e,t,n,r){const i=(n-1)/2,s=(r-1)/2,o=[];for(let l=0;l<e.width;l++)o.push(1);for(let l=0;l<e.height;l++){for(let c=0;c<e.width;c++){o[c]=0;for(let f=Math.max(0,l-s);f<Math.min(e.height,l+s+1);f++)if(e.getBitXY(c,f)===1){o[c]=1;break}}for(let c=0;c<e.width;c++)if(t.getBitXY(c,l)!==1){for(let f=Math.max(0,c-i);f<Math.min(e.width,c+i+1);f++)if(o[f]===1){t.setBitXY(c,l);break}}}return t}function erode(e={}){let{kernel:t=[[1,1,1],[1,1,1],[1,1,1]],iterations:n=1}=e;if(this.checkProcessable("erode",{bitDepth:[1,8,16],components:1,alpha:0}),t.columns%2===0||t.rows%2===0)throw new TypeError("erode: The number of rows and columns of the kernel must be odd");let r=!0;e:for(const s of t)for(const o of s)if(o!==1){r=!1;break e}let i=this;for(let s=0;s<n;s++)if(this.bitDepth===1)if(r){const o=i.clone();i=erodeOnceBinaryOnlyOnes(i,o,t.length,t[0].length)}else{const o=Image.createFrom(i);i=erodeOnceBinary(i,o,t)}else if(r){const o=Image.createFrom(i);i=erodeOnceGreyOnlyOnes(i,o,t.length,t[0].length)}else{const o=Image.createFrom(i);i=erodeOnceGrey(i,o,t)}return i}function erodeOnceGrey(e,t,n){const r=n.length,i=n[0].length;let s=(r-1)/2,o=(i-1)/2;for(let l=0;l<e.height;l++)for(let c=0;c<e.width;c++){let f=e.maxValue;for(let h=0;h<i;h++)for(let p=0;p<r;p++){if(n[p][h]!==1)continue;let g=p-s+c,x=h-o+l;if(g<0||x<0||g>=e.width||x>=e.height)continue;const D=e.getValueXY(g,x,0);D<f&&(f=D)}t.setValueXY(c,l,0,f)}return t}function erodeOnceGreyOnlyOnes(e,t,n,r){const i=(n-1)/2,s=(r-1)/2,o=[];for(let l=0;l<e.width;l++)o.push(0);for(let l=0;l<e.height;l++){for(let c=0;c<e.width;c++){let f=e.maxValue;for(let h=Math.max(0,l-s);h<Math.min(e.height,l+s+1);h++){const p=e.getValueXY(c,h,0);p<f&&(f=p)}o[c]=f}for(let c=0;c<e.width;c++){let f=e.maxValue;for(let h=Math.max(0,c-i);h<Math.min(e.width,c+i+1);h++)o[h]<f&&(f=o[h]);t.setValueXY(c,l,0,f)}}return t}function erodeOnceBinary(e,t,n){const r=n.length,i=n[0].length;let s=(r-1)/2,o=(i-1)/2;for(let l=0;l<e.height;l++)for(let c=0;c<e.width;c++){let f=1;e:for(let h=0;h<i;h++)for(let p=0;p<r;p++){if(n[p][h]!==1)continue;let g=p-s+c,x=h-o+l;if(x<0||g<0||g>=e.width||x>=e.height)continue;if(e.getBitXY(g,x)===0){f=0;break e}}f===1&&t.setBitXY(c,l)}return t}function erodeOnceBinaryOnlyOnes(e,t,n,r){const i=(n-1)/2,s=(r-1)/2,o=[];for(let l=0;l<e.width;l++)o.push(0);for(let l=0;l<e.height;l++){for(let c=0;c<e.width;c++){o[c]=1;for(let f=Math.max(0,l-s);f<Math.min(e.height,l+s+1);f++)if(e.getBitXY(c,f)===0){o[c]=0;break}}for(let c=0;c<e.width;c++)if(t.getBitXY(c,l)!==0){for(let f=Math.max(0,c-i);f<Math.min(e.width,c+i+1);f++)if(o[f]===0){t.clearBitXY(c,l);break}}}return t}function open(e={}){let{kernel:t=[[1,1,1],[1,1,1],[1,1,1]],iterations:n=1}=e;if(this.checkProcessable("open",{bitDepth:[8,16],components:1,alpha:0}),t.columns%2===0||t.rows%2===0)throw new TypeError("open: The number of rows and columns of the kernel must be odd");let r=this;for(let i=0;i<n;i++)r=r.erode({kernel:t}),r=r.dilate({kernel:t});return r}function close(e={}){let{kernel:t=[[1,1,1],[1,1,1],[1,1,1]],iterations:n=1}=e;if(this.checkProcessable("close",{bitDepth:[1,8,16],components:1,alpha:0}),t.columns%2===0||t.rows%2===0)throw new TypeError("close: The number of rows and columns of the kernel must be odd");let r=this;for(let i=0;i<n;i++)r=r.dilate({kernel:t}).erode({kernel:t});return r}function topHat(e={}){let{kernel:t=[[1,1,1],[1,1,1],[1,1,1]],iterations:n=1}=e;if(this.checkProcessable("topHat",{bitDepth:[8,16],components:1,alpha:0}),t.length%2===0||t[0].length%2===0)throw new TypeError("topHat: The number of rows and columns of the kernel must be odd");let r=this;for(let i=0;i<n;i++)r=r.open({kernel:t}).subtractImage(r,{absolute:!0});return r}function blackHat(e={}){let{kernel:t=[[1,1,1],[1,1,1],[1,1,1]],iterations:n=1}=e;if(this.checkProcessable("blackHat",{bitDepth:[8,16],components:1,alpha:0}),t.columns%2===0||t.rows%2===0)throw new TypeError("blackHat: The number of rows and columns of the kernel must be odd");let r=this;for(let i=0;i<n;i++)r=r.close({kernel:t}).subtractImage(r,{absolute:!0});return r}function morphologicalGradient(e={}){let{kernel:t=[[1,1,1],[1,1,1],[1,1,1]],iterations:n=1}=e;if(this.checkProcessable("morphologicalGradient",{bitDepth:[8,16],components:1,alpha:0}),t.columns%2===0||t.rows%2===0)throw new TypeError("morphologicalGradient: The number of rows and columns of the kernel must be odd");let r=this;for(let i=0;i<n;i++){let s=r.dilate({kernel:t}),o=r.erode({kernel:t});r=s.subtractImage(o,{absolute:!0})}return r}function order4Points(e){let t=0,n=0,r=0,i=0,s=e[0][0],o=0;for(let f=1;f<e.length;f++)e[f][0]<s&&(s=e[f][0],o=f);let l=e[(o+1)%e.length][0],c=(o+1)%e.length;for(let f=1;f<e.length;f++)e[f][0]<l&&f!==o&&(l=e[f][0],c=f);return e[c][1]<e[o][1]?(t=e[c],i=e[o],o!==(c+1)%4?(n=e[(c+1)%4],r=e[(c+2)%4]):(n=e[(c+2)%4],r=e[(c+3)%4])):(i=e[c],t=e[o],c!==(o+1)%4?(n=e[(o+1)%4],r=e[(o+2)%4]):(n=e[(o+2)%4],r=e[(o+3)%4])),[t,n,r,i]}function distance2Points(e,t){return Math.sqrt(Math.pow(e[0]-t[0],2)+Math.pow(e[1]-t[1],2))}function crossVect(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function dotVect(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function computeWidthAndHeigth(e,t,n,r,i,s){let o=Math.max(distance2Points(e,t),distance2Points(r,n)),l=Math.max(distance2Points(e,r),distance2Points(t,n)),c=0,f=0,h=Math.ceil(i/2),p=Math.ceil(s/2),g=o/l,x=[e[0],e[1],1],D=[t[0],t[1],1],y=[r[0],r[1],1],E=[n[0],n[1],1],F=dotVect(crossVect(x,E),y)/dotVect(crossVect(D,E),y),B=dotVect(crossVect(x,E),D)/dotVect(crossVect(y,E),D),M=[F*D[0]-x[0],F*D[1]-x[1],F*D[2]-x[2]],k=[B*y[0]-x[0],B*y[1]-x[1],B*y[2]-x[2]],T=M[0],N=M[1],$=M[2],R=k[0],O=k[1],L=k[2],z=1/($*L)*(T*R-(T*L+$*R)*h+$*L*h*h+(N*O-(N*L+$*O)*p+$*L*p*p));z>=0?z=Math.sqrt(z):z=Math.sqrt(-z);let X=new Matrix$1([[z,0,h],[0,z,p],[0,0,1]]),o0=X.transpose(),Z=inverse(o0),n0=inverse(X),s0=Matrix$1.rowVector(M),S0=Matrix$1.rowVector(k),r0=Math.sqrt(dotVect(s0.mmul(Z).mmul(n0).to1DArray(),M)/dotVect(S0.mmul(Z).mmul(n0).to1DArray(),k));return r0===0||g===0?(c=Math.ceil(o),f=Math.ceil(l)):r0<g?(c=Math.ceil(o),f=Math.ceil(c/r0)):(f=Math.ceil(l),c=Math.ceil(r0*f)),[c,f]}function projectionPoint(e,t,n,r,i,s,o,l,c,f,h,p){let[g,x]=[(n*e+r*t+i)/(c*e+f*t+1),(s*e+o*t+l)/(c*e+f*t+1)];return h.getValueXY(Math.floor(g),Math.floor(x),p)}function warpingFourPoints(e,t={}){let{calculateRatio:n=!0}=t;if(e.length!==4)throw new Error(`The array pts must have four elements, which are the four corners. Currently, pts have ${e.length} elements`);let[r,i,s,o]=e,l=[r,i,s,o],[c,f,h,p]=order4Points(l),g,x;n?[g,x]=computeWidthAndHeigth(c,f,h,p,this.width,this.height):(g=Math.ceil(Math.max(distance2Points(c,f),distance2Points(p,h))),x=Math.ceil(Math.max(distance2Points(c,p),distance2Points(f,h))));let D=Image.createFrom(this,{width:g,height:x}),[y,E]=c,[F,B]=f,[M,k]=h,[T,N]=p,[$,R]=[0,0],[O,L]=[0,g-1],[z,X]=[x-1,g-1],[o0,Z]=[x-1,0],n0=new Matrix$1([[$,R,1,0,0,0,-$*y,-R*y],[O,L,1,0,0,0,-O*F,-L*F],[z,X,1,0,0,0,-z*M,-R*M],[o0,Z,1,0,0,0,-o0*T,-Z*T],[0,0,0,$,R,1,-$*E,-R*E],[0,0,0,O,L,1,-O*B,-L*B],[0,0,0,z,X,1,-z*k,-X*k],[0,0,0,o0,Z,1,-o0*N,-Z*N]]),s0=Matrix$1.columnVector([y,F,M,T,E,B,k,N]),r0=new SingularValueDecomposition(n0).solve(s0),[p0,h0,G,Q,M0,C0,e0,F0]=r0.to1DArray(),O0=new Matrix$1(x,g);for(let L0=0;L0<this.channels;L0++){for(let B0=0;B0<x;B0++)for(let H0=0;H0<g;H0++)O0.set(B0,H0,projectionPoint(B0,H0,p0,h0,G,Q,M0,C0,e0,F0,this,L0));D.setMatrix(O0,{channel:L0})}return D}function crop(e={}){let{x:t=0,y:n=0,width:r=this.width-t,height:i=this.height-n}=e;if(this.checkProcessable("crop",{bitDepth:[1,8,16]}),t=Math.round(t),n=Math.round(n),r=Math.round(r),i=Math.round(i),t>this.width-1||n>this.height-1)throw new RangeError(`crop: origin (x:${t}, y:${n}) out of range (${this.width-1}; ${this.height-1})`);if(r<=0||i<=0)throw new RangeError(`crop: width and height (width:${r}; height:${i}) must be positive numbers`);if(t<0||n<0)throw new RangeError(`crop: x and y (x:${t}, y:${n}) must be positive numbers`);if(r>this.width-t||i>this.height-n)throw new RangeError(`crop: (x: ${t}, y:${n}, width:${r}, height:${i}) size is out of range`);let s=this;if(this.bitDepth===1){const o=new Image(r,i,{kind:"BINARY",parent:this});s=cropBinary(this,o,t,n,r,i)}else{const o=Image.createFrom(this,{width:r,height:i,position:[t,n]});s=cropDefault(this,o,t,n,r,i)}return s}function cropDefault(e,t,n,r,i,s){let o=i*e.channels,l=r+s,c=0,f=n*e.channels;for(let h=r;h<l;h++){let p=h*e.width*e.channels+f,g=p+o;for(;p<g;p++)t.data[c++]=e.data[p]}return t}function cropBinary(e,t,n,r,i,s){let o=i*e.channels,l=r+s,c=0,f=n*e.channels;for(let h=r;h<l;h++){let p=h*e.width*e.channels+f,g=p+o;for(;p<g;p++)e.getBit(p)&&t.setBit(c),++c}return t}function cropAlpha(e={}){this.checkProcessable("cropAlpha",{alpha:1});const{threshold:t=this.maxValue}=e;let n=findLeft(this,t,this.components);if(n===-1)throw new Error("Could not find new dimensions. Threshold may be too high.");let r=findTop(this,t,this.components,n),i=findBottom(this,t,this.components,n),s=findRight(this,t,this.components,n,r,i);return this.crop({x:n,y:r,width:s-n+1,height:i-r+1})}function findLeft(e,t,n){for(let r=0;r<e.width;r++)for(let i=0;i<e.height;i++)if(e.getValueXY(r,i,n)>=t)return r;return-1}function findTop(e,t,n,r){for(let i=0;i<e.height;i++)for(let s=r;s<e.width;s++)if(e.getValueXY(s,i,n)>=t)return i;return-1}function findBottom(e,t,n,r){for(let i=e.height-1;i>=0;i--)for(let s=r;s<e.width;s++)if(e.getValueXY(s,i,n)>=t)return i;return-1}function findRight(e,t,n,r,i,s){for(let o=e.width-1;o>=r;o--)for(let l=i;l<=s;l++)if(e.getValueXY(o,l,n)>=t)return o;return-1}function getFactor(e){if(typeof e=="string"){const t=e[e.length-1];e=parseFloat(e),t==="%"&&(e/=100)}return e}function getThreshold$1(e,t){if(!t)throw Error("getThreshold : the maxValue should be specified");if(typeof e=="string"){if(e[e.length-1]!=="%")throw Error("getThreshold : if the value is a string it must finish by %");return parseFloat(e)/100*t}else{if(typeof e=="number")return e<1?e*t:e;throw Error("getThreshold : the value is not valid")}}function factorDimensions(e,t,n){e=getFactor(e);let r=Math.round(e*t),i=Math.round(e*n);return r<=0&&(r=1),i<=0&&(i=1),{width:r,height:i}}function checkRow(e,t){if(t<0||t>=e.height)throw new RangeError(`row must be included between 0 and ${e.height-1}. Current value: ${t}`)}function checkColumn(e,t){if(t<0||t>=e.width)throw new RangeError(`column must be included between 0 and ${e.width-1}. Current value: ${t}`)}function checkChannel(e,t){if(t<0||t>=e.channels)throw new RangeError(`channel must be included between 0 and ${e.channels-1}. Current value: ${t}`)}const validInterpolations={nearestneighbor:"nearestNeighbor",nearestneighbour:"nearestNeighbor",bilinear:"bilinear"};function checkInterpolation(e){if(typeof e!="string")throw new TypeError("interpolation must be a string");if(e=e.toLowerCase(),!validInterpolations[e])throw new RangeError(`invalid interpolation algorithm: ${e}`);return validInterpolations[e]}function nearestNeighbor(e,t,n){const r=this.width/t,i=this.height/n;if(this.bitDepth>1)for(let s=0;s<t;s++){const o=Math.floor((s+.5)*r);for(let l=0;l<n;l++){const c=Math.floor((l+.5)*i);for(let f=0;f<this.channels;f++)e.setValueXY(s,l,f,this.getValueXY(o,c,f))}}else for(let s=0;s<t;s++){const o=Math.floor((s+.5)*r);for(let l=0;l<n;l++){const c=Math.floor((l+.5)*i);this.getBitXY(o,c)&&e.setBitXY(s,l)}}}function resize(e={}){const{factor:t=1,interpolation:n=validInterpolations.nearestneighbor,preserveAspectRatio:r=!0}=e,i=checkInterpolation(n);let s=e.width,o=e.height;if(s||(o&&r?s=Math.round(o*(this.width/this.height)):s=this.width),o||(r?o=Math.round(s*(this.height/this.width)):o=this.height),{width:s,height:o}=factorDimensions(t,s,o),s===this.width&&o===this.height){const h=this.clone();return h.position=[0,0],h}let l=Math.round((this.width-s)/2),c=Math.round((this.height-o)/2);const f=Image.createFrom(this,{width:s,height:o,position:[l,c]});switch(i){case validInterpolations.nearestneighbor:nearestNeighbor.call(this,f,s,o);break;default:throw new Error(`unsupported resize interpolation: ${i}`)}return f}function hsv(){this.checkProcessable("hsv",{bitDepth:[8,16],alpha:[0,1],colorModel:[RGB$1]});let e=Image.createFrom(this,{colorModel:HSV}),t=0,n=this.data;for(let r=0;r<n.length;r+=this.channels){let i=n[r],s=n[r+1],o=n[r+2],l=Math.min(i,s,o),c=Math.max(i,s,o),f=c-l,h=0,p=c===0?0:f/c,g=c;if(c!==l){switch(c){case i:h=(s-o)/f+(s<o?6:0);break;case s:h=(o-i)/f+2;break;case o:h=(i-s)/f+4;break;default:throw new Error("unreachable")}h/=6}e.data[t++]=h*this.maxValue,e.data[t++]=p*this.maxValue,e.data[t++]=g,this.alpha&&(e.data[t++]=n[r+3])}return e}function hsl$1(){this.checkProcessable("hsl",{bitDepth:[8,16],alpha:[0,1],colorModel:[RGB$1]});let e=Image.createFrom(this,{colorModel:HSL}),t=Math.floor(this.maxValue/2),n=0,r=this.data;for(let i=0;i<r.length;i+=this.channels){let s=r[i],o=r[i+1],l=r[i+2],c=Math.max(s,o,l),f=Math.min(s,o,l),h=0,p=0,g=(c+f)/2;if(c!==f){let x=c-f;switch(p=g>t?x/(2-c-f):x/(c+f),c){case s:h=(o-l)/x+(o<l?6:0);break;case o:h=(l-s)/x+2;break;case l:h=(s-o)/x+4;break;default:throw new Error("unreachable")}h/=6}e.data[n++]=h*this.maxValue,e.data[n++]=p*this.maxValue,e.data[n++]=g,this.alpha&&(e.data[n++]=r[i+3])}return e}function cmyk(){this.checkProcessable("cmyk",{bitDepth:[8,16],alpha:[0,1],colorModel:[RGB$1]});let e=Image.createFrom(this,{components:4,colorModel:CMYK$1}),t=0,n=this.data;for(let r=0;r<n.length;r+=this.channels){let i=n[r],s=n[r+1],o=n[r+2],l=Math.min(this.maxValue-i,this.maxValue-s,this.maxValue-o),c=(this.maxValue-i-l)/(1-l/this.maxValue),f=(this.maxValue-s-l)/(1-l/this.maxValue),h=(this.maxValue-o-l)/(1-l/this.maxValue);e.data[t++]=Math.round(c),e.data[t++]=Math.round(f),e.data[t++]=Math.round(h),e.data[t++]=Math.round(l),this.alpha&&(e.data[t++]=n[r+3])}return e}function rgba8(){return new Image(this.width,this.height,this.getRGBAData(),{kind:"RGBA",parent:this})}const methods$1={luma709(e,t,n){return e*6966+t*23436+n*2366>>15},luma601(e,t,n){return e*9798+t*19235+n*3735>>15},maximum(e,t,n){return Math.max(e,t,n)},minimum(e,t,n){return Math.min(e,t,n)},average(e,t,n){return(e+t+n)/3>>0},minmax(e,t,n){return(Math.max(e,t,n)+Math.min(e,t,n))/2},red(e){return e},green(e,t){return t},blue(e,t,n){return n},cyan(e,t,n,r){let i=methods$1.black(e,t,n,r);return(r.maxValue-e-i)/(1-i/r.maxValue)>>0},magenta(e,t,n,r){let i=methods$1.black(e,t,n,r);return(r.maxValue-t-i)/(1-i/r.maxValue)>>0},yellow(e,t,n,r){let i=methods$1.black(e,t,n,r);return(r.maxValue-n-i)/(1-i/r.maxValue)>>0},black(e,t,n,r){return Math.min(r.maxValue-e,r.maxValue-t,r.maxValue-n)},hue(e,t,n,r){let i=methods$1.min(e,t,n),s=methods$1.max(e,t,n);if(s===i)return 0;let o=0,l=s-i;switch(s){case e:o=(t-n)/l+(t<n?6:0);break;case t:o=(n-e)/l+2;break;case n:o=(e-t)/l+4;break;default:throw new Error("unreachable")}return o/6*r.maxValue>>0},saturation(e,t,n,r){let i=methods$1.min(e,t,n),s=methods$1.max(e,t,n),o=s-i;return s===0?0:o/s*r.maxValue},lightness(e,t,n){let r=methods$1.min(e,t,n);return(methods$1.max(e,t,n)+r)/2}};Object.defineProperty(methods$1,"luminosity",{enumerable:!1,value:methods$1.lightness});Object.defineProperty(methods$1,"luminance",{enumerable:!1,value:methods$1.lightness});Object.defineProperty(methods$1,"min",{enumerable:!1,value:methods$1.minimum});Object.defineProperty(methods$1,"max",{enumerable:!1,value:methods$1.maximum});Object.defineProperty(methods$1,"brightness",{enumerable:!1,value:methods$1.maximum});Object.keys(methods$1).forEach(e=>{});function grey(e={}){let{algorithm:t="luma709",keepAlpha:n=!1,mergeAlpha:r=!0}=e;if(typeof t!="string"&&typeof t!="function")throw new TypeError("algorithm must be a string or a function");this.checkProcessable("grey",{bitDepth:[8,16],alpha:[0,1]}),this.components===1&&(t="red"),n&=this.alpha,r&=this.alpha,n&&(r=!1);let i=getOutputImage(this,e,{components:1,alpha:n,colorModel:GREY$1}),s;if(typeof t=="function")s=t;else if(s=methods$1[t.toLowerCase()],!s)throw new Error(`unsupported grey algorithm: ${t}`);let o=0;for(let l=0;l<this.data.length;l+=this.channels)r?i.data[o++]=clamp(s(this.data[l],this.data[l+1],this.data[l+2],this)*this.data[l+this.components]/this.maxValue,this):(i.data[o++]=clamp(s(this.data[l],this.data[l+1],this.data[l+2],this),this),i.alpha&&(i.data[o++]=this.data[l+this.components]));return i}function huang(e){let t=0;for(let h=0;h<e.length;h++)if(e[h]!==0){t=h;break}let n=e.length-1;for(let h=e.length-1;h>=t;h--)if(e[h]!==0){n=h;break}let r=1/(n-t),i=new Array(e.length),s=0,o=0;for(let h=t;h<e.length;h++)s+=h*e[h],o+=e[h],i[h]=s/o;let l=new Array(e.length);s=o=0;for(let h=n;h>0;h--)s+=h*e[h],o+=e[h],l[h-1]=s/o;let c=-1,f=Number.MAX_VALUE;for(let h=0;h<e.length;h++){let p=0,g;for(let x=0;x<=h;x++)g=1/(1+r*Math.abs(x-i[h])),g<1e-6||g>.999999||(p+=e[x]*(-g*Math.log(g)-(1-g)*Math.log(1-g)));for(let x=h+1;x<e.length;x++)g=1/(1+r*Math.abs(x-l[h])),g<1e-6||g>.999999||(p+=e[x]*(-g*Math.log(g)-(1-g)*Math.log(1-g)));p<f&&(f=p,c=h)}return c}function intermodes(e){let t=e.slice(),n=0;for(;!bimodalTest$1(t);){let i=0,s=0,o=t[0];for(let l=0;l<e.length-1;l++)i=s,s=o,o=t[l+1],t[l]=(i+s+o)/3;if(t[e.length-1]=(s+o)/3,n++,n>1e4)throw new Error("Intermodes Threshold not found after 10000 iterations")}let r=0;for(let i=1;i<e.length-1;i++)t[i-1]<t[i]&&t[i+1]<t[i]&&(r+=i);return Math.floor(r/2)}function bimodalTest$1(e){let t=!1,n=0;for(let r=1;r<e.length-1;r++)if(e[r-1]<e[r]&&e[r+1]<e[r]&&(n++,n>2))return!1;return n===2&&(t=!0),t}function isodata(e){let t,n,r,i,s=0;for(let o=1;o<e.length;o++)if(e[o]>0){s=o+1;break}for(;;){t=0,r=0;for(let o=0;o<s;o++)r=r+e[o],t=t+e[o]*o;i=0,n=0;for(let o=s+1;o<e.length;o++)n+=e[o],i+=e[o]*o;if(r>0&&n>0&&(t/=r,i/=n,s===Math.round((t+i)/2)))break;if(s++,s>e.length-2)throw new Error("Threshold not found")}return s}function li(e,t){let n,r,i,s,o,l,c,f,h,p,g,x;g=.5,p=0;for(let D=0;D<e.length;D++)p+=D*e[D];p/=t,c=p;do{l=c,n=l+.5|0,r=0,s=0;for(let D=0;D<=n;D++)r+=D*e[D],s+=e[D];f=s===0?0:r/s,i=0,o=0;for(let D=n+1;D<e.length;D++)i+=D*e[D],o+=e[D];h=o===0?0:i/o,x=(f-h)/(Math.log(f)-Math.log(h)),x<-Number.EPSILON?c=x-.5|0:c=x+.5|0}while(Math.abs(c-l)>g);return n}function maxEntropy(e,t){let n=new Array(e.length);for(let g=0;g<e.length;g++)n[g]=e[g]/t;let r=new Array(e.length),i=new Array(e.length);r[0]=n[0],i[0]=1-r[0];for(let g=1;g<e.length;g++)r[g]=r[g-1]+n[g],i[g]=1-r[g];let s=0;for(let g=0;g<e.length;g++)if(Math.abs(r[g])>=Number.EPSILON){s=g;break}let o=e.length-1;for(let g=e.length-1;g>=s;g--)if(Math.abs(i[g])>=Number.EPSILON){o=g;break}let l=-1,c,f=Number.MIN_VALUE,h,p;for(let g=s;g<=o;g++){h=0;for(let x=0;x<=g;x++)e[x]!==0&&(h-=n[x]/r[g]*Math.log(n[x]/r[g]));p=0;for(let x=g+1;x<e.length;x++)e[x]!==0&&(p-=n[x]/i[g]*Math.log(n[x]/i[g]));c=h+p,f<c&&(f=c,l=g)}return l}function mean$1(e,t){let n=0;for(let r=0;r<e.length;r++)n+=r*e[r];return Math.floor(n/t)}function minError(e,t){let n,r=-2,i,s,o,l,c,f,h,p,g,x,D,y=0;for(let E=0;E<e.length;E++)y+=E*e[E];for(y/=t,n=y;n!==r;){let E=sumA(e,n),F=sumA(e,e.length-1),B=sumB(e,n),M=sumB(e,e.length-1),k=sumC(e,n),T=sumC(e,e.length-1);if(i=B/E,s=(M-B)/(F-E),o=E/F,l=(F-E)/F,c=k/E-i*i,f=(T-k)/(F-E)-s*s,h=1/c-1/f,p=i/c-s/f,g=i*i/c-s*s/f+Math.log10(c*(l*l)/(f*(o*o))),x=p*p-h*g,x<0)return n;r=n,D=(p+Math.sqrt(x))/h,isNaN(D)?n=r:n=Math.floor(D)}return n}function sumA(e,t){let n=0;for(let r=0;r<=t;r++)n+=e[r];return n}function sumB(e,t){let n=0;for(let r=0;r<=t;r++)n+=r*e[r];return n}function sumC(e,t){let n=0;for(let r=0;r<=t;r++)n+=r*r*e[r];return n}function minimum(e){if(e.length<2)return 0;let t=0,n=-1,r=-1,i=new Array(e.length);for(let s=0;s<e.length;s++)i[s]=e[s],e[s]>0&&(r=s);for(;!bimodalTest(i);)if(i=smoothed(i),t++,t>1e4)return n;return n=minimumBetweenPeeks(i,r),n}function smoothed(e){let t=new Array(e.length);for(let n=1;n<e.length-1;n++)t[n]=(e[n-1]+e[n]+e[n+1])/3;return t[0]=(e[0]+e[1])/3,t[e.length-1]=(e[e.length-2]+e[e.length-1])/3,t}function minimumBetweenPeeks(e,t){let n;for(let r=1;r<t;r++)if(e[r-1]>e[r]&&e[r+1]>=e[r]){n=r;break}return n}function bimodalTest(e){let t=e.length,n=!1,r=0;for(let i=1;i<t-1;i++)if(e[i-1]<e[i]&&e[i+1]<e[i]&&(r++,r>2))return!1;return r===2&&(n=!0),n}function moments(e,t){let n=1,r=0,i=0,s=0,o=0,l,c,f,h,p,g,x=-1,D=e.length,y=new Array(D);for(let E=0;E<D;E++)y[E]=e[E]/t;for(let E=0;E<D;E++)r+=E*y[E],i+=E*E*y[E],s+=E*E*E*y[E];c=n*i-r*r,f=(-i*i+r*s)/c,h=(n*-s+i*r)/c,p=.5*(-h-Math.sqrt(h*h-4*f)),g=.5*(-h+Math.sqrt(h*h-4*f)),l=(g-r)/(g-p);for(let E=0;E<D;E++)if(o+=y[E],o>l){x=E;break}return x}function otsu(e,t){let n=0,r=0,i=0,s=0,o=0;for(let l=0;l<e.length;l++)o+=l*e[l];for(let l=0;l<e.length;l++){r=r+e[l];const c=t-r;if(r===0||c===0)continue;n=n+l*e[l];const f=(o-n)/c,h=r*c*(n/r-f)*(n/r-f);h>=i&&(s=l,i=h)}return s}function percentile(e){let t=-1,n=.5,r=new Array(e.length),i=partialSum(e,e.length-1),s=1;for(let o=0;o<e.length;o++)r[o]=Math.abs(partialSum(e,o)/i-n),r[o]<s&&(s=r[o],t=o);return t}function partialSum(e,t){let n=0;for(let r=0;r<=t;r++)n+=e[r];return n}function renyiEntropy(e,t){let n,r,i,s=new Array(e.length),o=new Array(e.length),l=new Array(e.length),c=0,f=0,h=0,p=0,g=0,x=0,y=1/(1-.5),F=1/(1-2);for(let T=0;T<e.length;T++)s[T]=e[T]/t;o[0]=s[0],l[0]=1-o[0];for(let T=1;T<e.length;T++)o[T]=o[T-1]+s[T],l[T]=1-o[T];r=0;for(let T=0;T<e.length;T++)if(Math.abs(o[T])>=Number.EPSILON){r=T;break}i=e.length-1;for(let T=e.length-1;T>=r;T--)if(Math.abs(l[T])>=Number.EPSILON){i=T;break}for(let T=r;T<=i;T++){let N=0,$=0,R=0;for(let n0=0;n0<=T;n0++)e[n0]!==0&&(N-=s[n0]/o[T]*Math.log(s[n0]/o[T])),$+=Math.sqrt(s[n0]/o[T]),R+=s[n0]*s[n0]/(o[T]*o[T]);let O=0,L=0,z=0;for(let n0=T+1;n0<e.length;n0++)e[n0]!==0&&(O-=s[n0]/l[T]*Math.log(s[n0]/l[T])),L+=Math.sqrt(s[n0]/l[T]),z+=s[n0]*s[n0]/(l[T]*l[T]);let X=N+O,o0=y*($*L>0?Math.log($*L):0),Z=F*(R*z>0?Math.log(R*z):0);X>p&&(p=X,c=T),o0>g&&(g=o0,f=T),Z>x&&(x=Z,h=T)}let B=[c,f,h];B.sort((T,N)=>T-N);let M;Math.abs(B[0]-B[1])<=5?Math.abs(B[1]-B[2])<=5?M=[1,2,1]:M=[0,1,3]:Math.abs(B[1]-B[2])<=5?M=[3,1,0]:M=[1,2,1];let k=o[B[2]]-o[B[0]];return n=Math.round(B[0]*(o[B[0]]+.25*k*M[0])+.25*B[1]*k*M[1]+B[2]*(l[B[2]]+.25*k*M[2])),n}function shanbhag(e,t){let n=new Array(e.length);for(let x=0;x<e.length;x++)n[x]=e[x]/t;let r=new Array(e.length),i=new Array(e.length);r[0]=n[0],i[0]=1-r[0];for(let x=1;x<e.length;x++)r[x]=r[x-1]+n[x],i[x]=1-r[x];let s=0;for(let x=0;x<e.length;x++)if(Math.abs(r[x])>=Number.EPSILON){s=x;break}let o=e.length-1;for(let x=e.length-1;x>=s;x--)if(Math.abs(i[x])>=Number.EPSILON){o=x;break}let l=-1,c=Number.MAX_VALUE,f,h,p,g;for(let x=s;x<=o;x++){p=0,f=.5/r[x];for(let D=1;D<=x;D++)p-=n[D]*Math.log(1-f*r[D-1]);p*=f,g=0,f=.5/i[x];for(let D=x+1;D<e.length;D++)g-=n[D]*Math.log(1-f*i[D]);g*=f,h=Math.abs(p-g),h<c&&(c=h,l=x)}return l}function triangle$1(e){let t=0,n=0,r=0,i=0;for(let p=0;p<e.length;p++)if(e[p]>0){t=p;break}t>0&&t--;for(let p=e.length-1;p>0;p--)if(e[p]>0){i=p;break}i<e.length-1&&i++;for(let p=0;p<e.length;p++)e[p]>n&&(r=p,n=e[p]);let s=!1;if(r-t<i-r){s=!0;let p=0,g=e.length-1;for(;p<g;){let x=e[p];e[p]=e[g],e[g]=x,p++,g--}t=e.length-1-i,r=e.length-1-r}if(t===r)return t;let o,l,c;o=e[r],l=t-r,c=Math.sqrt(o*o+l*l),o/=c,l/=c,c=o*t+l*e[t];let f=t,h=0;for(let p=t+1;p<=r;p++){let g=o*p+l*e[p]-c;g>h&&(f=p,h=g)}if(f--,s){let p=0,g=e.length-1;for(;p<g;){let x=e[p];e[p]=e[g],e[g]=x,p++,g--}return e.length-1-f}else return f}function yen(e,t){let n=new Array(e.length);for(let f=0;f<e.length;f++)n[f]=e[f]/t;let r=new Array(e.length);r[0]=n[0];for(let f=1;f<e.length;f++)r[f]=r[f-1]+n[f];let i=new Array(e.length);i[0]=n[0]*n[0];for(let f=1;f<e.length;f++)i[f]=i[f-1]+n[f]*n[f];let s=new Array(e.length);s[e.length-1]=0;for(let f=e.length-2;f>=0;f--)s[f]=s[f+1]+n[f+1]*n[f+1];let o=-1,l=Number.MIN_VALUE,c;for(let f=0;f<e.length;f++)c=-1*(i[f]*s[f]>0?Math.log(i[f]*s[f]):0)+2*(r[f]*(1-r[f])>0?Math.log(r[f]*(1-r[f])):0),c>l&&(l=c,o=f);return o}const methods={huang,intermodes,isodata,li,maxentropy:maxEntropy,mean:mean$1,minerror:minError,minimum,moments,otsu,percentile,renyientropy:renyiEntropy,shanbhag,triangle:triangle$1,yen},names$2={};Object.keys(methods).forEach(e=>{names$2[e]=e});function getThreshold(e={}){let{algorithm:t=names$2.otsu}=e;this.checkProcessable("getThreshold",{components:1,bitDepth:[8,16]});let n=methods[t.toLowerCase()];if(n){let r=this.getHistogram();return n(r,this.size)}else throw new Error(`unknown thresholding algorithm: ${t}`)}const THRESHOLD="threshold";function mask(e={}){let{algorithm:t=THRESHOLD,threshold:n=.5,useAlpha:r=!0,invert:i=!1}=e;this.checkProcessable("mask",{components:1,bitDepth:[8,16]}),t===THRESHOLD?n=getThreshold$1(n,this.maxValue):n=getThreshold.call(this,e);let s=new Image(this.width,this.height,{kind:"BINARY",parent:this}),o=0;if(this.alpha&&r)for(let l=0;l<this.data.length;l+=this.channels){let c=this.data[l]+(this.maxValue-this.data[l])*(this.maxValue-this.data[l+1])/this.maxValue;(i&&c<=n||!i&&c>=n)&&s.setBit(o),o++}else for(let l=0;l<this.data.length;l+=this.channels)(i&&this.data[l]<=n||!i&&this.data[l]>=n)&&s.setBit(o),o++;return s}function copyImage(e,t,n,r){let i=e.width,s=e.height,o=t.width,l=e.channels;for(let c=0;c<i;c++)for(let f=0;f<s;f++)for(let h=0;h<l;h++){let p=(f*i+c)*l+h,g=((r+f)*o+n+c)*l+h;t.data[g]=e.data[p]}}function pad(e={}){let{size:t=0,algorithm:n="copy",color:r}=e;if(this.checkProcessable("pad",{bitDepth:[8,16]}),n==="set"){if(r.length!==this.channels)throw new Error(`pad: the color array must have the same length as the number of channels. Here: ${this.channels}`);for(let c=0;c<r.length;c++)r[c]===0&&(r[c]=.001)}else r=newArray(this.channels,null);Array.isArray(t)||(t=[t,t]);let i=this.width+t[0]*2,s=this.height+t[1]*2,o=this.channels,l=Image.createFrom(this,{width:i,height:s});copyImage(this,l,t[0],t[1]);for(let c=t[0];c<i-t[0];c++)for(let f=0;f<o;f++){let h=r[f]||l.data[(t[1]*i+c)*o+f];for(let p=0;p<t[1];p++)l.data[(p*i+c)*o+f]=h;h=r[f]||l.data[((s-t[1]-1)*i+c)*o+f];for(let p=s-t[1];p<s;p++)l.data[(p*i+c)*o+f]=h}for(let c=0;c<s;c++)for(let f=0;f<o;f++){let h=r[f]||l.data[(c*i+t[0])*o+f];for(let p=0;p<t[0];p++)l.data[(c*i+p)*o+f]=h;h=r[f]||l.data[(c*i+i-t[0]-1)*o+f];for(let p=i-t[0];p<i;p++)l.data[(c*i+p)*o+f]=h}return l}function colorDepth(e=8){if(this.checkProcessable("colorDepth",{bitDepth:[1,8,16]}),![8,16].includes(e))throw Error("You need to specify the new colorDepth as 8 or 16");if(this.bitDepth===e)return this.clone();let t=Image.createFrom(this,{bitDepth:e});switch(e){case 8:if(this.bitDepth===1)for(let n=0;n<this.size;n++)this.getBit(n)&&(t.data[n]=255);else for(let n=0;n<this.data.length;n++)t.data[n]=this.data[n]>>8;break;case 16:if(this.bitDepth===1)for(let n=0;n<this.size;n++)this.getBit(n)&&(t.data[n]=65535);else for(let n=0;n<this.data.length;n++)t.data[n]=this.data[n]<<8|this.data[n];break;default:throw new Error("colorDepth conversion unexpected case")}return t}function rotateFree(e,t={}){const{interpolation:n=validInterpolations.nearestneighbor,width:r=this.width,height:i=this.height}=t;if(typeof e!="number")throw new TypeError("degrees must be a number");const s=checkInterpolation(n),o=e*Math.PI/180,l=Math.floor(Math.abs(r*Math.cos(o))+Math.abs(i*Math.sin(o))),c=Math.floor(Math.abs(i*Math.cos(o))+Math.abs(r*Math.sin(o))),f=Math.cos(-o),h=Math.sin(-o);let p=l/2,g=c/2;l%2===0?(p=p-.5,c%2===0?g=g-.5:g=Math.floor(g)):(p=Math.floor(p),c%2===0?g=g-.5:g=Math.floor(g));const x=Math.floor(r/2-p),D=Math.floor(i/2-g);if(this.bitDepth===1){const y=new Image(l,c,{kind:"BINARY",parent:this});switch(s){case validInterpolations.nearestneighbor:return rotateBinaryNearestNeighbor(this,y,x,D,p,g,f,h);case validInterpolations.bilinear:return rotateBinaryBilinear(this,y,x,D,p,g,f,h);default:throw new Error(`unsupported rotate interpolation: ${s}`)}}else{const y=Image.createFrom(this,{width:l,height:c});switch(s){case validInterpolations.nearestneighbor:return rotateNearestNeighbor(this,y,x,D,p,g,f,h);case validInterpolations.bilinear:return rotateBilinear(this,y,x,D,p,g,f,h);default:throw new Error(`unsupported rotate interpolation: ${s}`)}}}function rotateNearestNeighbor(e,t,n,r,i,s,o,l){for(let c=0;c<t.width;c+=1)for(let f=0;f<t.height;f+=1)for(let h=0;h<e.channels;h++){let p=Math.round((c-i)*o-(f-s)*l+i)+n,g=Math.round((f-s)*o+(c-i)*l+s)+r;p<0||p>=e.width||g<0||g>=e.height?e.alpha===1&&h===e.channels-1?t.setValueXY(c,f,h,0):t.setValueXY(c,f,h,e.maxValue):t.setValueXY(c,f,h,e.getValueXY(p,g,h))}return t}function rotateBinaryNearestNeighbor(e,t,n,r,i,s,o,l){for(let c=0;c<t.width;c+=1)for(let f=0;f<t.height;f+=1){let h=Math.round((c-i)*o-(f-s)*l+i)+n,p=Math.round((f-s)*o+(c-i)*l+s)+r;(h<0||h>=e.width||p<0||p>=e.height||e.getBitXY(h,p))&&t.setBitXY(c,f)}return t}function rotateBilinear(e,t,n,r,i,s,o,l){let c=e.width*e.channels;for(let f=0;f<t.height;f++)for(let h=0;h<t.width;h++){let p=(h-i)*o-(f-s)*l+i+n,g=(f-s)*o+(h-i)*l+s+r,x=p|0,D=g|0,y=p-x,E=g-D;for(let F=0;F<e.channels;F++)if(p<0||p>=e.width||g<0||g>=e.height)e.alpha===1&&F===e.channels-1?t.setValueXY(h,f,F,0):t.setValueXY(h,f,F,e.maxValue);else{let B=(D*e.width+x)*e.channels+F,M=e.data[B],k=e.data[B+e.channels],T=e.data[B+c],N=e.data[B+c+e.channels],$=M+y*(k-M)+E*(T-M)+y*E*(M-k-T+N)|0;t.setValueXY(h,f,F,$)}}return t}function rotateBinaryBilinear(e,t,n,r,i,s,o,l){let c=e.width;for(let f=0;f<t.height;f++)for(let h=0;h<t.width;h++){let p=(h-i)*o-(f-s)*l+i+n,g=(f-s)*o+(h-i)*l+s+r,x=p|0,D=g|0,y=p-x,E=g-D;if(p<0||p>=e.width||g<0||g>=e.height)t.setBitXY(h,f);else{let F=D*e.width+x,B=e.getBit(F),M=e.getBit(F+1),k=e.getBit(F+c),T=e.getBit(F+1+c);(B|y&M-B|E&k-B|y&E&B-M-k+T)>0&&t.setBitXY(h,f)}}return t}function rotate$2(e,t){if(this.checkProcessable("rotate",{bitDepth:[1,8,16]}),typeof e!="number")throw new TypeError("angle must be a number");switch(e<0&&(e=Math.ceil(-e/360)*360+e),e%360){case 0:return this.clone();case 90:return rotateRight.call(this);case 180:return rotate180.call(this);case 270:return rotateLeft.call(this);default:return rotateFree.call(this,e,t)}}function rotateLeft(){if(this.bitDepth===1){const e=new Image(this.height,this.width,{kind:"BINARY",parent:this}),t=e.height-1;for(let n=0;n<this.height;n++)for(let r=0;r<this.width;r++)this.getBitXY(r,n)&&e.setBitXY(n,t-r);return e}else{const e=Image.createFrom(this,{width:this.height,height:this.width}),t=e.height-1;for(let n=0;n<this.height;n++)for(let r=0;r<this.width;r++)for(let i=0;i<this.channels;i++)e.setValueXY(n,t-r,i,this.getValueXY(r,n,i));return e}}function rotateRight(){if(this.bitDepth===1){const e=new Image(this.height,this.width,{kind:"BINARY",parent:this}),t=e.width-1;for(let n=0;n<this.height;n++)for(let r=0;r<this.width;r++)this.getBitXY(r,n)&&e.setBitXY(t-n,r);return e}else{const e=Image.createFrom(this,{width:this.height,height:this.width}),t=e.width-1;for(let n=0;n<this.height;n++)for(let r=0;r<this.width;r++)for(let i=0;i<this.channels;i++)e.setValueXY(t-n,r,i,this.getValueXY(r,n,i));return e}}function rotate180(){if(this.bitDepth===1){const e=new Image(this.width,this.height,{kind:"BINARY",parent:this}),t=e.width-1,n=e.height-1;for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)this.getBitXY(i,r)&&e.setBitXY(t-i,n-r);return e}else{const e=Image.createFrom(this),t=e.width-1,n=e.height-1;for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)for(let s=0;s<this.channels;s++)e.setValueXY(t-i,n-r,s,this.getValueXY(i,r,s));return e}}function insert(e,t={}){const n=getImageParameters(e);this.checkProcessable("insert",n);let{x:r=0,y:i=0}=t;const s=getOutputImageOrInPlace(this,t,{copy:!0}),o=Math.min(s.height,i+e.height),l=Math.min(s.width,r+e.width);if(s.bitDepth===1)for(let c=i;c<o;c++)for(let f=r;f<l;f++)e.getBitXY(f-r,c-i)?s.setBitXY(f,c):s.clearBitXY(f,c);else for(let c=i;c<o;c++)for(let f=r;f<l;f++)s.setPixelXY(f,c,e.getPixelXY(f-r,c-i));return s}function setBorder(e={}){let{size:t=0,algorithm:n="copy",color:r}=e;if(this.checkProcessable("setBorder",{bitDepth:[8,16,32,64]}),n==="set"){if(r.length!==this.channels)throw new Error(`setBorder: the color array must have the same length as the number of channels. Here: ${this.channels}`);for(let l=0;l<r.length;l++)r[l]===0&&(r[l]=.001)}else r=newArray(this.channels,null);Array.isArray(t)||(t=[t,t]);let i=t[0],s=t[1],o=this.channels;for(let l=i;l<this.width-i;l++)for(let c=0;c<o;c++){let f=r[c]||this.data[(l+this.width*s)*o+c];for(let h=0;h<s;h++)this.data[(h*this.width+l)*o+c]=f;f=r[c]||this.data[(l+this.width*(this.height-s-1))*o+c];for(let h=this.height-s;h<this.height;h++)this.data[(h*this.width+l)*o+c]=f}for(let l=0;l<this.height;l++)for(let c=0;c<o;c++){let f=r[c]||this.data[(l*this.width+i)*o+c];for(let h=0;h<i;h++)this.data[(l*this.width+h)*o+c]=f;f=r[c]||this.data[(l*this.width+this.width-i-1)*o+c];for(let h=this.width-i;h<this.width;h++)this.data[(l*this.width+h)*o+c]=f}return this}function split(e={}){let{preserveAlpha:t=!0}=e;if(this.checkProcessable("split",{bitDepth:[8,16]}),this.components===1)return new Stack([this.clone()]);let n=new Stack,r=this.data;if(this.alpha&&t)for(let i=0;i<this.components;i++){let s=Image.createFrom(this,{components:1,alpha:!0,colorModel:GREY$1}),o=0;for(let l=0;l<r.length;l+=this.channels)s.data[o++]=r[l+i],s.data[o++]=r[l+this.components];n.push(s)}else for(let i=0;i<this.channels;i++){let s=Image.createFrom(this,{components:1,alpha:!1,colorModel:GREY$1}),o=0;for(let l=0;l<r.length;l+=this.channels)s.data[o++]=r[l+i];n.push(s)}return n}function getChannel(e,t={}){let{keepAlpha:n=!1,mergeAlpha:r=!1}=t;n&=this.alpha,r&=this.alpha,this.checkProcessable("getChannel",{bitDepth:[8,16]}),e=validateChannel(this,e);let i=Image.createFrom(this,{components:1,alpha:n,colorModel:GREY$1}),s=0;for(let o=0;o<this.data.length;o+=this.channels)r?i.data[s++]=this.data[o+e]*this.data[o+this.components]/this.maxValue:(i.data[s++]=this.data[o+e],n&&(i.data[s++]=this.data[o+this.components]));return i}function combineChannels(e=defaultCombineMethod,t={}){let{mergeAlpha:n=!1,keepAlpha:r=!1}=t;n&=this.alpha,r&=this.alpha,this.checkProcessable("combineChannels",{bitDepth:[8,16]});let i=Image.createFrom(this,{components:1,alpha:r,colorModel:GREY$1}),s=0;for(let o=0;o<this.size;o++){let l=e(this.getPixel(o));n?i.data[s++]=l*this.data[o*this.channels+this.components]/this.maxValue:(i.data[s++]=l,r&&(i.data[s++]=this.data[o*this.channels+this.components]))}return i}function defaultCombineMethod(e){return(e[0]+e[1]+e[2])/3}function setChannel(e,t){if(this.checkProcessable("setChannel",{bitDepth:[8,16]}),t.checkProcessable("setChannel (image parameter check)",{bitDepth:[this.bitDepth],alpha:[0],components:[1]}),t.width!==this.width||t.height!==this.height)throw new Error("Images must have exactly the same width and height");e=validateChannel(this,e);let n=e;for(let r=0;r<t.data.length;r++)this.data[n]=t.data[r],n+=this.channels;return this}function getSimilarity(e,t={}){let{shift:n=[0,0],average:r,channels:i,defaultAlpha:s,normalize:o,border:l=[0,0]}=t;if(this.checkProcessable("getSimilarity",{bitDepth:[8,16]}),Array.isArray(l)||(l=[l,l]),i=validateArrayOfChannels(this,{channels:i,defaultAlpha:s}),this.bitDepth!==e.bitDepth)throw new Error("Both images must have the same bitDepth");if(this.channels!==e.channels)throw new Error("Both images must have the same number of channels");if(this.colorModel!==e.colorModel)throw new Error("Both images must have the same colorModel");typeof r>"u"&&(r=!0);let c=Math.max(l[0],-n[0]),f=Math.min(this.width-l[0],this.width-n[0]),h=Math.max(l[1],-n[1]),p=Math.min(this.height-l[1],this.height-n[1]),g=newArray(i.length,0);for(let x=0;x<i.length;x++){let D=i[x],y=o?this.sum[D]:Math.max(this.sum[D],e.sum[D]),E=o?e.sum[D]:Math.max(this.sum[D],e.sum[D]);if(y!==0&&E!==0)for(let F=c;F<f;F++)for(let B=h;B<p;B++){let M=F*this.multiplierX+B*this.multiplierY+D,k=M+n[0]*this.multiplierX+n[1]*this.multiplierY;g[x]+=Math.min(this.data[M]/y,e.data[k]/E)}}return r?g.reduce((x,D)=>x+D)/g.length:g}function getPixelsGrid(e={}){let{sampling:t=[10,10],painted:n=!1,mask:r}=e;this.checkProcessable("getPixelsGrid",{bitDepth:[8,16],channels:1}),Array.isArray(t)||(t=[t,t]);const i=t[0],s=t[1],o=[],l=[],c=this.width/i,f=this.height/s;let h=Math.floor(c/2);for(let g=0;g<i;g++){let x=Math.floor(f/2);for(let D=0;D<s;D++){let y=Math.round(h),E=Math.round(x);(!r||r.getBitXY(y,E))&&(o.push([y,E]),l.push(this.getPixelXY(y,E))),x+=f}h+=c}const p={xyS:o,zS:l};return n&&(p.painted=this.rgba8().paintPoints(o)),p}function Matrix(e,t,n){const r=new Array(e);for(let i=0;i<e;i++)r[i]=new Array(t);if(n)for(let i=0;i<e;i++)for(let s=0;s<t;s++)r[i][s]=n;return r.width=e,r.height=t,Object.setPrototypeOf(r,Matrix.prototype),r}Matrix.prototype.localMin=function(e,t){let n=this[e][t],r=[e,t];for(let i=Math.max(0,e-1);i<Math.min(this.length,e+2);i++)for(let s=Math.max(0,t-1);s<Math.min(this[0].length,t+2);s++)this[i][s]<n&&(n=this[i][s],r=[i,s]);return{position:r,value:n}};Matrix.prototype.localMax=function(e,t){let n=this[e][t],r=[e,t];for(let i=Math.max(0,e-1);i<Math.min(this.length,e+2);i++)for(let s=Math.max(0,t-1);s<Math.min(this[0].length,t+2);s++)this[i][s]>n&&(n=this[i][s],r=[i,s]);return{position:r,value:n}};Matrix.prototype.localSearch=function(e,t,n){let r=[];for(let i=Math.max(0,e-1);i<Math.min(this.length,e+2);i++)for(let s=Math.max(0,t-1);s<Math.min(this[0].length,t+2);s++)this[i][s]===n&&r.push([i,s]);return r};function getBestMatch(e,t={}){let{border:n}=t;if(this.checkProcessable("getChannel",{bitDepth:[8,16]}),this.bitDepth!==e.bitDepth)throw new Error("Both images must have the same bitDepth");if(this.channels!==e.channels)throw new Error("Both images must have the same number of channels");if(this.colorModel!==e.colorModel)throw new Error("Both images must have the same colorModel");let r=new Matrix(e.width,e.height,-1/0),i=Math.floor(e.width/2),s=Math.floor(e.height/2),o=i,l=s,c=!1;for(;!c;){let f=r.localSearch(i,s,-1/0);for(let p=0;p<f.length;p++){let g=f[p],x=this.getSimilarity(e,{border:n,shift:[o-g[0],l-g[1]]});r[g[0]][g[1]]=x}let h=r.localMax(i,s);h.position[0]!==i||h.position[1]!==s?(i=h.position[0],s=h.position[1]):c=!0}return[i-o,s-l]}function getRow(e,t=0){this.checkProcessable("getRow",{bitDepth:[8,16]}),checkRow(this,e),checkChannel(this,t);let n=new Array(this.width),r=0,i=e*this.width*this.channels+t,s=i+this.width*this.channels;for(let o=i;o<s;o+=this.channels)n[r++]=this.data[o];return n}function getColumn(e,t=0){this.checkProcessable("getColumn",{bitDepth:[8,16]}),checkColumn(this,e),checkChannel(this,t);let n=new Array(this.height),r=0,i=this.width*this.channels;for(let s=t+e*this.channels;s<this.data.length;s+=i)n[r++]=this.data[s];return n}function getMatrix(e={}){let{channel:t}=e;if(this.checkProcessable("getMatrix",{bitDepth:[8,16]}),t===void 0){if(this.components>1)throw new RangeError("You need to define the channel for an image that contains more than one channel");t=0}let n=new Matrix$1(this.height,this.width);for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)n.set(r,i,this.getValueXY(i,r,t));return n}function setMatrix(e,t={}){e=new Matrix$1(e);let{channel:n}=t;if(this.checkProcessable("getMatrix",{bitDepth:[8,16]}),n===void 0){if(this.components>1)throw new RangeError("You need to define the channel for an image that contains more than one channel");n=0}if(this.width!==e.columns||this.height!==e.rows)throw new RangeError("The size of the matrix must be equal to the size of the image");for(let r=0;r<this.height;r++)for(let i=0;i<this.width;i++)this.setValueXY(i,r,n,e.get(r,i));return this}function getPixelsArray(){this.checkProcessable("getPixelsArray",{bitDepth:[8,16,32]});let e=new Array(this.size),t=0;for(let n=0;n<this.data.length;n+=this.channels){let r=new Array(this.components);for(let i=0;i<this.components;i++)r[i]=this.data[n+i];e[t++]=r}return e}function getIntersection(e){let t=this,n=t.getClosestCommonParent(e),r=t.getRelativePosition(n,{defaultFurther:!0}),i=getRelativePositionForAllPixels(t,r),s=e.getRelativePosition(n,{defaultFurther:!0}),o=getRelativePositionForAllPixels(e,s),l=getCommonSurface(i,o),c={whitePixelsMask1:[],whitePixelsMask2:[],commonWhitePixels:[]};for(let f=0;f<l.length;f++){let h=l[f],p=[h[0]-r[0],h[1]-r[1]],g=[h[0]-s[0],h[1]-s[1]],x=t.getBitXY(p[0],p[1]),D=e.getBitXY(g[0],g[1]);x===1&&D===1&&c.commonWhitePixels.push(h)}for(let f=0;f<i.length;f++){let h,p;f!==0&&(h=Math.floor(f/t.width),p=f%t.width),t.getBitXY(h,p)===1&&c.whitePixelsMask1.push(i[f])}for(let f=0;f<o.length;f++){let h=0,p=0;f!==0&&(h=Math.floor(f/e.width),p=f%e.width),e.getBitXY(h,p)===1&&c.whitePixelsMask2.push(o[f])}return c}function getRelativePositionForAllPixels(e,t){let n=[];for(let r=0;r<e.height;r++)for(let i=0;i<e.width;i++){let s=[r,i];n.push([s[0]+t[0],s[1]+t[1]])}return n}function getCommonSurface(e,t){let n=0,r=0,i=[];for(;n<e.length&&r<t.length;)e[n][0]===t[r][0]&&e[n][1]===t[r][1]?(i.push(e[n]),n++,r++):e[n][0]<t[r][0]||e[n][0]===t[r][0]&&e[n][1]<t[r][1]?n++:r++;return i}function getClosestCommonParent(e){let t=getDepth(this),n=getDepth(e),r;if(t>=n?r=getFurthestParent(this,t):r=getFurthestParent(e,n),t===0||n===0)return r;let i=this,s=e;for(;t!==n;)if(t>n){if(i=i.parent,i===null)return r;t=t-1}else{if(s=s.parent,s===null)return r;n=n-1}for(;i!==s&&i!==null&&s!==null;)if(i=i.parent,s=s.parent,i===null||s===null)return r;return i!==s?r:i}function getDepth(e){let t=0,n=e;for(;n.parent!=null;)n=n.parent,t++;return t}function getFurthestParent(e,t){let n=e;for(;t>0;)n=n.parent,t=t-1;return n}const defaultOptions$1={lowThreshold:10,highThreshold:30,gaussianBlur:1.1},Gx=[[-1,0,1],[-2,0,2],[-1,0,1]],Gy=[[-1,-2,-1],[0,0,0],[1,2,1]],convOptions={bitDepth:32,mode:"periodic"};function cannyEdgeDetector(e,t){e.checkProcessable("Canny edge detector",{bitDepth:8,channels:1,components:1}),t=Object.assign({},defaultOptions$1,t);const n=e.width,r=e.height,i=e.maxValue,s={sigma:t.gaussianBlur,radius:3},o=e.gaussianFilter(s),l=o.convolution(Gy,convOptions),c=o.convolution(Gx,convOptions),f=c.hypotenuse(l),h=e.constructor,p=new h(n,r,{kind:"GREY",bitDepth:32}),g=new h(n,r,{kind:"GREY",bitDepth:32}),x=new h(n,r,{kind:"GREY"});for(var D=1;D<n-1;D++)for(var y=1;y<r-1;y++){var E=(Math.round(Math.atan2(c.getValueXY(D,y,0),l.getValueXY(D,y,0))*(5/Math.PI))+5)%5;E===0&&(f.getValueXY(D,y,0)<=f.getValueXY(D,y-1,0)||f.getValueXY(D,y,0)<=f.getValueXY(D,y+1,0))||E===1&&(f.getValueXY(D,y,0)<=f.getValueXY(D-1,y+1,0)||f.getValueXY(D,y,0)<=f.getValueXY(D+1,y-1,0))||E===2&&(f.getValueXY(D,y,0)<=f.getValueXY(D-1,y,0)||f.getValueXY(D,y,0)<=f.getValueXY(D+1,y,0))||E===3&&(f.getValueXY(D,y,0)<=f.getValueXY(D-1,y-1,0)||f.getValueXY(D,y,0)<=f.getValueXY(D+1,y+1,0))||p.setValueXY(D,y,0,f.getValueXY(D,y,0))}for(D=0;D<n*r;++D){var F=p.data[D],B=0;F>t.highThreshold&&(B++,x.data[D]=i),F>t.lowThreshold&&B++,g.data[D]=B}var M=[];for(D=1;D<n-1;++D)for(y=1;y<r-1;++y)if(g.getValueXY(D,y,0)===1){e:for(var k=D-1;k<D+2;++k)for(var T=y-1;T<y+2;++T)if(g.getValueXY(k,T,0)===2){M.push([D,y]),x.setValueXY(D,y,0,i);break e}}for(;M.length>0;){var N=[];for(D=0;D<M.length;++D)for(y=-1;y<2;++y)for(k=-1;k<2;++k)if(!(y===0&&k===0)){var $=M[D][0]+y,R=M[D][1]+k;g.getValueXY($,R,0)===1&&x.getValueXY($,R,0)===0&&(N.push([$,R]),x.setValueXY($,R,0,i))}M=N}return x}function cannyEdge(e){return cannyEdgeDetector(this,e)}function extract(e,t={}){let{position:n}=t;if(this.checkProcessable("extract",{bitDepth:[1,8,16]}),!n&&(n=e.getRelativePosition(this),!n))throw new Error("extract : can not extract an image because the relative position can not be determined, try to specify manually the position as an array of 2 elements [x,y].");if(this.bitDepth>1){let r=Image.createFrom(this,{width:e.width,height:e.height,alpha:1,position:n,parent:this});for(let i=0;i<e.width;i++)for(let s=0;s<e.height;s++){for(let o=0;o<this.channels;o++){let l=this.getValueXY(i+n[0],s+n[1],o);r.setValueXY(i,s,o,l)}e.getBitXY(i,s)||r.setValueXY(i,s,this.components,0)}return r}else{let r=Image.createFrom(this,{width:e.width,height:e.height,position:n,parent:this});for(let i=0;i<e.height;i++)for(let s=0;s<e.width;s++)e.getBitXY(s,i)&&this.getBitXY(s+n[0],i+n[1])&&r.setBitXY(s,i);return r}}var fastList={exports:{}},hasRequiredFastList;function requireFastList(){return hasRequiredFastList||(hasRequiredFastList=1,function(e,t){(function(){function n(i,s,o){this.next=o,o&&(o.prev=this),this.prev=s,s&&(s.next=this),this.data=i}function r(){if(!(this instanceof r))return new r;this._head=null,this._tail=null,this.length=0}r.prototype={push:function(i){this._tail=new n(i,this._tail,null),this._head||(this._head=this._tail),this.length++},pop:function(){if(this.length!==0){var i=this._tail;return this._tail=i.prev,i.prev&&(i.prev=this._tail.next=null),this.length--,this.length===1?this._head=this._tail:this.length===0&&(this._head=this._tail=null),i.data}},unshift:function(i){this._head=new n(i,null,this._head),this._tail||(this._tail=this._head),this.length++},shift:function(){if(this.length!==0){var i=this._head;return this._head=i.next,i.next&&(i.next=this._head.prev=null),this.length--,this.length===1?this._tail=this._head:this.length===0&&(this._head=this._tail=null),i.data}},item:function(i){i<0&&(i=this.length+i);for(var s=this._head;i-- >0&&s;)s=s.next;return s?s.data:void 0},slice:function(i,s){if(i||(i=0),s||(s=this.length),s<0&&(s=this.length+s),i<0&&(i=this.length+i),s===i)return[];if(s<i)throw new Error("invalid offset: "+i+","+s+" (length="+this.length+")");for(var o=s-i,l=new Array(o),c=0,f=this._head;i-- >0&&f;)f=f.next;for(;c<o&&f;)l[c++]=f.data,f=f.next;return l},drop:function(){r.call(this)},forEach:function(i,s){for(var o=this._head,l=0,c=this.length;l<c&&o;)i.call(s||this,o.data,l,this),o=o.next,l++},map:function(i,s){var o=new r;return this.forEach(function(l,c,f){o.push(i.call(s||f,l,c,f))}),o},filter:function(i,s){var o=new r;return this.forEach(function(l,c,f){i.call(s||f,l,c,f)&&o.push(l)}),o},reduce:function(i,s,o){var l=0,c=this._head,f=this.length;for(s||(l=1,s=c&&c.data,c=c&&c.next);l<f&&c;)s=i.call(o||this,s,c.data,this),l++,c=c.next;return s}},e.exports=r})()}(fastList)),fastList.exports}var fastListExports=requireFastList();const LinkedList=getDefaultExportFromCjs(fastListExports);function floodFill(e={}){const{x:t=0,y:n=0,inPlace:r=!0}=e,i=r?this:Image.createFrom(this);if(this.checkProcessable("floodFill",{bitDepth:1}),this.getBitXY(t,n))return i;const o=new LinkedList;for(o.push(new Node(t,n));o.length>0;){const l=o.shift();i.setBitXY(l.x,l.y);for(let c=l.x+1;c<this.width&&(!i.getBitXY(c,l.y)&&!this.getBitXY(c,l.y));c++)i.setBitXY(c,l.y),l.y+1<this.height&&!this.getBitXY(c,l.y+1)&&o.push(new Node(c,l.y+1)),l.y-1>=0&&!this.getBitXY(c,l.y-1)&&o.push(new Node(c,l.y-1));for(let c=l.x-1;c>=0&&(!i.getBitXY(c,l.y)&&!this.getBitXY(c,l.y));c++)i.setBitXY(c,l.y),l.y+1<this.height&&!this.getBitXY(c,l.y+1)&&o.push(new Node(c,l.y+1)),l.y-1>=0&&!this.getBitXY(c,l.y-1)&&o.push(new Node(c,l.y-1))}return i}function Node(e,t){this.x=e,this.y=t}function hsv2rgb$1(e,t,n){t=t/100,n=n/100;var r=[],i=n*t,s=e/60,o=i*(1-Math.abs(s%2-1)),l=n-i;return s>=0&&s<1?r=[i,o,0]:s>=1&&s<2?r=[o,i,0]:s>=2&&s<3?r=[0,i,o]:e>=3&&s<4?r=[0,o,i]:e>=4&&s<5?r=[o,0,i]:e>=5&&s<=6?r=[i,0,o]:r=[0,0,0],{r:Math.round(255*(r[0]+l)),g:Math.round(255*(r[1]+l)),b:Math.round(255*(r[2]+l))}}function hsl2hsv(e,t,n){return t*=(n<50?n:100-n)/100,{h:e,s:2*t/(n+t)*100,v:n+t}}function hsl2rgb$2(e,t,n){var r=hsl2hsv(e,t,n);return hsv2rgb$1(r.h,r.s,r.v)}var colors$1={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,132,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,255,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,203],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[119,128,144],slategrey:[119,128,144],snow:[255,255,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,5]};function parse$1(e){return named(e)||hex3(e)||hex6(e)||rgb(e)||rgba$1(e)||hsl(e)||hsla(e)}function named(e){var t=colors$1[e.toLowerCase()];if(t)return{r:t[0],g:t[1],b:t[2],a:100}}function rgb(e){var t=e.match(/rgb\(([^)]+)\)/);if(t){var n=t[1].split(/ *, */).map(Number);return{r:n[0],g:n[1],b:n[2],a:100}}}function rgba$1(e){var t=e.match(/rgba\(([^)]+)\)/);if(t){var n=t[1].split(/ *, */).map(Number);return{r:n[0],g:n[1],b:n[2],a:n[3]*100}}}function hex6(e){if(e[0]==="#"&&e.length===7)return{r:parseInt(e.slice(1,3),16),g:parseInt(e.slice(3,5),16),b:parseInt(e.slice(5,7),16),a:100}}function hex3(e){if(e[0]==="#"&&e.length===4)return{r:parseInt(e[1]+e[1],16),g:parseInt(e[2]+e[2],16),b:parseInt(e[3]+e[3],16),a:100}}function hsl(e){var t=e.match(/hsl\(([^)]+)\)/);if(t){var n=t[1].split(/ *, */),r=parseInt(n[0],10),i=parseInt(n[1],10),s=parseInt(n[2],10),o=hsl2rgb$2(r,i,s);return _extends({},o,{a:100})}}function hsla(e){var t=e.match(/hsla\(([^)]+)\)/);if(t){var n=t[1].split(/ *, */),r=parseInt(n[0],10),i=parseInt(n[1],10),s=parseInt(n[2],10),o=parseInt(parseFloat(n[3])*100,10),l=hsl2rgb$2(r,i,s);return _extends({},l,{a:o})}}function css2array(e){let t=parse$1(e);return[t.r,t.g,t.b,Math.round(t.a*255/100)]}function hue2rgb(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e}function hsl2rgb$1(e,t,n){let r,i,s,o,l,c;return t/=100,n/=100,t===0?o=l=c=n*255:(n<=.5?i=n*(t+1):i=n+t-n*t,r=n*2-i,s=e/360,o=hue2rgb(r,i,s+1/3),l=hue2rgb(r,i,s),c=hue2rgb(r,i,s-1/3)),{r:o,g:l,b:c}}function getDistinctColors(e){let t=new Array(e),n=0;for(let r=0;r<360;r+=360/e){n++;let i=hsl2rgb$1(r,100,30+n%4*15);t[n-1]=[Math.round(i.r*255),Math.round(i.g*255),Math.round(i.b*255)]}return t}function getRandomColor(){return[Math.floor(Math.random()*256),Math.floor(Math.random()*256),Math.floor(Math.random()*256)]}function getColors(e){let{color:t,colors:n,randomColors:r,numberColors:i=50}=e;if(t&&!Array.isArray(t)&&(t=css2array(t)),t)return[t];if(n)return n=n.map(function(s){return Array.isArray(s)?s:css2array(s)}),n;if(r){n=new Array(i);for(let s=0;s<i;s++)n[s]=getRandomColor()}return getDistinctColors(i)}function paintLabels(e,t,n={}){let{color:r="blue",colors:i,font:s="12px Helvetica",rotate:o=0}=n;if(this.checkProcessable("paintMasks",{channels:[3,4],bitDepth:[8,16],colorModel:RGB$1}),!Array.isArray(e))throw Error("paintLabels: labels must be an array");if(!Array.isArray(t))throw Error("paintLabels: positions must be an array");if(r&&!Array.isArray(r)&&(r=css2array(r)),i?i=i.map(function(f){return Array.isArray(f)?f:css2array(f)}):i=[r],e.length!==t.length)throw Error("paintLabels: positions and labels must be arrays from the same size");Array.isArray(s)||(s=[s]),Array.isArray(o)||(o=[o]);let c=this.getCanvas().getContext("2d");for(let f=0;f<e.length;f++){c.save();let h=i[f%i.length];c.fillStyle=`rgba(${h[0]},${h[1]},${h[2]},${h[3]/this.maxValue})`,c.font=s[f%s.length];let p=t[f];c.translate(p[0],p[1]),c.rotate(o[f%o.length]/180*Math.PI),c.fillText(e[f],0,0),c.restore()}return this.data=Uint8Array.from(c.getImageData(0,0,this.width,this.height).data),this}function paintMasks(e,t={}){let{alpha:n=255,labels:r=[],labelsPosition:i=[],labelColor:s="blue",labelFont:o="12px Helvetica"}=t;this.checkProcessable("paintMasks",{channels:[3,4],bitDepth:[8,16],colorModel:RGB$1});let l=getColors(Object.assign({},t,{numberColors:e.length}));Array.isArray(e)||(e=[e]);for(let c=0;c<e.length;c++){let f=e[c],h=l[c%l.length];for(let p=0;p<f.width;p++)for(let g=0;g<f.height;g++)if(f.getBitXY(p,g))for(let x=0;x<Math.min(this.components,h.length);x++)if(n===255)this.setValueXY(p+f.position[0],g+f.position[1],x,h[x]);else{let D=this.getValueXY(p+f.position[0],g+f.position[1],x);D=Math.round((D*(255-n)+h[x]*n)/255),this.setValueXY(p+f.position[0],g+f.position[1],x,D)}}if(Array.isArray(r)&&r.length>0){let f=this.getCanvas().getContext("2d");f.fillStyle=s,f.font=o;for(let h=0;h<Math.min(e.length,r.length);h++){let p=i[h]?i[h]:e[h].position;f.fillText(r[h],p[0],p[1])}this.data=Uint8Array.from(f.getImageData(0,0,this.width,this.height).data)}return this}function zerosMatrix(e,t){let n=new Array(e);for(let r=0;r<e;r++)n[r]=new Array(t).fill(0);return n}const cross=[[0,0,1,0,0],[0,0,1,0,0],[1,1,1,1,1],[0,0,1,0,0],[0,0,1,0,0]],smallCross=[[0,1,0],[1,1,1],[0,1,0]];class Shape{constructor(t={}){let{kind:n="cross",shape:r,size:i,width:s,height:o,filled:l=!0}=t;if(i&&(s=i,o=i),r)switch(r.toLowerCase()){case"square":case"rectangle":this.matrix=rectangle(s,o,{filled:l});break;case"circle":case"ellipse":this.matrix=ellipse(s,o,{filled:l});break;case"triangle":this.matrix=triangle(s,o,{filled:l});break;default:throw new Error(`Shape: unexpected shape: ${r}`)}else if(n)switch(n.toLowerCase()){case"cross":this.matrix=cross;break;case"smallcross":this.matrix=smallCross;break;default:throw new Error(`Shape: unexpected kind: ${n}`)}else throw new Error("Shape: expected a kind or a shape option");this.height=this.matrix.length,this.width=this.matrix[0].length,this.halfHeight=this.height/2>>0,this.halfWidth=this.width/2>>0}getPoints(){let t=this.matrix,n=[];for(let r=0;r<t.length;r++)for(let i=0;i<t[0].length;i++)t[r][i]&&n.push([i-this.halfWidth,r-this.halfHeight]);return n}getMask(){let t=new Image(this.width,this.height,{kind:BINARY});for(let n=0;n<this.matrix.length;n++)for(let r=0;r<this.matrix[0].length;r++)this.matrix[n][r]&&t.setBitXY(r,n);return t}}function rectangle(e,t,n){const r=zerosMatrix(t,e);if(n.filled)for(let i=0;i<t;i++)for(let s=0;s<e;s++)r[i][s]=1;else{for(let i of[0,t-1])for(let s=0;s<e;s++)r[i][s]=1;for(let i=0;i<t;i++)for(let s of[0,e-1])r[i][s]=1}return r}function ellipse(e,t,n){const r=zerosMatrix(t,e);let i=1-t%2,s=1-e%2,o=Math.floor((e-1)/2),l=Math.floor((t-1)/2),c=o*o,f=l*l;if(n.filled)for(let h=0;h<=l;h++){let p=Math.floor(Math.sqrt(c-c*h*h/f));for(let g=o-p;g<=o;g++)r[l-h][g]=1,r[l+h+i][g]=1,r[l-h][e-g-1]=1,r[l+h+i][e-g-1]=1}else{for(let h=0;h<=l;h++){let p=Math.floor(Math.sqrt(c-c*h*h/f)),g=o-p;r[l-h][g]=1,r[l+h+i][g]=1,r[l-h][e-g-1]=1,r[l+h+i][e-g-1]=1}for(let h=0;h<=o;h++){let p=Math.floor(Math.sqrt(f-f*h*h/c)),g=l-p;r[g][o-h]=1,r[g][o+h+s]=1,r[t-g-1][o-h]=1,r[t-g-1][o+h+s]=1}}return r}function triangle(e,t,n){if(!n.filled)throw new Error("Non filled triangle is not implemented");const r=zerosMatrix(t,e);for(let i=0;i<t;i++){let s=Math.floor((1-i/t)*e/2);for(let o=s;o<e-s;o++)r[i][o]=1}return r}function paintPoints(e,t={}){let{shape:n}=t;this.checkProcessable("paintPoints",{bitDepth:[8,16]});let r=getColors(Object.assign({},t,{numberColors:e.length})),i=new Shape(n).getPoints(),s=Math.min(this.channels,r[0].length);for(let o=0;o<e.length;o++){let l=r[o%r.length],c=e[o][0],f=e[o][1];for(let h=0;h<i.length;h++){let p=i[h][0],g=i[h][1];if(c+p>=0&&f+g>=0&&c+p<this.width&&f+g<this.height){let x=(c+p+(f+g)*this.width)*this.channels;for(let D=0;D<s;D++)this.data[x+D]=l[D]}}}return this}function paintPolyline(e,t={}){let{color:n=[this.maxValue,0,0],closed:r=!1}=t;this.checkProcessable("paintPoints",{bitDepth:[1,8,16]});let i=Math.min(this.channels,n.length);for(let s=0;s<e.length-1+r;s++){let o=e[s],l=e[(s+1)%e.length],c=l[0]-o[0],f=l[1]-o[1],h=Math.max(Math.abs(c),Math.abs(f)),p=c/h,g=f/h,x=o[0],D=o[1];for(let y=0;y<=h;y++){let E=Math.round(x),F=Math.round(D);if(E>=0&&F>=0&&E<this.width&&F<this.height)if(this.bitDepth===1)this.setBitXY(E,F);else{let B=(E+F*this.width)*this.channels;for(let M=0;M<i;M++)this.data[B+M]=n[M]}x=x+p,D=D+g}}return this}function paintPolylines(e,t={}){let n=Object.assign({},t);this.checkProcessable("paintPolylines",{bitDepth:[8,16]});let r=getColors(Object.assign({},t,{numberColors:e.length}));for(let i=0;i<e.length;i++)n.color=r[i%r.length],this.paintPolyline(e[i],n);return this}function paintPolygon(e,t={}){let{color:n=[this.maxValue,0,0],filled:r=!1}=t;this.checkProcessable("paintPoints",{bitDepth:[1,8,16]}),t.closed=!0;let i=deleteDouble(e);if(r===!1)return this.paintPolyline(e,t);{let s=Array(this.height);for(let o=0;o<this.height;o++){s[o]=[];for(let l=0;l<this.width;l++)s[o].push(0)}for(let o=0;o<i.length;o++){const l=lineBetweenTwoPoints(i[o],i[(o+1)%i.length]);for(let c=0;c<this.height;c++)for(let f=0;f<this.width;f++)isAtTheRightOfTheLine(f,c,l,this.height)&&(s[c][f]=s[c][f]===0?1:0)}for(let o=0;o<this.height;o++)for(let l=0;l<this.width;l++)if(s[o][l]===1)if(this.bitDepth===1)this.setBitXY(l,o);else{let c=Math.min(this.channels,n.length),f=(l+o*this.width)*this.channels;for(let h=0;h<c;h++)this.data[f+h]=n[h]}return this.paintPolyline(e,t)}}function deleteDouble(e){let t=[];for(let n=0;n<e.length;n++)if(!(e[n][0]===e[(n+1)%e.length][0]&&e[n][1]===e[(n+1)%e.length][1])){if(e[n][0]===e[(n-1+e.length)%e.length][0]&&e[n][1]===e[(n-1+e.length)%e.length][1])continue;if(e[(n+1)%e.length][0]===e[(n-1+e.length)%e.length][0]&&e[(n-1+e.length)%e.length][1]===e[(n+1)%e.length][1])continue;t.push(e[n])}return t}function lineBetweenTwoPoints(e,t){if(e[0]===t[0])return{a:0,b:e[0],vertical:!0};{const n=(t[1]-e[1])/(t[0]-e[0]),r=e[1]-n*e[0];return{a:n,b:r,vertical:!1}}}function isAtTheRightOfTheLine(e,t,n,r){if(n.vertical===!0)return n.b<=e;if(n.a===0)return!1;{const i=(t-n.b)/n.a;return i<e&&i>=0&&i<=r}}function paintPolygons(e,t={}){let n=Object.assign({},t);this.checkProcessable("paintPolygons",{bitDepth:[8,16]});let r=getColors(Object.assign({},t,{numberColors:e.length}));for(let i=0;i<e.length;i++)n.color=r[i%r.length],this.paintPolygon(e[i],n);return this}function getHistogram(e={}){let{maxSlots:t=256,channel:n,useAlpha:r=!0}=e;if(this.checkProcessable("getHistogram",{bitDepth:[1,8,16]}),n===void 0){if(this.components>1)throw new RangeError("You need to define the channel for an image that contains more than one channel");n=0}return getChannelHistogram.call(this,n,{useAlpha:r,maxSlots:t})}function getHistograms(e={}){const{maxSlots:t=256,useAlpha:n=!0}=e;this.checkProcessable("getHistograms",{bitDepth:[8,16]});let r=new Array(n?this.components:this.channels);for(let i=0;i<r.length;i++)r[i]=getChannelHistogram.call(this,i,{useAlpha:n,maxSlots:t});return r}function getChannelHistogram(e,t){let{useAlpha:n,maxSlots:r}=t;if(this.bitDepth===1){let c=[0,0];for(let f=0;f<this.height;f++)for(let h=0;h<this.width;h++){let p=this.getBitXY(f,h);p===0?c[0]+=1:p===1&&(c[1]+=1)}return c}let i=Math.log2(r);if(!isInteger(i))throw new RangeError("maxSlots must be a power of 2, for example: 64, 256, 1024");let s=0;this.bitDepth>i&&(s=this.bitDepth-i);let o=this.data,l=newArray(Math.pow(2,Math.min(this.bitDepth,i)),0);if(n&&this.alpha){let c=this.channels-e-1;for(let f=e;f<o.length;f+=this.channels)l[o[f]>>s]+=o[f+c]/this.maxValue}else for(let c=e;c<o.length;c+=this.channels)l[o[c]>>s]++;return l}function getColorHistogram(e={}){let{useAlpha:t=!0,nbSlots:n=512}=e;this.checkProcessable("getColorHistogram",{bitDepth:[8,16],components:[3]});let r=Math.log(n)/Math.log(8);if(r!==Math.floor(r))throw new RangeError("nbSlots must be a power of 8. Usually 8, 64, 512 or 4096");let i=this.bitDepth-r,s=this.data,o=newArray(Math.pow(8,r),0),l=Math.pow(2,r*2),c=Math.pow(2,r);for(let f=0;f<s.length;f+=this.channels){let h=(s[f]>>i)*l+(s[f+1]>>i)*c+(s[f+2]>>i);t&&this.alpha?o[h]+=s[f+this.channels-1]/this.maxValue:o[h]++}return o}function min(){this.checkProcessable("min",{bitDepth:[8,16,32]});let e=newArray(this.channels,1/0);for(let t=0;t<this.data.length;t+=this.channels)for(let n=0;n<this.channels;n++)this.data[t+n]<e[n]&&(e[n]=this.data[t+n]);return e}function max(){this.checkProcessable("max",{bitDepth:[8,16,32]});let e=newArray(this.channels,-1/0);for(let t=0;t<this.data.length;t+=this.channels)for(let n=0;n<this.channels;n++)this.data[t+n]>e[n]&&(e[n]=this.data[t+n]);return e}function sum(){this.checkProcessable("sum",{bitDepth:[8,16]});let e=newArray(this.channels,0);for(let t=0;t<this.data.length;t+=this.channels)for(let n=0;n<this.channels;n++)e[n]+=this.data[t+n];return e}function getMoment(e=0,t=0){this.checkProcessable("getMoment",{bitDepth:[1]});let n=0;for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++)this.getBitXY(r,i)===1&&(n+=r**e*i**t);return n}function localMaxima(e={}){let{mask:t,region:n=3,removeClosePoints:r=0,invert:i=!1,maxEquals:s=2}=e,o=this;this.checkProcessable("localMaxima",{bitDepth:[8,16],components:1}),n*=4;let l=i?0:1,c=[1,0,-1,0,1,1,-1,-1,2,0,-2,0,2,2,-2,-2],f=[0,1,0,-1,1,-1,1,-1,0,2,0,-2,2,-2,2,-2],h=n<=8?1:2,p=[];for(let g=h;g<o.height-h;g++)for(let x=h;x<o.width-h;x++){if(t&&t.getBitXY(x,g)!==l)continue;let D=0,y=0,E=o.data[x+g*o.width];for(let F=0;F<n;F++)i?o.data[x+c[F]+(g+f[F])*o.width]>E&&D++:o.data[x+c[F]+(g+f[F])*o.width]<E&&D++,o.data[x+c[F]+(g+f[F])*o.width]===E&&y++;D+y===n&&y<=s&&p.push([x,g])}if(r>0)for(let g=0;g<p.length;g++)for(let x=g+1;x<p.length;x++)Math.sqrt(Math.pow(p[g][0]-p[x][0],2)+Math.pow(p[g][1]-p[x][1],2))<r&&(p[g][0]=p[g][0]+p[x][0]>>1,p[g][1]=p[g][1]+p[x][1]>>1,p.splice(x,1),x--);return p}function mean(){let e=this.getHistograms({maxSlots:this.maxValue+1}),t=new Array(e.length);for(let n=0;n<e.length;n++){let r=e[n];t[n]=mean$2(r)}return t}function median(){let e=this.getHistograms({maxSlots:this.maxValue+1}),t=new Array(e.length);for(let n=0;n<e.length;n++){let r=e[n];t[n]=median$2(r)}return t}function points(){this.checkProcessable("points",{bitDepth:[1]});const e=[];for(let t=0;t<this.width;t++)for(let n=0;n<this.height;n++)this.getBitXY(t,n)===1&&e.push([t,n]);return e}function extendedPoints(){this.checkProcessable("extendedPoints",{bitDepth:[1]});const e=[];for(let t=0;t<this.height;t++)for(let n=0;n<this.width;n++)if(this.getBitXY(n,t)===1)for(e.push([n,t]),this.getBitXY(n+1,t)!==1?(e.push([n+1,t]),e.push([n+1,t+1]),this.getBitXY(n,t+1)!==1&&e.push([n,t+1])):this.getBitXY(n,t+1)!==1&&(e.push([n,t+1]),e.push([n+1,t+1]));n<this.width-2&&this.getBitXY(n+1,t)===1&&this.getBitXY(n+2,t)===1;)n++;return e}function getRelativePosition$1(e,t={}){if(this===e)return[0,0];let n=[0,0],r=this;for(;r;){if(r===e)return n;r.position&&(n[0]+=r.position[0],n[1]+=r.position[1]),r=r.parent}return t.defaultFurther?n:!1}function countAlphaPixels(e={}){let{alpha:t=1}=e;this.checkProcessable("countAlphaPixels",{bitDepth:[8,16],alpha:1});let n=0;if(t!==void 0){for(let r=this.components;r<this.data.length;r+=this.channels)this.data[r]===t&&n++;return n}else return this.size}function monotoneChainConvexHull$1(e,t={}){const{sorted:n}=t;n||(e=e.slice().sort(byXThenY));const r=e.length,i=new Array(r*2);let s=0;for(let l=0;l<r;l++){const c=e[l];for(;s>=2&&cw(i[s-2],i[s-1],c)<=0;)s--;i[s++]=c}const o=s+1;for(let l=r-2;l>=0;l--){const c=e[l];for(;s>=o&&cw(i[s-2],i[s-1],c)<=0;)s--;i[s++]=c}return i.slice(0,s-1)}function cw(e,t,n){return(t[1]-e[1])*(n[0]-e[0])-(t[0]-e[0])*(n[1]-e[1])}function byXThenY(e,t){return e[0]===t[0]?e[1]-t[1]:e[0]-t[0]}function monotoneChainConvexHull(){return monotoneChainConvexHull$1(this.extendedPoints,{sorted:!1})}function round$1(e){for(let t=0;t<e.length;t++)e[t][0]=Math.round(e[t][0]),e[t][1]=Math.round(e[t][1]);return e}function difference(e,t){return[e[0]-t[0],e[1]-t[1]]}function normalize(e){let t=Math.sqrt(e[0]**2+e[1]**2);return[e[0]/t,e[1]/t]}function rotate$1(e,t,n){n===void 0&&(n=new Array(t.length));let r=Math.cos(e),i=Math.sin(e);for(let s=0;s<n.length;++s)n[s]=[r*t[s][0]-i*t[s][1],i*t[s][0]+r*t[s][1]];return n}function perimeter(e){let t=0;for(let n=0;n<e.length;n++){let r=e[n][0],i=e[n][1],s=e[n===e.length-1?0:n+1][0],o=e[n===e.length-1?0:n+1][1];t+=Math.sqrt((s-r)**2+(o-i)**2)}return t}function surface(e){let t=0;for(let n=0;n<e.length;n++){let r=e[n][0],i=e[n===e.length-1?0:n+1][1],s=e[n===e.length-1?0:n+1][0],o=e[n][1];t+=r*i*.5,t-=s*o*.5}return Math.abs(t)}function minMax(e){let t=1/0,n=1/0,r=-1/0,i=-1/0;for(let s=0;s<e.length;s++)e[s][0]<t&&(t=e[s][0]),e[s][0]>r&&(r=e[s][0]),e[s][1]<n&&(n=e[s][1]),e[s][1]>i&&(i=e[s][1]);return[[t,n],[r,i]]}function moveToZeroZero(e,t){t===void 0&&(t=new Array(e.length).fill(0).map(()=>[]));let n=minMax(e),r=n[0][0],i=n[0][1];for(let s=0;s<e.length;s++)t[s][0]=e[s][0]-r,t[s][1]=e[s][1]-i;return t}function minimalBoundingRectangle(e={}){const{originalPoints:t=monotoneChainConvexHull.call(this)}=e;if(t.length===0)return[];if(t.length===1)return[t[0],t[0],t[0],t[0]];const n=new Array(t.length);let r=1/0,i=0,s;for(let o=0;o<n.length;o++){let l=getAngle$1(t[o],t[(o+1)%n.length]);rotate$1(-l,t,n);let c=n[o][0],f=n[o][1],h=n[(o+1)%n.length][0],p=n[(o+1)%n.length][1],g=!0,x=0,D=0,y=0;for(let M=0;M<n.length;M++){let k=n[M][0],T=n[M][1],N=(k-c)/(h-c);g===!0?(g=!1,x=N,D=N):(N<x&&(x=N),N>D&&(D=N));let $=(-(h-c)*T+h*f-p*c)/(h-c);Math.abs($)>Math.abs(y)&&(y=$)}let E=[c+x*(h-c),f],F=[c+D*(h-c),f],B=Math.abs(y*(x-D)*(h-c));B<r&&(i=l,r=B,s=[E,F,[F[0],F[1]-y],[E[0],E[1]-y]])}return rotate$1(i,s,s),s}function getAngle$1(e,t){let n=difference(t,e),r=normalize(n),i=Math.acos(r[0]);return r[1]<0?-i:i}function extend$1(e){let t={inPlace:!0};e.extendMethod("invert",invert),e.extendMethod("abs",abs),e.extendMethod("level",level,t),e.extendMethod("add",add,t),e.extendMethod("subtract",subtract,t),e.extendMethod("subtractImage",subtractImage),e.extendMethod("multiply",multiply,t),e.extendMethod("divide",divide,t),e.extendMethod("hypotenuse",hypotenuse),e.extendMethod("background",background$1),e.extendMethod("flipX",flipX),e.extendMethod("flipY",flipY),e.extendMethod("blurFilter",blurFilter),e.extendMethod("medianFilter",medianFilter),e.extendMethod("gaussianFilter",gaussianFilter),e.extendMethod("sobelFilter",sobelFilter),e.extendMethod("gradientFilter",gradientFilter),e.extendMethod("scharrFilter",scharrFilter),e.extendMethod("dilate",dilate),e.extendMethod("erode",erode),e.extendMethod("open",open),e.extendMethod("close",close),e.extendMethod("topHat",topHat),e.extendMethod("blackHat",blackHat),e.extendMethod("morphologicalGradient",morphologicalGradient),e.extendMethod("warpingFourPoints",warpingFourPoints),e.extendMethod("crop",crop),e.extendMethod("cropAlpha",cropAlpha),e.extendMethod("resize",resize).extendMethod("scale",resize),e.extendMethod("hsv",hsv),e.extendMethod("hsl",hsl$1),e.extendMethod("cmyk",cmyk),e.extendMethod("rgba8",rgba8),e.extendMethod("grey",grey).extendMethod("gray",grey),e.extendMethod("mask",mask),e.extendMethod("pad",pad),e.extendMethod("colorDepth",colorDepth),e.extendMethod("setBorder",setBorder,t),e.extendMethod("rotate",rotate$2),e.extendMethod("rotateLeft",rotateLeft),e.extendMethod("rotateRight",rotateRight),e.extendMethod("insert",insert),e.extendMethod("getRow",getRow),e.extendMethod("getColumn",getColumn),e.extendMethod("getMatrix",getMatrix),e.extendMethod("setMatrix",setMatrix),e.extendMethod("getPixelsArray",getPixelsArray),e.extendMethod("getIntersection",getIntersection),e.extendMethod("getClosestCommonParent",getClosestCommonParent),e.extendMethod("getThreshold",getThreshold),e.extendMethod("split",split),e.extendMethod("getChannel",getChannel),e.extendMethod("combineChannels",combineChannels),e.extendMethod("setChannel",setChannel),e.extendMethod("getSimilarity",getSimilarity),e.extendMethod("getPixelsGrid",getPixelsGrid),e.extendMethod("getBestMatch",getBestMatch),e.extendMethod("cannyEdge",cannyEdge),e.extendMethod("convolution",convolution),e.extendMethod("extract",extract),e.extendMethod("floodFill",floodFill),e.extendMethod("paintLabels",paintLabels,t),e.extendMethod("paintMasks",paintMasks,t),e.extendMethod("paintPoints",paintPoints,t),e.extendMethod("paintPolyline",paintPolyline,t),e.extendMethod("paintPolylines",paintPolylines,t),e.extendMethod("paintPolygon",paintPolygon,t),e.extendMethod("paintPolygons",paintPolygons,t),e.extendMethod("countAlphaPixels",countAlphaPixels),e.extendMethod("monotoneChainConvexHull",monotoneChainConvexHull),e.extendMethod("minimalBoundingRectangle",minimalBoundingRectangle),e.extendMethod("getHistogram",getHistogram).extendProperty("histogram",getHistogram),e.extendMethod("getHistograms",getHistograms).extendProperty("histograms",getHistograms),e.extendMethod("getColorHistogram",getColorHistogram).extendProperty("colorHistogram",getColorHistogram),e.extendMethod("getMin",min).extendProperty("min",min),e.extendMethod("getMax",max).extendProperty("max",max),e.extendMethod("getSum",sum).extendProperty("sum",sum),e.extendMethod("getMoment",getMoment).extendProperty("moment",getMoment),e.extendMethod("getLocalMaxima",localMaxima),e.extendMethod("getMedian",median).extendProperty("median",median),e.extendMethod("getMean",mean).extendProperty("mean",mean),e.extendMethod("getPoints",points).extendProperty("points",points),e.extendMethod("getExtendedPoints",extendedPoints).extendProperty("extendedPoints",extendedPoints),e.extendMethod("getRelativePosition",getRelativePosition$1)}var quantities$1={exports:{}},quantities=quantities$1.exports,hasRequiredQuantities;function requireQuantities(){return hasRequiredQuantities||(hasRequiredQuantities=1,function(e,t){(function(n,r){e.exports=r()})(quantities,function(){function n(A){return typeof A=="string"||A instanceof String}var r=Number.isFinite||window.isFinite;function i(A){return r(A)}function s(A){return A}function o(A){var v={};return A.filter(function(w){return v.hasOwnProperty(w)?!1:v[w]=!0})}function l(A,v){if(v.length!==A.length)return!1;for(var w=0;w<A.length;w++)if(v[w].compareArray&&!v[w].compareArray(A[w])||v[w]!==A[w])return!1;return!0}function c(A,v){Object.keys(v).forEach(function(w){A[w]=v[w]})}function f(){for(var A=1,v=0,w=0;w<arguments.length;w++){var m=arguments[w];v=v+g(m),A*=m}return v!==0?p(A,v):A}function h(A,v){if(v===0)throw new Error("Divide by zero");var w=Math.pow(10,g(v)),m=w/(w*v);return f(A,m)}function p(A,v){return Math.round(A*Math.pow(10,v))/Math.pow(10,v)}function g(A){if(!isFinite(A))return 0;for(var v=0;A%1!==0;)A*=10,v++;return v}function x(){var A;if(!this)return A=Object.create(x.prototype),x.apply(A,arguments),A;A=Error.apply(this,arguments),this.name="QtyError",this.message=A.message,this.stack=A.stack}x.prototype=Object.create(Error.prototype,{constructor:{value:x}});function D(A,v){throw new x("Incompatible units: "+A+" and "+v)}var y={"<googol>":[["googol"],1e100,"prefix"],"<kibi>":[["Ki","Kibi","kibi"],Math.pow(2,10),"prefix"],"<mebi>":[["Mi","Mebi","mebi"],Math.pow(2,20),"prefix"],"<gibi>":[["Gi","Gibi","gibi"],Math.pow(2,30),"prefix"],"<tebi>":[["Ti","Tebi","tebi"],Math.pow(2,40),"prefix"],"<pebi>":[["Pi","Pebi","pebi"],Math.pow(2,50),"prefix"],"<exi>":[["Ei","Exi","exi"],Math.pow(2,60),"prefix"],"<zebi>":[["Zi","Zebi","zebi"],Math.pow(2,70),"prefix"],"<yebi>":[["Yi","Yebi","yebi"],Math.pow(2,80),"prefix"],"<yotta>":[["Y","Yotta","yotta"],1e24,"prefix"],"<zetta>":[["Z","Zetta","zetta"],1e21,"prefix"],"<exa>":[["E","Exa","exa"],1e18,"prefix"],"<peta>":[["P","Peta","peta"],1e15,"prefix"],"<tera>":[["T","Tera","tera"],1e12,"prefix"],"<giga>":[["G","Giga","giga"],1e9,"prefix"],"<mega>":[["M","Mega","mega"],1e6,"prefix"],"<kilo>":[["k","kilo"],1e3,"prefix"],"<hecto>":[["h","Hecto","hecto"],100,"prefix"],"<deca>":[["da","Deca","deca","deka"],10,"prefix"],"<deci>":[["d","Deci","deci"],.1,"prefix"],"<centi>":[["c","Centi","centi"],.01,"prefix"],"<milli>":[["m","Milli","milli"],.001,"prefix"],"<micro>":[["u","μ","µ","Micro","mc","micro"],1e-6,"prefix"],"<nano>":[["n","Nano","nano"],1e-9,"prefix"],"<pico>":[["p","Pico","pico"],1e-12,"prefix"],"<femto>":[["f","Femto","femto"],1e-15,"prefix"],"<atto>":[["a","Atto","atto"],1e-18,"prefix"],"<zepto>":[["z","Zepto","zepto"],1e-21,"prefix"],"<yocto>":[["y","Yocto","yocto"],1e-24,"prefix"],"<1>":[["1","<1>"],1,""],"<meter>":[["m","meter","meters","metre","metres"],1,"length",["<meter>"]],"<inch>":[["in","inch","inches",'"'],.0254,"length",["<meter>"]],"<foot>":[["ft","foot","feet","'"],.3048,"length",["<meter>"]],"<yard>":[["yd","yard","yards"],.9144,"length",["<meter>"]],"<mile>":[["mi","mile","miles"],1609.344,"length",["<meter>"]],"<naut-mile>":[["nmi","naut-mile"],1852,"length",["<meter>"]],"<league>":[["league","leagues"],4828,"length",["<meter>"]],"<furlong>":[["furlong","furlongs"],201.2,"length",["<meter>"]],"<rod>":[["rd","rod","rods"],5.029,"length",["<meter>"]],"<mil>":[["mil","mils"],254e-7,"length",["<meter>"]],"<angstrom>":[["ang","angstrom","angstroms"],1e-10,"length",["<meter>"]],"<fathom>":[["fathom","fathoms"],1.829,"length",["<meter>"]],"<pica>":[["pica","picas"],.00423333333,"length",["<meter>"]],"<point>":[["pt","point","points"],.000352777778,"length",["<meter>"]],"<redshift>":[["z","red-shift","redshift"],1302773e20,"length",["<meter>"]],"<AU>":[["AU","astronomical-unit"],1495979e5,"length",["<meter>"]],"<light-second>":[["ls","light-second"],299792500,"length",["<meter>"]],"<light-minute>":[["lmin","light-minute"],1798755e4,"length",["<meter>"]],"<light-year>":[["ly","light-year"],9460528e9,"length",["<meter>"]],"<parsec>":[["pc","parsec","parsecs"],3085678e10,"length",["<meter>"]],"<datamile>":[["DM","datamile"],1828.8,"length",["<meter>"]],"<kilogram>":[["kg","kilogram","kilograms"],1,"mass",["<kilogram>"]],"<AMU>":[["u","AMU","amu"],1660538921e-36,"mass",["<kilogram>"]],"<dalton>":[["Da","Dalton","Daltons","dalton","daltons"],1660538921e-36,"mass",["<kilogram>"]],"<slug>":[["slug","slugs"],14.5939029,"mass",["<kilogram>"]],"<short-ton>":[["tn","ton","short-ton"],907.18474,"mass",["<kilogram>"]],"<metric-ton>":[["t","tonne","metric-ton"],1e3,"mass",["<kilogram>"]],"<carat>":[["ct","carat","carats"],2e-4,"mass",["<kilogram>"]],"<pound>":[["lbs","lb","pound","pounds","#"],.45359237,"mass",["<kilogram>"]],"<ounce>":[["oz","ounce","ounces"],.0283495231,"mass",["<kilogram>"]],"<gram>":[["g","gram","grams","gramme","grammes"],.001,"mass",["<kilogram>"]],"<grain>":[["grain","grains","gr"],6479891e-11,"mass",["<kilogram>"]],"<dram>":[["dram","drams","dr"],.0017718452,"mass",["<kilogram>"]],"<stone>":[["stone","stones","st"],6.35029318,"mass",["<kilogram>"]],"<hectare>":[["hectare"],1e4,"area",["<meter>","<meter>"]],"<acre>":[["acre","acres"],4046.85642,"area",["<meter>","<meter>"]],"<sqft>":[["sqft"],1,"area",["<foot>","<foot>"]],"<liter>":[["l","L","liter","liters","litre","litres"],.001,"volume",["<meter>","<meter>","<meter>"]],"<gallon>":[["gal","gallon","gallons"],.0037854118,"volume",["<meter>","<meter>","<meter>"]],"<gallon-imp>":[["galimp","gallon-imp","gallons-imp"],.00454609,"volume",["<meter>","<meter>","<meter>"]],"<quart>":[["qt","quart","quarts"],.00094635295,"volume",["<meter>","<meter>","<meter>"]],"<pint>":[["pt","pint","pints"],.000473176475,"volume",["<meter>","<meter>","<meter>"]],"<pint-imp>":[["ptimp","pint-imp","pints-imp"],.00056826125,"volume",["<meter>","<meter>","<meter>"]],"<cup>":[["cu","cup","cups"],.000236588238,"volume",["<meter>","<meter>","<meter>"]],"<fluid-ounce>":[["floz","fluid-ounce","fluid-ounces"],295735297e-13,"volume",["<meter>","<meter>","<meter>"]],"<fluid-ounce-imp>":[["flozimp","floz-imp","fluid-ounce-imp","fluid-ounces-imp"],284130625e-13,"volume",["<meter>","<meter>","<meter>"]],"<tablespoon>":[["tb","tbsp","tbs","tablespoon","tablespoons"],147867648e-13,"volume",["<meter>","<meter>","<meter>"]],"<teaspoon>":[["tsp","teaspoon","teaspoons"],492892161e-14,"volume",["<meter>","<meter>","<meter>"]],"<bushel>":[["bu","bsh","bushel","bushels"],.035239072,"volume",["<meter>","<meter>","<meter>"]],"<oilbarrel>":[["bbl","oilbarrel","oilbarrels","oil-barrel","oil-barrels"],.158987294928,"volume",["<meter>","<meter>","<meter>"]],"<beerbarrel>":[["bl","bl-us","beerbarrel","beerbarrels","beer-barrel","beer-barrels"],.1173477658,"volume",["<meter>","<meter>","<meter>"]],"<beerbarrel-imp>":[["blimp","bl-imp","beerbarrel-imp","beerbarrels-imp","beer-barrel-imp","beer-barrels-imp"],.16365924,"volume",["<meter>","<meter>","<meter>"]],"<kph>":[["kph"],.277777778,"speed",["<meter>"],["<second>"]],"<mph>":[["mph"],.44704,"speed",["<meter>"],["<second>"]],"<knot>":[["kt","kn","kts","knot","knots"],.514444444,"speed",["<meter>"],["<second>"]],"<fps>":[["fps"],.3048,"speed",["<meter>"],["<second>"]],"<gee>":[["gee"],9.80665,"acceleration",["<meter>"],["<second>","<second>"]],"<Gal>":[["Gal"],.01,"acceleration",["<meter>"],["<second>","<second>"]],"<kelvin>":[["degK","kelvin"],1,"temperature",["<kelvin>"]],"<celsius>":[["degC","celsius","celsius","centigrade"],1,"temperature",["<kelvin>"]],"<fahrenheit>":[["degF","fahrenheit"],5/9,"temperature",["<kelvin>"]],"<rankine>":[["degR","rankine"],5/9,"temperature",["<kelvin>"]],"<temp-K>":[["tempK","temp-K"],1,"temperature",["<temp-K>"]],"<temp-C>":[["tempC","temp-C"],1,"temperature",["<temp-K>"]],"<temp-F>":[["tempF","temp-F"],5/9,"temperature",["<temp-K>"]],"<temp-R>":[["tempR","temp-R"],5/9,"temperature",["<temp-K>"]],"<second>":[["s","sec","secs","second","seconds"],1,"time",["<second>"]],"<minute>":[["min","mins","minute","minutes"],60,"time",["<second>"]],"<hour>":[["h","hr","hrs","hour","hours"],3600,"time",["<second>"]],"<day>":[["d","day","days"],3600*24,"time",["<second>"]],"<week>":[["wk","week","weeks"],7*3600*24,"time",["<second>"]],"<fortnight>":[["fortnight","fortnights"],1209600,"time",["<second>"]],"<year>":[["y","yr","year","years","annum"],31556926,"time",["<second>"]],"<decade>":[["decade","decades"],315569260,"time",["<second>"]],"<century>":[["century","centuries"],3155692600,"time",["<second>"]],"<pascal>":[["Pa","pascal","Pascal"],1,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<bar>":[["bar","bars"],1e5,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<mmHg>":[["mmHg"],133.322368,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<inHg>":[["inHg"],3386.3881472,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<torr>":[["torr"],133.322368,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<atm>":[["atm","ATM","atmosphere","atmospheres"],101325,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<psi>":[["psi"],6894.76,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<cmh2o>":[["cmH2O","cmh2o"],98.0638,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<inh2o>":[["inH2O","inh2o"],249.082052,"pressure",["<kilogram>"],["<meter>","<second>","<second>"]],"<poise>":[["P","poise"],.1,"viscosity",["<kilogram>"],["<meter>","<second>"]],"<stokes>":[["St","stokes"],1e-4,"viscosity",["<meter>","<meter>"],["<second>"]],"<mole>":[["mol","mole"],1,"substance",["<mole>"]],"<molar>":[["M","molar"],1e3,"molar_concentration",["<mole>"],["<meter>","<meter>","<meter>"]],"<wtpercent>":[["wt%","wtpercent"],10,"molar_concentration",["<kilogram>"],["<meter>","<meter>","<meter>"]],"<katal>":[["kat","katal","Katal"],1,"activity",["<mole>"],["<second>"]],"<unit>":[["U","enzUnit","unit"],16667e-19,"activity",["<mole>"],["<second>"]],"<farad>":[["F","farad","Farad"],1,"capacitance",["<second>","<second>","<second>","<second>","<ampere>","<ampere>"],["<meter>","<meter>","<kilogram>"]],"<coulomb>":[["C","coulomb","Coulomb"],1,"charge",["<ampere>","<second>"]],"<Ah>":[["Ah"],3600,"charge",["<ampere>","<second>"]],"<ampere>":[["A","Ampere","ampere","amp","amps"],1,"current",["<ampere>"]],"<siemens>":[["S","Siemens","siemens"],1,"conductance",["<second>","<second>","<second>","<ampere>","<ampere>"],["<kilogram>","<meter>","<meter>"]],"<henry>":[["H","Henry","henry"],1,"inductance",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<ampere>","<ampere>"]],"<volt>":[["V","Volt","volt","volts"],1,"potential",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<second>","<ampere>"]],"<ohm>":[["Ohm","ohm","Ω","Ω"],1,"resistance",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<second>","<ampere>","<ampere>"]],"<weber>":[["Wb","weber","webers"],1,"magnetism",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<ampere>"]],"<tesla>":[["T","tesla","teslas"],1,"magnetism",["<kilogram>"],["<second>","<second>","<ampere>"]],"<gauss>":[["G","gauss"],1e-4,"magnetism",["<kilogram>"],["<second>","<second>","<ampere>"]],"<maxwell>":[["Mx","maxwell","maxwells"],1e-8,"magnetism",["<meter>","<meter>","<kilogram>"],["<second>","<second>","<ampere>"]],"<oersted>":[["Oe","oersted","oersteds"],250/Math.PI,"magnetism",["<ampere>"],["<meter>"]],"<joule>":[["J","joule","Joule","joules","Joules"],1,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<erg>":[["erg","ergs"],1e-7,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<btu>":[["BTU","btu","BTUs"],1055.056,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<calorie>":[["cal","calorie","calories"],4.184,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<Calorie>":[["Cal","Calorie","Calories"],4184,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<therm-US>":[["th","therm","therms","Therm","therm-US"],105480400,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<Wh>":[["Wh"],3600,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<electronvolt>":[["eV","electronvolt","electronvolts"],1602176634e-28,"energy",["<meter>","<meter>","<kilogram>"],["<second>","<second>"]],"<newton>":[["N","Newton","newton"],1,"force",["<kilogram>","<meter>"],["<second>","<second>"]],"<dyne>":[["dyn","dyne"],1e-5,"force",["<kilogram>","<meter>"],["<second>","<second>"]],"<pound-force>":[["lbf","pound-force"],4.448222,"force",["<kilogram>","<meter>"],["<second>","<second>"]],"<hertz>":[["Hz","hertz","Hertz"],1,"frequency",["<1>"],["<second>"]],"<radian>":[["rad","radian","radians"],1,"angle",["<radian>"]],"<degree>":[["deg","degree","degrees"],Math.PI/180,"angle",["<radian>"]],"<arcminute>":[["arcmin","arcminute","arcminutes"],Math.PI/10800,"angle",["<radian>"]],"<arcsecond>":[["arcsec","arcsecond","arcseconds"],Math.PI/648e3,"angle",["<radian>"]],"<gradian>":[["gon","grad","gradian","grads"],Math.PI/200,"angle",["<radian>"]],"<steradian>":[["sr","steradian","steradians"],1,"solid_angle",["<steradian>"]],"<rotation>":[["rotation"],2*Math.PI,"angle",["<radian>"]],"<rpm>":[["rpm"],2*Math.PI/60,"angular_velocity",["<radian>"],["<second>"]],"<byte>":[["B","byte","bytes"],1,"information",["<byte>"]],"<bit>":[["b","bit","bits"],.125,"information",["<byte>"]],"<Bps>":[["Bps"],1,"information_rate",["<byte>"],["<second>"]],"<bps>":[["bps"],.125,"information_rate",["<byte>"],["<second>"]],"<dollar>":[["USD","dollar"],1,"currency",["<dollar>"]],"<cents>":[["cents"],.01,"currency",["<dollar>"]],"<candela>":[["cd","candela"],1,"luminosity",["<candela>"]],"<lumen>":[["lm","lumen"],1,"luminous_power",["<candela>","<steradian>"]],"<lux>":[["lux"],1,"illuminance",["<candela>","<steradian>"],["<meter>","<meter>"]],"<watt>":[["W","watt","watts"],1,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<volt-ampere>":[["VA","volt-ampere"],1,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<volt-ampere-reactive>":[["var","Var","VAr","VAR","volt-ampere-reactive"],1,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<horsepower>":[["hp","horsepower"],745.699872,"power",["<kilogram>","<meter>","<meter>"],["<second>","<second>","<second>"]],"<gray>":[["Gy","gray","grays"],1,"radiation",["<meter>","<meter>"],["<second>","<second>"]],"<roentgen>":[["R","roentgen"],.00933,"radiation",["<meter>","<meter>"],["<second>","<second>"]],"<sievert>":[["Sv","sievert","sieverts"],1,"radiation",["<meter>","<meter>"],["<second>","<second>"]],"<becquerel>":[["Bq","becquerel","becquerels"],1,"radiation",["<1>"],["<second>"]],"<curie>":[["Ci","curie","curies"],37e9,"radiation",["<1>"],["<second>"]],"<cpm>":[["cpm"],1/60,"rate",["<count>"],["<second>"]],"<dpm>":[["dpm"],1/60,"rate",["<count>"],["<second>"]],"<bpm>":[["bpm"],1/60,"rate",["<count>"],["<second>"]],"<dot>":[["dot","dots"],1,"resolution",["<each>"]],"<pixel>":[["pixel","px"],1,"resolution",["<each>"]],"<ppi>":[["ppi"],1,"resolution",["<pixel>"],["<inch>"]],"<dpi>":[["dpi"],1,"typography",["<dot>"],["<inch>"]],"<cell>":[["cells","cell"],1,"counting",["<each>"]],"<each>":[["each"],1,"counting",["<each>"]],"<count>":[["count"],1,"counting",["<each>"]],"<base-pair>":[["bp","base-pair"],1,"counting",["<each>"]],"<nucleotide>":[["nt","nucleotide"],1,"counting",["<each>"]],"<molecule>":[["molecule","molecules"],1,"counting",["<1>"]],"<dozen>":[["doz","dz","dozen"],12,"prefix_only",["<each>"]],"<percent>":[["%","percent"],.01,"prefix_only",["<1>"]],"<ppm>":[["ppm"],1e-6,"prefix_only",["<1>"]],"<ppb>":[["ppb"],1e-9,"prefix_only",["<1>"]],"<ppt>":[["ppt"],1e-12,"prefix_only",["<1>"]],"<ppq>":[["ppq"],1e-15,"prefix_only",["<1>"]],"<gross>":[["gr","gross"],144,"prefix_only",["<dozen>","<dozen>"]],"<decibel>":[["dB","decibel","decibels"],1,"logarithmic",["<decibel>"]]},E=["<meter>","<kilogram>","<second>","<mole>","<ampere>","<radian>","<kelvin>","<temp-K>","<byte>","<dollar>","<candela>","<each>","<steradian>","<decibel>"],F="<1>",B=[F];function M(A,v){var w=v[1],m=v[3]||[],b=v[4]||[];if(!i(w))throw new x(A+": Invalid unit definition. 'scalar' must be a number");m.forEach(function(S){if(y[S]===void 0)throw new x(A+": Invalid unit definition. Unit "+S+" in 'numerator' is not recognized")}),b.forEach(function(S){if(y[S]===void 0)throw new x(A+": Invalid unit definition. Unit "+S+" in 'denominator' is not recognized")})}var k={},T={},N={},$={},R={};for(var O in y)if(y.hasOwnProperty(O)){var L=y[O];if(L[2]==="prefix"){k[O]=L[1];for(var z=0;z<L[0].length;z++)T[L[0][z]]=O}else{M(O,L),N[O]={scalar:L[1],numerator:L[3],denominator:L[4]};for(var X=0;X<L[0].length;X++)$[L[0][X]]=O}R[O]=L[0][0]}function o0(A){var v,w=[],m=Object.keys(y);if(typeof A>"u")for(v=0;v<m.length;v++)["","prefix"].indexOf(y[m[v]][2])===-1&&w.push(m[v].substr(1,m[v].length-2));else{if(this.getKinds().indexOf(A)===-1)throw new x("Kind not recognized");for(v=0;v<m.length;v++)y[m[v]][2]===A&&w.push(m[v].substr(1,m[v].length-2))}return w.sort(function(b,S){return b.toLowerCase()<S.toLowerCase()?-1:b.toLowerCase()>S.toLowerCase()?1:0})}function Z(A){if(!$[A])throw new x("Unit not recognized");return y[$[A]][0]}var n0=["length","time","temperature","mass","current","substance","luminosity","currency","information","angle"];function s0(){if(this.signature)return this.signature;for(var A=S0.call(this),v=0;v<A.length;v++)A[v]*=Math.pow(20,v);return A.reduce(function(w,m){return w+m},0)}function S0(){if(!this.isBase())return S0.call(this.toBase());for(var A=new Array(n0.length),v=0;v<A.length;v++)A[v]=0;for(var w,m,b=0;b<this.numerator.length;b++)(w=y[this.numerator[b]])&&(m=n0.indexOf(w[2]),m>=0&&(A[m]=A[m]+1));for(var S=0;S<this.denominator.length;S++)(w=y[this.denominator[S]])&&(m=n0.indexOf(w[2]),m>=0&&(A[m]=A[m]-1));return A}var r0="[+-]",p0="\\d+",h0=r0+"?"+p0,G="\\."+p0,Q="(?:"+p0+"(?:"+G+")?)|(?:"+G+")",M0="[Ee]"+h0,C0="(?:"+Q+")(?:"+M0+")?",e0=r0+"?\\s*"+C0,F0="("+e0+")?\\s*([^/]*)(?:/(.+))?",O0=new RegExp("^"+F0+"$"),L0="\\^|\\*{2}",B0="[01234]",H0=new RegExp("([^ \\*\\d]+?)(?:"+L0+")?(-?"+B0+"(?![a-zA-Z]))"),a1=new RegExp("([^ \\*\\d]+?)(?:"+L0+")?("+B0+"(?![a-zA-Z]))");function c1(A){n(A)||(A=A.toString()),A=A.trim();var v=O0.exec(A);if(!v)throw new x(A+": Quantity not recognized");var w=v[1];w?(w=w.replace(/\s/g,""),this.scalar=parseFloat(w)):this.scalar=1;for(var m=v[2],b=v[3],S,q,j;v=H0.exec(m);){if(S=parseFloat(v[2]),isNaN(S))throw new x("Unit exponent is not a number");if(S===0&&!r1.test(v[1]))throw new x("Unit not recognized");q=v[1]+" ",j="";for(var V=0;V<Math.abs(S);V++)j+=q;S>=0?m=m.replace(v[0],j):(b=b?b+j:j,m=m.replace(v[0],""))}for(;v=a1.exec(b);){if(S=parseFloat(v[2]),isNaN(S))throw new x("Unit exponent is not a number");if(S===0&&!r1.test(v[1]))throw new x("Unit not recognized");q=v[1]+" ",j="";for(var Y=0;Y<S;Y++)j+=q;b=b.replace(v[0],j)}m&&(this.numerator=Z0(m.trim())),b&&(this.denominator=Z0(b.trim()))}var G0=Object.keys(T).sort(function(A,v){return v.length-A.length}).join("|"),j0=Object.keys($).sort(function(A,v){return v.length-A.length}).join("|"),P0="\\b|$",d1="("+G0+")??("+j0+")(?:"+P0+")",r1=new RegExp("^\\s*("+d1+"[\\s\\*]*)+$"),u1=new RegExp(d1,"g"),w0={};function Z0(A){var v=w0[A];if(v)return v;var w,m=[];if(!r1.test(A))throw new x("Unit not recognized");for(;w=u1.exec(A);)m.push(w.slice(1));return m=m.map(function(b){return T[b[0]]?[T[b[0]],$[b[1]]]:[$[b[1]]]}),m=m.reduce(function(b,S){return b.concat(S)},[]),m=m.filter(function(b){return b}),w0[A]=m,m}function K0(A){if(!n(A))throw new x("Argument should be a string");try{return this(A)}catch{return null}}function J0(A){return A instanceof H}function H(A,v){if(t0.apply(null,arguments),!J0(this))return new H(A,v);if(this.scalar=null,this.baseScalar=null,this.signature=null,this._conversionCache={},this.numerator=B,this.denominator=B,f0(A)?(this.scalar=A.scalar,this.numerator=A.numerator&&A.numerator.length!==0?A.numerator:B,this.denominator=A.denominator&&A.denominator.length!==0?A.denominator:B):v?(c1.call(this,v),this.scalar=A):c1.call(this,A),this.denominator.join("*").indexOf("temp")>=0)throw new x("Cannot divide with temperatures");if(this.numerator.join("*").indexOf("temp")>=0){if(this.numerator.length>1)throw new x("Cannot multiply by temperatures");if(!l(this.denominator,B))throw new x("Cannot divide with temperatures")}if(this.initValue=A,c0.call(this),this.isTemperature()&&this.baseScalar<0)throw new x("Temperatures must not be less than absolute zero")}H.prototype={constructor:H};function t0(A,v){if(v){if(!(i(A)&&n(v)))throw new x("Only number accepted as initialization value when units are explicitly provided")}else if(!(n(A)||i(A)||J0(A)||f0(A)))throw new x("Only string, number or quantity accepted as single initialization value")}function f0(A){return A&&typeof A=="object"&&A.hasOwnProperty("scalar")}function c0(){if(this.baseScalar)return this.baseScalar;if(this.isBase())this.baseScalar=this.scalar,this.signature=s0.call(this);else{var A=this.toBase();this.baseScalar=A.scalar,this.signature=A.signature}}var d0={"-312078":"elastance","-312058":"resistance","-312038":"inductance","-152058":"potential","-152040":"magnetism","-152038":"magnetism","-7997":"specific_volume","-79":"snap","-59":"jolt","-39":"acceleration","-38":"radiation","-20":"frequency","-19":"speed","-18":"viscosity","-17":"volumetric_flow","-1":"wavenumber",0:"unitless",1:"length",2:"area",3:"volume",20:"time",400:"temperature",7941:"yank",7942:"power",7959:"pressure",7961:"force",7962:"energy",7979:"viscosity",7981:"momentum",7982:"angular_momentum",7997:"density",7998:"area_density",8e3:"mass",152020:"radiation_exposure",159999:"magnetism",16e4:"current",160020:"charge",312058:"conductance",312078:"capacitance",3199980:"activity",3199997:"molar_concentration",32e5:"substance",63999998:"illuminance",64e6:"luminous_power",128e7:"currency","25599999980":"information_rate","25600000000":"information","511999999980":"angular_velocity","512000000000":"angle"};function g0(){return o(Object.keys(d0).map(function(A){return d0[A]}))}H.prototype.kind=function(){return d0[this.signature.toString()]},c(H.prototype,{isDegrees:function(){return(this.signature===null||this.signature===400)&&this.numerator.length===1&&l(this.denominator,B)&&(this.numerator[0].match(/<temp-[CFRK]>/)||this.numerator[0].match(/<(kelvin|celsius|rankine|fahrenheit)>/))},isTemperature:function(){return this.isDegrees()&&this.numerator[0].match(/<temp-[CFRK]>/)}});function y0(A,v){var w=A.units(),m=v.to(w),b=H(_0(w));return H({scalar:A.scalar-m.scalar,numerator:b.numerator,denominator:b.denominator})}function E0(A,v){var w=v.to(_0(A.units()));return H({scalar:A.scalar-w.scalar,numerator:A.numerator,denominator:A.denominator})}function k0(A,v){var w=v.to(_0(A.units()));return H({scalar:A.scalar+w.scalar,numerator:A.numerator,denominator:A.denominator})}function _0(A){if(A==="tempK")return"degK";if(A==="tempC")return"degC";if(A==="tempF")return"degF";if(A==="tempR")return"degR";throw new x("Unknown type for temp conversion from: "+A)}function Q0(A,v){var w=e1(A),m=v.units(),b;if(m==="degK")b=w.scalar;else if(m==="degC")b=w.scalar;else if(m==="degF")b=w.scalar*9/5;else if(m==="degR")b=w.scalar*9/5;else throw new x("Unknown type for degree conversion to: "+m);return H({scalar:b,numerator:v.numerator,denominator:v.denominator})}function e1(A){var v=A.units(),w;if(v.match(/(deg)[CFRK]/))w=A.baseScalar;else if(v==="tempK")w=A.scalar;else if(v==="tempC")w=A.scalar;else if(v==="tempF")w=A.scalar*5/9;else if(v==="tempR")w=A.scalar*5/9;else throw new x("Unknown type for temp conversion from: "+v);return H({scalar:w,numerator:["<kelvin>"],denominator:B})}function p1(A,v){var w=v.units(),m;if(w==="tempK")m=A.baseScalar;else if(w==="tempC")m=A.baseScalar-273.15;else if(w==="tempF")m=A.baseScalar*9/5-459.67;else if(w==="tempR")m=A.baseScalar*9/5;else throw new x("Unknown type for temp conversion to: "+w);return H({scalar:m,numerator:v.numerator,denominator:v.denominator})}function D1(A){var v=A.units(),w;if(v.match(/(deg)[CFRK]/))w=A.baseScalar;else if(v==="tempK")w=A.scalar;else if(v==="tempC")w=A.scalar+273.15;else if(v==="tempF")w=(A.scalar+459.67)*5/9;else if(v==="tempR")w=A.scalar*5/9;else throw new x("Unknown type for temp conversion from: "+v);return H({scalar:w,numerator:["<temp-K>"],denominator:B})}c(H.prototype,{to:function(A){var v,w;if(A==null)return this;if(!n(A))return this.to(A.units());if(v=this._conversionCache[A],v)return v;if(w=H(A),w.units()===this.units())return this;if(!this.isCompatible(w))this.isInverse(w)?w=this.inverse().to(A):D(this.units(),w.units());else if(w.isTemperature())w=p1(this,w);else if(w.isDegrees())w=Q0(this,w);else{var m=h(this.baseScalar,w.baseScalar);w=H({scalar:m,numerator:w.numerator,denominator:w.denominator})}return this._conversionCache[A]=w,w},toBase:function(){if(this.isBase())return this;if(this.isTemperature())return D1(this);var A=C1[this.units()];return A||(A=R1(this.numerator,this.denominator),C1[this.units()]=A),A.mul(this.scalar)},toFloat:function(){if(this.isUnitless())return this.scalar;throw new x("Can't convert to Float unless unitless.  Use Unit#scalar")},toPrec:function(A){if(n(A)&&(A=H(A)),i(A)&&(A=H(A+" "+this.units())),this.isUnitless()?A.isUnitless()||D(this.units(),A.units()):A=A.to(this.units()),A.scalar===0)throw new x("Divide by zero");var v=f(Math.round(this.scalar/A.scalar),A.scalar);return H(v+this.units())}});function y1(A,v){var w=H(A),m=H(v);if(w.eq(m))return s;var b;return w.isTemperature()?b=function(S){return w.mul(S).to(m).scalar}:b=function(S){return S*w.baseScalar/m.baseScalar},function(q){var j,V,Y;if(Array.isArray(q)){for(V=q.length,Y=[],j=0;j<V;j++)Y.push(b(q[j]));return Y}else return b(q)}}var C1={};function R1(A,v){for(var w=[],m=[],b=1,S,q=0;q<A.length;q++)S=A[q],k[S]?b=f(b,k[S]):N[S]&&(b*=N[S].scalar,N[S].numerator&&w.push(N[S].numerator),N[S].denominator&&m.push(N[S].denominator));for(var j=0;j<v.length;j++)S=v[j],k[S]?b/=k[S]:N[S]&&(b/=N[S].scalar,N[S].numerator&&m.push(N[S].numerator),N[S].denominator&&w.push(N[S].denominator));return w=w.reduce(function(V,Y){return V.concat(Y)},[]),m=m.reduce(function(V,Y){return V.concat(Y)},[]),H({scalar:b,numerator:w,denominator:m})}H.parse=K0,H.getUnits=o0,H.getAliases=Z,H.mulSafe=f,H.divSafe=h,H.getKinds=g0,H.swiftConverter=y1,H.Error=x,c(H.prototype,{add:function(A){if(n(A)&&(A=H(A)),this.isCompatible(A)||D(this.units(),A.units()),this.isTemperature()&&A.isTemperature())throw new x("Cannot add two temperatures");return this.isTemperature()?k0(this,A):A.isTemperature()?k0(A,this):H({scalar:this.scalar+A.to(this).scalar,numerator:this.numerator,denominator:this.denominator})},sub:function(A){if(n(A)&&(A=H(A)),this.isCompatible(A)||D(this.units(),A.units()),this.isTemperature()&&A.isTemperature())return y0(this,A);if(this.isTemperature())return E0(this,A);if(A.isTemperature())throw new x("Cannot subtract a temperature from a differential degree unit");return H({scalar:this.scalar-A.to(this).scalar,numerator:this.numerator,denominator:this.denominator})},mul:function(A){if(i(A))return H({scalar:f(this.scalar,A),numerator:this.numerator,denominator:this.denominator});if(n(A)&&(A=H(A)),(this.isTemperature()||A.isTemperature())&&!(this.isUnitless()||A.isUnitless()))throw new x("Cannot multiply by temperatures");var v=this,w=A;v.isCompatible(w)&&v.signature!==400&&(w=w.to(v));var m=K1(v.numerator,v.denominator,w.numerator,w.denominator);return H({scalar:f(v.scalar,w.scalar,m[2]),numerator:m[0],denominator:m[1]})},div:function(A){if(i(A)){if(A===0)throw new x("Divide by zero");return H({scalar:this.scalar/A,numerator:this.numerator,denominator:this.denominator})}else n(A)&&(A=H(A));if(A.scalar===0)throw new x("Divide by zero");if(A.isTemperature())throw new x("Cannot divide with temperatures");if(this.isTemperature()&&!A.isUnitless())throw new x("Cannot divide with temperatures");var v=this,w=A;v.isCompatible(w)&&v.signature!==400&&(w=w.to(v));var m=K1(v.numerator,v.denominator,w.denominator,w.numerator);return H({scalar:f(v.scalar,m[2])/w.scalar,numerator:m[0],denominator:m[1]})},inverse:function(){if(this.isTemperature())throw new x("Cannot divide with temperatures");if(this.scalar===0)throw new x("Divide by zero");return H({scalar:1/this.scalar,numerator:this.denominator,denominator:this.numerator})}});function K1(A,v,w,m){function b(I0){return I0!==F}A=A.filter(b),w=w.filter(b),v=v.filter(b),m=m.filter(b);var S={};function q(I0,m0){for(var A0,Y0,J,N0=0;N0<I0.length;N0++)if(k[I0[N0]]?(A0=I0[N0+1],Y0=I0[N0],J=k[Y0],N0++):(A0=I0[N0],Y0=null,J=1),A0&&A0!==F)if(S[A0]){S[A0][0]+=m0;var W0=S[A0][2]?k[S[A0][2]]:1;S[A0][m0===1?3:4]*=h(J,W0)}else S[A0]=[m0,A0,Y0,1,1]}q(A,1),q(v,-1),q(w,1),q(m,-1);var j=[],V=[],Y=1;for(var u0 in S)if(S.hasOwnProperty(u0)){var W=S[u0],D0;if(W[0]>0)for(D0=0;D0<W[0];D0++)j.push(W[2]===null?W[1]:[W[2],W[1]]);else if(W[0]<0)for(D0=0;D0<-W[0];D0++)V.push(W[2]===null?W[1]:[W[2],W[1]]);Y*=h(W[3],W[4])}return j.length===0&&(j=B),V.length===0&&(V=B),j=j.reduce(function(I0,m0){return I0.concat(m0)},[]),V=V.reduce(function(I0,m0){return I0.concat(m0)},[]),[j,V,Y]}c(H.prototype,{eq:function(A){return this.compareTo(A)===0},lt:function(A){return this.compareTo(A)===-1},lte:function(A){return this.eq(A)||this.lt(A)},gt:function(A){return this.compareTo(A)===1},gte:function(A){return this.eq(A)||this.gt(A)},compareTo:function(A){if(n(A))return this.compareTo(H(A));if(this.isCompatible(A)||D(this.units(),A.units()),this.baseScalar<A.baseScalar)return-1;if(this.baseScalar===A.baseScalar)return 0;if(this.baseScalar>A.baseScalar)return 1},same:function(A){return this.scalar===A.scalar&&this.units()===A.units()}}),c(H.prototype,{isUnitless:function(){return[this.numerator,this.denominator].every(function(A){return l(A,B)})},isCompatible:function(A){return n(A)?this.isCompatible(H(A)):J0(A)&&A.signature!==void 0?this.signature===A.signature:!1},isInverse:function(A){return this.inverse().isCompatible(A)},isBase:function(){return this._isBase!==void 0?this._isBase:this.isDegrees()&&this.numerator[0].match(/<(kelvin|temp-K)>/)?(this._isBase=!0,this._isBase):(this.numerator.concat(this.denominator).forEach(function(A){A!==F&&E.indexOf(A)===-1&&(this._isBase=!1)},this),this._isBase===!1?this._isBase:(this._isBase=!0,this._isBase))}});function B1(){}B1.prototype.get=function(A){return arguments.length>1&&(A=Array.apply(null,arguments)),A.reduce(function(v,w,m){if(v){var b=v[w];return m===A.length-1?b?b.data:void 0:b}},this)},B1.prototype.set=function(A,v){return arguments.length>2&&(A=Array.prototype.slice.call(arguments,0,-1),v=arguments[arguments.length-1]),A.reduce(function(w,m,b){var S=w[m];return S===void 0&&(S=w[m]={}),b===A.length-1?(S.data=v,v):S},this)};function q1(A,v){return(A+" "+v).trim()}H.formatter=q1,c(H.prototype,{units:function(){if(this._units!==void 0)return this._units;var A=l(this.numerator,B),v=l(this.denominator,B);if(A&&v)return this._units="",this._units;var w=Z1(this.numerator),m=Z1(this.denominator);return this._units=w+(v?"":"/"+m),this._units},toString:function(A,v){var w;if(i(A))w=this.units(),v=A;else if(n(A))w=A;else if(J0(A))return this.toPrec(A).toString(v);var m=this.to(w),b=v!==void 0?p(m.scalar,v):m.scalar;return m=(b+" "+m.units()).trim(),m},format:function(A,v){arguments.length===1&&typeof A=="function"&&(v=A,A=void 0),v=v||H.formatter;var w=this.to(A);return v.call(this,w.scalar,w.units())}});var x2=new B1;function Z1(A){var v=x2.get(A);if(v)return v;var w=l(A,B);return w?v="1":v=o2(I1(A)).join("*"),x2.set(A,v),v}function I1(A){for(var v=[],w,m,b=0;b<A.length;b++)w=A[b],m=A[b+1],k[w]?(v.push(R[w]+R[m]),b++):v.push(R[w]);return v}function o2(A){var v=A.reduce(function(w,m){var b=w[m];return b||w.push(b=w[m]=[m,0]),b[1]++,w},[]);return v.map(function(w){return w[0]+(w[1]>1?w[1]:"")})}return H.version="1.8.0",H})}(quantities$1)),quantities$1.exports}var quantitiesExports=requireQuantities();const Qty=getDefaultExportFromCjs(quantitiesExports);function deepValue(e,t=""){let n=t.split(".");for(let r of n){if(e[r]===void 0)return;e=e[r]}return e}var orientation={exports:{}},twoProduct_1,hasRequiredTwoProduct;function requireTwoProduct(){if(hasRequiredTwoProduct)return twoProduct_1;hasRequiredTwoProduct=1,twoProduct_1=t;var e=+(Math.pow(2,27)+1);function t(n,r,i){var s=n*r,o=e*n,l=o-n,c=o-l,f=n-c,h=e*r,p=h-r,g=h-p,x=r-g,D=s-c*g,y=D-f*g,E=y-c*x,F=f*x-E;return i?(i[0]=F,i[1]=s,i):[F,s]}return twoProduct_1}var robustSum,hasRequiredRobustSum;function requireRobustSum(){if(hasRequiredRobustSum)return robustSum;hasRequiredRobustSum=1,robustSum=t;function e(n,r){var i=n+r,s=i-n,o=i-s,l=r-s,c=n-o,f=c+l;return f?[f,i]:[i]}function t(n,r){var i=n.length|0,s=r.length|0;if(i===1&&s===1)return e(n[0],r[0]);var o=i+s,l=new Array(o),c=0,f=0,h=0,p=Math.abs,g=n[f],x=p(g),D=r[h],y=p(D),E,F;x<y?(F=g,f+=1,f<i&&(g=n[f],x=p(g))):(F=D,h+=1,h<s&&(D=r[h],y=p(D))),f<i&&x<y||h>=s?(E=g,f+=1,f<i&&(g=n[f],x=p(g))):(E=D,h+=1,h<s&&(D=r[h],y=p(D)));for(var B=E+F,M=B-E,k=F-M,T=k,N=B,$,R,O,L,z;f<i&&h<s;)x<y?(E=g,f+=1,f<i&&(g=n[f],x=p(g))):(E=D,h+=1,h<s&&(D=r[h],y=p(D))),F=T,B=E+F,M=B-E,k=F-M,k&&(l[c++]=k),$=N+B,R=$-N,O=$-R,L=B-R,z=N-O,T=z+L,N=$;for(;f<i;)E=g,F=T,B=E+F,M=B-E,k=F-M,k&&(l[c++]=k),$=N+B,R=$-N,O=$-R,L=B-R,z=N-O,T=z+L,N=$,f+=1,f<i&&(g=n[f]);for(;h<s;)E=D,F=T,B=E+F,M=B-E,k=F-M,k&&(l[c++]=k),$=N+B,R=$-N,O=$-R,L=B-R,z=N-O,T=z+L,N=$,h+=1,h<s&&(D=r[h]);return T&&(l[c++]=T),N&&(l[c++]=N),c||(l[c++]=0),l.length=c,l}return robustSum}var twoSum,hasRequiredTwoSum;function requireTwoSum(){if(hasRequiredTwoSum)return twoSum;hasRequiredTwoSum=1,twoSum=e;function e(t,n,r){var i=t+n,s=i-t,o=i-s,l=n-s,c=t-o;return r?(r[0]=c+l,r[1]=i,r):[c+l,i]}return twoSum}var robustScale,hasRequiredRobustScale;function requireRobustScale(){if(hasRequiredRobustScale)return robustScale;hasRequiredRobustScale=1;var e=requireTwoProduct(),t=requireTwoSum();robustScale=n;function n(r,i){var s=r.length;if(s===1){var o=e(r[0],i);return o[0]?o:[o[1]]}var l=new Array(2*s),c=[.1,.1],f=[.1,.1],h=0;e(r[0],i,c),c[0]&&(l[h++]=c[0]);for(var p=1;p<s;++p){e(r[p],i,f);var g=c[1];t(g,f[0],c),c[0]&&(l[h++]=c[0]);var x=f[1],D=c[1],y=x+D,E=y-x,F=D-E;c[1]=y,F&&(l[h++]=F)}return c[1]&&(l[h++]=c[1]),h===0&&(l[h++]=0),l.length=h,l}return robustScale}var robustDiff,hasRequiredRobustDiff;function requireRobustDiff(){if(hasRequiredRobustDiff)return robustDiff;hasRequiredRobustDiff=1,robustDiff=t;function e(n,r){var i=n+r,s=i-n,o=i-s,l=r-s,c=n-o,f=c+l;return f?[f,i]:[i]}function t(n,r){var i=n.length|0,s=r.length|0;if(i===1&&s===1)return e(n[0],-r[0]);var o=i+s,l=new Array(o),c=0,f=0,h=0,p=Math.abs,g=n[f],x=p(g),D=-r[h],y=p(D),E,F;x<y?(F=g,f+=1,f<i&&(g=n[f],x=p(g))):(F=D,h+=1,h<s&&(D=-r[h],y=p(D))),f<i&&x<y||h>=s?(E=g,f+=1,f<i&&(g=n[f],x=p(g))):(E=D,h+=1,h<s&&(D=-r[h],y=p(D)));for(var B=E+F,M=B-E,k=F-M,T=k,N=B,$,R,O,L,z;f<i&&h<s;)x<y?(E=g,f+=1,f<i&&(g=n[f],x=p(g))):(E=D,h+=1,h<s&&(D=-r[h],y=p(D))),F=T,B=E+F,M=B-E,k=F-M,k&&(l[c++]=k),$=N+B,R=$-N,O=$-R,L=B-R,z=N-O,T=z+L,N=$;for(;f<i;)E=g,F=T,B=E+F,M=B-E,k=F-M,k&&(l[c++]=k),$=N+B,R=$-N,O=$-R,L=B-R,z=N-O,T=z+L,N=$,f+=1,f<i&&(g=n[f]);for(;h<s;)E=D,F=T,B=E+F,M=B-E,k=F-M,k&&(l[c++]=k),$=N+B,R=$-N,O=$-R,L=B-R,z=N-O,T=z+L,N=$,h+=1,h<s&&(D=-r[h]);return T&&(l[c++]=T),N&&(l[c++]=N),c||(l[c++]=0),l.length=c,l}return robustDiff}var hasRequiredOrientation;function requireOrientation(){return hasRequiredOrientation||(hasRequiredOrientation=1,function(e){var t=requireTwoProduct(),n=requireRobustSum(),r=requireRobustScale(),i=requireRobustDiff(),s=5,o=11102230246251565e-32,l=(3+16*o)*o,c=(7+56*o)*o;function f(M,k,T,N){return function(R,O,L){var z=M(M(k(O[1],L[0]),k(-L[1],O[0])),M(k(R[1],O[0]),k(-O[1],R[0]))),X=M(k(R[1],L[0]),k(-L[1],R[0])),o0=N(z,X);return o0[o0.length-1]}}function h(M,k,T,N){return function(R,O,L,z){var X=M(M(T(M(k(L[1],z[0]),k(-z[1],L[0])),O[2]),M(T(M(k(O[1],z[0]),k(-z[1],O[0])),-L[2]),T(M(k(O[1],L[0]),k(-L[1],O[0])),z[2]))),M(T(M(k(O[1],z[0]),k(-z[1],O[0])),R[2]),M(T(M(k(R[1],z[0]),k(-z[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),z[2])))),o0=M(M(T(M(k(L[1],z[0]),k(-z[1],L[0])),R[2]),M(T(M(k(R[1],z[0]),k(-z[1],R[0])),-L[2]),T(M(k(R[1],L[0]),k(-L[1],R[0])),z[2]))),M(T(M(k(O[1],L[0]),k(-L[1],O[0])),R[2]),M(T(M(k(R[1],L[0]),k(-L[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),L[2])))),Z=N(X,o0);return Z[Z.length-1]}}function p(M,k,T,N){return function(R,O,L,z,X){var o0=M(M(M(T(M(T(M(k(z[1],X[0]),k(-X[1],z[0])),L[2]),M(T(M(k(L[1],X[0]),k(-X[1],L[0])),-z[2]),T(M(k(L[1],z[0]),k(-z[1],L[0])),X[2]))),O[3]),M(T(M(T(M(k(z[1],X[0]),k(-X[1],z[0])),O[2]),M(T(M(k(O[1],X[0]),k(-X[1],O[0])),-z[2]),T(M(k(O[1],z[0]),k(-z[1],O[0])),X[2]))),-L[3]),T(M(T(M(k(L[1],X[0]),k(-X[1],L[0])),O[2]),M(T(M(k(O[1],X[0]),k(-X[1],O[0])),-L[2]),T(M(k(O[1],L[0]),k(-L[1],O[0])),X[2]))),z[3]))),M(T(M(T(M(k(L[1],z[0]),k(-z[1],L[0])),O[2]),M(T(M(k(O[1],z[0]),k(-z[1],O[0])),-L[2]),T(M(k(O[1],L[0]),k(-L[1],O[0])),z[2]))),-X[3]),M(T(M(T(M(k(z[1],X[0]),k(-X[1],z[0])),O[2]),M(T(M(k(O[1],X[0]),k(-X[1],O[0])),-z[2]),T(M(k(O[1],z[0]),k(-z[1],O[0])),X[2]))),R[3]),T(M(T(M(k(z[1],X[0]),k(-X[1],z[0])),R[2]),M(T(M(k(R[1],X[0]),k(-X[1],R[0])),-z[2]),T(M(k(R[1],z[0]),k(-z[1],R[0])),X[2]))),-O[3])))),M(M(T(M(T(M(k(O[1],X[0]),k(-X[1],O[0])),R[2]),M(T(M(k(R[1],X[0]),k(-X[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),X[2]))),z[3]),M(T(M(T(M(k(O[1],z[0]),k(-z[1],O[0])),R[2]),M(T(M(k(R[1],z[0]),k(-z[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),z[2]))),-X[3]),T(M(T(M(k(L[1],z[0]),k(-z[1],L[0])),O[2]),M(T(M(k(O[1],z[0]),k(-z[1],O[0])),-L[2]),T(M(k(O[1],L[0]),k(-L[1],O[0])),z[2]))),R[3]))),M(T(M(T(M(k(L[1],z[0]),k(-z[1],L[0])),R[2]),M(T(M(k(R[1],z[0]),k(-z[1],R[0])),-L[2]),T(M(k(R[1],L[0]),k(-L[1],R[0])),z[2]))),-O[3]),M(T(M(T(M(k(O[1],z[0]),k(-z[1],O[0])),R[2]),M(T(M(k(R[1],z[0]),k(-z[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),z[2]))),L[3]),T(M(T(M(k(O[1],L[0]),k(-L[1],O[0])),R[2]),M(T(M(k(R[1],L[0]),k(-L[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),L[2]))),-z[3]))))),Z=M(M(M(T(M(T(M(k(z[1],X[0]),k(-X[1],z[0])),L[2]),M(T(M(k(L[1],X[0]),k(-X[1],L[0])),-z[2]),T(M(k(L[1],z[0]),k(-z[1],L[0])),X[2]))),R[3]),T(M(T(M(k(z[1],X[0]),k(-X[1],z[0])),R[2]),M(T(M(k(R[1],X[0]),k(-X[1],R[0])),-z[2]),T(M(k(R[1],z[0]),k(-z[1],R[0])),X[2]))),-L[3])),M(T(M(T(M(k(L[1],X[0]),k(-X[1],L[0])),R[2]),M(T(M(k(R[1],X[0]),k(-X[1],R[0])),-L[2]),T(M(k(R[1],L[0]),k(-L[1],R[0])),X[2]))),z[3]),T(M(T(M(k(L[1],z[0]),k(-z[1],L[0])),R[2]),M(T(M(k(R[1],z[0]),k(-z[1],R[0])),-L[2]),T(M(k(R[1],L[0]),k(-L[1],R[0])),z[2]))),-X[3]))),M(M(T(M(T(M(k(L[1],X[0]),k(-X[1],L[0])),O[2]),M(T(M(k(O[1],X[0]),k(-X[1],O[0])),-L[2]),T(M(k(O[1],L[0]),k(-L[1],O[0])),X[2]))),R[3]),T(M(T(M(k(L[1],X[0]),k(-X[1],L[0])),R[2]),M(T(M(k(R[1],X[0]),k(-X[1],R[0])),-L[2]),T(M(k(R[1],L[0]),k(-L[1],R[0])),X[2]))),-O[3])),M(T(M(T(M(k(O[1],X[0]),k(-X[1],O[0])),R[2]),M(T(M(k(R[1],X[0]),k(-X[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),X[2]))),L[3]),T(M(T(M(k(O[1],L[0]),k(-L[1],O[0])),R[2]),M(T(M(k(R[1],L[0]),k(-L[1],R[0])),-O[2]),T(M(k(R[1],O[0]),k(-O[1],R[0])),L[2]))),-X[3])))),n0=N(o0,Z);return n0[n0.length-1]}}function g(M){var k=M===3?f:M===4?h:p;return k(n,t,r,i)}var x=g(3),D=g(4),y=[function(){return 0},function(){return 0},function(k,T){return T[0]-k[0]},function(k,T,N){var $=(k[1]-N[1])*(T[0]-N[0]),R=(k[0]-N[0])*(T[1]-N[1]),O=$-R,L;if($>0){if(R<=0)return O;L=$+R}else if($<0){if(R>=0)return O;L=-($+R)}else return O;var z=l*L;return O>=z||O<=-z?O:x(k,T,N)},function(k,T,N,$){var R=k[0]-$[0],O=T[0]-$[0],L=N[0]-$[0],z=k[1]-$[1],X=T[1]-$[1],o0=N[1]-$[1],Z=k[2]-$[2],n0=T[2]-$[2],s0=N[2]-$[2],S0=O*o0,r0=L*X,p0=L*z,h0=R*o0,G=R*X,Q=O*z,M0=Z*(S0-r0)+n0*(p0-h0)+s0*(G-Q),C0=(Math.abs(S0)+Math.abs(r0))*Math.abs(Z)+(Math.abs(p0)+Math.abs(h0))*Math.abs(n0)+(Math.abs(G)+Math.abs(Q))*Math.abs(s0),e0=c*C0;return M0>e0||-M0>e0?M0:D(k,T,N,$)}];function E(M){var k=y[M.length];return k||(k=y[M.length]=g(M.length)),k.apply(void 0,M)}function F(M,k,T,N,$,R,O){return function(z,X,o0,Z,n0){switch(arguments.length){case 0:case 1:return 0;case 2:return N(z,X);case 3:return $(z,X,o0);case 4:return R(z,X,o0,Z);case 5:return O(z,X,o0,Z,n0)}for(var s0=new Array(arguments.length),S0=0;S0<arguments.length;++S0)s0[S0]=arguments[S0];return M(s0)}}function B(){for(;y.length<=s;)y.push(g(y.length));e.exports=F.apply(void 0,[E].concat(y));for(var M=0;M<=s;++M)e.exports[M]=y[M]}B()}(orientation)),orientation.exports}var robustPnp,hasRequiredRobustPnp;function requireRobustPnp(){if(hasRequiredRobustPnp)return robustPnp;hasRequiredRobustPnp=1,robustPnp=t;var e=requireOrientation();function t(n,r){for(var i=r[0],s=r[1],o=n.length,l=1,c=o,f=0,h=o-1;f<c;h=f++){var p=n[f],g=n[h],x=p[1],D=g[1];if(D<x){if(D<s&&s<x){var y=e(p,g,r);if(y===0)return 0;l^=0<y|0}else if(s===x){var E=n[(f+1)%o],F=E[1];if(x<F){var y=e(p,g,r);if(y===0)return 0;l^=0<y|0}}}else if(x<D){if(x<s&&s<D){var y=e(p,g,r);if(y===0)return 0;l^=y<0|0}else if(s===x){var E=n[(f+1)%o],F=E[1];if(F<x){var y=e(p,g,r);if(y===0)return 0;l^=y<0|0}}}else if(s===x){var B=Math.min(p[0],g[0]),M=Math.max(p[0],g[0]);if(f===0){for(;h>0;){var k=(h+o-1)%o,T=n[k];if(T[1]!==s)break;var N=T[0];B=Math.min(B,N),M=Math.max(M,N),h=k}if(h===0)return B<=i&&i<=M?0:1;c=h+1}for(var $=n[(h+o-1)%o][1];f+1<c;){var T=n[f+1];if(T[1]!==s)break;var N=T[0];B=Math.min(B,N),M=Math.max(M,N),f+=1}if(B<=i&&i<=M)return 0;var R=n[(f+1)%o][1];i<B&&$<s!=R<s&&(l^=1)}}return 2*l-1}return robustPnp}var robustPnpExports=requireRobustPnp();const robustPointInPolygon=getDefaultExportFromCjs(robustPnpExports);function feretDiameters(e={}){const{originalPoints:t=monotoneChainConvexHull.call(this)}=e;if(t.length===0)return{min:0,max:0,minLine:[],maxLine:[],aspectRatio:1};if(t.length===1)return{min:1,max:1,minLine:[t[0],t[0]],maxLine:[t[0],t[0]],aspectRatio:1};const n=new Array(t.length);let r=1/0,i=0,s=[];for(let f=0;f<t.length;f++){let h=getAngle(t[f],t[(f+1)%t.length]);rotate$1(-h,t,n);let p=0,g=[];for(let x=0;x<t.length;x++){let D=Math.abs(n[f][1]-n[x][1]);D>p&&(p=D,g=[],g.push([n[x][0],n[f][1]],[n[x][0],n[x][1]]))}p<r&&(r=p,i=h,s=g)}rotate$1(i,s,s);let o=0,l=[],c=0;for(let f=0;f<t.length-1;f++)for(let h=f+1;h<t.length;h++){let p=(t[f][0]-t[h][0])**2+(t[f][1]-t[h][1])**2;p>c&&(c=p,o=Math.sqrt(p),l=[t[f],t[h]])}return{min:r,minLine:s,max:o,maxLine:l,aspectRatio:r/o}}function getAngle(e,t){let n=difference(t,e),r=normalize(n),i=Math.acos(r[0]);return r[1]<0?-i:i}class Roi{constructor(t,n){this.map=t,this.id=n,this.minX=Number.POSITIVE_INFINITY,this.maxX=Number.NEGATIVE_INFINITY,this.minY=Number.POSITIVE_INFINITY,this.maxY=Number.NEGATIVE_INFINITY,this.meanX=0,this.meanY=0,this.surface=0,this.computed={}}getMask(t={}){const{scale:n=1,kind:r=""}=t;let i;switch(r){case"contour":i=this.contourMask;break;case"box":i=this.boxMask;break;case"filled":i=this.filledMask;break;case"center":i=this.centerMask;break;case"mbr":i=this.mbrFilledMask;break;case"hull":i=this.convexHullFilledMask;break;case"hullContour":i=this.convexHullMask;break;case"mbrContour":i=this.mbrMask;break;case"feret":i=this.feretMask;break;default:i=this.mask}return n<1&&(i=i.resize({factor:n}),i.parent=this.mask.parent,i.position[0]+=this.minX,i.position[1]+=this.minY),i}get mean(){throw new Error("Roi mean not implemented yet")}get center(){return this.computed.center||(this.computed.center=[this.width/2>>0,this.height/2>>0]),this.computed.center}get ratio(){return this.width/this.height}get width(){return this.maxX-this.minX+1}get height(){return this.maxY-this.minY+1}_computExternalIDs(){let t=this.borderIDs,n=this.borderLengths;this.computed.externalIDs=[],this.computed.externalLengths=[];let r=this.internalIDs;for(let i=0;i<t.length;i++)r.includes(t[i])||(this.computed.externalIDs.push(t[i]),this.computed.externalLengths.push(n[i]))}get externalIDs(){return this.computed.externalIDs?this.computed.externalIDs:(this._computExternalIDs(),this.computed.externalIDs)}get externalLengths(){return this.computed.externalLengths?this.computed.externalLengths:(this._computExternalIDs(),this.computed.externalLengths)}_computeBorderIDs(){let t=getBorders(this);this.computed.borderIDs=t.ids,this.computed.borderLengths=t.lengths}get borderIDs(){return this.computed.borderIDs?this.computed.borderIDs:(this._computeBorderIDs(),this.computed.borderIDs)}get borderLengths(){return this.computed.borderLengths?this.computed.borderLengths:(this._computeBorderIDs(),this.computed.borderLengths)}get boxIDs(){return this.computed.boxIDs||(this.computed.boxIDs=getBoxIDs(this)),this.computed.boxIDs}get internalIDs(){return this.computed.internalIDs||(this.computed.internalIDs=getInternalIDs(this)),this.computed.internalIDs}get box(){return this.computed.box||(this.computed.box=getBox(this)),this.computed.box}get external(){return this.computed.external||(this.computed.external=getExternal(this)),this.computed.external}get holesInfo(){return this.computed.holesInfo||(this.computed.holesInfo=getHolesInfo(this)),this.computed.holesInfo}get border(){return this.computed.border||(this.computed.border=getBorder(this)),this.computed.border}get contourMask(){if(!this.computed.contourMask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let n=0;n<this.width;n++)for(let r=0;r<this.height;r++)this.map.data[n+this.minX+(r+this.minY)*this.map.width]===this.id&&(n>0&&n<this.width-1&&r>0&&r<this.height-1?(this.map.data[n-1+this.minX+(r+this.minY)*this.map.width]!==this.id||this.map.data[n+1+this.minX+(r+this.minY)*this.map.width]!==this.id||this.map.data[n+this.minX+(r-1+this.minY)*this.map.width]!==this.id||this.map.data[n+this.minX+(r+1+this.minY)*this.map.width]!==this.id)&&t.setBitXY(n,r):t.setBitXY(n,r));this.computed.contourMask=t}return this.computed.contourMask}get boxMask(){if(!this.computed.boxMask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let n=0;n<this.width;n++)t.setBitXY(n,0),t.setBitXY(n,this.height-1);for(let n=0;n<this.height;n++)t.setBitXY(0,n),t.setBitXY(this.width-1,n);this.computed.boxMask=t}return this.computed.boxMask}get mask(){if(!this.computed.mask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let n=0;n<this.width;n++)for(let r=0;r<this.height;r++)this.map.data[n+this.minX+(r+this.minY)*this.map.width]===this.id&&t.setBitXY(n,r);this.computed.mask=t}return this.computed.mask}get filledMask(){if(!this.computed.filledMask){let t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let n=0;n<this.width;n++)for(let r=0;r<this.height;r++){let i=n+this.minX+(r+this.minY)*this.map.width;this.internalIDs.includes(this.map.data[i])&&t.setBitXY(n,r)}this.computed.filledMask=t}return this.computed.filledMask}get centerMask(){if(!this.computed.centerMask){let t=new Shape({kind:"smallCross"}).getMask();t.parent=this.map.parent,t.position=[this.minX+this.center[0]-1,this.minY+this.center[1]-1],this.computed.centerMask=t}return this.computed.centerMask}get convexHull(){if(!this.computed.convexHull){const t=[];for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++)this.map.data[r+this.minX+(i+this.minY)*this.map.width]===this.id&&(r>0&&r<this.width-1&&i>0&&i<this.height-1?(this.map.data[r-1+this.minX+(i+this.minY)*this.map.width]!==this.id||this.map.data[r+1+this.minX+(i+this.minY)*this.map.width]!==this.id||this.map.data[r+this.minX+(i-1+this.minY)*this.map.width]!==this.id||this.map.data[r+this.minX+(i+1+this.minY)*this.map.width]!==this.id)&&(t.push([r,i]),t.push([r+1,i]),t.push([r,i+1]),t.push([r+1,i+1])):(t.push([r,i]),t.push([r+1,i]),t.push([r,i+1]),t.push([r+1,i+1])));const n=monotoneChainConvexHull$1(t);this.computed.convexHull={polyline:n,surface:surface(n),perimeter:perimeter(n)}}return this.computed.convexHull}get convexHullMask(){if(!this.computed.convexHullMask){const t=this.convexHull,n=new Image(this.width+1,this.height+1,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});n.paintPolyline(t.polyline,{closed:!0}),this.computed.convexHullMask=n}return this.computed.convexHullMask}get convexHullFilledMask(){if(!this.computed.convexHullFilledMask){const t=this.convexHull,n=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++)robustPointInPolygon(t.polyline,[r,i])!==1&&n.setBitXY(r,i);this.computed.convexHullFilledMask=n}return this.computed.convexHullFilledMask}get mbr(){if(!this.computed.mbr){let t=minimalBoundingRectangle({originalPoints:this.convexHull.polyline});if(t.length===0)this.computed.mbr={width:0,height:0,surface:0,perimeter:0,rectangle:t};else{let n=t[0],r=t[1],i=t[2],s=Math.sqrt((n[0]-r[0])**2+(n[1]-r[1])**2),o=Math.sqrt((i[0]-r[0])**2+(i[1]-r[1])**2);this.computed.mbr={width:s,height:o,elongation:1-s/o,aspectRatio:s/o,surface:s*o,perimeter:(s+o)*2,rectangle:t}}}return this.computed.mbr}get fillRatio(){return this.surface/(this.surface+this.holesInfo.surface)}get feretDiameters(){return this.computed.feretDiameters||(this.computed.feretDiameters=feretDiameters({originalPoints:this.convexHull.polyline})),this.computed.feretDiameters}get eqpc(){return this.computed.eqpc||(this.computed.eqpc=2*Math.sqrt(this.surface/Math.PI)),this.computed.eqpc}get perimeterInfo(){return this.computed.perimeterInfo||(this.computed.perimeterInfo=getPerimeterInfo(this)),this.computed.perimeterInfo}get perimeter(){let t=this.perimeterInfo,n=2-Math.sqrt(2);return t.one+t.two*2+t.three*3+t.four*4-n*(t.two+t.three*2+t.four)}get ped(){return this.computed.ped||(this.computed.ped=this.perimeter/Math.PI),this.computed.ped}get feretMask(){if(!this.computed.feretMask){const t=new Image(this.width+1,this.height+1,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent});t.paintPolyline(this.feretDiameters.minLine),t.paintPolyline(this.feretDiameters.maxLine),this.computed.feretMask=t}return this.computed.feretMask}get mbrMask(){if(!this.computed.mbrMask){let t=round$1(this.mbr.rectangle);if(t.length>0){const n=minMax(t),r=new Image(n[1][0]-n[0][0]+1,n[1][1]-n[0][1]+1,{kind:BINARY,position:[this.minX+n[0][0],this.minY+n[0][1]],parent:this.map.parent});t=moveToZeroZero(t),r.paintPolyline(t,{closed:!0}),this.computed.mbrMask=r}else this.computed.mbrMask=new Image(1,1,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent})}return this.computed.mbrMask}get mbrFilledMask(){if(!this.computed.mbrFilledMask){const t=new Image(this.width,this.height,{kind:BINARY,position:[this.minX,this.minY],parent:this.map.parent}),n=this.mask.minimalBoundingRectangle();for(let r=0;r<this.width;r++)for(let i=0;i<this.height;i++)robustPointInPolygon(n,[r,i])!==1&&t.setBitXY(r,i);this.computed.mbrFilledMask=t}return this.computed.mbrFilledMask}get points(){if(!this.computed.points){let t=[];for(let n=0;n<this.height;n++)for(let r=0;r<this.width;r++){let i=(n+this.minY)*this.map.width+r+this.minX;this.map.data[i]===this.id&&t.push([r,n])}this.computed.points=t}return this.computed.points}get maxLengthPoints(){if(!this.computed.maxLengthPoints){let t=0,n;const r=this.points;for(let i=0;i<r.length;i++)for(let s=i+1;s<r.length;s++){let o=Math.pow(r[i][0]-r[s][0],2)+Math.pow(r[i][1]-r[s][1],2);o>=t&&(t=o,n=[r[i],r[s]])}this.computed.maxLengthPoints=n}return this.computed.maxLengthPoints}get maxLength(){if(!this.computed.maxLength){let t=Math.sqrt(Math.pow(this.maxLengthPoints[0][0]-this.maxLengthPoints[1][0],2)+Math.pow(this.maxLengthPoints[0][1]-this.maxLengthPoints[1][1],2));this.computed.maxLength=t}return this.computed.maxLength}get roundness(){return 4*this.surface/(Math.PI*this.feretDiameters.max**2)}get sphericity(){return 2*Math.sqrt(this.surface*Math.PI)/this.perimeter}get solidity(){return this.surface/this.convexHull.surface}get angle(){if(!this.computed.angle){let t=this.maxLengthPoints,n=-Math.atan2(t[0][1]-t[1][1],t[0][0]-t[1][0])*180/Math.PI;this.computed.angle=n}return this.computed.angle}toJSON(){return{id:this.id,minX:this.minX,maxX:this.maxX,minY:this.minY,maxY:this.maxY,meanX:this.meanX,meanY:this.meanY,height:this.height,width:this.width,surface:this.surface,mbrWidth:this.mbr.width,mbrHeight:this.mbr.height,mbrSurface:this.mbr.surface,eqpc:this.eqpc,ped:this.ped,feretDiameterMin:this.feretDiameters.min,feretDiameterMax:this.feretDiameters.max,aspectRatio:this.feretDiameters.aspectRatio,fillRatio:this.fillRatio,sphericity:this.sphericity,roundness:this.roundness,solidity:this.solidity,perimeter:this.perimeter}}}function getBorders(e){let t=e.map,n=t.data,r=new Set,i=new Map,s=new Set,o=[1,0,-1,0],l=[0,1,0,-1];for(let h=e.minX;h<=e.maxX;h++)for(let p=e.minY;p<=e.maxY;p++){let g=h+p*t.width;if(n[g]===e.id)for(let x=0;x<4;x++){let D=h+o[x],y=p+l[x];if(D>=0&&y>=0&&D<t.width&&y<t.height){let E=D+y*t.width;if(n[E]!==e.id&&!s.has(E)){s.add(E),r.add(n[E]);let F=i.get(n[E]);F?i.set(n[E],++F):i.set(n[E],1)}}}}let c=Array.from(r),f=c.map(function(h){return i.get(h)});return{ids:c,lengths:f}}function getBoxIDs(e){let t=new Set,n=e.map,r=n.data;for(let i of[0,e.height-1])for(let s=0;s<e.width;s++){let o=(i+e.minY)*n.width+s+e.minX;if(s-e.minX>0&&r[o]===e.id&&r[o-1]!==e.id){let l=r[o-1];t.add(l)}if(n.width-s-e.minX>1&&r[o]===e.id&&r[o+1]!==e.id){let l=r[o+1];t.add(l)}}for(let i of[0,e.width-1])for(let s=0;s<e.height;s++){let o=(s+e.minY)*n.width+i+e.minX;if(s-e.minY>0&&r[o]===e.id&&r[o-n.width]!==e.id){let l=r[o-n.width];t.add(l)}if(n.height-s-e.minY>1&&r[o]===e.id&&r[o+n.width]!==e.id){let l=r[o+n.width];t.add(l)}}return Array.from(t)}function getBox(e){let t=0,n=e.map,r=n.data,i=[0];e.height>1&&(i[1]=e.height-1);for(let o of i)for(let l=1;l<e.width-1;l++){let c=(o+e.minY)*n.width+l+e.minX;r[c]===e.id&&t++}let s=[0];e.width>1&&(s[1]=e.width-1);for(let o of s)for(let l=0;l<e.height;l++){let c=(l+e.minY)*n.width+o+e.minX;r[c]===e.id&&t++}return t}function getBorder(e){let t=0,n=e.map,r=n.data;for(let i=1;i<e.width-1;i++)for(let s=1;s<e.height-1;s++){let o=(s+e.minY)*n.width+i+e.minX;r[o]===e.id&&(r[o-1]!==e.id||r[o+1]!==e.id||r[o-n.width]!==e.id||r[o+n.width]!==e.id)&&t++}return t+e.box}function getPerimeterInfo(e){let t=e.map,n=t.data,r=0,i=0,s=0,o=0;for(let l=0;l<e.width;l++)for(let c=0;c<e.height;c++){let f=(c+e.minY)*t.width+l+e.minX;if(n[f]===e.id){let h=0;switch((l===0||e.externalIDs.includes(n[f-1]))&&h++,(l===e.width-1||e.externalIDs.includes(n[f+1]))&&h++,(c===0||e.externalIDs.includes(n[f-t.width]))&&h++,(c===e.height-1||e.externalIDs.includes(n[f+t.width]))&&h++,h){case 1:r++;break;case 2:i++;break;case 3:s++;break;case 4:o++;break}}}return{one:r,two:i,three:s,four:o}}function getExternal(e){let t=0,n=e.map,r=n.data;for(let i=1;i<e.width-1;i++)for(let s=1;s<e.height-1;s++){let o=(s+e.minY)*n.width+i+e.minX;r[o]===e.id&&(e.externalIDs.includes(r[o-1])||e.externalIDs.includes(r[o+1])||e.externalIDs.includes(r[o-n.width])||e.externalIDs.includes(r[o+n.width]))&&t++}return t+e.box}function getHolesInfo(e){let t=0,n=e.map.width,r=e.map.data;for(let i=1;i<e.width-1;i++)for(let s=1;s<e.height-1;s++){let o=(s+e.minY)*n+i+e.minX;e.internalIDs.includes(r[o])&&r[o]!==e.id&&t++}return{number:e.internalIDs.length-1,surface:t}}function getInternalIDs(e){let t=[e.id],n=e.map,r=n.data;if(e.height>2)for(let s=0;s<e.width;s++){let o=e.minY*n.width+s+e.minX;if(t.includes(r[o])){let l=r[o+n.width];!t.includes(l)&&!e.boxIDs.includes(l)&&t.push(l)}}let i=new Array(4);for(let s=1;s<e.width-1;s++)for(let o=1;o<e.height-1;o++){let l=(o+e.minY)*n.width+s+e.minX;if(t.includes(r[l])){i[0]=r[l-1],i[1]=r[l+1],i[2]=r[l-n.width],i[3]=r[l+n.width];for(let c=0;c<4;c++){let f=i[c];!t.includes(f)&&!e.boxIDs.includes(f)&&t.push(f)}}}return t}class RoiLayer{constructor(t,n){this.roiMap=t,this.options=n,this.roi=this.createRoi()}createRoi(){let t=this.roiMap.data,n={};this.roiMap.positive=0,this.roiMap.negative=0;for(let l=0;l<t.length;l++)t[l]&&!n[t[l]]&&(n[t[l]]=!0,t[l]>0?this.roiMap.positive++:this.roiMap.negative++);let r={};for(let l in n)r[l]=new Roi(this.roiMap,l*1);let i=this.roiMap.width,s=this.roiMap.height;for(let l=0;l<s;l++)for(let c=0;c<i;c++){let f=l*i+c;if(t[f]!==0){const h=t[f],p=r[h];c<p.minX&&(p.minX=c),c>p.maxX&&(p.maxX=c),l<p.minY&&(p.minY=l),l>p.maxY&&(p.maxY=l),p.meanX+=c,p.meanY+=l,p.surface++}}let o=[];for(let l in n)r[l].meanX/=r[l].surface,r[l].meanY/=r[l].surface,o.push(r[l]);return o}}function commonBorderLength(e){let t=e.data,n=[1,0,-1,0],r=[0,1,0,-1],i=e.minMax,s=-i.min,o=i.max+s,l=[];for(let f=0;f<=o;f++)l.push(Object.create(null));for(let f=0;f<e.width;f++)for(let h=0;h<e.height;h++){let p=f+h*e.width,g=t[p];if(g!==0){let x=Object.create(null),D=!1;for(let y=0;y<4;y++){let E=f+n[y],F=h+r[y];if(E>=0&&F>=0&&E<e.width&&F<e.height){let B=t[E+F*e.width];g!==B&&(D=!0,B!==0&&x[B]===void 0&&(x[B]=!0,l[B+s][g]?l[B+s][g]++:l[B+s][g]=1))}else D=!0}D&&(l[g+s][g]?l[g+s][g]++:l[g+s][g]=1)}}let c={};for(let f=0;f<l.length;f++)Object.keys(l[f]).length>0&&(c[f-s]=l[f]);return c}function mergeRoi(e={}){const{algorithm:t="commonBorderLength",minCommonBorderLength:n=5,maxCommonBorderLength:r=100,minCommonBorderRatio:i=.3,maxCommonBorderRatio:s=1}=e;let o=function(E,F,B){return E[B]>=n&&E[B]<=r};typeof t=="function"&&(o=t),t.toLowerCase()==="commonborderratio"&&(o=function(E,F,B){let M=Math.min(E[B]/E[F],1);return M>=i&&M<=s});const l=this,c=l.commonBorderLength;let f={},h={};for(let E of Object.keys(c)){let F=c[E],B=Object.keys(F);for(let M of B)if(M!==E&&o(F,E,M)){let k=M;h[M]&&(k=h[M]);let T=E;if(h[E]&&(T=h[E]),Number(k)!==T){let N=Math.min(k,T),$=Math.max(k,T);if(f[N]||(f[N]={}),f[N][$]=!0,h[$]=N,f[$]){for(let R of Object.keys(f[$]))f[N][R]=!0,h[R]=N;delete f[$]}}}}let p=l.minMax,g=-p.min,x=p.max+g,D=new Array(x+1).fill(0);for(let E of Object.keys(h))D[Number(E)+g]=h[E];let y=l.data;for(let E=0;E<y.length;E++){let F=y[E];if(F!==0){let B=D[F+g];B!==0&&(y[E]=B)}}return l.computed={},l}class RoiMap{constructor(t,n){this.parent=t,this.width=t.width,this.height=t.height,this.data=n,this.negative=0,this.positive=0}get total(){return this.negative+this.positive}get minMax(){let t=Number.MAX_SAFE_INTEGER,n=Number.MIN_SAFE_INTEGER;for(let r=0;r<this.data.length;r++)this.data[r]<t&&(t=this.data[r]),this.data[r]>n&&(n=this.data[r]);return{min:t,max:n}}get commonBorderLength(){return commonBorderLength(this)}mergeRoi(t={}){return mergeRoi.call(this,t)}mergeRois(t){const n=t[0],r=t.slice(1);for(let i=0;i<this.data.length;i++)r.includes(this.data[i])&&(this.data[i]=n)}rowsInfo(){let t=new Array(this.height),n=0;for(let r=0;r<this.data.length;r+=this.width){let i={row:n,positivePixel:0,negativePixel:0,zeroPixel:0,positiveRoi:0,negativeRoi:0,medianChange:0};t[n++]=i;let s={},o={},l=[],c=this.data[r],f=0;for(let h=r;h<r+this.width;h++){let p=this.data[h];c!==p&&(c=p,l.push(f),f=0),f++,p>0?(i.positivePixel++,s[p]||(s[p]=!0)):p<0?(i.negativePixel++,o[p]||(o[p]=!0)):i.zeroPixel++}l.push(f),i.medianChange=l.sort((h,p)=>h-p)[Math.floor(l.length/2)],i.positiveRoiIDs=Object.keys(s),i.negativeRoiIDs=Object.keys(o),i.positiveRoi=i.positiveRoiIDs.length,i.negativeRoi=i.negativeRoiIDs.length}return t}colsInfo(){let t=new Array(this.width),n=0;for(let r=0;r<this.width;r++){let i={col:n,positivePixel:0,negativePixel:0,zeroPixel:0,positiveRoi:0,negativeRoi:0,medianChange:0};t[n++]=i;let s={},o={},l=[],c=this.data[r],f=0;for(let h=r;h<r+this.data.length;h+=this.width){let p=this.data[h];c!==p&&(c=p,l.push(f),f=0),f++,p>0?(i.positivePixel++,s[p]||(s[p]=!0)):p<0?(i.negativePixel++,o[p]||(o[p]=!0)):i.zeroPixel++}l.push(f),i.medianChange=l.sort((h,p)=>h-p)[Math.floor(l.length/2)],i.positiveRoiIDs=Object.keys(s),i.negativeRoiIDs=Object.keys(o),i.positiveRoi=i.positiveRoiIDs.length,i.negativeRoi=i.negativeRoiIDs.length}return t}}function fromMask(e,t={}){const{allowCorners:n=!1}=t,r=65535;let i=new Int16Array(e.size),s=0,o=0,l=new Uint16Array(r+1),c=new Uint16Array(r+1);for(let h=0;h<e.width;h++)for(let p=0;p<e.height;p++)i[p*e.width+h]===0&&f(h,p);function f(h,p){let g=0,x=0,D=e.getBitXY(h,p),y=D?++s:--o;if(s>32767||o<-32768)throw new Error("Too many regions of interest");for(l[0]=h,c[0]=p;g<=x;){let E=l[g&r],F=c[g&r];if(i[F*e.width+E]=y,E>0&&i[F*e.width+E-1]===0&&e.getBitXY(E-1,F)===D&&(x++,l[x&r]=E-1,c[x&r]=F,i[F*e.width+E-1]=-32768),F>0&&i[(F-1)*e.width+E]===0&&e.getBitXY(E,F-1)===D&&(x++,l[x&r]=E,c[x&r]=F-1,i[(F-1)*e.width+E]=-32768),E<e.width-1&&i[F*e.width+E+1]===0&&e.getBitXY(E+1,F)===D&&(x++,l[x&r]=E+1,c[x&r]=F,i[F*e.width+E+1]=-32768),F<e.height-1&&i[(F+1)*e.width+E]===0&&e.getBitXY(E,F+1)===D&&(x++,l[x&r]=E,c[x&r]=F+1,i[(F+1)*e.width+E]=-32768),n&&(E>0&&F>0&&i[(F-1)*e.width+E-1]===0&&e.getBitXY(E-1,F-1)===D&&(x++,l[x&r]=E-1,c[x&r]=F-1,i[(F-1)*e.width+E-1]=-32768),E<e.width-1&&F>0&&i[(F-1)*e.width+E+1]===0&&e.getBitXY(E+1,F-1)===D&&(x++,l[x&r]=E+1,c[x&r]=F-1,i[(F-1)*e.width+E+1]=-32768),E>0&&F<e.height-1&&i[(F+1)*e.width+E-1]===0&&e.getBitXY(E-1,F+1)===D&&(x++,l[x&r]=E-1,c[x&r]=F+1,i[(F+1)*e.width+E-1]=-32768),E<e.width-1&&F<e.height-1&&i[(F+1)*e.width+E+1]===0&&e.getBitXY(E+1,F+1)===D&&(x++,l[x&r]=E+1,c[x&r]=F+1,i[(F+1)*e.width+E+1]=-32768)),g++,x-g>r)throw new Error("analyseMask can not finish, the array to manage internal data is not big enough.You could improve mask by changing MAX_ARRAY")}}return new RoiMap(e,i)}var DisjointSet_1,hasRequiredDisjointSet;function requireDisjointSet(){if(hasRequiredDisjointSet)return DisjointSet_1;hasRequiredDisjointSet=1;class e{constructor(){this.nodes=new Map}add(r){var i=this.nodes.get(r);return i||(i=new t(r),this.nodes.set(r,i)),i}union(r,i){const s=this.find(r),o=this.find(i);s!==o&&(s.rank<o.rank?s.parent=o:s.rank>o.rank?o.parent=s:(o.parent=s,s.rank++))}find(r){for(var i=r;i.parent!==null;)i=i.parent;for(var s=r;s.parent!==null;){var o=s;s=s.parent,o.parent=i}return i}connected(r,i){return this.find(r)===this.find(i)}}DisjointSet_1=e;function t(n){this.value=n,this.parent=null,this.rank=0}return DisjointSet_1}var DisjointSetExports=requireDisjointSet();const DisjointSet=getDefaultExportFromCjs(DisjointSetExports),direction4X=[-1,0],direction4Y=[0,-1],neighbours4=[null,null],direction8X=[-1,-1,0,1],direction8Y=[0,-1,-1,-1],neighbours8=[null,null,null,null];function fromMaskConnectedComponentLabelingAlgorithm(e,t={}){const{allowCorners:n=!1}=t;let r=4;n&&(r=8);let i,s,o;if(r===8)i=direction8X,s=direction8Y,o=neighbours8;else if(r===4)i=direction4X,s=direction4Y,o=neighbours4;else throw new RangeError(`unsupported neighbours count: ${r}`);const l=e.size,c=e.width,f=e.height,h=new Array(l),p=new Uint32Array(l),g=new DisjointSet;let x=1;for(let D=0;D<f;D++)for(let y=0;y<c;y++){const E=y+D*c;if(e.getBit(E)){let F=null;for(let B=0;B<o.length;B++){const M=y+i[B],k=D+s[B];if(M>=0&&k>=0&&M<c&&k<f){const T=M+k*c;let N=h[T];N?(o[B]=N,(!F||o[B].value<F.value)&&(F=o[B])):o[B]=null}}if(!F)h[E]=g.add(x++);else{h[E]=F;for(let B=0;B<o.length;B++)o[B]&&o[B]!==F&&g.union(F,o[B])}}}for(let D=0;D<f;D++)for(let y=0;y<c;y++){const E=y+D*c;e.getBit(E)&&(p[E]=g.find(h[E]).value)}return new RoiMap(e,p)}function fromMaxima(e={}){let{allowCorner:t=!0,onlyTop:n=!1,invert:r=!1}=e,i=this;i.checkProcessable("fromMaxima",{components:[1]});const s=1,o=2;let l=0,c=0,f=new Int16Array(i.size),h=new Int8Array(i.size),p=new Float32Array(i.size),g=1048575,x=new Uint16Array(g+1),D=new Uint16Array(g+1),y=0,E=0,F=new Uint16Array(g+1),B=new Uint16Array(g+1),M=0,k=0;for(T(i);y<E;){let R=x[y&g],O=D[y&g];$(R,O,o),y++}return new RoiMap(i,f);function T({maxima:R=!0}){for(let O=1;O<i.height-1;O++)for(let L=1;L<i.width-1;L++){let z=L+O*i.width;if(h[z]===0){let X=R?i.data[z]:-i.data[L+O*i.width];if(i.data[O*i.width+L-1]>X||i.data[O*i.width+L+1]>X||i.data[(O-1)*i.width+L]>X||i.data[(O+1)*i.width+L]>X||t&&(i.data[(O-1)*i.width+L-1]>X||i.data[(O-1)*i.width+L+1]>X||i.data[(O+1)*i.width+L-1]>X||i.data[(O+1)*i.width+L+1]>X))continue;f[z]=R?++l:--c,N(L,O)||(R?--l:++c)}}}function N(R,O){let L=E;M=0,k=1,F[0]=R,B[0]=O;let z=!0;for(;M<k;){let X=F[M&g],o0=B[M&g];z&=$(X,o0,s),M++}if(!z){for(let X=0;X<k;X++){let o0=F[X&g],n0=B[X&g]*i.width+o0;f[n0]=0}E=L}return z}function $(R,O,L){let z=f[O*i.width+R],X=i.data[O*i.width+R];for(let o0=O-1;o0<=O+1;o0++)for(let Z=R-1;Z<=R+1;Z++){let n0=o0*i.width+Z;if(h[n0]===0)switch(h[n0]=1,p[n0]=i.data[n0]-X,L){case s:if(p[n0]===0){if(Z===0||o0===0||Z===i.width-1||o0===i.height-1)return!1;f[n0]=z,F[k&g]=Z,B[k&g]=o0,k++}else{if(p[n0]>0)return!1;n||(f[n0]=z,x[E&g]=Z,D[E&g]=o0,E++)}break;case o:p[n0]<=0&&(f[n0]=z,x[E&g]=Z,D[E&g]=o0,E++);break;default:throw new Error("unreachable")}}return!0}}function fromPoints(e,t={}){let n=new Shape(t),r=new Int16Array(this.size),i=0,s=n.getPoints();for(let o=0;o<e.length;o++){i++;let l=e[o][0],c=e[o][1];for(let f=0;f<s.length;f++){let h=s[f][0],p=s[f][1];l+h>=0&&c+p>=0&&l+h<this.width&&c+p<this.height&&(r[l+h+(c+p)*this.width]=i)}}return new RoiMap(this,r)}function commonjsRequire(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var priorityQueue={exports:{}},hasRequiredPriorityQueue;function requirePriorityQueue(){return hasRequiredPriorityQueue||(hasRequiredPriorityQueue=1,function(e,t){(function(n){e.exports=n()})(function(){return function n(r,i,s){function o(f,h){if(!i[f]){if(!r[f]){var p=typeof commonjsRequire=="function"&&commonjsRequire;if(!h&&p)return p(f,!0);if(l)return l(f,!0);var g=new Error("Cannot find module '"+f+"'");throw g.code="MODULE_NOT_FOUND",g}var x=i[f]={exports:{}};r[f][0].call(x.exports,function(D){var y=r[f][1][D];return o(y||D)},x,x.exports,n,r,i,s)}return i[f].exports}for(var l=typeof commonjsRequire=="function"&&commonjsRequire,c=0;c<s.length;c++)o(s[c]);return o}({1:[function(n,r,i){var s,o,l,c,f,h=function(g,x){for(var D in x)p.call(x,D)&&(g[D]=x[D]);function y(){this.constructor=g}return y.prototype=x.prototype,g.prototype=new y,g.__super__=x.prototype,g},p={}.hasOwnProperty;s=n("./PriorityQueue/AbstractPriorityQueue"),o=n("./PriorityQueue/ArrayStrategy"),c=n("./PriorityQueue/BinaryHeapStrategy"),l=n("./PriorityQueue/BHeapStrategy"),f=function(g){h(x,g);function x(D){D||(D={}),D.strategy||(D.strategy=c),D.comparator||(D.comparator=function(y,E){return(y||0)-(E||0)}),x.__super__.constructor.call(this,D)}return x}(s),f.ArrayStrategy=o,f.BinaryHeapStrategy=c,f.BHeapStrategy=l,r.exports=f},{"./PriorityQueue/AbstractPriorityQueue":2,"./PriorityQueue/ArrayStrategy":3,"./PriorityQueue/BHeapStrategy":4,"./PriorityQueue/BinaryHeapStrategy":5}],2:[function(n,r,i){r.exports=function(){function s(o){var l;if((o!=null?o.strategy:void 0)==null)throw"Must pass options.strategy, a strategy";if((o!=null?o.comparator:void 0)==null)throw"Must pass options.comparator, a comparator";this.priv=new o.strategy(o),this.length=(o!=null&&(l=o.initialValues)!=null?l.length:void 0)||0}return s.prototype.queue=function(o){this.length++,this.priv.queue(o)},s.prototype.dequeue=function(o){if(!this.length)throw"Empty queue";return this.length--,this.priv.dequeue()},s.prototype.peek=function(o){if(!this.length)throw"Empty queue";return this.priv.peek()},s.prototype.clear=function(){return this.length=0,this.priv.clear()},s}()},{}],3:[function(n,r,i){var s;s=function(o,l,c){var f,h,p;for(h=0,f=o.length;h<f;)p=h+f>>>1,c(o[p],l)>=0?h=p+1:f=p;return h},r.exports=function(){function o(l){var c;this.options=l,this.comparator=this.options.comparator,this.data=((c=this.options.initialValues)!=null?c.slice(0):void 0)||[],this.data.sort(this.comparator).reverse()}return o.prototype.queue=function(l){var c;c=s(this.data,l,this.comparator),this.data.splice(c,0,l)},o.prototype.dequeue=function(){return this.data.pop()},o.prototype.peek=function(){return this.data[this.data.length-1]},o.prototype.clear=function(){this.data.length=0},o}()},{}],4:[function(n,r,i){r.exports=function(){function s(o){var l,c,f,h,p,g,x,D;for(this.comparator=(o!=null?o.comparator:void 0)||function(y,E){return y-E},this.pageSize=(o!=null?o.pageSize:void 0)||512,this.length=0,x=0;1<<x<this.pageSize;)x+=1;if(1<<x!==this.pageSize)throw"pageSize must be a power of two";for(this._shift=x,this._emptyMemoryPageTemplate=l=[],c=0,p=this.pageSize;0<=p?c<p:c>p;0<=p?++c:--c)l.push(null);if(this._memory=[],this._mask=this.pageSize-1,o.initialValues)for(g=o.initialValues,f=0,h=g.length;f<h;f++)D=g[f],this.queue(D)}return s.prototype.queue=function(o){this.length+=1,this._write(this.length,o),this._bubbleUp(this.length,o)},s.prototype.dequeue=function(){var o,l;return o=this._read(1),l=this._read(this.length),this.length-=1,this.length>0&&(this._write(1,l),this._bubbleDown(1,l)),o},s.prototype.peek=function(){return this._read(1)},s.prototype.clear=function(){this.length=0,this._memory.length=0},s.prototype._write=function(o,l){var c;for(c=o>>this._shift;c>=this._memory.length;)this._memory.push(this._emptyMemoryPageTemplate.slice(0));return this._memory[c][o&this._mask]=l},s.prototype._read=function(o){return this._memory[o>>this._shift][o&this._mask]},s.prototype._bubbleUp=function(o,l){var c,f,h,p;for(c=this.comparator;o>1&&(f=o&this._mask,o<this.pageSize||f>3?h=o&~this._mask|f>>1:f<2?(h=o-this.pageSize>>this._shift,h+=h&~(this._mask>>1),h|=this.pageSize>>1):h=o-2,p=this._read(h),!(c(p,l)<0));)this._write(h,l),this._write(o,p),o=h},s.prototype._bubbleDown=function(o,l){var c,f,h,p,g;for(g=this.comparator;o<this.length;)if(o>this._mask&&!(o&this._mask-1)?c=f=o+2:o&this.pageSize>>1?(c=(o&~this._mask)>>1,c|=o&this._mask>>1,c=c+1<<this._shift,f=c+1):(c=o+(o&this._mask),f=c+1),c!==f&&f<=this.length)if(h=this._read(c),p=this._read(f),g(h,l)<0&&g(h,p)<=0)this._write(c,l),this._write(o,h),o=c;else if(g(p,l)<0)this._write(f,l),this._write(o,p),o=f;else break;else if(c<=this.length)if(h=this._read(c),g(h,l)<0)this._write(c,l),this._write(o,h),o=c;else break;else break},s}()},{}],5:[function(n,r,i){r.exports=function(){function s(o){var l;this.comparator=(o!=null?o.comparator:void 0)||function(c,f){return c-f},this.length=0,this.data=((l=o.initialValues)!=null?l.slice(0):void 0)||[],this._heapify()}return s.prototype._heapify=function(){var o,l,c;if(this.data.length>0)for(o=l=1,c=this.data.length;1<=c?l<c:l>c;o=1<=c?++l:--l)this._bubbleUp(o)},s.prototype.queue=function(o){this.data.push(o),this._bubbleUp(this.data.length-1)},s.prototype.dequeue=function(){var o,l;return l=this.data[0],o=this.data.pop(),this.data.length>0&&(this.data[0]=o,this._bubbleDown(0)),l},s.prototype.peek=function(){return this.data[0]},s.prototype.clear=function(){this.length=0,this.data.length=0},s.prototype._bubbleUp=function(o){for(var l,c;o>0&&(l=o-1>>>1,this.comparator(this.data[o],this.data[l])<0);)c=this.data[l],this.data[l]=this.data[o],this.data[o]=c,o=l},s.prototype._bubbleDown=function(o){var l,c,f,h,p;for(l=this.data.length-1;c=(o<<1)+1,h=c+1,f=o,c<=l&&this.comparator(this.data[c],this.data[f])<0&&(f=c),h<=l&&this.comparator(this.data[h],this.data[f])<0&&(f=h),f!==o;)p=this.data[f],this.data[f]=this.data[o],this.data[o]=p,o=f},s}()},{}]},{},[1])(1)})}(priorityQueue)),priorityQueue.exports}var priorityQueueExports=requirePriorityQueue();const PriorityQueue=getDefaultExportFromCjs(priorityQueueExports),dxs=[1,0,-1,0,1,1,-1,-1],dys=[0,1,0,-1,1,-1,1,-1];function fromWaterShed(e={}){let{points:t,mask:n,image:r,fillMaxValue:i=this.maxValue,invert:s=!1}=e,o=r||this;o.checkProcessable("fromWaterShed",{bitDepth:[8,16],components:1}),s=!s,t||(t=o.getLocalMaxima({invert:s,mask:n}));let l=s?0:1,c=new Int16Array(o.size),f=o.width,h=o.height,p=new PriorityQueue({comparator:(g,x)=>g[2]-x[2],strategy:PriorityQueue.BinaryHeapStrategy});for(let g=0;g<t.length;g++){let x=t[g][0]+t[g][1]*f;c[x]=g+1;let D=o.data[x];(s&&D<=i||!s&&D>=i)&&p.queue([t[g][0],t[g][1],D])}for(;p.length>0;){let g=p.dequeue(),x=g[0]+g[1]*f;for(let D=0;D<4;D++){let y=g[0]+dxs[D],E=g[1]+dys[D];if(y>=0&&E>=0&&y<f&&E<h){let F=y+E*f;if(!n||n.getBit(F)===l){let B=o.data[F];(s&&B<=i||!s&&B>=i)&&c[F]===0&&(c[F]=c[x],p.queue([g[0]+dxs[D],g[1]+dys[D],B]))}}}}return new RoiMap(o,c)}class RoiManager{constructor(t,n={}){this._image=t,this._options=n,this._options.label||(this._options.label="default"),this._layers={},this._painted=null}fromMaxima(t={}){let n=Object.assign({},this._options,t),r=fromMaxima.call(this._image,t);this._layers[n.label]=new RoiLayer(r,n)}fromPoints(t,n={}){let r=Object.assign({},this._options,n),i=fromPoints.call(this._image,t,n);return this._layers[r.label]=new RoiLayer(i,r),this}putMap(t,n={}){let r=new RoiMap(this._image,t),i=Object.assign({},this._options,n);return this._layers[i.label]=new RoiLayer(r,i),this}fromWaterShed(t={}){let n=Object.assign({},this._options,t),r=fromWaterShed.call(this._image,t);this._layers[n.label]=new RoiLayer(r,n)}fromMask(t,n={}){let r=Object.assign({},this._options,n),i=fromMask.call(this._image,t,n);return this._layers[r.label]=new RoiLayer(i,r),this}fromMaskConnectedComponentLabelingAlgorithm(t,n={}){let r=Object.assign({},this._options,n),i=fromMaskConnectedComponentLabelingAlgorithm.call(this._image,t,n);return this._layers[r.label]=new RoiLayer(i,r),this}getMap(t={}){let n=Object.assign({},this._options,t);return this._assertLayerWithLabel(n.label),this._layers[n.label].roiMap}rowsInfo(t={}){return this.getMap(t).rowsInfo()}colsInfo(t={}){return this.getMap(t).rowsInfo()}getRoiIds(t={}){let n=this.getRois(t);if(n){let r=new Array(n.length);for(let i=0;i<n.length;i++)r[i]=n[i].id;return r}throw new Error("ROIs not found")}getRois(t={}){let{label:n=this._options.label,positive:r=!0,negative:i=!0,minSurface:s=0,maxSurface:o=Number.POSITIVE_INFINITY,minWidth:l=0,maxWidth:c=Number.POSITIVE_INFINITY,minHeight:f=0,maxHeight:h=Number.POSITIVE_INFINITY,minRatio:p=0,maxRatio:g=Number.POSITIVE_INFINITY}=t;if(!this._layers[n])throw new Error(`this Roi layer (${n}) does not exist`);const x=this._layers[n].roi,D=[];for(const y of x)(y.id<0&&i||y.id>0&&r)&&y.surface>=s&&y.surface<=o&&y.width>=l&&y.width<=c&&y.height>=f&&y.height<=h&&y.ratio>=p&&y.ratio<=g&&D.push(y);return D}getRoi(t,n={}){const{label:r=this._options.label}=n;if(!this._layers[r])throw new Error(`this Roi layer (${r}) does not exist`);const i=this._layers[r].roi.find(s=>s.id===t);if(!i)throw new Error(`found no Roi with id ${t}`);return i}getMasks(t={}){let n=this.getRois(t),r=new Array(n.length);for(let i=0;i<n.length;i++)r[i]=n[i].getMask(t);return r}getAnalysisMasks(t={}){const{analysisProperty:n}=t;let r=`${n}Mask`,i=this.getRois(t);return i.length===0||!i[0][r]?[]:i.map(s=>s[r])}getData(t={}){let n=Object.assign({},this._options,t);return this._assertLayerWithLabel(n.label),this._layers[n.label].roiMap.data}paint(t={}){let{labelProperty:n,analysisProperty:r}=t;this._painted||(this._painted=this._image.rgba8());let i=this.getMasks(t);if(n){const s=this.getRois(t);t.labels=s.map(f=>deepValue(f,n));const o=Math.max(...t.labels);let l=!1,c=!1;if(n.includes("surface")?l=!0:/(?:perimeter|min|max|external|width|height|length)/.test(n)&&(c=!0),isFinite(o)){let f="";if(t.unit!=="pixel"&&t.pixelSize&&(c||l)){f=l?`${t.unit}^2`:t.unit;let h=l?"m^2":"m",p=l?t.pixelSize**2:t.pixelSize;const g=Qty.swiftConverter(h,f);t.labels=t.labels.map(x=>g(p*x))}o>50?t.labels=t.labels.map(h=>Math.round(h)+f):o>10?t.labels=t.labels.map(h=>h.toFixed(1)+f):t.labels=t.labels.map(h=>h.toFixed(2)+f)}t.labelsPosition=s.map(f=>[f.meanX,f.meanY])}if(this._painted.paintMasks(i,t),r){let s=this.getAnalysisMasks(t);this._painted.paintMasks(s,{color:t.analysisColor,alpha:t.analysisAlpha})}return this._painted}getMask(t={}){let n=new Image(this._image.width,this._image.height,{kind:"BINARY"}),r=this.getMasks(t);for(let i=0;i<r.length;i++){let s=r[i];for(let o=0;o<s.width;o++)for(let l=0;l<s.height;l++)s.getBitXY(o,l)&&n.setBitXY(o+s.position[0],l+s.position[1])}return n}resetPainted(t={}){const{image:n}=t;n?this._painted=this.image.rgba8():this._painted=this._image.rgba8()}mergeRoi(t={}){const n=this.getMap(t);return n.mergeRoi(t),this.putMap(n.data,t),this}mergeRois(t,n={}){if(!Array.isArray(t)||t.some(i=>!Number.isInteger(i)))throw new Error("Roi ids must be an array of integers");if(t.length<2)throw new Error("Roi ids must have at least two elements");if(new Set(t).size!==t.length)throw new Error("Roi ids must be all different");t.forEach(i=>this.getRoi(i));const r=this.getMap(n);return r.mergeRois(t),this.putMap(r.data,n),this}findCorrespondingRoi(t,n={}){let r=this.getRois(n),i=[];for(let s=0;s<r.length;s++){let o=r[s],l=o.minX,c=o.minY,f=o.points,h=Math.sign(o.id),p=correspondingRoisInformation(l,c,f,t,h);i.push(p)}return i}_assertLayerWithLabel(t){if(!this._layers[t])throw new Error(`no layer with label ${t}`)}}function correspondingRoisInformation(e,t,n,r,i){let s={id:[],surface:[],roiSurfaceCovered:[],same:0,opposite:0,total:0};for(let o=0;o<n.length;o++){let l=n[o],c=l[0],f=l[1],h=c+e+(f+t)*r.width,p=r.data[h];(p>0||p<0)&&(s.id.includes(p)?s.surface[s.id.indexOf(p)]+=1:(s.id.push(p),s.surface.push(1)))}for(let o=0;o<s.id.length;o++)Math.sign(s.id[o])===i?s.same+=s.surface[o]:s.opposite+=s.surface[o],s.roiSurfaceCovered[o]=s.surface[o]/n.length;return s.total=s.opposite+s.same,s}const objectToString=Object.prototype.toString;class Image{constructor(t,n,r,i){if(arguments.length===1?(i=t,{width:t,height:n,data:r}=i):r&&!r.length&&(i=r,{data:r}=i),t===void 0&&(t=1),n===void 0&&(n=1),i===void 0&&(i={}),typeof i!="object"||i===null)throw new TypeError("options must be an object");if(!Number.isInteger(t)||t<=0)throw new RangeError("width must be a positive integer");if(!Number.isInteger(n)||n<=0)throw new RangeError("height must be a positive integer");const{kind:s=RGBA}=i;if(typeof s!="string")throw new TypeError("kind must be a string");const o=getKind(s),l=Object.assign({},i);for(const y in o)l[y]===void 0&&(l[y]=o[y]);verifyKindDefinition(l);const{components:c,bitDepth:f,colorModel:h}=l,p=l.alpha+0,g=t*n,x=c+p,D=f===32?Number.MAX_VALUE:2**f-1;if(r===void 0)r=createPixelArray(g,c,p,x,f,D);else{const y=getTheoreticalPixelArraySize(g,x,f);if(r.length!==y)throw new RangeError(`incorrect data size: ${r.length}. Should be ${y}`)}this.width=t,this.height=n,this.data=r,this.size=g,this.components=c,this.alpha=p,this.bitDepth=f,this.maxValue=D,this.colorModel=h,this.channels=x,this.meta=i.meta||{},Object.defineProperty(this,"parent",{enumerable:!1,writable:!0,configurable:!0,value:i.parent||null}),this.position=i.position||[0,0],this.computed=null,this.sizes=[this.width,this.height],this.multiplierX=this.channels,this.multiplierY=this.channels*this.width,this.isClamped=this.bitDepth<32,this.borderSizes=[0,0]}get[Symbol.toStringTag](){return"IJSImage"}static isImage(t){return objectToString.call(t)==="[object IJSImage]"}static fromCanvas(t){const r=t.getContext("2d").getImageData(0,0,t.width,t.height);return new Image(r.width,r.height,r.data)}static createFrom(t,n){const r=getImageParameters(t);return Object.assign(r,{parent:t,position:[0,0]},n),new Image(r)}getRoiManager(t){return new RoiManager(this,t)}clone(){const t=this.data.slice();return new Image(this.width,this.height,t,this)}apply(t){for(let n=0;n<this.height;n++)for(let r=0;r<this.width;r++){let i=(n*this.width+r)*this.channels;t.call(this,i)}}}setValueMethods(Image);setBitMethods(Image);setExportMethods(Image);Image.prototype.checkProcessable=checkProcessable;Image.prototype.getRGBAData=getRGBAData;Image.load=load;Image.extendMethod=extendMethod;Image.extendProperty=extendProperty;extend$1(Image);var workerTemplate={},hasRequiredWorkerTemplate;function requireWorkerTemplate(){if(hasRequiredWorkerTemplate)return workerTemplate;hasRequiredWorkerTemplate=1;var e=function(){self.window=self;function n(){this._listeners={}}n.prototype.on=function(i,s){if(this._listeners[i])throw new RangeError("there is already a listener for "+i);if(typeof s!="function")throw new TypeError("callback argument must be a function");this._listeners[i]=s},n.prototype._send=function(i,s,o){o===void 0?o=[]:Array.isArray(o)||(o=[o]),self.postMessage({id:i,data:s},o)},n.prototype._trigger=function(i,s){if(!this._listeners[i])throw new Error("event "+i+" is not defined");this._listeners[i].apply(null,s)};var r=new n;self.onmessage=function(i){switch(i.data.action){case"exec":i.data.args.unshift(function(s,o){r._send(i.data.id,s,o)}),r._trigger(i.data.event,i.data.args);break;case"ping":r._send(i.data.id,"pong");break;default:throw new Error("unexpected action: "+i.data.action)}}},t=e.toString().split('"CODE";');return workerTemplate.newWorkerURL=function(r,i){var s=new Blob(["(",t[0],"importScripts.apply(self, "+JSON.stringify(i)+`);
`,"(",r,")();",t[1],")();"],{type:"application/javascript"});return URL.createObjectURL(s)},workerTemplate}var src,hasRequiredSrc;function requireSrc(){if(hasRequiredSrc)return src;hasRequiredSrc=1;var e=requireWorkerTemplate(),t=navigator.hardwareConcurrency||1;function n(r,i){if(typeof r!="string"&&typeof r!="function")throw new TypeError("func argument must be a function");if(i===void 0&&(i={}),typeof i!="object"||i===null)throw new TypeError("options argument must be an object");this._workerCode=r.toString(),i.maxWorkers===void 0||i.maxWorkers==="auto"?this._numWorkers=Math.min(t-1,1):i.maxWorkers>0?this._numWorkers=Math.min(i.maxWorkers,t):this._numWorkers=t,this._workers=new Map,this._timeout=i.timeout||0,this._terminateOnError=!!i.terminateOnError;var s=i.deps;typeof s=="string"&&(s=[s]),Array.isArray(s)||(s=void 0),this._id=0,this._terminated=!1,this._working=0,this._waiting=[],this._init(s)}return n.prototype._init=function(r){for(var i=e.newWorkerURL(this._workerCode,r),s=0;s<this._numWorkers;s++){var o=new Worker(i);o.onmessage=this._onmessage.bind(this,o),o.onerror=this._onerror.bind(this,o),o.running=!1,o.id=s,this._workers.set(o,null)}URL.revokeObjectURL(i)},n.prototype._onerror=function(r,i){if(!this._terminated){this._working--,r.running=!1;var s=this._workers.get(r);s&&s[1](i.message),this._workers.set(r,null),this._terminateOnError?this.terminate():this._exec()}},n.prototype._onmessage=function(r,i){if(!this._terminated){this._working--,r.running=!1;var s=this._workers.get(r);s&&s[0](i.data.data),this._workers.set(r,null),this._exec()}},n.prototype._exec=function(){for(var r of this._workers.keys()){if(this._working===this._numWorkers||this._waiting.length===0)return;if(!r.running)for(var i=0;i<this._waiting.length;i++){var s=this._waiting[i];if(!(typeof s[4]=="number"&&s[4]!==r.id)){this._waiting.splice(i,1),r.postMessage({action:"exec",event:s[0],args:s[1]},s[2]),r.running=!0,r.time=Date.now(),this._workers.set(r,s[3]),this._working++;break}}}},n.prototype.terminate=function(){if(!this._terminated){for(var r of this._workers)r[0].terminate(),r[1]&&r[1][1](new Error("Terminated"));this._workers.clear(),this._waiting=[],this._working=0,this._terminated=!0}},n.prototype.postAll=function(r,i){if(this._terminated)throw new Error("Cannot post (terminated)");var s=[];for(var o of this._workers.keys())s.push(this.post(r,i,[],o.id));return Promise.all(s)},n.prototype.post=function(r,i,s,o){i===void 0&&(i=[]),s===void 0&&(s=[]),Array.isArray(i)||(i=[i]),Array.isArray(s)||(s=[s]);var l=this;return new Promise(function(c,f){if(l._terminated)throw new Error("Cannot post (terminated)");l._waiting.push([r,i,s,[c,f],o]),l._exec()})},src=n,src}var srcExports=requireSrc();const WorkerManager=getDefaultExportFromCjs(srcExports),defaultOptions={regression:{kernelType:"polynomial",kernelOptions:{degree:2,constant:1}},threshold:.02,roi:{minSurface:100,positive:!1},sampling:20,include:[]};function run(e,t,n){t=Object.assign({},defaultOptions,t);const r=this.manager;return Array.isArray(e)?Promise.all(e.map(function(i){const s=runOnce(r,i,t);return typeof n=="function"&&s.then(n),s})):runOnce(r,e,t)}function runOnce(e,t,n){return e.post("data",[t,n]).then(function(r){for(let i in r)r[i]=new Image(r[i]);return r})}function work(){worker.on("data",function(e,t,n){t=new IJS(t);const r={},i=[],s=t.grey(),o=s.sobelFilter();x("sobel",o);const l=o.level().mask({threshold:n.threshold});x("mask",l);const c=o.getRoiManager();c.fromMask(l);const f=c.getMask(n.roi);x("realMask",f);const h=s.getPixelsGrid({sampling:n.sampling,mask:f}),p=t.getBackground(h.xyS,h.zS,n.regression);x("background",p);const g=t.subtract(p);r.result=g,i.push(g.data.buffer),e(r,i);function x(D,y){n.include.includes(D)&&(r[D]=y,i.push(y.data.buffer))}})}const background={run,work};function extend(e){e.extendMethod("background",background)}let Worker$1=class q9{constructor(){this._url=null,this._deps=[null]}checkUrl(){if(this._url===null)throw new Error("image worker must be initialized with an URL")}get url(){return this._url}set url(t){if(typeof t!="string")throw new TypeError("worker URL must be a string");this._url=t,this._deps[0]=t}static extendMethod(t,n){let r,i,s={};function o(...l){return r||(this.checkUrl(),i=this.url,r=new WorkerManager(n.work,{deps:i}),s.manager=r),n.run.call(s,...l)}o.reset=function(){r&&(r.terminate(),r=new WorkerManager(n.work,{deps:i}),s.manager=r)},q9.prototype[t]=o}};extend(Worker$1);/*!
 * @kurkle/color v0.3.4
 * https://github.com/kurkle/color#readme
 * (c) 2024 Jukka Kurkela
 * Released under the MIT License
 */function round(e){return e+.5|0}const lim=(e,t,n)=>Math.max(Math.min(e,n),t);function p2b(e){return lim(round(e*2.55),0,255)}function n2b(e){return lim(round(e*255),0,255)}function b2n(e){return lim(round(e/2.55)/100,0,1)}function n2p(e){return lim(round(e*100),0,100)}const map$1={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15},hex=[..."0123456789ABCDEF"],h1=e=>hex[e&15],h2=e=>hex[(e&240)>>4]+hex[e&15],eq=e=>(e&240)>>4===(e&15),isShort=e=>eq(e.r)&&eq(e.g)&&eq(e.b)&&eq(e.a);function hexParse(e){var t=e.length,n;return e[0]==="#"&&(t===4||t===5?n={r:255&map$1[e[1]]*17,g:255&map$1[e[2]]*17,b:255&map$1[e[3]]*17,a:t===5?map$1[e[4]]*17:255}:(t===7||t===9)&&(n={r:map$1[e[1]]<<4|map$1[e[2]],g:map$1[e[3]]<<4|map$1[e[4]],b:map$1[e[5]]<<4|map$1[e[6]],a:t===9?map$1[e[7]]<<4|map$1[e[8]]:255})),n}const alpha=(e,t)=>e<255?t(e):"";function hexString(e){var t=isShort(e)?h1:h2;return e?"#"+t(e.r)+t(e.g)+t(e.b)+alpha(e.a,t):void 0}const HUE_RE=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function hsl2rgbn(e,t,n){const r=t*Math.min(n,1-n),i=(s,o=(s+e/30)%12)=>n-r*Math.max(Math.min(o-3,9-o,1),-1);return[i(0),i(8),i(4)]}function hsv2rgbn(e,t,n){const r=(i,s=(i+e/60)%6)=>n-n*t*Math.max(Math.min(s,4-s,1),0);return[r(5),r(3),r(1)]}function hwb2rgbn(e,t,n){const r=hsl2rgbn(e,1,.5);let i;for(t+n>1&&(i=1/(t+n),t*=i,n*=i),i=0;i<3;i++)r[i]*=1-t-n,r[i]+=t;return r}function hueValue(e,t,n,r,i){return e===i?(t-n)/r+(t<n?6:0):t===i?(n-e)/r+2:(e-t)/r+4}function rgb2hsl(e){const n=e.r/255,r=e.g/255,i=e.b/255,s=Math.max(n,r,i),o=Math.min(n,r,i),l=(s+o)/2;let c,f,h;return s!==o&&(h=s-o,f=l>.5?h/(2-s-o):h/(s+o),c=hueValue(n,r,i,h,s),c=c*60+.5),[c|0,f||0,l]}function calln(e,t,n,r){return(Array.isArray(t)?e(t[0],t[1],t[2]):e(t,n,r)).map(n2b)}function hsl2rgb(e,t,n){return calln(hsl2rgbn,e,t,n)}function hwb2rgb(e,t,n){return calln(hwb2rgbn,e,t,n)}function hsv2rgb(e,t,n){return calln(hsv2rgbn,e,t,n)}function hue(e){return(e%360+360)%360}function hueParse(e){const t=HUE_RE.exec(e);let n=255,r;if(!t)return;t[5]!==r&&(n=t[6]?p2b(+t[5]):n2b(+t[5]));const i=hue(+t[2]),s=+t[3]/100,o=+t[4]/100;return t[1]==="hwb"?r=hwb2rgb(i,s,o):t[1]==="hsv"?r=hsv2rgb(i,s,o):r=hsl2rgb(i,s,o),{r:r[0],g:r[1],b:r[2],a:n}}function rotate(e,t){var n=rgb2hsl(e);n[0]=hue(n[0]+t),n=hsl2rgb(n),e.r=n[0],e.g=n[1],e.b=n[2]}function hslString(e){if(!e)return;const t=rgb2hsl(e),n=t[0],r=n2p(t[1]),i=n2p(t[2]);return e.a<255?`hsla(${n}, ${r}%, ${i}%, ${b2n(e.a)})`:`hsl(${n}, ${r}%, ${i}%)`}const map={x:"dark",Z:"light",Y:"re",X:"blu",W:"gr",V:"medium",U:"slate",A:"ee",T:"ol",S:"or",B:"ra",C:"lateg",D:"ights",R:"in",Q:"turquois",E:"hi",P:"ro",O:"al",N:"le",M:"de",L:"yello",F:"en",K:"ch",G:"arks",H:"ea",I:"ightg",J:"wh"},names$1={OiceXe:"f0f8ff",antiquewEte:"faebd7",aqua:"ffff",aquamarRe:"7fffd4",azuY:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"0",blanKedOmond:"ffebcd",Xe:"ff",XeviTet:"8a2be2",bPwn:"a52a2a",burlywood:"deb887",caMtXe:"5f9ea0",KartYuse:"7fff00",KocTate:"d2691e",cSO:"ff7f50",cSnflowerXe:"6495ed",cSnsilk:"fff8dc",crimson:"dc143c",cyan:"ffff",xXe:"8b",xcyan:"8b8b",xgTMnPd:"b8860b",xWay:"a9a9a9",xgYF:"6400",xgYy:"a9a9a9",xkhaki:"bdb76b",xmagFta:"8b008b",xTivegYF:"556b2f",xSange:"ff8c00",xScEd:"9932cc",xYd:"8b0000",xsOmon:"e9967a",xsHgYF:"8fbc8f",xUXe:"483d8b",xUWay:"2f4f4f",xUgYy:"2f4f4f",xQe:"ced1",xviTet:"9400d3",dAppRk:"ff1493",dApskyXe:"bfff",dimWay:"696969",dimgYy:"696969",dodgerXe:"1e90ff",fiYbrick:"b22222",flSOwEte:"fffaf0",foYstWAn:"228b22",fuKsia:"ff00ff",gaRsbSo:"dcdcdc",ghostwEte:"f8f8ff",gTd:"ffd700",gTMnPd:"daa520",Way:"808080",gYF:"8000",gYFLw:"adff2f",gYy:"808080",honeyMw:"f0fff0",hotpRk:"ff69b4",RdianYd:"cd5c5c",Rdigo:"4b0082",ivSy:"fffff0",khaki:"f0e68c",lavFMr:"e6e6fa",lavFMrXsh:"fff0f5",lawngYF:"7cfc00",NmoncEffon:"fffacd",ZXe:"add8e6",ZcSO:"f08080",Zcyan:"e0ffff",ZgTMnPdLw:"fafad2",ZWay:"d3d3d3",ZgYF:"90ee90",ZgYy:"d3d3d3",ZpRk:"ffb6c1",ZsOmon:"ffa07a",ZsHgYF:"20b2aa",ZskyXe:"87cefa",ZUWay:"778899",ZUgYy:"778899",ZstAlXe:"b0c4de",ZLw:"ffffe0",lime:"ff00",limegYF:"32cd32",lRF:"faf0e6",magFta:"ff00ff",maPon:"800000",VaquamarRe:"66cdaa",VXe:"cd",VScEd:"ba55d3",VpurpN:"9370db",VsHgYF:"3cb371",VUXe:"7b68ee",VsprRggYF:"fa9a",VQe:"48d1cc",VviTetYd:"c71585",midnightXe:"191970",mRtcYam:"f5fffa",mistyPse:"ffe4e1",moccasR:"ffe4b5",navajowEte:"ffdead",navy:"80",Tdlace:"fdf5e6",Tive:"808000",TivedBb:"6b8e23",Sange:"ffa500",SangeYd:"ff4500",ScEd:"da70d6",pOegTMnPd:"eee8aa",pOegYF:"98fb98",pOeQe:"afeeee",pOeviTetYd:"db7093",papayawEp:"ffefd5",pHKpuff:"ffdab9",peru:"cd853f",pRk:"ffc0cb",plum:"dda0dd",powMrXe:"b0e0e6",purpN:"800080",YbeccapurpN:"663399",Yd:"ff0000",Psybrown:"bc8f8f",PyOXe:"4169e1",saddNbPwn:"8b4513",sOmon:"fa8072",sandybPwn:"f4a460",sHgYF:"2e8b57",sHshell:"fff5ee",siFna:"a0522d",silver:"c0c0c0",skyXe:"87ceeb",UXe:"6a5acd",UWay:"708090",UgYy:"708090",snow:"fffafa",sprRggYF:"ff7f",stAlXe:"4682b4",tan:"d2b48c",teO:"8080",tEstN:"d8bfd8",tomato:"ff6347",Qe:"40e0d0",viTet:"ee82ee",JHt:"f5deb3",wEte:"ffffff",wEtesmoke:"f5f5f5",Lw:"ffff00",LwgYF:"9acd32"};function unpack(){const e={},t=Object.keys(names$1),n=Object.keys(map);let r,i,s,o,l;for(r=0;r<t.length;r++){for(o=l=t[r],i=0;i<n.length;i++)s=n[i],l=l.replace(s,map[s]);s=parseInt(names$1[o],16),e[l]=[s>>16&255,s>>8&255,s&255]}return e}let names;function nameParse(e){names||(names=unpack(),names.transparent=[0,0,0,0]);const t=names[e.toLowerCase()];return t&&{r:t[0],g:t[1],b:t[2],a:t.length===4?t[3]:255}}const RGB_RE=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;function rgbParse(e){const t=RGB_RE.exec(e);let n=255,r,i,s;if(t){if(t[7]!==r){const o=+t[7];n=t[8]?p2b(o):lim(o*255,0,255)}return r=+t[1],i=+t[3],s=+t[5],r=255&(t[2]?p2b(r):lim(r,0,255)),i=255&(t[4]?p2b(i):lim(i,0,255)),s=255&(t[6]?p2b(s):lim(s,0,255)),{r,g:i,b:s,a:n}}}function rgbString(e){return e&&(e.a<255?`rgba(${e.r}, ${e.g}, ${e.b}, ${b2n(e.a)})`:`rgb(${e.r}, ${e.g}, ${e.b})`)}const to=e=>e<=.0031308?e*12.92:Math.pow(e,1/2.4)*1.055-.055,from=e=>e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4);function interpolate$1(e,t,n){const r=from(b2n(e.r)),i=from(b2n(e.g)),s=from(b2n(e.b));return{r:n2b(to(r+n*(from(b2n(t.r))-r))),g:n2b(to(i+n*(from(b2n(t.g))-i))),b:n2b(to(s+n*(from(b2n(t.b))-s))),a:e.a+n*(t.a-e.a)}}function modHSL(e,t,n){if(e){let r=rgb2hsl(e);r[t]=Math.max(0,Math.min(r[t]+r[t]*n,t===0?360:1)),r=hsl2rgb(r),e.r=r[0],e.g=r[1],e.b=r[2]}}function clone$1(e,t){return e&&Object.assign(t||{},e)}function fromObject(e){var t={r:0,g:0,b:0,a:255};return Array.isArray(e)?e.length>=3&&(t={r:e[0],g:e[1],b:e[2],a:255},e.length>3&&(t.a=n2b(e[3]))):(t=clone$1(e,{r:0,g:0,b:0,a:1}),t.a=n2b(t.a)),t}function functionParse(e){return e.charAt(0)==="r"?rgbParse(e):hueParse(e)}class Color{constructor(t){if(t instanceof Color)return t;const n=typeof t;let r;n==="object"?r=fromObject(t):n==="string"&&(r=hexParse(t)||nameParse(t)||functionParse(t)),this._rgb=r,this._valid=!!r}get valid(){return this._valid}get rgb(){var t=clone$1(this._rgb);return t&&(t.a=b2n(t.a)),t}set rgb(t){this._rgb=fromObject(t)}rgbString(){return this._valid?rgbString(this._rgb):void 0}hexString(){return this._valid?hexString(this._rgb):void 0}hslString(){return this._valid?hslString(this._rgb):void 0}mix(t,n){if(t){const r=this.rgb,i=t.rgb;let s;const o=n===s?.5:n,l=2*o-1,c=r.a-i.a,f=((l*c===-1?l:(l+c)/(1+l*c))+1)/2;s=1-f,r.r=255&f*r.r+s*i.r+.5,r.g=255&f*r.g+s*i.g+.5,r.b=255&f*r.b+s*i.b+.5,r.a=o*r.a+(1-o)*i.a,this.rgb=r}return this}interpolate(t,n){return t&&(this._rgb=interpolate$1(this._rgb,t._rgb,n)),this}clone(){return new Color(this.rgb)}alpha(t){return this._rgb.a=n2b(t),this}clearer(t){const n=this._rgb;return n.a*=1-t,this}greyscale(){const t=this._rgb,n=round(t.r*.3+t.g*.59+t.b*.11);return t.r=t.g=t.b=n,this}opaquer(t){const n=this._rgb;return n.a*=1+t,this}negate(){const t=this._rgb;return t.r=255-t.r,t.g=255-t.g,t.b=255-t.b,this}lighten(t){return modHSL(this._rgb,2,t),this}darken(t){return modHSL(this._rgb,2,-t),this}saturate(t){return modHSL(this._rgb,1,t),this}desaturate(t){return modHSL(this._rgb,1,-t),this}rotate(t){return rotate(this._rgb,t),this}}/*!
 * Chart.js v4.4.7
 * https://www.chartjs.org
 * (c) 2024 Chart.js Contributors
 * Released under the MIT License
 */function noop(){}const uid=(()=>{let e=0;return()=>e++})();function isNullOrUndef(e){return e==null}function isArray(e){if(Array.isArray&&Array.isArray(e))return!0;const t=Object.prototype.toString.call(e);return t.slice(0,7)==="[object"&&t.slice(-6)==="Array]"}function isObject(e){return e!==null&&Object.prototype.toString.call(e)==="[object Object]"}function isNumberFinite(e){return(typeof e=="number"||e instanceof Number)&&isFinite(+e)}function finiteOrDefault(e,t){return isNumberFinite(e)?e:t}function valueOrDefault(e,t){return typeof e>"u"?t:e}const toDimension=(e,t)=>typeof e=="string"&&e.endsWith("%")?parseFloat(e)/100*t:+e;function callback(e,t,n){if(e&&typeof e.call=="function")return e.apply(n,t)}function each(e,t,n,r){let i,s,o;if(isArray(e))for(s=e.length,i=0;i<s;i++)t.call(n,e[i],i);else if(isObject(e))for(o=Object.keys(e),s=o.length,i=0;i<s;i++)t.call(n,e[o[i]],o[i])}function _elementsEqual(e,t){let n,r,i,s;if(!e||!t||e.length!==t.length)return!1;for(n=0,r=e.length;n<r;++n)if(i=e[n],s=t[n],i.datasetIndex!==s.datasetIndex||i.index!==s.index)return!1;return!0}function clone(e){if(isArray(e))return e.map(clone);if(isObject(e)){const t=Object.create(null),n=Object.keys(e),r=n.length;let i=0;for(;i<r;++i)t[n[i]]=clone(e[n[i]]);return t}return e}function isValidKey(e){return["__proto__","prototype","constructor"].indexOf(e)===-1}function _merger(e,t,n,r){if(!isValidKey(e))return;const i=t[e],s=n[e];isObject(i)&&isObject(s)?merge(i,s,r):t[e]=clone(s)}function merge(e,t,n){const r=isArray(t)?t:[t],i=r.length;if(!isObject(e))return e;n=n||{};const s=n.merger||_merger;let o;for(let l=0;l<i;++l){if(o=r[l],!isObject(o))continue;const c=Object.keys(o);for(let f=0,h=c.length;f<h;++f)s(c[f],e,o,n)}return e}function mergeIf(e,t){return merge(e,t,{merger:_mergerIf})}function _mergerIf(e,t,n){if(!isValidKey(e))return;const r=t[e],i=n[e];isObject(r)&&isObject(i)?mergeIf(r,i):Object.prototype.hasOwnProperty.call(t,e)||(t[e]=clone(i))}const keyResolvers={"":e=>e,x:e=>e.x,y:e=>e.y};function _splitKey(e){const t=e.split("."),n=[];let r="";for(const i of t)r+=i,r.endsWith("\\")?r=r.slice(0,-1)+".":(n.push(r),r="");return n}function _getKeyResolver(e){const t=_splitKey(e);return n=>{for(const r of t){if(r==="")break;n=n&&n[r]}return n}}function resolveObjectKey(e,t){return(keyResolvers[t]||(keyResolvers[t]=_getKeyResolver(t)))(e)}function _capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}const defined=e=>typeof e<"u",isFunction=e=>typeof e=="function",setsEqual=(e,t)=>{if(e.size!==t.size)return!1;for(const n of e)if(!t.has(n))return!1;return!0};function _isClickEvent(e){return e.type==="mouseup"||e.type==="click"||e.type==="contextmenu"}const PI=Math.PI,TAU=2*PI,INFINITY=Number.POSITIVE_INFINITY,RAD_PER_DEG=PI/180,HALF_PI=PI/2,QUARTER_PI=PI/4,TWO_THIRDS_PI=PI*2/3,log10=Math.log10,sign=Math.sign;function almostEquals(e,t,n){return Math.abs(e-t)<n}function niceNum(e){const t=Math.round(e);e=almostEquals(e,t,e/1e3)?t:e;const n=Math.pow(10,Math.floor(log10(e))),r=e/n;return(r<=1?1:r<=2?2:r<=5?5:10)*n}function _factorize(e){const t=[],n=Math.sqrt(e);let r;for(r=1;r<n;r++)e%r===0&&(t.push(r),t.push(e/r));return n===(n|0)&&t.push(n),t.sort((i,s)=>i-s).pop(),t}function isNumber(e){return!isNaN(parseFloat(e))&&isFinite(e)}function almostWhole(e,t){const n=Math.round(e);return n-t<=e&&n+t>=e}function _setMinAndMaxByKey(e,t,n){let r,i,s;for(r=0,i=e.length;r<i;r++)s=e[r][n],isNaN(s)||(t.min=Math.min(t.min,s),t.max=Math.max(t.max,s))}function toRadians(e){return e*(PI/180)}function toDegrees(e){return e*(180/PI)}function _decimalPlaces(e){if(!isNumberFinite(e))return;let t=1,n=0;for(;Math.round(e*t)/t!==e;)t*=10,n++;return n}function getAngleFromPoint(e,t){const n=t.x-e.x,r=t.y-e.y,i=Math.sqrt(n*n+r*r);let s=Math.atan2(r,n);return s<-.5*PI&&(s+=TAU),{angle:s,distance:i}}function distanceBetweenPoints(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}function _normalizeAngle(e){return(e%TAU+TAU)%TAU}function _angleBetween(e,t,n,r){const i=_normalizeAngle(e),s=_normalizeAngle(t),o=_normalizeAngle(n),l=_normalizeAngle(s-i),c=_normalizeAngle(o-i),f=_normalizeAngle(i-s),h=_normalizeAngle(i-o);return i===s||i===o||r&&s===o||l>c&&f<h}function _limitValue(e,t,n){return Math.max(t,Math.min(n,e))}function _int16Range(e){return _limitValue(e,-32768,32767)}function _isBetween(e,t,n,r=1e-6){return e>=Math.min(t,n)-r&&e<=Math.max(t,n)+r}function _lookup(e,t,n){n=n||(o=>e[o]<t);let r=e.length-1,i=0,s;for(;r-i>1;)s=i+r>>1,n(s)?i=s:r=s;return{lo:i,hi:r}}const _lookupByKey=(e,t,n,r)=>_lookup(e,n,r?i=>{const s=e[i][t];return s<n||s===n&&e[i+1][t]===n}:i=>e[i][t]<n),_rlookupByKey=(e,t,n)=>_lookup(e,n,r=>e[r][t]>=n);function _filterBetween(e,t,n){let r=0,i=e.length;for(;r<i&&e[r]<t;)r++;for(;i>r&&e[i-1]>n;)i--;return r>0||i<e.length?e.slice(r,i):e}const arrayEvents=["push","pop","shift","splice","unshift"];function listenArrayEvents(e,t){if(e._chartjs){e._chartjs.listeners.push(t);return}Object.defineProperty(e,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[t]}}),arrayEvents.forEach(n=>{const r="_onData"+_capitalize(n),i=e[n];Object.defineProperty(e,n,{configurable:!0,enumerable:!1,value(...s){const o=i.apply(this,s);return e._chartjs.listeners.forEach(l=>{typeof l[r]=="function"&&l[r](...s)}),o}})})}function unlistenArrayEvents(e,t){const n=e._chartjs;if(!n)return;const r=n.listeners,i=r.indexOf(t);i!==-1&&r.splice(i,1),!(r.length>0)&&(arrayEvents.forEach(s=>{delete e[s]}),delete e._chartjs)}function _arrayUnique(e){const t=new Set(e);return t.size===e.length?e:Array.from(t)}const requestAnimFrame=function(){return typeof window>"u"?function(e){return e()}:window.requestAnimationFrame}();function throttled(e,t){let n=[],r=!1;return function(...i){n=i,r||(r=!0,requestAnimFrame.call(window,()=>{r=!1,e.apply(t,n)}))}}function debounce(e,t){let n;return function(...r){return t?(clearTimeout(n),n=setTimeout(e,t,r)):e.apply(this,r),t}}const _toLeftRightCenter=e=>e==="start"?"left":e==="end"?"right":"center",_alignStartEnd=(e,t,n)=>e==="start"?t:e==="end"?n:(t+n)/2,_textX=(e,t,n,r)=>e===(r?"left":"right")?n:e==="center"?(t+n)/2:t,atEdge=e=>e===0||e===1,elasticIn=(e,t,n)=>-(Math.pow(2,10*(e-=1))*Math.sin((e-t)*TAU/n)),elasticOut=(e,t,n)=>Math.pow(2,-10*e)*Math.sin((e-t)*TAU/n)+1,effects={linear:e=>e,easeInQuad:e=>e*e,easeOutQuad:e=>-e*(e-2),easeInOutQuad:e=>(e/=.5)<1?.5*e*e:-.5*(--e*(e-2)-1),easeInCubic:e=>e*e*e,easeOutCubic:e=>(e-=1)*e*e+1,easeInOutCubic:e=>(e/=.5)<1?.5*e*e*e:.5*((e-=2)*e*e+2),easeInQuart:e=>e*e*e*e,easeOutQuart:e=>-((e-=1)*e*e*e-1),easeInOutQuart:e=>(e/=.5)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2),easeInQuint:e=>e*e*e*e*e,easeOutQuint:e=>(e-=1)*e*e*e*e+1,easeInOutQuint:e=>(e/=.5)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2),easeInSine:e=>-Math.cos(e*HALF_PI)+1,easeOutSine:e=>Math.sin(e*HALF_PI),easeInOutSine:e=>-.5*(Math.cos(PI*e)-1),easeInExpo:e=>e===0?0:Math.pow(2,10*(e-1)),easeOutExpo:e=>e===1?1:-Math.pow(2,-10*e)+1,easeInOutExpo:e=>atEdge(e)?e:e<.5?.5*Math.pow(2,10*(e*2-1)):.5*(-Math.pow(2,-10*(e*2-1))+2),easeInCirc:e=>e>=1?e:-(Math.sqrt(1-e*e)-1),easeOutCirc:e=>Math.sqrt(1-(e-=1)*e),easeInOutCirc:e=>(e/=.5)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1),easeInElastic:e=>atEdge(e)?e:elasticIn(e,.075,.3),easeOutElastic:e=>atEdge(e)?e:elasticOut(e,.075,.3),easeInOutElastic(e){return atEdge(e)?e:e<.5?.5*elasticIn(e*2,.1125,.45):.5+.5*elasticOut(e*2-1,.1125,.45)},easeInBack(e){return e*e*((1.70158+1)*e-1.70158)},easeOutBack(e){return(e-=1)*e*((1.70158+1)*e+1.70158)+1},easeInOutBack(e){let t=1.70158;return(e/=.5)<1?.5*(e*e*(((t*=1.525)+1)*e-t)):.5*((e-=2)*e*(((t*=1.525)+1)*e+t)+2)},easeInBounce:e=>1-effects.easeOutBounce(1-e),easeOutBounce(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},easeInOutBounce:e=>e<.5?effects.easeInBounce(e*2)*.5:effects.easeOutBounce(e*2-1)*.5+.5};function isPatternOrGradient(e){if(e&&typeof e=="object"){const t=e.toString();return t==="[object CanvasPattern]"||t==="[object CanvasGradient]"}return!1}function color(e){return isPatternOrGradient(e)?e:new Color(e)}function getHoverColor(e){return isPatternOrGradient(e)?e:new Color(e).saturate(.5).darken(.1).hexString()}const numbers=["x","y","borderWidth","radius","tension"],colors=["color","borderColor","backgroundColor"];function applyAnimationsDefaults(e){e.set("animation",{delay:void 0,duration:1e3,easing:"easeOutQuart",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0}),e.describe("animation",{_fallback:!1,_indexable:!1,_scriptable:t=>t!=="onProgress"&&t!=="onComplete"&&t!=="fn"}),e.set("animations",{colors:{type:"color",properties:colors},numbers:{type:"number",properties:numbers}}),e.describe("animations",{_fallback:"animation"}),e.set("transitions",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:"transparent"},visible:{type:"boolean",duration:0}}},hide:{animations:{colors:{to:"transparent"},visible:{type:"boolean",easing:"linear",fn:t=>t|0}}}})}function applyLayoutsDefaults(e){e.set("layout",{autoPadding:!0,padding:{top:0,right:0,bottom:0,left:0}})}const intlCache=new Map;function getNumberFormat(e,t){t=t||{};const n=e+JSON.stringify(t);let r=intlCache.get(n);return r||(r=new Intl.NumberFormat(e,t),intlCache.set(n,r)),r}function formatNumber(e,t,n){return getNumberFormat(t,n).format(e)}const formatters={values(e){return isArray(e)?e:""+e},numeric(e,t,n){if(e===0)return"0";const r=this.chart.options.locale;let i,s=e;if(n.length>1){const f=Math.max(Math.abs(n[0].value),Math.abs(n[n.length-1].value));(f<1e-4||f>1e15)&&(i="scientific"),s=calculateDelta(e,n)}const o=log10(Math.abs(s)),l=isNaN(o)?1:Math.max(Math.min(-1*Math.floor(o),20),0),c={notation:i,minimumFractionDigits:l,maximumFractionDigits:l};return Object.assign(c,this.options.ticks.format),formatNumber(e,r,c)},logarithmic(e,t,n){if(e===0)return"0";const r=n[t].significand||e/Math.pow(10,Math.floor(log10(e)));return[1,2,3,5,10,15].includes(r)||t>.8*n.length?formatters.numeric.call(this,e,t,n):""}};function calculateDelta(e,t){let n=t.length>3?t[2].value-t[1].value:t[1].value-t[0].value;return Math.abs(n)>=1&&e!==Math.floor(e)&&(n=e-Math.floor(e)),n}var Ticks={formatters};function applyScaleDefaults(e){e.set("scale",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:"ticks",clip:!0,grace:0,grid:{display:!0,lineWidth:1,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,n)=>n.lineWidth,tickColor:(t,n)=>n.color,offset:!1},border:{display:!0,dash:[],dashOffset:0,width:1},title:{display:!1,text:"",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:"",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:Ticks.formatters.values,minor:{},major:{},align:"center",crossAlign:"near",showLabelBackdrop:!1,backdropColor:"rgba(255, 255, 255, 0.75)",backdropPadding:2}}),e.route("scale.ticks","color","","color"),e.route("scale.grid","color","","borderColor"),e.route("scale.border","color","","borderColor"),e.route("scale.title","color","","color"),e.describe("scale",{_fallback:!1,_scriptable:t=>!t.startsWith("before")&&!t.startsWith("after")&&t!=="callback"&&t!=="parser",_indexable:t=>t!=="borderDash"&&t!=="tickBorderDash"&&t!=="dash"}),e.describe("scales",{_fallback:"scale"}),e.describe("scale.ticks",{_scriptable:t=>t!=="backdropPadding"&&t!=="callback",_indexable:t=>t!=="backdropPadding"})}const overrides=Object.create(null),descriptors=Object.create(null);function getScope$1(e,t){if(!t)return e;const n=t.split(".");for(let r=0,i=n.length;r<i;++r){const s=n[r];e=e[s]||(e[s]=Object.create(null))}return e}function set(e,t,n){return typeof t=="string"?merge(getScope$1(e,t),n):merge(getScope$1(e,""),t)}class Defaults{constructor(t,n){this.animation=void 0,this.backgroundColor="rgba(0,0,0,0.1)",this.borderColor="rgba(0,0,0,0.1)",this.color="#666",this.datasets={},this.devicePixelRatio=r=>r.chart.platform.getDevicePixelRatio(),this.elements={},this.events=["mousemove","mouseout","click","touchstart","touchmove"],this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:"normal",lineHeight:1.2,weight:null},this.hover={},this.hoverBackgroundColor=(r,i)=>getHoverColor(i.backgroundColor),this.hoverBorderColor=(r,i)=>getHoverColor(i.borderColor),this.hoverColor=(r,i)=>getHoverColor(i.color),this.indexAxis="x",this.interaction={mode:"nearest",intersect:!0,includeInvisible:!1},this.maintainAspectRatio=!0,this.onHover=null,this.onClick=null,this.parsing=!0,this.plugins={},this.responsive=!0,this.scale=void 0,this.scales={},this.showLine=!0,this.drawActiveElementsOnTop=!0,this.describe(t),this.apply(n)}set(t,n){return set(this,t,n)}get(t){return getScope$1(this,t)}describe(t,n){return set(descriptors,t,n)}override(t,n){return set(overrides,t,n)}route(t,n,r,i){const s=getScope$1(this,t),o=getScope$1(this,r),l="_"+n;Object.defineProperties(s,{[l]:{value:s[n],writable:!0},[n]:{enumerable:!0,get(){const c=this[l],f=o[i];return isObject(c)?Object.assign({},f,c):valueOrDefault(c,f)},set(c){this[l]=c}}})}apply(t){t.forEach(n=>n(this))}}var defaults=new Defaults({_scriptable:e=>!e.startsWith("on"),_indexable:e=>e!=="events",hover:{_fallback:"interaction"},interaction:{_scriptable:!1,_indexable:!1}},[applyAnimationsDefaults,applyLayoutsDefaults,applyScaleDefaults]);function toFontString(e){return!e||isNullOrUndef(e.size)||isNullOrUndef(e.family)?null:(e.style?e.style+" ":"")+(e.weight?e.weight+" ":"")+e.size+"px "+e.family}function _measureText(e,t,n,r,i){let s=t[i];return s||(s=t[i]=e.measureText(i).width,n.push(i)),s>r&&(r=s),r}function _alignPixel(e,t,n){const r=e.currentDevicePixelRatio,i=n!==0?Math.max(n/2,.5):0;return Math.round((t-i)*r)/r+i}function clearCanvas(e,t){!t&&!e||(t=t||e.getContext("2d"),t.save(),t.resetTransform(),t.clearRect(0,0,e.width,e.height),t.restore())}function drawPoint(e,t,n,r){drawPointLegend(e,t,n,r,null)}function drawPointLegend(e,t,n,r,i){let s,o,l,c,f,h,p,g;const x=t.pointStyle,D=t.rotation,y=t.radius;let E=(D||0)*RAD_PER_DEG;if(x&&typeof x=="object"&&(s=x.toString(),s==="[object HTMLImageElement]"||s==="[object HTMLCanvasElement]")){e.save(),e.translate(n,r),e.rotate(E),e.drawImage(x,-x.width/2,-x.height/2,x.width,x.height),e.restore();return}if(!(isNaN(y)||y<=0)){switch(e.beginPath(),x){default:i?e.ellipse(n,r,i/2,y,0,0,TAU):e.arc(n,r,y,0,TAU),e.closePath();break;case"triangle":h=i?i/2:y,e.moveTo(n+Math.sin(E)*h,r-Math.cos(E)*y),E+=TWO_THIRDS_PI,e.lineTo(n+Math.sin(E)*h,r-Math.cos(E)*y),E+=TWO_THIRDS_PI,e.lineTo(n+Math.sin(E)*h,r-Math.cos(E)*y),e.closePath();break;case"rectRounded":f=y*.516,c=y-f,o=Math.cos(E+QUARTER_PI)*c,p=Math.cos(E+QUARTER_PI)*(i?i/2-f:c),l=Math.sin(E+QUARTER_PI)*c,g=Math.sin(E+QUARTER_PI)*(i?i/2-f:c),e.arc(n-p,r-l,f,E-PI,E-HALF_PI),e.arc(n+g,r-o,f,E-HALF_PI,E),e.arc(n+p,r+l,f,E,E+HALF_PI),e.arc(n-g,r+o,f,E+HALF_PI,E+PI),e.closePath();break;case"rect":if(!D){c=Math.SQRT1_2*y,h=i?i/2:c,e.rect(n-h,r-c,2*h,2*c);break}E+=QUARTER_PI;case"rectRot":p=Math.cos(E)*(i?i/2:y),o=Math.cos(E)*y,l=Math.sin(E)*y,g=Math.sin(E)*(i?i/2:y),e.moveTo(n-p,r-l),e.lineTo(n+g,r-o),e.lineTo(n+p,r+l),e.lineTo(n-g,r+o),e.closePath();break;case"crossRot":E+=QUARTER_PI;case"cross":p=Math.cos(E)*(i?i/2:y),o=Math.cos(E)*y,l=Math.sin(E)*y,g=Math.sin(E)*(i?i/2:y),e.moveTo(n-p,r-l),e.lineTo(n+p,r+l),e.moveTo(n+g,r-o),e.lineTo(n-g,r+o);break;case"star":p=Math.cos(E)*(i?i/2:y),o=Math.cos(E)*y,l=Math.sin(E)*y,g=Math.sin(E)*(i?i/2:y),e.moveTo(n-p,r-l),e.lineTo(n+p,r+l),e.moveTo(n+g,r-o),e.lineTo(n-g,r+o),E+=QUARTER_PI,p=Math.cos(E)*(i?i/2:y),o=Math.cos(E)*y,l=Math.sin(E)*y,g=Math.sin(E)*(i?i/2:y),e.moveTo(n-p,r-l),e.lineTo(n+p,r+l),e.moveTo(n+g,r-o),e.lineTo(n-g,r+o);break;case"line":o=i?i/2:Math.cos(E)*y,l=Math.sin(E)*y,e.moveTo(n-o,r-l),e.lineTo(n+o,r+l);break;case"dash":e.moveTo(n,r),e.lineTo(n+Math.cos(E)*(i?i/2:y),r+Math.sin(E)*y);break;case!1:e.closePath();break}e.fill(),t.borderWidth>0&&e.stroke()}}function _isPointInArea(e,t,n){return n=n||.5,!t||e&&e.x>t.left-n&&e.x<t.right+n&&e.y>t.top-n&&e.y<t.bottom+n}function clipArea(e,t){e.save(),e.beginPath(),e.rect(t.left,t.top,t.right-t.left,t.bottom-t.top),e.clip()}function unclipArea(e){e.restore()}function setRenderOpts(e,t){t.translation&&e.translate(t.translation[0],t.translation[1]),isNullOrUndef(t.rotation)||e.rotate(t.rotation),t.color&&(e.fillStyle=t.color),t.textAlign&&(e.textAlign=t.textAlign),t.textBaseline&&(e.textBaseline=t.textBaseline)}function decorateText(e,t,n,r,i){if(i.strikethrough||i.underline){const s=e.measureText(r),o=t-s.actualBoundingBoxLeft,l=t+s.actualBoundingBoxRight,c=n-s.actualBoundingBoxAscent,f=n+s.actualBoundingBoxDescent,h=i.strikethrough?(c+f)/2:f;e.strokeStyle=e.fillStyle,e.beginPath(),e.lineWidth=i.decorationWidth||2,e.moveTo(o,h),e.lineTo(l,h),e.stroke()}}function drawBackdrop(e,t){const n=e.fillStyle;e.fillStyle=t.color,e.fillRect(t.left,t.top,t.width,t.height),e.fillStyle=n}function renderText(e,t,n,r,i,s={}){const o=isArray(t)?t:[t],l=s.strokeWidth>0&&s.strokeColor!=="";let c,f;for(e.save(),e.font=i.string,setRenderOpts(e,s),c=0;c<o.length;++c)f=o[c],s.backdrop&&drawBackdrop(e,s.backdrop),l&&(s.strokeColor&&(e.strokeStyle=s.strokeColor),isNullOrUndef(s.strokeWidth)||(e.lineWidth=s.strokeWidth),e.strokeText(f,n,r,s.maxWidth)),e.fillText(f,n,r,s.maxWidth),decorateText(e,n,r,f,s),r+=Number(i.lineHeight);e.restore()}function addRoundedRectPath(e,t){const{x:n,y:r,w:i,h:s,radius:o}=t;e.arc(n+o.topLeft,r+o.topLeft,o.topLeft,1.5*PI,PI,!0),e.lineTo(n,r+s-o.bottomLeft),e.arc(n+o.bottomLeft,r+s-o.bottomLeft,o.bottomLeft,PI,HALF_PI,!0),e.lineTo(n+i-o.bottomRight,r+s),e.arc(n+i-o.bottomRight,r+s-o.bottomRight,o.bottomRight,HALF_PI,0,!0),e.lineTo(n+i,r+o.topRight),e.arc(n+i-o.topRight,r+o.topRight,o.topRight,0,-HALF_PI,!0),e.lineTo(n+o.topLeft,r)}const LINE_HEIGHT=/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,FONT_STYLE=/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;function toLineHeight(e,t){const n=(""+e).match(LINE_HEIGHT);if(!n||n[1]==="normal")return t*1.2;switch(e=+n[2],n[3]){case"px":return e;case"%":e/=100;break}return t*e}const numberOrZero=e=>+e||0;function _readValueToProps(e,t){const n={},r=isObject(t),i=r?Object.keys(t):t,s=isObject(e)?r?o=>valueOrDefault(e[o],e[t[o]]):o=>e[o]:()=>e;for(const o of i)n[o]=numberOrZero(s(o));return n}function toTRBL(e){return _readValueToProps(e,{top:"y",right:"x",bottom:"y",left:"x"})}function toTRBLCorners(e){return _readValueToProps(e,["topLeft","topRight","bottomLeft","bottomRight"])}function toPadding(e){const t=toTRBL(e);return t.width=t.left+t.right,t.height=t.top+t.bottom,t}function toFont(e,t){e=e||{},t=t||defaults.font;let n=valueOrDefault(e.size,t.size);typeof n=="string"&&(n=parseInt(n,10));let r=valueOrDefault(e.style,t.style);r&&!(""+r).match(FONT_STYLE)&&(console.warn('Invalid font style specified: "'+r+'"'),r=void 0);const i={family:valueOrDefault(e.family,t.family),lineHeight:toLineHeight(valueOrDefault(e.lineHeight,t.lineHeight),n),size:n,style:r,weight:valueOrDefault(e.weight,t.weight),string:""};return i.string=toFontString(i),i}function resolve(e,t,n,r){let i,s,o;for(i=0,s=e.length;i<s;++i)if(o=e[i],o!==void 0&&o!==void 0)return o}function _addGrace(e,t,n){const{min:r,max:i}=e,s=toDimension(t,(i-r)/2),o=(l,c)=>n&&l===0?0:l+c;return{min:o(r,-Math.abs(s)),max:o(i,s)}}function createContext(e,t){return Object.assign(Object.create(e),t)}function _createResolver(e,t=[""],n,r,i=()=>e[0]){const s=n||e;typeof r>"u"&&(r=_resolve("_fallback",e));const o={[Symbol.toStringTag]:"Object",_cacheable:!0,_scopes:e,_rootScopes:s,_fallback:r,_getTarget:i,override:l=>_createResolver([l,...e],t,s,r)};return new Proxy(o,{deleteProperty(l,c){return delete l[c],delete l._keys,delete e[0][c],!0},get(l,c){return _cached(l,c,()=>_resolveWithPrefixes(c,t,e,l))},getOwnPropertyDescriptor(l,c){return Reflect.getOwnPropertyDescriptor(l._scopes[0],c)},getPrototypeOf(){return Reflect.getPrototypeOf(e[0])},has(l,c){return getKeysFromAllScopes(l).includes(c)},ownKeys(l){return getKeysFromAllScopes(l)},set(l,c,f){const h=l._storage||(l._storage=i());return l[c]=h[c]=f,delete l._keys,!0}})}function _attachContext(e,t,n,r){const i={_cacheable:!1,_proxy:e,_context:t,_subProxy:n,_stack:new Set,_descriptors:_descriptors(e,r),setContext:s=>_attachContext(e,s,n,r),override:s=>_attachContext(e.override(s),t,n,r)};return new Proxy(i,{deleteProperty(s,o){return delete s[o],delete e[o],!0},get(s,o,l){return _cached(s,o,()=>_resolveWithContext(s,o,l))},getOwnPropertyDescriptor(s,o){return s._descriptors.allKeys?Reflect.has(e,o)?{enumerable:!0,configurable:!0}:void 0:Reflect.getOwnPropertyDescriptor(e,o)},getPrototypeOf(){return Reflect.getPrototypeOf(e)},has(s,o){return Reflect.has(e,o)},ownKeys(){return Reflect.ownKeys(e)},set(s,o,l){return e[o]=l,delete s[o],!0}})}function _descriptors(e,t={scriptable:!0,indexable:!0}){const{_scriptable:n=t.scriptable,_indexable:r=t.indexable,_allKeys:i=t.allKeys}=e;return{allKeys:i,scriptable:n,indexable:r,isScriptable:isFunction(n)?n:()=>n,isIndexable:isFunction(r)?r:()=>r}}const readKey=(e,t)=>e?e+_capitalize(t):t,needsSubResolver=(e,t)=>isObject(t)&&e!=="adapters"&&(Object.getPrototypeOf(t)===null||t.constructor===Object);function _cached(e,t,n){if(Object.prototype.hasOwnProperty.call(e,t)||t==="constructor")return e[t];const r=n();return e[t]=r,r}function _resolveWithContext(e,t,n){const{_proxy:r,_context:i,_subProxy:s,_descriptors:o}=e;let l=r[t];return isFunction(l)&&o.isScriptable(t)&&(l=_resolveScriptable(t,l,e,n)),isArray(l)&&l.length&&(l=_resolveArray(t,l,e,o.isIndexable)),needsSubResolver(t,l)&&(l=_attachContext(l,i,s&&s[t],o)),l}function _resolveScriptable(e,t,n,r){const{_proxy:i,_context:s,_subProxy:o,_stack:l}=n;if(l.has(e))throw new Error("Recursion detected: "+Array.from(l).join("->")+"->"+e);l.add(e);let c=t(s,o||r);return l.delete(e),needsSubResolver(e,c)&&(c=createSubResolver(i._scopes,i,e,c)),c}function _resolveArray(e,t,n,r){const{_proxy:i,_context:s,_subProxy:o,_descriptors:l}=n;if(typeof s.index<"u"&&r(e))return t[s.index%t.length];if(isObject(t[0])){const c=t,f=i._scopes.filter(h=>h!==c);t=[];for(const h of c){const p=createSubResolver(f,i,e,h);t.push(_attachContext(p,s,o&&o[e],l))}}return t}function resolveFallback(e,t,n){return isFunction(e)?e(t,n):e}const getScope=(e,t)=>e===!0?t:typeof e=="string"?resolveObjectKey(t,e):void 0;function addScopes(e,t,n,r,i){for(const s of t){const o=getScope(n,s);if(o){e.add(o);const l=resolveFallback(o._fallback,n,i);if(typeof l<"u"&&l!==n&&l!==r)return l}else if(o===!1&&typeof r<"u"&&n!==r)return null}return!1}function createSubResolver(e,t,n,r){const i=t._rootScopes,s=resolveFallback(t._fallback,n,r),o=[...e,...i],l=new Set;l.add(r);let c=addScopesFromKey(l,o,n,s||n,r);return c===null||typeof s<"u"&&s!==n&&(c=addScopesFromKey(l,o,s,c,r),c===null)?!1:_createResolver(Array.from(l),[""],i,s,()=>subGetTarget(t,n,r))}function addScopesFromKey(e,t,n,r,i){for(;n;)n=addScopes(e,t,n,r,i);return n}function subGetTarget(e,t,n){const r=e._getTarget();t in r||(r[t]={});const i=r[t];return isArray(i)&&isObject(n)?n:i||{}}function _resolveWithPrefixes(e,t,n,r){let i;for(const s of t)if(i=_resolve(readKey(s,e),n),typeof i<"u")return needsSubResolver(e,i)?createSubResolver(n,r,e,i):i}function _resolve(e,t){for(const n of t){if(!n)continue;const r=n[e];if(typeof r<"u")return r}}function getKeysFromAllScopes(e){let t=e._keys;return t||(t=e._keys=resolveKeysFromAllScopes(e._scopes)),t}function resolveKeysFromAllScopes(e){const t=new Set;for(const n of e)for(const r of Object.keys(n).filter(i=>!i.startsWith("_")))t.add(r);return Array.from(t)}function _isDomSupported(){return typeof window<"u"&&typeof document<"u"}function _getParentNode(e){let t=e.parentNode;return t&&t.toString()==="[object ShadowRoot]"&&(t=t.host),t}function parseMaxStyle(e,t,n){let r;return typeof e=="string"?(r=parseInt(e,10),e.indexOf("%")!==-1&&(r=r/100*t.parentNode[n])):r=e,r}const getComputedStyle=e=>e.ownerDocument.defaultView.getComputedStyle(e,null);function getStyle(e,t){return getComputedStyle(e).getPropertyValue(t)}const positions=["top","right","bottom","left"];function getPositionedStyle(e,t,n){const r={};n=n?"-"+n:"";for(let i=0;i<4;i++){const s=positions[i];r[s]=parseFloat(e[t+"-"+s+n])||0}return r.width=r.left+r.right,r.height=r.top+r.bottom,r}const useOffsetPos=(e,t,n)=>(e>0||t>0)&&(!n||!n.shadowRoot);function getCanvasPosition(e,t){const n=e.touches,r=n&&n.length?n[0]:e,{offsetX:i,offsetY:s}=r;let o=!1,l,c;if(useOffsetPos(i,s,e.target))l=i,c=s;else{const f=t.getBoundingClientRect();l=r.clientX-f.left,c=r.clientY-f.top,o=!0}return{x:l,y:c,box:o}}function getRelativePosition(e,t){if("native"in e)return e;const{canvas:n,currentDevicePixelRatio:r}=t,i=getComputedStyle(n),s=i.boxSizing==="border-box",o=getPositionedStyle(i,"padding"),l=getPositionedStyle(i,"border","width"),{x:c,y:f,box:h}=getCanvasPosition(e,n),p=o.left+(h&&l.left),g=o.top+(h&&l.top);let{width:x,height:D}=t;return s&&(x-=o.width+l.width,D-=o.height+l.height),{x:Math.round((c-p)/x*n.width/r),y:Math.round((f-g)/D*n.height/r)}}function getContainerSize(e,t,n){let r,i;if(t===void 0||n===void 0){const s=e&&_getParentNode(e);if(!s)t=e.clientWidth,n=e.clientHeight;else{const o=s.getBoundingClientRect(),l=getComputedStyle(s),c=getPositionedStyle(l,"border","width"),f=getPositionedStyle(l,"padding");t=o.width-f.width-c.width,n=o.height-f.height-c.height,r=parseMaxStyle(l.maxWidth,s,"clientWidth"),i=parseMaxStyle(l.maxHeight,s,"clientHeight")}}return{width:t,height:n,maxWidth:r||INFINITY,maxHeight:i||INFINITY}}const round1=e=>Math.round(e*10)/10;function getMaximumSize(e,t,n,r){const i=getComputedStyle(e),s=getPositionedStyle(i,"margin"),o=parseMaxStyle(i.maxWidth,e,"clientWidth")||INFINITY,l=parseMaxStyle(i.maxHeight,e,"clientHeight")||INFINITY,c=getContainerSize(e,t,n);let{width:f,height:h}=c;if(i.boxSizing==="content-box"){const g=getPositionedStyle(i,"border","width"),x=getPositionedStyle(i,"padding");f-=x.width+g.width,h-=x.height+g.height}return f=Math.max(0,f-s.width),h=Math.max(0,r?f/r:h-s.height),f=round1(Math.min(f,o,c.maxWidth)),h=round1(Math.min(h,l,c.maxHeight)),f&&!h&&(h=round1(f/2)),(t!==void 0||n!==void 0)&&r&&c.height&&h>c.height&&(h=c.height,f=round1(Math.floor(h*r))),{width:f,height:h}}function retinaScale(e,t,n){const r=t||1,i=Math.floor(e.height*r),s=Math.floor(e.width*r);e.height=Math.floor(e.height),e.width=Math.floor(e.width);const o=e.canvas;return o.style&&(n||!o.style.height&&!o.style.width)&&(o.style.height=`${e.height}px`,o.style.width=`${e.width}px`),e.currentDevicePixelRatio!==r||o.height!==i||o.width!==s?(e.currentDevicePixelRatio=r,o.height=i,o.width=s,e.ctx.setTransform(r,0,0,r,0,0),!0):!1}const supportsEventListenerOptions=function(){let e=!1;try{const t={get passive(){return e=!0,!1}};_isDomSupported()&&(window.addEventListener("test",null,t),window.removeEventListener("test",null,t))}catch{}return e}();function readUsedSize(e,t){const n=getStyle(e,t),r=n&&n.match(/^(\d+)(\.\d+)?px$/);return r?+r[1]:void 0}const getRightToLeftAdapter=function(e,t){return{x(n){return e+e+t-n},setWidth(n){t=n},textAlign(n){return n==="center"?n:n==="right"?"left":"right"},xPlus(n,r){return n-r},leftForLtr(n,r){return n-r}}},getLeftToRightAdapter=function(){return{x(e){return e},setWidth(e){},textAlign(e){return e},xPlus(e,t){return e+t},leftForLtr(e,t){return e}}};function getRtlAdapter(e,t,n){return e?getRightToLeftAdapter(t,n):getLeftToRightAdapter()}function overrideTextDirection(e,t){let n,r;(t==="ltr"||t==="rtl")&&(n=e.canvas.style,r=[n.getPropertyValue("direction"),n.getPropertyPriority("direction")],n.setProperty("direction",t,"important"),e.prevTextDirection=r)}function restoreTextDirection(e,t){t!==void 0&&(delete e.prevTextDirection,e.canvas.style.setProperty("direction",t[0],t[1]))}/*!
 * Chart.js v4.4.7
 * https://www.chartjs.org
 * (c) 2024 Chart.js Contributors
 * Released under the MIT License
 */class Animator{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,n,r,i){const s=n.listeners[i],o=n.duration;s.forEach(l=>l({chart:t,initial:n.initial,numSteps:o,currentStep:Math.min(r-n.start,o)}))}_refresh(){this._request||(this._running=!0,this._request=requestAnimFrame.call(window,()=>{this._update(),this._request=null,this._running&&this._refresh()}))}_update(t=Date.now()){let n=0;this._charts.forEach((r,i)=>{if(!r.running||!r.items.length)return;const s=r.items;let o=s.length-1,l=!1,c;for(;o>=0;--o)c=s[o],c._active?(c._total>r.duration&&(r.duration=c._total),c.tick(t),l=!0):(s[o]=s[s.length-1],s.pop());l&&(i.draw(),this._notify(i,r,t,"progress")),s.length||(r.running=!1,this._notify(i,r,t,"complete"),r.initial=!1),n+=s.length}),this._lastDate=t,n===0&&(this._running=!1)}_getAnims(t){const n=this._charts;let r=n.get(t);return r||(r={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},n.set(t,r)),r}listen(t,n,r){this._getAnims(t).listeners[n].push(r)}add(t,n){!n||!n.length||this._getAnims(t).items.push(...n)}has(t){return this._getAnims(t).items.length>0}start(t){const n=this._charts.get(t);n&&(n.running=!0,n.start=Date.now(),n.duration=n.items.reduce((r,i)=>Math.max(r,i._duration),0),this._refresh())}running(t){if(!this._running)return!1;const n=this._charts.get(t);return!(!n||!n.running||!n.items.length)}stop(t){const n=this._charts.get(t);if(!n||!n.items.length)return;const r=n.items;let i=r.length-1;for(;i>=0;--i)r[i].cancel();n.items=[],this._notify(t,n,Date.now(),"complete")}remove(t){return this._charts.delete(t)}}var animator=new Animator;const transparent="transparent",interpolators={boolean(e,t,n){return n>.5?t:e},color(e,t,n){const r=color(e||transparent),i=r.valid&&color(t||transparent);return i&&i.valid?i.mix(r,n).hexString():t},number(e,t,n){return e+(t-e)*n}};class Animation{constructor(t,n,r,i){const s=n[r];i=resolve([t.to,i,s,t.from]);const o=resolve([t.from,s,i]);this._active=!0,this._fn=t.fn||interpolators[t.type||typeof o],this._easing=effects[t.easing]||effects.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=n,this._prop=r,this._from=o,this._to=i,this._promises=void 0}active(){return this._active}update(t,n,r){if(this._active){this._notify(!1);const i=this._target[this._prop],s=r-this._start,o=this._duration-s;this._start=r,this._duration=Math.floor(Math.max(o,t.duration)),this._total+=s,this._loop=!!t.loop,this._to=resolve([t.to,n,i,t.from]),this._from=resolve([t.from,i,n])}}cancel(){this._active&&(this.tick(Date.now()),this._active=!1,this._notify(!1))}tick(t){const n=t-this._start,r=this._duration,i=this._prop,s=this._from,o=this._loop,l=this._to;let c;if(this._active=s!==l&&(o||n<r),!this._active){this._target[i]=l,this._notify(!0);return}if(n<0){this._target[i]=s;return}c=n/r%2,c=o&&c>1?2-c:c,c=this._easing(Math.min(1,Math.max(0,c))),this._target[i]=this._fn(s,l,c)}wait(){const t=this._promises||(this._promises=[]);return new Promise((n,r)=>{t.push({res:n,rej:r})})}_notify(t){const n=t?"res":"rej",r=this._promises||[];for(let i=0;i<r.length;i++)r[i][n]()}}class Animations{constructor(t,n){this._chart=t,this._properties=new Map,this.configure(n)}configure(t){if(!isObject(t))return;const n=Object.keys(defaults.animation),r=this._properties;Object.getOwnPropertyNames(t).forEach(i=>{const s=t[i];if(!isObject(s))return;const o={};for(const l of n)o[l]=s[l];(isArray(s.properties)&&s.properties||[i]).forEach(l=>{(l===i||!r.has(l))&&r.set(l,o)})})}_animateOptions(t,n){const r=n.options,i=resolveTargetOptions(t,r);if(!i)return[];const s=this._createAnimations(i,r);return r.$shared&&awaitAll(t.options.$animations,r).then(()=>{t.options=r},()=>{}),s}_createAnimations(t,n){const r=this._properties,i=[],s=t.$animations||(t.$animations={}),o=Object.keys(n),l=Date.now();let c;for(c=o.length-1;c>=0;--c){const f=o[c];if(f.charAt(0)==="$")continue;if(f==="options"){i.push(...this._animateOptions(t,n));continue}const h=n[f];let p=s[f];const g=r.get(f);if(p)if(g&&p.active()){p.update(g,h,l);continue}else p.cancel();if(!g||!g.duration){t[f]=h;continue}s[f]=p=new Animation(g,t,f,h),i.push(p)}return i}update(t,n){if(this._properties.size===0){Object.assign(t,n);return}const r=this._createAnimations(t,n);if(r.length)return animator.add(this._chart,r),!0}}function awaitAll(e,t){const n=[],r=Object.keys(t);for(let i=0;i<r.length;i++){const s=e[r[i]];s&&s.active()&&n.push(s.wait())}return Promise.all(n)}function resolveTargetOptions(e,t){if(!t)return;let n=e.options;if(!n){e.options=t;return}return n.$shared&&(e.options=n=Object.assign({},n,{$shared:!1,$animations:{}})),n}function scaleClip(e,t){const n=e&&e.options||{},r=n.reverse,i=n.min===void 0?t:0,s=n.max===void 0?t:0;return{start:r?s:i,end:r?i:s}}function defaultClip(e,t,n){if(n===!1)return!1;const r=scaleClip(e,n),i=scaleClip(t,n);return{top:i.end,right:r.end,bottom:i.start,left:r.start}}function toClip(e){let t,n,r,i;return isObject(e)?(t=e.top,n=e.right,r=e.bottom,i=e.left):t=n=r=i=e,{top:t,right:n,bottom:r,left:i,disabled:e===!1}}function getSortedDatasetIndices(e,t){const n=[],r=e._getSortedDatasetMetas(t);let i,s;for(i=0,s=r.length;i<s;++i)n.push(r[i].index);return n}function applyStack(e,t,n,r={}){const i=e.keys,s=r.mode==="single";let o,l,c,f;if(t===null)return;let h=!1;for(o=0,l=i.length;o<l;++o){if(c=+i[o],c===n){if(h=!0,r.all)continue;break}f=e.values[c],isNumberFinite(f)&&(s||t===0||sign(t)===sign(f))&&(t+=f)}return!h&&!r.all?0:t}function convertObjectDataToArray(e,t){const{iScale:n,vScale:r}=t,i=n.axis==="x"?"x":"y",s=r.axis==="x"?"x":"y",o=Object.keys(e),l=new Array(o.length);let c,f,h;for(c=0,f=o.length;c<f;++c)h=o[c],l[c]={[i]:h,[s]:e[h]};return l}function isStacked(e,t){const n=e&&e.options.stacked;return n||n===void 0&&t.stack!==void 0}function getStackKey(e,t,n){return`${e.id}.${t.id}.${n.stack||n.type}`}function getUserBounds(e){const{min:t,max:n,minDefined:r,maxDefined:i}=e.getUserBounds();return{min:r?t:Number.NEGATIVE_INFINITY,max:i?n:Number.POSITIVE_INFINITY}}function getOrCreateStack(e,t,n){const r=e[t]||(e[t]={});return r[n]||(r[n]={})}function getLastIndexInStack(e,t,n,r){for(const i of t.getMatchingVisibleMetas(r).reverse()){const s=e[i.index];if(n&&s>0||!n&&s<0)return i.index}return null}function updateStacks(e,t){const{chart:n,_cachedMeta:r}=e,i=n._stacks||(n._stacks={}),{iScale:s,vScale:o,index:l}=r,c=s.axis,f=o.axis,h=getStackKey(s,o,r),p=t.length;let g;for(let x=0;x<p;++x){const D=t[x],{[c]:y,[f]:E}=D,F=D._stacks||(D._stacks={});g=F[f]=getOrCreateStack(i,h,y),g[l]=E,g._top=getLastIndexInStack(g,o,!0,r.type),g._bottom=getLastIndexInStack(g,o,!1,r.type);const B=g._visualValues||(g._visualValues={});B[l]=E}}function getFirstScaleId(e,t){const n=e.scales;return Object.keys(n).filter(r=>n[r].axis===t).shift()}function createDatasetContext(e,t){return createContext(e,{active:!1,dataset:void 0,datasetIndex:t,index:t,mode:"default",type:"dataset"})}function createDataContext(e,t,n){return createContext(e,{active:!1,dataIndex:t,parsed:void 0,raw:void 0,element:n,index:t,mode:"default",type:"data"})}function clearStacks(e,t){const n=e.controller.index,r=e.vScale&&e.vScale.axis;if(r){t=t||e._parsed;for(const i of t){const s=i._stacks;if(!s||s[r]===void 0||s[r][n]===void 0)return;delete s[r][n],s[r]._visualValues!==void 0&&s[r]._visualValues[n]!==void 0&&delete s[r]._visualValues[n]}}}const isDirectUpdateMode=e=>e==="reset"||e==="none",cloneIfNotShared=(e,t)=>t?e:Object.assign({},e),createStack=(e,t,n)=>e&&!t.hidden&&t._stacked&&{keys:getSortedDatasetIndices(n,!0),values:null};class DatasetController{constructor(t,n){this.chart=t,this._ctx=t.ctx,this.index=n,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.supportsDecimation=!1,this.$context=void 0,this._syncList=[],this.datasetElementType=new.target.datasetElementType,this.dataElementType=new.target.dataElementType,this.initialize()}initialize(){const t=this._cachedMeta;this.configure(),this.linkScales(),t._stacked=isStacked(t.vScale,t),this.addElements(),this.options.fill&&!this.chart.isPluginEnabled("filler")&&console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options")}updateIndex(t){this.index!==t&&clearStacks(this._cachedMeta),this.index=t}linkScales(){const t=this.chart,n=this._cachedMeta,r=this.getDataset(),i=(p,g,x,D)=>p==="x"?g:p==="r"?D:x,s=n.xAxisID=valueOrDefault(r.xAxisID,getFirstScaleId(t,"x")),o=n.yAxisID=valueOrDefault(r.yAxisID,getFirstScaleId(t,"y")),l=n.rAxisID=valueOrDefault(r.rAxisID,getFirstScaleId(t,"r")),c=n.indexAxis,f=n.iAxisID=i(c,s,o,l),h=n.vAxisID=i(c,o,s,l);n.xScale=this.getScaleForId(s),n.yScale=this.getScaleForId(o),n.rScale=this.getScaleForId(l),n.iScale=this.getScaleForId(f),n.vScale=this.getScaleForId(h)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const n=this._cachedMeta;return t===n.iScale?n.vScale:n.iScale}reset(){this._update("reset")}_destroy(){const t=this._cachedMeta;this._data&&unlistenArrayEvents(this._data,this),t._stacked&&clearStacks(t)}_dataCheck(){const t=this.getDataset(),n=t.data||(t.data=[]),r=this._data;if(isObject(n)){const i=this._cachedMeta;this._data=convertObjectDataToArray(n,i)}else if(r!==n){if(r){unlistenArrayEvents(r,this);const i=this._cachedMeta;clearStacks(i),i._parsed=[]}n&&Object.isExtensible(n)&&listenArrayEvents(n,this),this._syncList=[],this._data=n}}addElements(){const t=this._cachedMeta;this._dataCheck(),this.datasetElementType&&(t.dataset=new this.datasetElementType)}buildOrUpdateElements(t){const n=this._cachedMeta,r=this.getDataset();let i=!1;this._dataCheck();const s=n._stacked;n._stacked=isStacked(n.vScale,n),n.stack!==r.stack&&(i=!0,clearStacks(n),n.stack=r.stack),this._resyncElements(t),(i||s!==n._stacked)&&(updateStacks(this,n._parsed),n._stacked=isStacked(n.vScale,n))}configure(){const t=this.chart.config,n=t.datasetScopeKeys(this._type),r=t.getOptionScopes(this.getDataset(),n,!0);this.options=t.createResolver(r,this.getContext()),this._parsing=this.options.parsing,this._cachedDataOpts={}}parse(t,n){const{_cachedMeta:r,_data:i}=this,{iScale:s,_stacked:o}=r,l=s.axis;let c=t===0&&n===i.length?!0:r._sorted,f=t>0&&r._parsed[t-1],h,p,g;if(this._parsing===!1)r._parsed=i,r._sorted=!0,g=i;else{isArray(i[t])?g=this.parseArrayData(r,i,t,n):isObject(i[t])?g=this.parseObjectData(r,i,t,n):g=this.parsePrimitiveData(r,i,t,n);const x=()=>p[l]===null||f&&p[l]<f[l];for(h=0;h<n;++h)r._parsed[h+t]=p=g[h],c&&(x()&&(c=!1),f=p);r._sorted=c}o&&updateStacks(this,g)}parsePrimitiveData(t,n,r,i){const{iScale:s,vScale:o}=t,l=s.axis,c=o.axis,f=s.getLabels(),h=s===o,p=new Array(i);let g,x,D;for(g=0,x=i;g<x;++g)D=g+r,p[g]={[l]:h||s.parse(f[D],D),[c]:o.parse(n[D],D)};return p}parseArrayData(t,n,r,i){const{xScale:s,yScale:o}=t,l=new Array(i);let c,f,h,p;for(c=0,f=i;c<f;++c)h=c+r,p=n[h],l[c]={x:s.parse(p[0],h),y:o.parse(p[1],h)};return l}parseObjectData(t,n,r,i){const{xScale:s,yScale:o}=t,{xAxisKey:l="x",yAxisKey:c="y"}=this._parsing,f=new Array(i);let h,p,g,x;for(h=0,p=i;h<p;++h)g=h+r,x=n[g],f[h]={x:s.parse(resolveObjectKey(x,l),g),y:o.parse(resolveObjectKey(x,c),g)};return f}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,n,r){const i=this.chart,s=this._cachedMeta,o=n[t.axis],l={keys:getSortedDatasetIndices(i,!0),values:n._stacks[t.axis]._visualValues};return applyStack(l,o,s.index,{mode:r})}updateRangeFromParsed(t,n,r,i){const s=r[n.axis];let o=s===null?NaN:s;const l=i&&r._stacks[n.axis];i&&l&&(i.values=l,o=applyStack(i,s,this._cachedMeta.index)),t.min=Math.min(t.min,o),t.max=Math.max(t.max,o)}getMinMax(t,n){const r=this._cachedMeta,i=r._parsed,s=r._sorted&&t===r.iScale,o=i.length,l=this._getOtherScale(t),c=createStack(n,r,this.chart),f={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:h,max:p}=getUserBounds(l);let g,x;function D(){x=i[g];const y=x[l.axis];return!isNumberFinite(x[t.axis])||h>y||p<y}for(g=0;g<o&&!(!D()&&(this.updateRangeFromParsed(f,t,x,c),s));++g);if(s){for(g=o-1;g>=0;--g)if(!D()){this.updateRangeFromParsed(f,t,x,c);break}}return f}getAllParsedValues(t){const n=this._cachedMeta._parsed,r=[];let i,s,o;for(i=0,s=n.length;i<s;++i)o=n[i][t.axis],isNumberFinite(o)&&r.push(o);return r}getMaxOverflow(){return!1}getLabelAndValue(t){const n=this._cachedMeta,r=n.iScale,i=n.vScale,s=this.getParsed(t);return{label:r?""+r.getLabelForValue(s[r.axis]):"",value:i?""+i.getLabelForValue(s[i.axis]):""}}_update(t){const n=this._cachedMeta;this.update(t||"default"),n._clip=toClip(valueOrDefault(this.options.clip,defaultClip(n.xScale,n.yScale,this.getMaxOverflow())))}update(t){}draw(){const t=this._ctx,n=this.chart,r=this._cachedMeta,i=r.data||[],s=n.chartArea,o=[],l=this._drawStart||0,c=this._drawCount||i.length-l,f=this.options.drawActiveElementsOnTop;let h;for(r.dataset&&r.dataset.draw(t,s,l,c),h=l;h<l+c;++h){const p=i[h];p.hidden||(p.active&&f?o.push(p):p.draw(t,s))}for(h=0;h<o.length;++h)o[h].draw(t,s)}getStyle(t,n){const r=n?"active":"default";return t===void 0&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(r):this.resolveDataElementOptions(t||0,r)}getContext(t,n,r){const i=this.getDataset();let s;if(t>=0&&t<this._cachedMeta.data.length){const o=this._cachedMeta.data[t];s=o.$context||(o.$context=createDataContext(this.getContext(),t,o)),s.parsed=this.getParsed(t),s.raw=i.data[t],s.index=s.dataIndex=t}else s=this.$context||(this.$context=createDatasetContext(this.chart.getContext(),this.index)),s.dataset=i,s.index=s.datasetIndex=this.index;return s.active=!!n,s.mode=r,s}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,n){return this._resolveElementOptions(this.dataElementType.id,n,t)}_resolveElementOptions(t,n="default",r){const i=n==="active",s=this._cachedDataOpts,o=t+"-"+n,l=s[o],c=this.enableOptionSharing&&defined(r);if(l)return cloneIfNotShared(l,c);const f=this.chart.config,h=f.datasetElementScopeKeys(this._type,t),p=i?[`${t}Hover`,"hover",t,""]:[t,""],g=f.getOptionScopes(this.getDataset(),h),x=Object.keys(defaults.elements[t]),D=()=>this.getContext(r,i,n),y=f.resolveNamedOptions(g,x,D,p);return y.$shared&&(y.$shared=c,s[o]=Object.freeze(cloneIfNotShared(y,c))),y}_resolveAnimations(t,n,r){const i=this.chart,s=this._cachedDataOpts,o=`animation-${n}`,l=s[o];if(l)return l;let c;if(i.options.animation!==!1){const h=this.chart.config,p=h.datasetAnimationScopeKeys(this._type,n),g=h.getOptionScopes(this.getDataset(),p);c=h.createResolver(g,this.getContext(t,r,n))}const f=new Animations(i,c&&c.animations);return c&&c._cacheable&&(s[o]=Object.freeze(f)),f}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,n){return!n||isDirectUpdateMode(t)||this.chart._animationsDisabled}_getSharedOptions(t,n){const r=this.resolveDataElementOptions(t,n),i=this._sharedOptions,s=this.getSharedOptions(r),o=this.includeOptions(n,s)||s!==i;return this.updateSharedOptions(s,n,r),{sharedOptions:s,includeOptions:o}}updateElement(t,n,r,i){isDirectUpdateMode(i)?Object.assign(t,r):this._resolveAnimations(n,i).update(t,r)}updateSharedOptions(t,n,r){t&&!isDirectUpdateMode(n)&&this._resolveAnimations(void 0,n).update(t,r)}_setStyle(t,n,r,i){t.active=i;const s=this.getStyle(n,i);this._resolveAnimations(n,r,i).update(t,{options:!i&&this.getSharedOptions(s)||s})}removeHoverStyle(t,n,r){this._setStyle(t,r,"active",!1)}setHoverStyle(t,n,r){this._setStyle(t,r,"active",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!0)}_resyncElements(t){const n=this._data,r=this._cachedMeta.data;for(const[l,c,f]of this._syncList)this[l](c,f);this._syncList=[];const i=r.length,s=n.length,o=Math.min(s,i);o&&this.parse(0,o),s>i?this._insertElements(i,s-i,t):s<i&&this._removeElements(s,i-s)}_insertElements(t,n,r=!0){const i=this._cachedMeta,s=i.data,o=t+n;let l;const c=f=>{for(f.length+=n,l=f.length-1;l>=o;l--)f[l]=f[l-n]};for(c(s),l=t;l<o;++l)s[l]=new this.dataElementType;this._parsing&&c(i._parsed),this.parse(t,n),r&&this.updateElements(s,t,n,"reset")}updateElements(t,n,r,i){}_removeElements(t,n){const r=this._cachedMeta;if(this._parsing){const i=r._parsed.splice(t,n);r._stacked&&clearStacks(r,i)}r.data.splice(t,n)}_sync(t){if(this._parsing)this._syncList.push(t);else{const[n,r,i]=t;this[n](r,i)}this.chart._dataChanges.push([this.index,...t])}_onDataPush(){const t=arguments.length;this._sync(["_insertElements",this.getDataset().data.length-t,t])}_onDataPop(){this._sync(["_removeElements",this._cachedMeta.data.length-1,1])}_onDataShift(){this._sync(["_removeElements",0,1])}_onDataSplice(t,n){n&&this._sync(["_removeElements",t,n]);const r=arguments.length-2;r&&this._sync(["_insertElements",t,r])}_onDataUnshift(){this._sync(["_insertElements",0,arguments.length])}}A1(DatasetController,"defaults",{}),A1(DatasetController,"datasetElementType",null),A1(DatasetController,"dataElementType",null);function getAllScaleValues(e,t){if(!e._cache.$bar){const n=e.getMatchingVisibleMetas(t);let r=[];for(let i=0,s=n.length;i<s;i++)r=r.concat(n[i].controller.getAllParsedValues(e));e._cache.$bar=_arrayUnique(r.sort((i,s)=>i-s))}return e._cache.$bar}function computeMinSampleSize(e){const t=e.iScale,n=getAllScaleValues(t,e.type);let r=t._length,i,s,o,l;const c=()=>{o===32767||o===-32768||(defined(l)&&(r=Math.min(r,Math.abs(o-l)||r)),l=o)};for(i=0,s=n.length;i<s;++i)o=t.getPixelForValue(n[i]),c();for(l=void 0,i=0,s=t.ticks.length;i<s;++i)o=t.getPixelForTick(i),c();return r}function computeFitCategoryTraits(e,t,n,r){const i=n.barThickness;let s,o;return isNullOrUndef(i)?(s=t.min*n.categoryPercentage,o=n.barPercentage):(s=i*r,o=1),{chunk:s/r,ratio:o,start:t.pixels[e]-s/2}}function computeFlexCategoryTraits(e,t,n,r){const i=t.pixels,s=i[e];let o=e>0?i[e-1]:null,l=e<i.length-1?i[e+1]:null;const c=n.categoryPercentage;o===null&&(o=s-(l===null?t.end-t.start:l-s)),l===null&&(l=s+s-o);const f=s-(s-Math.min(o,l))/2*c;return{chunk:Math.abs(l-o)/2*c/r,ratio:n.barPercentage,start:f}}function parseFloatBar(e,t,n,r){const i=n.parse(e[0],r),s=n.parse(e[1],r),o=Math.min(i,s),l=Math.max(i,s);let c=o,f=l;Math.abs(o)>Math.abs(l)&&(c=l,f=o),t[n.axis]=f,t._custom={barStart:c,barEnd:f,start:i,end:s,min:o,max:l}}function parseValue(e,t,n,r){return isArray(e)?parseFloatBar(e,t,n,r):t[n.axis]=n.parse(e,r),t}function parseArrayOrPrimitive(e,t,n,r){const i=e.iScale,s=e.vScale,o=i.getLabels(),l=i===s,c=[];let f,h,p,g;for(f=n,h=n+r;f<h;++f)g=t[f],p={},p[i.axis]=l||i.parse(o[f],f),c.push(parseValue(g,p,s,f));return c}function isFloatBar(e){return e&&e.barStart!==void 0&&e.barEnd!==void 0}function barSign(e,t,n){return e!==0?sign(e):(t.isHorizontal()?1:-1)*(t.min>=n?1:-1)}function borderProps(e){let t,n,r,i,s;return e.horizontal?(t=e.base>e.x,n="left",r="right"):(t=e.base<e.y,n="bottom",r="top"),t?(i="end",s="start"):(i="start",s="end"),{start:n,end:r,reverse:t,top:i,bottom:s}}function setBorderSkipped(e,t,n,r){let i=t.borderSkipped;const s={};if(!i){e.borderSkipped=s;return}if(i===!0){e.borderSkipped={top:!0,right:!0,bottom:!0,left:!0};return}const{start:o,end:l,reverse:c,top:f,bottom:h}=borderProps(e);i==="middle"&&n&&(e.enableBorderRadius=!0,(n._top||0)===r?i=f:(n._bottom||0)===r?i=h:(s[parseEdge(h,o,l,c)]=!0,i=f)),s[parseEdge(i,o,l,c)]=!0,e.borderSkipped=s}function parseEdge(e,t,n,r){return r?(e=swap(e,t,n),e=startEnd(e,n,t)):e=startEnd(e,t,n),e}function swap(e,t,n){return e===t?n:e===n?t:e}function startEnd(e,t,n){return e==="start"?t:e==="end"?n:e}function setInflateAmount(e,{inflateAmount:t},n){e.inflateAmount=t==="auto"?n===1?.33:0:t}class BarController extends DatasetController{parsePrimitiveData(t,n,r,i){return parseArrayOrPrimitive(t,n,r,i)}parseArrayData(t,n,r,i){return parseArrayOrPrimitive(t,n,r,i)}parseObjectData(t,n,r,i){const{iScale:s,vScale:o}=t,{xAxisKey:l="x",yAxisKey:c="y"}=this._parsing,f=s.axis==="x"?l:c,h=o.axis==="x"?l:c,p=[];let g,x,D,y;for(g=r,x=r+i;g<x;++g)y=n[g],D={},D[s.axis]=s.parse(resolveObjectKey(y,f),g),p.push(parseValue(resolveObjectKey(y,h),D,o,g));return p}updateRangeFromParsed(t,n,r,i){super.updateRangeFromParsed(t,n,r,i);const s=r._custom;s&&n===this._cachedMeta.vScale&&(t.min=Math.min(t.min,s.min),t.max=Math.max(t.max,s.max))}getMaxOverflow(){return 0}getLabelAndValue(t){const n=this._cachedMeta,{iScale:r,vScale:i}=n,s=this.getParsed(t),o=s._custom,l=isFloatBar(o)?"["+o.start+", "+o.end+"]":""+i.getLabelForValue(s[i.axis]);return{label:""+r.getLabelForValue(s[r.axis]),value:l}}initialize(){this.enableOptionSharing=!0,super.initialize();const t=this._cachedMeta;t.stack=this.getDataset().stack}update(t){const n=this._cachedMeta;this.updateElements(n.data,0,n.data.length,t)}updateElements(t,n,r,i){const s=i==="reset",{index:o,_cachedMeta:{vScale:l}}=this,c=l.getBasePixel(),f=l.isHorizontal(),h=this._getRuler(),{sharedOptions:p,includeOptions:g}=this._getSharedOptions(n,i);for(let x=n;x<n+r;x++){const D=this.getParsed(x),y=s||isNullOrUndef(D[l.axis])?{base:c,head:c}:this._calculateBarValuePixels(x),E=this._calculateBarIndexPixels(x,h),F=(D._stacks||{})[l.axis],B={horizontal:f,base:y.base,enableBorderRadius:!F||isFloatBar(D._custom)||o===F._top||o===F._bottom,x:f?y.head:E.center,y:f?E.center:y.head,height:f?E.size:Math.abs(y.size),width:f?Math.abs(y.size):E.size};g&&(B.options=p||this.resolveDataElementOptions(x,t[x].active?"active":i));const M=B.options||t[x].options;setBorderSkipped(B,M,F,o),setInflateAmount(B,M,h.ratio),this.updateElement(t[x],x,B,i)}}_getStacks(t,n){const{iScale:r}=this._cachedMeta,i=r.getMatchingVisibleMetas(this._type).filter(h=>h.controller.options.grouped),s=r.options.stacked,o=[],l=this._cachedMeta.controller.getParsed(n),c=l&&l[r.axis],f=h=>{const p=h._parsed.find(x=>x[r.axis]===c),g=p&&p[h.vScale.axis];if(isNullOrUndef(g)||isNaN(g))return!0};for(const h of i)if(!(n!==void 0&&f(h))&&((s===!1||o.indexOf(h.stack)===-1||s===void 0&&h.stack===void 0)&&o.push(h.stack),h.index===t))break;return o.length||o.push(void 0),o}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,n,r){const i=this._getStacks(t,r),s=n!==void 0?i.indexOf(n):-1;return s===-1?i.length-1:s}_getRuler(){const t=this.options,n=this._cachedMeta,r=n.iScale,i=[];let s,o;for(s=0,o=n.data.length;s<o;++s)i.push(r.getPixelForValue(this.getParsed(s)[r.axis],s));const l=t.barThickness;return{min:l||computeMinSampleSize(n),pixels:i,start:r._startPixel,end:r._endPixel,stackCount:this._getStackCount(),scale:r,grouped:t.grouped,ratio:l?1:t.categoryPercentage*t.barPercentage}}_calculateBarValuePixels(t){const{_cachedMeta:{vScale:n,_stacked:r,index:i},options:{base:s,minBarLength:o}}=this,l=s||0,c=this.getParsed(t),f=c._custom,h=isFloatBar(f);let p=c[n.axis],g=0,x=r?this.applyStack(n,c,r):p,D,y;x!==p&&(g=x-p,x=p),h&&(p=f.barStart,x=f.barEnd-f.barStart,p!==0&&sign(p)!==sign(f.barEnd)&&(g=0),g+=p);const E=!isNullOrUndef(s)&&!h?s:g;let F=n.getPixelForValue(E);if(this.chart.getDataVisibility(t)?D=n.getPixelForValue(g+x):D=F,y=D-F,Math.abs(y)<o){y=barSign(y,n,l)*o,p===l&&(F-=y/2);const B=n.getPixelForDecimal(0),M=n.getPixelForDecimal(1),k=Math.min(B,M),T=Math.max(B,M);F=Math.max(Math.min(F,T),k),D=F+y,r&&!h&&(c._stacks[n.axis]._visualValues[i]=n.getValueForPixel(D)-n.getValueForPixel(F))}if(F===n.getPixelForValue(l)){const B=sign(y)*n.getLineWidthForValue(l)/2;F+=B,y-=B}return{size:y,base:F,head:D,center:D+y/2}}_calculateBarIndexPixels(t,n){const r=n.scale,i=this.options,s=i.skipNull,o=valueOrDefault(i.maxBarThickness,1/0);let l,c;if(n.grouped){const f=s?this._getStackCount(t):n.stackCount,h=i.barThickness==="flex"?computeFlexCategoryTraits(t,n,i,f):computeFitCategoryTraits(t,n,i,f),p=this._getStackIndex(this.index,this._cachedMeta.stack,s?t:void 0);l=h.start+h.chunk*p+h.chunk/2,c=Math.min(o,h.chunk*h.ratio)}else l=r.getPixelForValue(this.getParsed(t)[r.axis],t),c=Math.min(o,n.min*n.ratio);return{base:l-c/2,head:l+c/2,center:l,size:c}}draw(){const t=this._cachedMeta,n=t.vScale,r=t.data,i=r.length;let s=0;for(;s<i;++s)this.getParsed(s)[n.axis]!==null&&!r[s].hidden&&r[s].draw(this._ctx)}}A1(BarController,"id","bar"),A1(BarController,"defaults",{datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}}),A1(BarController,"overrides",{scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}});function abstract(){throw new Error("This method is not implemented: Check that a complete date adapter is provided.")}class DateAdapterBase{constructor(t){A1(this,"options");this.options=t||{}}static override(t){Object.assign(DateAdapterBase.prototype,t)}init(){}formats(){return abstract()}parse(){return abstract()}format(){return abstract()}add(){return abstract()}diff(){return abstract()}startOf(){return abstract()}endOf(){return abstract()}}var adapters={_date:DateAdapterBase};function binarySearch(e,t,n,r){const{controller:i,data:s,_sorted:o}=e,l=i._cachedMeta.iScale;if(l&&t===l.axis&&t!=="r"&&o&&s.length){const c=l._reversePixels?_rlookupByKey:_lookupByKey;if(r){if(i._sharedOptions){const f=s[0],h=typeof f.getRange=="function"&&f.getRange(t);if(h){const p=c(s,t,n-h),g=c(s,t,n+h);return{lo:p.lo,hi:g.hi}}}}else return c(s,t,n)}return{lo:0,hi:s.length-1}}function evaluateInteractionItems(e,t,n,r,i){const s=e.getSortedVisibleDatasetMetas(),o=n[t];for(let l=0,c=s.length;l<c;++l){const{index:f,data:h}=s[l],{lo:p,hi:g}=binarySearch(s[l],t,o,i);for(let x=p;x<=g;++x){const D=h[x];D.skip||r(D,f,x)}}}function getDistanceMetricForAxis(e){const t=e.indexOf("x")!==-1,n=e.indexOf("y")!==-1;return function(r,i){const s=t?Math.abs(r.x-i.x):0,o=n?Math.abs(r.y-i.y):0;return Math.sqrt(Math.pow(s,2)+Math.pow(o,2))}}function getIntersectItems(e,t,n,r,i){const s=[];return!i&&!e.isPointInArea(t)||evaluateInteractionItems(e,n,t,function(l,c,f){!i&&!_isPointInArea(l,e.chartArea,0)||l.inRange(t.x,t.y,r)&&s.push({element:l,datasetIndex:c,index:f})},!0),s}function getNearestRadialItems(e,t,n,r){let i=[];function s(o,l,c){const{startAngle:f,endAngle:h}=o.getProps(["startAngle","endAngle"],r),{angle:p}=getAngleFromPoint(o,{x:t.x,y:t.y});_angleBetween(p,f,h)&&i.push({element:o,datasetIndex:l,index:c})}return evaluateInteractionItems(e,n,t,s),i}function getNearestCartesianItems(e,t,n,r,i,s){let o=[];const l=getDistanceMetricForAxis(n);let c=Number.POSITIVE_INFINITY;function f(h,p,g){const x=h.inRange(t.x,t.y,i);if(r&&!x)return;const D=h.getCenterPoint(i);if(!(!!s||e.isPointInArea(D))&&!x)return;const E=l(t,D);E<c?(o=[{element:h,datasetIndex:p,index:g}],c=E):E===c&&o.push({element:h,datasetIndex:p,index:g})}return evaluateInteractionItems(e,n,t,f),o}function getNearestItems(e,t,n,r,i,s){return!s&&!e.isPointInArea(t)?[]:n==="r"&&!r?getNearestRadialItems(e,t,n,i):getNearestCartesianItems(e,t,n,r,i,s)}function getAxisItems(e,t,n,r,i){const s=[],o=n==="x"?"inXRange":"inYRange";let l=!1;return evaluateInteractionItems(e,n,t,(c,f,h)=>{c[o]&&c[o](t[n],i)&&(s.push({element:c,datasetIndex:f,index:h}),l=l||c.inRange(t.x,t.y,i))}),r&&!l?[]:s}var Interaction={evaluateInteractionItems,modes:{index(e,t,n,r){const i=getRelativePosition(t,e),s=n.axis||"x",o=n.includeInvisible||!1,l=n.intersect?getIntersectItems(e,i,s,r,o):getNearestItems(e,i,s,!1,r,o),c=[];return l.length?(e.getSortedVisibleDatasetMetas().forEach(f=>{const h=l[0].index,p=f.data[h];p&&!p.skip&&c.push({element:p,datasetIndex:f.index,index:h})}),c):[]},dataset(e,t,n,r){const i=getRelativePosition(t,e),s=n.axis||"xy",o=n.includeInvisible||!1;let l=n.intersect?getIntersectItems(e,i,s,r,o):getNearestItems(e,i,s,!1,r,o);if(l.length>0){const c=l[0].datasetIndex,f=e.getDatasetMeta(c).data;l=[];for(let h=0;h<f.length;++h)l.push({element:f[h],datasetIndex:c,index:h})}return l},point(e,t,n,r){const i=getRelativePosition(t,e),s=n.axis||"xy",o=n.includeInvisible||!1;return getIntersectItems(e,i,s,r,o)},nearest(e,t,n,r){const i=getRelativePosition(t,e),s=n.axis||"xy",o=n.includeInvisible||!1;return getNearestItems(e,i,s,n.intersect,r,o)},x(e,t,n,r){const i=getRelativePosition(t,e);return getAxisItems(e,i,"x",n.intersect,r)},y(e,t,n,r){const i=getRelativePosition(t,e);return getAxisItems(e,i,"y",n.intersect,r)}}};const STATIC_POSITIONS=["left","top","right","bottom"];function filterByPosition(e,t){return e.filter(n=>n.pos===t)}function filterDynamicPositionByAxis(e,t){return e.filter(n=>STATIC_POSITIONS.indexOf(n.pos)===-1&&n.box.axis===t)}function sortByWeight(e,t){return e.sort((n,r)=>{const i=t?r:n,s=t?n:r;return i.weight===s.weight?i.index-s.index:i.weight-s.weight})}function wrapBoxes(e){const t=[];let n,r,i,s,o,l;for(n=0,r=(e||[]).length;n<r;++n)i=e[n],{position:s,options:{stack:o,stackWeight:l=1}}=i,t.push({index:n,box:i,pos:s,horizontal:i.isHorizontal(),weight:i.weight,stack:o&&s+o,stackWeight:l});return t}function buildStacks(e){const t={};for(const n of e){const{stack:r,pos:i,stackWeight:s}=n;if(!r||!STATIC_POSITIONS.includes(i))continue;const o=t[r]||(t[r]={count:0,placed:0,weight:0,size:0});o.count++,o.weight+=s}return t}function setLayoutDims(e,t){const n=buildStacks(e),{vBoxMaxWidth:r,hBoxMaxHeight:i}=t;let s,o,l;for(s=0,o=e.length;s<o;++s){l=e[s];const{fullSize:c}=l.box,f=n[l.stack],h=f&&l.stackWeight/f.weight;l.horizontal?(l.width=h?h*r:c&&t.availableWidth,l.height=i):(l.width=r,l.height=h?h*i:c&&t.availableHeight)}return n}function buildLayoutBoxes(e){const t=wrapBoxes(e),n=sortByWeight(t.filter(f=>f.box.fullSize),!0),r=sortByWeight(filterByPosition(t,"left"),!0),i=sortByWeight(filterByPosition(t,"right")),s=sortByWeight(filterByPosition(t,"top"),!0),o=sortByWeight(filterByPosition(t,"bottom")),l=filterDynamicPositionByAxis(t,"x"),c=filterDynamicPositionByAxis(t,"y");return{fullSize:n,leftAndTop:r.concat(s),rightAndBottom:i.concat(c).concat(o).concat(l),chartArea:filterByPosition(t,"chartArea"),vertical:r.concat(i).concat(c),horizontal:s.concat(o).concat(l)}}function getCombinedMax(e,t,n,r){return Math.max(e[n],t[n])+Math.max(e[r],t[r])}function updateMaxPadding(e,t){e.top=Math.max(e.top,t.top),e.left=Math.max(e.left,t.left),e.bottom=Math.max(e.bottom,t.bottom),e.right=Math.max(e.right,t.right)}function updateDims(e,t,n,r){const{pos:i,box:s}=n,o=e.maxPadding;if(!isObject(i)){n.size&&(e[i]-=n.size);const p=r[n.stack]||{size:0,count:1};p.size=Math.max(p.size,n.horizontal?s.height:s.width),n.size=p.size/p.count,e[i]+=n.size}s.getPadding&&updateMaxPadding(o,s.getPadding());const l=Math.max(0,t.outerWidth-getCombinedMax(o,e,"left","right")),c=Math.max(0,t.outerHeight-getCombinedMax(o,e,"top","bottom")),f=l!==e.w,h=c!==e.h;return e.w=l,e.h=c,n.horizontal?{same:f,other:h}:{same:h,other:f}}function handleMaxPadding(e){const t=e.maxPadding;function n(r){const i=Math.max(t[r]-e[r],0);return e[r]+=i,i}e.y+=n("top"),e.x+=n("left"),n("right"),n("bottom")}function getMargins(e,t){const n=t.maxPadding;function r(i){const s={left:0,top:0,right:0,bottom:0};return i.forEach(o=>{s[o]=Math.max(t[o],n[o])}),s}return r(e?["left","right"]:["top","bottom"])}function fitBoxes(e,t,n,r){const i=[];let s,o,l,c,f,h;for(s=0,o=e.length,f=0;s<o;++s){l=e[s],c=l.box,c.update(l.width||t.w,l.height||t.h,getMargins(l.horizontal,t));const{same:p,other:g}=updateDims(t,n,l,r);f|=p&&i.length,h=h||g,c.fullSize||i.push(l)}return f&&fitBoxes(i,t,n,r)||h}function setBoxDims(e,t,n,r,i){e.top=n,e.left=t,e.right=t+r,e.bottom=n+i,e.width=r,e.height=i}function placeBoxes(e,t,n,r){const i=n.padding;let{x:s,y:o}=t;for(const l of e){const c=l.box,f=r[l.stack]||{count:1,placed:0,weight:1},h=l.stackWeight/f.weight||1;if(l.horizontal){const p=t.w*h,g=f.size||c.height;defined(f.start)&&(o=f.start),c.fullSize?setBoxDims(c,i.left,o,n.outerWidth-i.right-i.left,g):setBoxDims(c,t.left+f.placed,o,p,g),f.start=o,f.placed+=p,o=c.bottom}else{const p=t.h*h,g=f.size||c.width;defined(f.start)&&(s=f.start),c.fullSize?setBoxDims(c,s,i.top,g,n.outerHeight-i.bottom-i.top):setBoxDims(c,s,t.top+f.placed,g,p),f.start=s,f.placed+=p,s=c.right}}t.x=s,t.y=o}var layouts={addBox(e,t){e.boxes||(e.boxes=[]),t.fullSize=t.fullSize||!1,t.position=t.position||"top",t.weight=t.weight||0,t._layers=t._layers||function(){return[{z:0,draw(n){t.draw(n)}}]},e.boxes.push(t)},removeBox(e,t){const n=e.boxes?e.boxes.indexOf(t):-1;n!==-1&&e.boxes.splice(n,1)},configure(e,t,n){t.fullSize=n.fullSize,t.position=n.position,t.weight=n.weight},update(e,t,n,r){if(!e)return;const i=toPadding(e.options.layout.padding),s=Math.max(t-i.width,0),o=Math.max(n-i.height,0),l=buildLayoutBoxes(e.boxes),c=l.vertical,f=l.horizontal;each(e.boxes,y=>{typeof y.beforeLayout=="function"&&y.beforeLayout()});const h=c.reduce((y,E)=>E.box.options&&E.box.options.display===!1?y:y+1,0)||1,p=Object.freeze({outerWidth:t,outerHeight:n,padding:i,availableWidth:s,availableHeight:o,vBoxMaxWidth:s/2/h,hBoxMaxHeight:o/2}),g=Object.assign({},i);updateMaxPadding(g,toPadding(r));const x=Object.assign({maxPadding:g,w:s,h:o,x:i.left,y:i.top},i),D=setLayoutDims(c.concat(f),p);fitBoxes(l.fullSize,x,p,D),fitBoxes(c,x,p,D),fitBoxes(f,x,p,D)&&fitBoxes(c,x,p,D),handleMaxPadding(x),placeBoxes(l.leftAndTop,x,p,D),x.x+=x.w,x.y+=x.h,placeBoxes(l.rightAndBottom,x,p,D),e.chartArea={left:x.left,top:x.top,right:x.left+x.w,bottom:x.top+x.h,height:x.h,width:x.w},each(l.chartArea,y=>{const E=y.box;Object.assign(E,e.chartArea),E.update(x.w,x.h,{left:0,top:0,right:0,bottom:0})})}};class BasePlatform{acquireContext(t,n){}releaseContext(t){return!1}addEventListener(t,n,r){}removeEventListener(t,n,r){}getDevicePixelRatio(){return 1}getMaximumSize(t,n,r,i){return n=Math.max(0,n||t.width),r=r||t.height,{width:n,height:Math.max(0,i?Math.floor(n/i):r)}}isAttached(t){return!0}updateConfig(t){}}class BasicPlatform extends BasePlatform{acquireContext(t){return t&&t.getContext&&t.getContext("2d")||null}updateConfig(t){t.options.animation=!1}}const EXPANDO_KEY="$chartjs",EVENT_TYPES={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},isNullOrEmpty=e=>e===null||e==="";function initCanvas(e,t){const n=e.style,r=e.getAttribute("height"),i=e.getAttribute("width");if(e[EXPANDO_KEY]={initial:{height:r,width:i,style:{display:n.display,height:n.height,width:n.width}}},n.display=n.display||"block",n.boxSizing=n.boxSizing||"border-box",isNullOrEmpty(i)){const s=readUsedSize(e,"width");s!==void 0&&(e.width=s)}if(isNullOrEmpty(r))if(e.style.height==="")e.height=e.width/(t||2);else{const s=readUsedSize(e,"height");s!==void 0&&(e.height=s)}return e}const eventListenerOptions=supportsEventListenerOptions?{passive:!0}:!1;function addListener(e,t,n){e&&e.addEventListener(t,n,eventListenerOptions)}function removeListener(e,t,n){e&&e.canvas&&e.canvas.removeEventListener(t,n,eventListenerOptions)}function fromNativeEvent(e,t){const n=EVENT_TYPES[e.type]||e.type,{x:r,y:i}=getRelativePosition(e,t);return{type:n,chart:t,native:e,x:r!==void 0?r:null,y:i!==void 0?i:null}}function nodeListContains(e,t){for(const n of e)if(n===t||n.contains(t))return!0}function createAttachObserver(e,t,n){const r=e.canvas,i=new MutationObserver(s=>{let o=!1;for(const l of s)o=o||nodeListContains(l.addedNodes,r),o=o&&!nodeListContains(l.removedNodes,r);o&&n()});return i.observe(document,{childList:!0,subtree:!0}),i}function createDetachObserver(e,t,n){const r=e.canvas,i=new MutationObserver(s=>{let o=!1;for(const l of s)o=o||nodeListContains(l.removedNodes,r),o=o&&!nodeListContains(l.addedNodes,r);o&&n()});return i.observe(document,{childList:!0,subtree:!0}),i}const drpListeningCharts=new Map;let oldDevicePixelRatio=0;function onWindowResize(){const e=window.devicePixelRatio;e!==oldDevicePixelRatio&&(oldDevicePixelRatio=e,drpListeningCharts.forEach((t,n)=>{n.currentDevicePixelRatio!==e&&t()}))}function listenDevicePixelRatioChanges(e,t){drpListeningCharts.size||window.addEventListener("resize",onWindowResize),drpListeningCharts.set(e,t)}function unlistenDevicePixelRatioChanges(e){drpListeningCharts.delete(e),drpListeningCharts.size||window.removeEventListener("resize",onWindowResize)}function createResizeObserver(e,t,n){const r=e.canvas,i=r&&_getParentNode(r);if(!i)return;const s=throttled((l,c)=>{const f=i.clientWidth;n(l,c),f<i.clientWidth&&n()},window),o=new ResizeObserver(l=>{const c=l[0],f=c.contentRect.width,h=c.contentRect.height;f===0&&h===0||s(f,h)});return o.observe(i),listenDevicePixelRatioChanges(e,s),o}function releaseObserver(e,t,n){n&&n.disconnect(),t==="resize"&&unlistenDevicePixelRatioChanges(e)}function createProxyAndListen(e,t,n){const r=e.canvas,i=throttled(s=>{e.ctx!==null&&n(fromNativeEvent(s,e))},e);return addListener(r,t,i),i}class DomPlatform extends BasePlatform{acquireContext(t,n){const r=t&&t.getContext&&t.getContext("2d");return r&&r.canvas===t?(initCanvas(t,n),r):null}releaseContext(t){const n=t.canvas;if(!n[EXPANDO_KEY])return!1;const r=n[EXPANDO_KEY].initial;["height","width"].forEach(s=>{const o=r[s];isNullOrUndef(o)?n.removeAttribute(s):n.setAttribute(s,o)});const i=r.style||{};return Object.keys(i).forEach(s=>{n.style[s]=i[s]}),n.width=n.width,delete n[EXPANDO_KEY],!0}addEventListener(t,n,r){this.removeEventListener(t,n);const i=t.$proxies||(t.$proxies={}),o={attach:createAttachObserver,detach:createDetachObserver,resize:createResizeObserver}[n]||createProxyAndListen;i[n]=o(t,n,r)}removeEventListener(t,n){const r=t.$proxies||(t.$proxies={}),i=r[n];if(!i)return;({attach:releaseObserver,detach:releaseObserver,resize:releaseObserver}[n]||removeListener)(t,n,i),r[n]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,n,r,i){return getMaximumSize(t,n,r,i)}isAttached(t){const n=t&&_getParentNode(t);return!!(n&&n.isConnected)}}function _detectPlatform(e){return!_isDomSupported()||typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas?BasicPlatform:DomPlatform}class Element{constructor(){A1(this,"x");A1(this,"y");A1(this,"active",!1);A1(this,"options");A1(this,"$animations")}tooltipPosition(t){const{x:n,y:r}=this.getProps(["x","y"],t);return{x:n,y:r}}hasValue(){return isNumber(this.x)&&isNumber(this.y)}getProps(t,n){const r=this.$animations;if(!n||!r)return this;const i={};return t.forEach(s=>{i[s]=r[s]&&r[s].active()?r[s]._to:this[s]}),i}}A1(Element,"defaults",{}),A1(Element,"defaultRoutes");function autoSkip(e,t){const n=e.options.ticks,r=determineMaxTicks(e),i=Math.min(n.maxTicksLimit||r,r),s=n.major.enabled?getMajorIndices(t):[],o=s.length,l=s[0],c=s[o-1],f=[];if(o>i)return skipMajors(t,f,s,o/i),f;const h=calculateSpacing(s,t,i);if(o>0){let p,g;const x=o>1?Math.round((c-l)/(o-1)):null;for(skip(t,f,h,isNullOrUndef(x)?0:l-x,l),p=0,g=o-1;p<g;p++)skip(t,f,h,s[p],s[p+1]);return skip(t,f,h,c,isNullOrUndef(x)?t.length:c+x),f}return skip(t,f,h),f}function determineMaxTicks(e){const t=e.options.offset,n=e._tickSize(),r=e._length/n+(t?0:1),i=e._maxLength/n;return Math.floor(Math.min(r,i))}function calculateSpacing(e,t,n){const r=getEvenSpacing(e),i=t.length/n;if(!r)return Math.max(i,1);const s=_factorize(r);for(let o=0,l=s.length-1;o<l;o++){const c=s[o];if(c>i)return c}return Math.max(i,1)}function getMajorIndices(e){const t=[];let n,r;for(n=0,r=e.length;n<r;n++)e[n].major&&t.push(n);return t}function skipMajors(e,t,n,r){let i=0,s=n[0],o;for(r=Math.ceil(r),o=0;o<e.length;o++)o===s&&(t.push(e[o]),i++,s=n[i*r])}function skip(e,t,n,r,i){const s=valueOrDefault(r,0),o=Math.min(valueOrDefault(i,e.length),e.length);let l=0,c,f,h;for(n=Math.ceil(n),i&&(c=i-r,n=c/Math.floor(c/n)),h=s;h<0;)l++,h=Math.round(s+l*n);for(f=Math.max(s,0);f<o;f++)f===h&&(t.push(e[f]),l++,h=Math.round(s+l*n))}function getEvenSpacing(e){const t=e.length;let n,r;if(t<2)return!1;for(r=e[0],n=1;n<t;++n)if(e[n]-e[n-1]!==r)return!1;return r}const reverseAlign=e=>e==="left"?"right":e==="right"?"left":e,offsetFromEdge=(e,t,n)=>t==="top"||t==="left"?e[t]+n:e[t]-n,getTicksLimit=(e,t)=>Math.min(t||e,e);function sample(e,t){const n=[],r=e.length/t,i=e.length;let s=0;for(;s<i;s+=r)n.push(e[Math.floor(s)]);return n}function getPixelForGridLine(e,t,n){const r=e.ticks.length,i=Math.min(t,r-1),s=e._startPixel,o=e._endPixel,l=1e-6;let c=e.getPixelForTick(i),f;if(!(n&&(r===1?f=Math.max(c-s,o-c):t===0?f=(e.getPixelForTick(1)-c)/2:f=(c-e.getPixelForTick(i-1))/2,c+=i<t?f:-f,c<s-l||c>o+l)))return c}function garbageCollect(e,t){each(e,n=>{const r=n.gc,i=r.length/2;let s;if(i>t){for(s=0;s<i;++s)delete n.data[r[s]];r.splice(0,i)}})}function getTickMarkLength(e){return e.drawTicks?e.tickLength:0}function getTitleHeight(e,t){if(!e.display)return 0;const n=toFont(e.font,t),r=toPadding(e.padding);return(isArray(e.text)?e.text.length:1)*n.lineHeight+r.height}function createScaleContext(e,t){return createContext(e,{scale:t,type:"scale"})}function createTickContext(e,t,n){return createContext(e,{tick:n,index:t,type:"tick"})}function titleAlign(e,t,n){let r=_toLeftRightCenter(e);return(n&&t!=="right"||!n&&t==="right")&&(r=reverseAlign(r)),r}function titleArgs(e,t,n,r){const{top:i,left:s,bottom:o,right:l,chart:c}=e,{chartArea:f,scales:h}=c;let p=0,g,x,D;const y=o-i,E=l-s;if(e.isHorizontal()){if(x=_alignStartEnd(r,s,l),isObject(n)){const F=Object.keys(n)[0],B=n[F];D=h[F].getPixelForValue(B)+y-t}else n==="center"?D=(f.bottom+f.top)/2+y-t:D=offsetFromEdge(e,n,t);g=l-s}else{if(isObject(n)){const F=Object.keys(n)[0],B=n[F];x=h[F].getPixelForValue(B)-E+t}else n==="center"?x=(f.left+f.right)/2-E+t:x=offsetFromEdge(e,n,t);D=_alignStartEnd(r,o,i),p=n==="left"?-HALF_PI:HALF_PI}return{titleX:x,titleY:D,maxWidth:g,rotation:p}}class Scale extends Element{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){this.options=t.setContext(this.getContext()),this.axis=t.axis,this._userMin=this.parse(t.min),this._userMax=this.parse(t.max),this._suggestedMin=this.parse(t.suggestedMin),this._suggestedMax=this.parse(t.suggestedMax)}parse(t,n){return t}getUserBounds(){let{_userMin:t,_userMax:n,_suggestedMin:r,_suggestedMax:i}=this;return t=finiteOrDefault(t,Number.POSITIVE_INFINITY),n=finiteOrDefault(n,Number.NEGATIVE_INFINITY),r=finiteOrDefault(r,Number.POSITIVE_INFINITY),i=finiteOrDefault(i,Number.NEGATIVE_INFINITY),{min:finiteOrDefault(t,r),max:finiteOrDefault(n,i),minDefined:isNumberFinite(t),maxDefined:isNumberFinite(n)}}getMinMax(t){let{min:n,max:r,minDefined:i,maxDefined:s}=this.getUserBounds(),o;if(i&&s)return{min:n,max:r};const l=this.getMatchingVisibleMetas();for(let c=0,f=l.length;c<f;++c)o=l[c].controller.getMinMax(this,t),i||(n=Math.min(n,o.min)),s||(r=Math.max(r,o.max));return n=s&&n>r?r:n,r=i&&n>r?n:r,{min:finiteOrDefault(n,finiteOrDefault(r,n)),max:finiteOrDefault(r,finiteOrDefault(n,r))}}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}getLabelItems(t=this.chart.chartArea){return this._labelItems||(this._labelItems=this._computeLabelItems(t))}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){callback(this.options.beforeUpdate,[this])}update(t,n,r){const{beginAtZero:i,grace:s,ticks:o}=this.options,l=o.sampleSize;this.beforeUpdate(),this.maxWidth=t,this.maxHeight=n,this._margins=r=Object.assign({left:0,right:0,top:0,bottom:0},r),this.ticks=null,this._labelSizes=null,this._gridLineItems=null,this._labelItems=null,this.beforeSetDimensions(),this.setDimensions(),this.afterSetDimensions(),this._maxLength=this.isHorizontal()?this.width+r.left+r.right:this.height+r.top+r.bottom,this._dataLimitsCached||(this.beforeDataLimits(),this.determineDataLimits(),this.afterDataLimits(),this._range=_addGrace(this,s,i),this._dataLimitsCached=!0),this.beforeBuildTicks(),this.ticks=this.buildTicks()||[],this.afterBuildTicks();const c=l<this.ticks.length;this._convertTicksToLabels(c?sample(this.ticks,l):this.ticks),this.configure(),this.beforeCalculateLabelRotation(),this.calculateLabelRotation(),this.afterCalculateLabelRotation(),o.display&&(o.autoSkip||o.source==="auto")&&(this.ticks=autoSkip(this,this.ticks),this._labelSizes=null,this.afterAutoSkip()),c&&this._convertTicksToLabels(this.ticks),this.beforeFit(),this.fit(),this.afterFit(),this.afterUpdate()}configure(){let t=this.options.reverse,n,r;this.isHorizontal()?(n=this.left,r=this.right):(n=this.top,r=this.bottom,t=!t),this._startPixel=n,this._endPixel=r,this._reversePixels=t,this._length=r-n,this._alignToPixels=this.options.alignToPixels}afterUpdate(){callback(this.options.afterUpdate,[this])}beforeSetDimensions(){callback(this.options.beforeSetDimensions,[this])}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=0,this.right=this.width):(this.height=this.maxHeight,this.top=0,this.bottom=this.height),this.paddingLeft=0,this.paddingTop=0,this.paddingRight=0,this.paddingBottom=0}afterSetDimensions(){callback(this.options.afterSetDimensions,[this])}_callHooks(t){this.chart.notifyPlugins(t,this.getContext()),callback(this.options[t],[this])}beforeDataLimits(){this._callHooks("beforeDataLimits")}determineDataLimits(){}afterDataLimits(){this._callHooks("afterDataLimits")}beforeBuildTicks(){this._callHooks("beforeBuildTicks")}buildTicks(){return[]}afterBuildTicks(){this._callHooks("afterBuildTicks")}beforeTickToLabelConversion(){callback(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const n=this.options.ticks;let r,i,s;for(r=0,i=t.length;r<i;r++)s=t[r],s.label=callback(n.callback,[s.value,r,t],this)}afterTickToLabelConversion(){callback(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){callback(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this.options,n=t.ticks,r=getTicksLimit(this.ticks.length,t.ticks.maxTicksLimit),i=n.minRotation||0,s=n.maxRotation;let o=i,l,c,f;if(!this._isVisible()||!n.display||i>=s||r<=1||!this.isHorizontal()){this.labelRotation=i;return}const h=this._getLabelSizes(),p=h.widest.width,g=h.highest.height,x=_limitValue(this.chart.width-p,0,this.maxWidth);l=t.offset?this.maxWidth/r:x/(r-1),p+6>l&&(l=x/(r-(t.offset?.5:1)),c=this.maxHeight-getTickMarkLength(t.grid)-n.padding-getTitleHeight(t.title,this.chart.options.font),f=Math.sqrt(p*p+g*g),o=toDegrees(Math.min(Math.asin(_limitValue((h.highest.height+6)/l,-1,1)),Math.asin(_limitValue(c/f,-1,1))-Math.asin(_limitValue(g/f,-1,1)))),o=Math.max(i,Math.min(s,o))),this.labelRotation=o}afterCalculateLabelRotation(){callback(this.options.afterCalculateLabelRotation,[this])}afterAutoSkip(){}beforeFit(){callback(this.options.beforeFit,[this])}fit(){const t={width:0,height:0},{chart:n,options:{ticks:r,title:i,grid:s}}=this,o=this._isVisible(),l=this.isHorizontal();if(o){const c=getTitleHeight(i,n.options.font);if(l?(t.width=this.maxWidth,t.height=getTickMarkLength(s)+c):(t.height=this.maxHeight,t.width=getTickMarkLength(s)+c),r.display&&this.ticks.length){const{first:f,last:h,widest:p,highest:g}=this._getLabelSizes(),x=r.padding*2,D=toRadians(this.labelRotation),y=Math.cos(D),E=Math.sin(D);if(l){const F=r.mirror?0:E*p.width+y*g.height;t.height=Math.min(this.maxHeight,t.height+F+x)}else{const F=r.mirror?0:y*p.width+E*g.height;t.width=Math.min(this.maxWidth,t.width+F+x)}this._calculatePadding(f,h,E,y)}}this._handleMargins(),l?(this.width=this._length=n.width-this._margins.left-this._margins.right,this.height=t.height):(this.width=t.width,this.height=this._length=n.height-this._margins.top-this._margins.bottom)}_calculatePadding(t,n,r,i){const{ticks:{align:s,padding:o},position:l}=this.options,c=this.labelRotation!==0,f=l!=="top"&&this.axis==="x";if(this.isHorizontal()){const h=this.getPixelForTick(0)-this.left,p=this.right-this.getPixelForTick(this.ticks.length-1);let g=0,x=0;c?f?(g=i*t.width,x=r*n.height):(g=r*t.height,x=i*n.width):s==="start"?x=n.width:s==="end"?g=t.width:s!=="inner"&&(g=t.width/2,x=n.width/2),this.paddingLeft=Math.max((g-h+o)*this.width/(this.width-h),0),this.paddingRight=Math.max((x-p+o)*this.width/(this.width-p),0)}else{let h=n.height/2,p=t.height/2;s==="start"?(h=0,p=t.height):s==="end"&&(h=n.height,p=0),this.paddingTop=h+o,this.paddingBottom=p+o}}_handleMargins(){this._margins&&(this._margins.left=Math.max(this.paddingLeft,this._margins.left),this._margins.top=Math.max(this.paddingTop,this._margins.top),this._margins.right=Math.max(this.paddingRight,this._margins.right),this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom))}afterFit(){callback(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:n}=this.options;return n==="top"||n==="bottom"||t==="x"}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){this.beforeTickToLabelConversion(),this.generateTickLabels(t);let n,r;for(n=0,r=t.length;n<r;n++)isNullOrUndef(t[n].label)&&(t.splice(n,1),r--,n--);this.afterTickToLabelConversion()}_getLabelSizes(){let t=this._labelSizes;if(!t){const n=this.options.ticks.sampleSize;let r=this.ticks;n<r.length&&(r=sample(r,n)),this._labelSizes=t=this._computeLabelSizes(r,r.length,this.options.ticks.maxTicksLimit)}return t}_computeLabelSizes(t,n,r){const{ctx:i,_longestTextCache:s}=this,o=[],l=[],c=Math.floor(n/getTicksLimit(n,r));let f=0,h=0,p,g,x,D,y,E,F,B,M,k,T;for(p=0;p<n;p+=c){if(D=t[p].label,y=this._resolveTickFontOptions(p),i.font=E=y.string,F=s[E]=s[E]||{data:{},gc:[]},B=y.lineHeight,M=k=0,!isNullOrUndef(D)&&!isArray(D))M=_measureText(i,F.data,F.gc,M,D),k=B;else if(isArray(D))for(g=0,x=D.length;g<x;++g)T=D[g],!isNullOrUndef(T)&&!isArray(T)&&(M=_measureText(i,F.data,F.gc,M,T),k+=B);o.push(M),l.push(k),f=Math.max(M,f),h=Math.max(k,h)}garbageCollect(s,n);const N=o.indexOf(f),$=l.indexOf(h),R=O=>({width:o[O]||0,height:l[O]||0});return{first:R(0),last:R(n-1),widest:R(N),highest:R($),widths:o,heights:l}}getLabelForValue(t){return t}getPixelForValue(t,n){return NaN}getValueForPixel(t){}getPixelForTick(t){const n=this.ticks;return t<0||t>n.length-1?null:this.getPixelForValue(n[t].value)}getPixelForDecimal(t){this._reversePixels&&(t=1-t);const n=this._startPixel+t*this._length;return _int16Range(this._alignToPixels?_alignPixel(this.chart,n,0):n)}getDecimalForPixel(t){const n=(t-this._startPixel)/this._length;return this._reversePixels?1-n:n}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:n}=this;return t<0&&n<0?n:t>0&&n>0?t:0}getContext(t){const n=this.ticks||[];if(t>=0&&t<n.length){const r=n[t];return r.$context||(r.$context=createTickContext(this.getContext(),t,r))}return this.$context||(this.$context=createScaleContext(this.chart.getContext(),this))}_tickSize(){const t=this.options.ticks,n=toRadians(this.labelRotation),r=Math.abs(Math.cos(n)),i=Math.abs(Math.sin(n)),s=this._getLabelSizes(),o=t.autoSkipPadding||0,l=s?s.widest.width+o:0,c=s?s.highest.height+o:0;return this.isHorizontal()?c*r>l*i?l/r:c/i:c*i<l*r?c/r:l/i}_isVisible(){const t=this.options.display;return t!=="auto"?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const n=this.axis,r=this.chart,i=this.options,{grid:s,position:o,border:l}=i,c=s.offset,f=this.isHorizontal(),p=this.ticks.length+(c?1:0),g=getTickMarkLength(s),x=[],D=l.setContext(this.getContext()),y=D.display?D.width:0,E=y/2,F=function(s0){return _alignPixel(r,s0,y)};let B,M,k,T,N,$,R,O,L,z,X,o0;if(o==="top")B=F(this.bottom),$=this.bottom-g,O=B-E,z=F(t.top)+E,o0=t.bottom;else if(o==="bottom")B=F(this.top),z=t.top,o0=F(t.bottom)-E,$=B+E,O=this.top+g;else if(o==="left")B=F(this.right),N=this.right-g,R=B-E,L=F(t.left)+E,X=t.right;else if(o==="right")B=F(this.left),L=t.left,X=F(t.right)-E,N=B+E,R=this.left+g;else if(n==="x"){if(o==="center")B=F((t.top+t.bottom)/2+.5);else if(isObject(o)){const s0=Object.keys(o)[0],S0=o[s0];B=F(this.chart.scales[s0].getPixelForValue(S0))}z=t.top,o0=t.bottom,$=B+E,O=$+g}else if(n==="y"){if(o==="center")B=F((t.left+t.right)/2);else if(isObject(o)){const s0=Object.keys(o)[0],S0=o[s0];B=F(this.chart.scales[s0].getPixelForValue(S0))}N=B-E,R=N-g,L=t.left,X=t.right}const Z=valueOrDefault(i.ticks.maxTicksLimit,p),n0=Math.max(1,Math.ceil(p/Z));for(M=0;M<p;M+=n0){const s0=this.getContext(M),S0=s.setContext(s0),r0=l.setContext(s0),p0=S0.lineWidth,h0=S0.color,G=r0.dash||[],Q=r0.dashOffset,M0=S0.tickWidth,C0=S0.tickColor,e0=S0.tickBorderDash||[],F0=S0.tickBorderDashOffset;k=getPixelForGridLine(this,M,c),k!==void 0&&(T=_alignPixel(r,k,p0),f?N=R=L=X=T:$=O=z=o0=T,x.push({tx1:N,ty1:$,tx2:R,ty2:O,x1:L,y1:z,x2:X,y2:o0,width:p0,color:h0,borderDash:G,borderDashOffset:Q,tickWidth:M0,tickColor:C0,tickBorderDash:e0,tickBorderDashOffset:F0}))}return this._ticksLength=p,this._borderValue=B,x}_computeLabelItems(t){const n=this.axis,r=this.options,{position:i,ticks:s}=r,o=this.isHorizontal(),l=this.ticks,{align:c,crossAlign:f,padding:h,mirror:p}=s,g=getTickMarkLength(r.grid),x=g+h,D=p?-h:x,y=-toRadians(this.labelRotation),E=[];let F,B,M,k,T,N,$,R,O,L,z,X,o0="middle";if(i==="top")N=this.bottom-D,$=this._getXAxisLabelAlignment();else if(i==="bottom")N=this.top+D,$=this._getXAxisLabelAlignment();else if(i==="left"){const n0=this._getYAxisLabelAlignment(g);$=n0.textAlign,T=n0.x}else if(i==="right"){const n0=this._getYAxisLabelAlignment(g);$=n0.textAlign,T=n0.x}else if(n==="x"){if(i==="center")N=(t.top+t.bottom)/2+x;else if(isObject(i)){const n0=Object.keys(i)[0],s0=i[n0];N=this.chart.scales[n0].getPixelForValue(s0)+x}$=this._getXAxisLabelAlignment()}else if(n==="y"){if(i==="center")T=(t.left+t.right)/2-x;else if(isObject(i)){const n0=Object.keys(i)[0],s0=i[n0];T=this.chart.scales[n0].getPixelForValue(s0)}$=this._getYAxisLabelAlignment(g).textAlign}n==="y"&&(c==="start"?o0="top":c==="end"&&(o0="bottom"));const Z=this._getLabelSizes();for(F=0,B=l.length;F<B;++F){M=l[F],k=M.label;const n0=s.setContext(this.getContext(F));R=this.getPixelForTick(F)+s.labelOffset,O=this._resolveTickFontOptions(F),L=O.lineHeight,z=isArray(k)?k.length:1;const s0=z/2,S0=n0.color,r0=n0.textStrokeColor,p0=n0.textStrokeWidth;let h0=$;o?(T=R,$==="inner"&&(F===B-1?h0=this.options.reverse?"left":"right":F===0?h0=this.options.reverse?"right":"left":h0="center"),i==="top"?f==="near"||y!==0?X=-z*L+L/2:f==="center"?X=-Z.highest.height/2-s0*L+L:X=-Z.highest.height+L/2:f==="near"||y!==0?X=L/2:f==="center"?X=Z.highest.height/2-s0*L:X=Z.highest.height-z*L,p&&(X*=-1),y!==0&&!n0.showLabelBackdrop&&(T+=L/2*Math.sin(y))):(N=R,X=(1-z)*L/2);let G;if(n0.showLabelBackdrop){const Q=toPadding(n0.backdropPadding),M0=Z.heights[F],C0=Z.widths[F];let e0=X-Q.top,F0=0-Q.left;switch(o0){case"middle":e0-=M0/2;break;case"bottom":e0-=M0;break}switch($){case"center":F0-=C0/2;break;case"right":F0-=C0;break;case"inner":F===B-1?F0-=C0:F>0&&(F0-=C0/2);break}G={left:F0,top:e0,width:C0+Q.width,height:M0+Q.height,color:n0.backdropColor}}E.push({label:k,font:O,textOffset:X,options:{rotation:y,color:S0,strokeColor:r0,strokeWidth:p0,textAlign:h0,textBaseline:o0,translation:[T,N],backdrop:G}})}return E}_getXAxisLabelAlignment(){const{position:t,ticks:n}=this.options;if(-toRadians(this.labelRotation))return t==="top"?"left":"right";let i="center";return n.align==="start"?i="left":n.align==="end"?i="right":n.align==="inner"&&(i="inner"),i}_getYAxisLabelAlignment(t){const{position:n,ticks:{crossAlign:r,mirror:i,padding:s}}=this.options,o=this._getLabelSizes(),l=t+s,c=o.widest.width;let f,h;return n==="left"?i?(h=this.right+s,r==="near"?f="left":r==="center"?(f="center",h+=c/2):(f="right",h+=c)):(h=this.right-l,r==="near"?f="right":r==="center"?(f="center",h-=c/2):(f="left",h=this.left)):n==="right"?i?(h=this.left+s,r==="near"?f="right":r==="center"?(f="center",h-=c/2):(f="left",h-=c)):(h=this.left+l,r==="near"?f="left":r==="center"?(f="center",h+=c/2):(f="right",h=this.right)):f="right",{textAlign:f,x:h}}_computeLabelArea(){if(this.options.ticks.mirror)return;const t=this.chart,n=this.options.position;if(n==="left"||n==="right")return{top:0,left:this.left,bottom:t.height,right:this.right};if(n==="top"||n==="bottom")return{top:this.top,left:0,bottom:this.bottom,right:t.width}}drawBackground(){const{ctx:t,options:{backgroundColor:n},left:r,top:i,width:s,height:o}=this;n&&(t.save(),t.fillStyle=n,t.fillRect(r,i,s,o),t.restore())}getLineWidthForValue(t){const n=this.options.grid;if(!this._isVisible()||!n.display)return 0;const i=this.ticks.findIndex(s=>s.value===t);return i>=0?n.setContext(this.getContext(i)).lineWidth:0}drawGrid(t){const n=this.options.grid,r=this.ctx,i=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(t));let s,o;const l=(c,f,h)=>{!h.width||!h.color||(r.save(),r.lineWidth=h.width,r.strokeStyle=h.color,r.setLineDash(h.borderDash||[]),r.lineDashOffset=h.borderDashOffset,r.beginPath(),r.moveTo(c.x,c.y),r.lineTo(f.x,f.y),r.stroke(),r.restore())};if(n.display)for(s=0,o=i.length;s<o;++s){const c=i[s];n.drawOnChartArea&&l({x:c.x1,y:c.y1},{x:c.x2,y:c.y2},c),n.drawTicks&&l({x:c.tx1,y:c.ty1},{x:c.tx2,y:c.ty2},{color:c.tickColor,width:c.tickWidth,borderDash:c.tickBorderDash,borderDashOffset:c.tickBorderDashOffset})}}drawBorder(){const{chart:t,ctx:n,options:{border:r,grid:i}}=this,s=r.setContext(this.getContext()),o=r.display?s.width:0;if(!o)return;const l=i.setContext(this.getContext(0)).lineWidth,c=this._borderValue;let f,h,p,g;this.isHorizontal()?(f=_alignPixel(t,this.left,o)-o/2,h=_alignPixel(t,this.right,l)+l/2,p=g=c):(p=_alignPixel(t,this.top,o)-o/2,g=_alignPixel(t,this.bottom,l)+l/2,f=h=c),n.save(),n.lineWidth=s.width,n.strokeStyle=s.color,n.beginPath(),n.moveTo(f,p),n.lineTo(h,g),n.stroke(),n.restore()}drawLabels(t){if(!this.options.ticks.display)return;const r=this.ctx,i=this._computeLabelArea();i&&clipArea(r,i);const s=this.getLabelItems(t);for(const o of s){const l=o.options,c=o.font,f=o.label,h=o.textOffset;renderText(r,f,0,h,c,l)}i&&unclipArea(r)}drawTitle(){const{ctx:t,options:{position:n,title:r,reverse:i}}=this;if(!r.display)return;const s=toFont(r.font),o=toPadding(r.padding),l=r.align;let c=s.lineHeight/2;n==="bottom"||n==="center"||isObject(n)?(c+=o.bottom,isArray(r.text)&&(c+=s.lineHeight*(r.text.length-1))):c+=o.top;const{titleX:f,titleY:h,maxWidth:p,rotation:g}=titleArgs(this,c,n,l);renderText(t,r.text,0,0,s,{color:r.color,maxWidth:p,rotation:g,textAlign:titleAlign(l,n,i),textBaseline:"middle",translation:[f,h]})}draw(t){this._isVisible()&&(this.drawBackground(),this.drawGrid(t),this.drawBorder(),this.drawTitle(),this.drawLabels(t))}_layers(){const t=this.options,n=t.ticks&&t.ticks.z||0,r=valueOrDefault(t.grid&&t.grid.z,-1),i=valueOrDefault(t.border&&t.border.z,0);return!this._isVisible()||this.draw!==Scale.prototype.draw?[{z:n,draw:s=>{this.draw(s)}}]:[{z:r,draw:s=>{this.drawBackground(),this.drawGrid(s),this.drawTitle()}},{z:i,draw:()=>{this.drawBorder()}},{z:n,draw:s=>{this.drawLabels(s)}}]}getMatchingVisibleMetas(t){const n=this.chart.getSortedVisibleDatasetMetas(),r=this.axis+"AxisID",i=[];let s,o;for(s=0,o=n.length;s<o;++s){const l=n[s];l[r]===this.id&&(!t||l.type===t)&&i.push(l)}return i}_resolveTickFontOptions(t){const n=this.options.ticks.setContext(this.getContext(t));return toFont(n.font)}_maxDigits(){const t=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/t}}class TypedRegistry{constructor(t,n,r){this.type=t,this.scope=n,this.override=r,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const n=Object.getPrototypeOf(t);let r;isIChartComponent(n)&&(r=this.register(n));const i=this.items,s=t.id,o=this.scope+"."+s;if(!s)throw new Error("class does not have id: "+t);return s in i||(i[s]=t,registerDefaults(t,o,r),this.override&&defaults.override(t.id,t.overrides)),o}get(t){return this.items[t]}unregister(t){const n=this.items,r=t.id,i=this.scope;r in n&&delete n[r],i&&r in defaults[i]&&(delete defaults[i][r],this.override&&delete overrides[r])}}function registerDefaults(e,t,n){const r=merge(Object.create(null),[n?defaults.get(n):{},defaults.get(t),e.defaults]);defaults.set(t,r),e.defaultRoutes&&routeDefaults(t,e.defaultRoutes),e.descriptors&&defaults.describe(t,e.descriptors)}function routeDefaults(e,t){Object.keys(t).forEach(n=>{const r=n.split("."),i=r.pop(),s=[e].concat(r).join("."),o=t[n].split("."),l=o.pop(),c=o.join(".");defaults.route(s,i,c,l)})}function isIChartComponent(e){return"id"in e&&"defaults"in e}class Registry{constructor(){this.controllers=new TypedRegistry(DatasetController,"datasets",!0),this.elements=new TypedRegistry(Element,"elements"),this.plugins=new TypedRegistry(Object,"plugins"),this.scales=new TypedRegistry(Scale,"scales"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each("register",t)}remove(...t){this._each("unregister",t)}addControllers(...t){this._each("register",t,this.controllers)}addElements(...t){this._each("register",t,this.elements)}addPlugins(...t){this._each("register",t,this.plugins)}addScales(...t){this._each("register",t,this.scales)}getController(t){return this._get(t,this.controllers,"controller")}getElement(t){return this._get(t,this.elements,"element")}getPlugin(t){return this._get(t,this.plugins,"plugin")}getScale(t){return this._get(t,this.scales,"scale")}removeControllers(...t){this._each("unregister",t,this.controllers)}removeElements(...t){this._each("unregister",t,this.elements)}removePlugins(...t){this._each("unregister",t,this.plugins)}removeScales(...t){this._each("unregister",t,this.scales)}_each(t,n,r){[...n].forEach(i=>{const s=r||this._getRegistryForType(i);r||s.isForType(i)||s===this.plugins&&i.id?this._exec(t,s,i):each(i,o=>{const l=r||this._getRegistryForType(o);this._exec(t,l,o)})})}_exec(t,n,r){const i=_capitalize(t);callback(r["before"+i],[],r),n[t](r),callback(r["after"+i],[],r)}_getRegistryForType(t){for(let n=0;n<this._typedRegistries.length;n++){const r=this._typedRegistries[n];if(r.isForType(t))return r}return this.plugins}_get(t,n,r){const i=n.get(t);if(i===void 0)throw new Error('"'+t+'" is not a registered '+r+".");return i}}var registry=new Registry;class PluginService{constructor(){this._init=[]}notify(t,n,r,i){n==="beforeInit"&&(this._init=this._createDescriptors(t,!0),this._notify(this._init,t,"install"));const s=i?this._descriptors(t).filter(i):this._descriptors(t),o=this._notify(s,t,n,r);return n==="afterDestroy"&&(this._notify(s,t,"stop"),this._notify(this._init,t,"uninstall")),o}_notify(t,n,r,i){i=i||{};for(const s of t){const o=s.plugin,l=o[r],c=[n,i,s.options];if(callback(l,c,o)===!1&&i.cancelable)return!1}return!0}invalidate(){isNullOrUndef(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const n=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),n}_createDescriptors(t,n){const r=t&&t.config,i=valueOrDefault(r.options&&r.options.plugins,{}),s=allPlugins(r);return i===!1&&!n?[]:createDescriptors(t,s,i,n)}_notifyStateChanges(t){const n=this._oldCache||[],r=this._cache,i=(s,o)=>s.filter(l=>!o.some(c=>l.plugin.id===c.plugin.id));this._notify(i(n,r),t,"stop"),this._notify(i(r,n),t,"start")}}function allPlugins(e){const t={},n=[],r=Object.keys(registry.plugins.items);for(let s=0;s<r.length;s++)n.push(registry.getPlugin(r[s]));const i=e.plugins||[];for(let s=0;s<i.length;s++){const o=i[s];n.indexOf(o)===-1&&(n.push(o),t[o.id]=!0)}return{plugins:n,localIds:t}}function getOpts(e,t){return!t&&e===!1?null:e===!0?{}:e}function createDescriptors(e,{plugins:t,localIds:n},r,i){const s=[],o=e.getContext();for(const l of t){const c=l.id,f=getOpts(r[c],i);f!==null&&s.push({plugin:l,options:pluginOpts(e.config,{plugin:l,local:n[c]},f,o)})}return s}function pluginOpts(e,{plugin:t,local:n},r,i){const s=e.pluginScopeKeys(t),o=e.getOptionScopes(r,s);return n&&t.defaults&&o.push(t.defaults),e.createResolver(o,i,[""],{scriptable:!1,indexable:!1,allKeys:!0})}function getIndexAxis(e,t){const n=defaults.datasets[e]||{};return((t.datasets||{})[e]||{}).indexAxis||t.indexAxis||n.indexAxis||"x"}function getAxisFromDefaultScaleID(e,t){let n=e;return e==="_index_"?n=t:e==="_value_"&&(n=t==="x"?"y":"x"),n}function getDefaultScaleIDFromAxis(e,t){return e===t?"_index_":"_value_"}function idMatchesAxis(e){if(e==="x"||e==="y"||e==="r")return e}function axisFromPosition(e){if(e==="top"||e==="bottom")return"x";if(e==="left"||e==="right")return"y"}function determineAxis(e,...t){if(idMatchesAxis(e))return e;for(const n of t){const r=n.axis||axisFromPosition(n.position)||e.length>1&&idMatchesAxis(e[0].toLowerCase());if(r)return r}throw new Error(`Cannot determine type of '${e}' axis. Please provide 'axis' or 'position' option.`)}function getAxisFromDataset(e,t,n){if(n[t+"AxisID"]===e)return{axis:t}}function retrieveAxisFromDatasets(e,t){if(t.data&&t.data.datasets){const n=t.data.datasets.filter(r=>r.xAxisID===e||r.yAxisID===e);if(n.length)return getAxisFromDataset(e,"x",n[0])||getAxisFromDataset(e,"y",n[0])}return{}}function mergeScaleConfig(e,t){const n=overrides[e.type]||{scales:{}},r=t.scales||{},i=getIndexAxis(e.type,t),s=Object.create(null);return Object.keys(r).forEach(o=>{const l=r[o];if(!isObject(l))return console.error(`Invalid scale configuration for scale: ${o}`);if(l._proxy)return console.warn(`Ignoring resolver passed as options for scale: ${o}`);const c=determineAxis(o,l,retrieveAxisFromDatasets(o,e),defaults.scales[l.type]),f=getDefaultScaleIDFromAxis(c,i),h=n.scales||{};s[o]=mergeIf(Object.create(null),[{axis:c},l,h[c],h[f]])}),e.data.datasets.forEach(o=>{const l=o.type||e.type,c=o.indexAxis||getIndexAxis(l,t),h=(overrides[l]||{}).scales||{};Object.keys(h).forEach(p=>{const g=getAxisFromDefaultScaleID(p,c),x=o[g+"AxisID"]||g;s[x]=s[x]||Object.create(null),mergeIf(s[x],[{axis:g},r[x],h[p]])})}),Object.keys(s).forEach(o=>{const l=s[o];mergeIf(l,[defaults.scales[l.type],defaults.scale])}),s}function initOptions(e){const t=e.options||(e.options={});t.plugins=valueOrDefault(t.plugins,{}),t.scales=mergeScaleConfig(e,t)}function initData(e){return e=e||{},e.datasets=e.datasets||[],e.labels=e.labels||[],e}function initConfig(e){return e=e||{},e.data=initData(e.data),initOptions(e),e}const keyCache=new Map,keysCached=new Set;function cachedKeys(e,t){let n=keyCache.get(e);return n||(n=t(),keyCache.set(e,n),keysCached.add(n)),n}const addIfFound=(e,t,n)=>{const r=resolveObjectKey(t,n);r!==void 0&&e.add(r)};class Config{constructor(t){this._config=initConfig(t),this._scopeCache=new Map,this._resolverCache=new Map}get platform(){return this._config.platform}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=initData(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),initOptions(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return cachedKeys(t,()=>[[`datasets.${t}`,""]])}datasetAnimationScopeKeys(t,n){return cachedKeys(`${t}.transition.${n}`,()=>[[`datasets.${t}.transitions.${n}`,`transitions.${n}`],[`datasets.${t}`,""]])}datasetElementScopeKeys(t,n){return cachedKeys(`${t}-${n}`,()=>[[`datasets.${t}.elements.${n}`,`datasets.${t}`,`elements.${n}`,""]])}pluginScopeKeys(t){const n=t.id,r=this.type;return cachedKeys(`${r}-plugin-${n}`,()=>[[`plugins.${n}`,...t.additionalOptionScopes||[]]])}_cachedScopes(t,n){const r=this._scopeCache;let i=r.get(t);return(!i||n)&&(i=new Map,r.set(t,i)),i}getOptionScopes(t,n,r){const{options:i,type:s}=this,o=this._cachedScopes(t,r),l=o.get(n);if(l)return l;const c=new Set;n.forEach(h=>{t&&(c.add(t),h.forEach(p=>addIfFound(c,t,p))),h.forEach(p=>addIfFound(c,i,p)),h.forEach(p=>addIfFound(c,overrides[s]||{},p)),h.forEach(p=>addIfFound(c,defaults,p)),h.forEach(p=>addIfFound(c,descriptors,p))});const f=Array.from(c);return f.length===0&&f.push(Object.create(null)),keysCached.has(n)&&o.set(n,f),f}chartOptionScopes(){const{options:t,type:n}=this;return[t,overrides[n]||{},defaults.datasets[n]||{},{type:n},defaults,descriptors]}resolveNamedOptions(t,n,r,i=[""]){const s={$shared:!0},{resolver:o,subPrefixes:l}=getResolver(this._resolverCache,t,i);let c=o;if(needContext(o,n)){s.$shared=!1,r=isFunction(r)?r():r;const f=this.createResolver(t,r,l);c=_attachContext(o,r,f)}for(const f of n)s[f]=c[f];return s}createResolver(t,n,r=[""],i){const{resolver:s}=getResolver(this._resolverCache,t,r);return isObject(n)?_attachContext(s,n,void 0,i):s}}function getResolver(e,t,n){let r=e.get(t);r||(r=new Map,e.set(t,r));const i=n.join();let s=r.get(i);return s||(s={resolver:_createResolver(t,n),subPrefixes:n.filter(l=>!l.toLowerCase().includes("hover"))},r.set(i,s)),s}const hasFunction=e=>isObject(e)&&Object.getOwnPropertyNames(e).some(t=>isFunction(e[t]));function needContext(e,t){const{isScriptable:n,isIndexable:r}=_descriptors(e);for(const i of t){const s=n(i),o=r(i),l=(o||s)&&e[i];if(s&&(isFunction(l)||hasFunction(l))||o&&isArray(l))return!0}return!1}var version="4.4.7";const KNOWN_POSITIONS=["top","bottom","left","right","chartArea"];function positionIsHorizontal(e,t){return e==="top"||e==="bottom"||KNOWN_POSITIONS.indexOf(e)===-1&&t==="x"}function compare2Level(e,t){return function(n,r){return n[e]===r[e]?n[t]-r[t]:n[e]-r[e]}}function onAnimationsComplete(e){const t=e.chart,n=t.options.animation;t.notifyPlugins("afterRender"),callback(n&&n.onComplete,[e],t)}function onAnimationProgress(e){const t=e.chart,n=t.options.animation;callback(n&&n.onProgress,[e],t)}function getCanvas(e){return _isDomSupported()&&typeof e=="string"?e=document.getElementById(e):e&&e.length&&(e=e[0]),e&&e.canvas&&(e=e.canvas),e}const instances={},getChart=e=>{const t=getCanvas(e);return Object.values(instances).filter(n=>n.canvas===t).pop()};function moveNumericKeys(e,t,n){const r=Object.keys(e);for(const i of r){const s=+i;if(s>=t){const o=e[i];delete e[i],(n>0||s>t)&&(e[s+n]=o)}}}function determineLastEvent(e,t,n,r){return!n||e.type==="mouseout"?null:r?t:e}function getSizeForArea(e,t,n){return e.options.clip?e[n]:t[n]}function getDatasetArea(e,t){const{xScale:n,yScale:r}=e;return n&&r?{left:getSizeForArea(n,t,"left"),right:getSizeForArea(n,t,"right"),top:getSizeForArea(r,t,"top"),bottom:getSizeForArea(r,t,"bottom")}:t}var y4;let Chart$1=(y4=class{static register(...t){registry.add(...t),invalidatePlugins()}static unregister(...t){registry.remove(...t),invalidatePlugins()}constructor(t,n){const r=this.config=new Config(n),i=getCanvas(t),s=getChart(i);if(s)throw new Error("Canvas is already in use. Chart with ID '"+s.id+"' must be destroyed before the canvas with ID '"+s.canvas.id+"' can be reused.");const o=r.createResolver(r.chartOptionScopes(),this.getContext());this.platform=new(r.platform||_detectPlatform(i)),this.platform.updateConfig(r);const l=this.platform.acquireContext(i,o.aspectRatio),c=l&&l.canvas,f=c&&c.height,h=c&&c.width;if(this.id=uid(),this.ctx=l,this.canvas=c,this.width=h,this.height=f,this._options=o,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this._plugins=new PluginService,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=debounce(p=>this.update(p),o.resizeDelay||0),this._dataChanges=[],instances[this.id]=this,!l||!c){console.error("Failed to create chart: can't acquire context from the given item");return}animator.listen(this,"complete",onAnimationsComplete),animator.listen(this,"progress",onAnimationProgress),this._initialize(),this.attached&&this.update()}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:n},width:r,height:i,_aspectRatio:s}=this;return isNullOrUndef(t)?n&&s?s:i?r/i:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}get registry(){return registry}_initialize(){return this.notifyPlugins("beforeInit"),this.options.responsive?this.resize():retinaScale(this,this.options.devicePixelRatio),this.bindEvents(),this.notifyPlugins("afterInit"),this}clear(){return clearCanvas(this.canvas,this.ctx),this}stop(){return animator.stop(this),this}resize(t,n){animator.running(this)?this._resizeBeforeDraw={width:t,height:n}:this._resize(t,n)}_resize(t,n){const r=this.options,i=this.canvas,s=r.maintainAspectRatio&&this.aspectRatio,o=this.platform.getMaximumSize(i,t,n,s),l=r.devicePixelRatio||this.platform.getDevicePixelRatio(),c=this.width?"resize":"attach";this.width=o.width,this.height=o.height,this._aspectRatio=this.aspectRatio,retinaScale(this,l,!0)&&(this.notifyPlugins("resize",{size:o}),callback(r.onResize,[this,o],this),this.attached&&this._doResize(c)&&this.render())}ensureScalesHaveIDs(){const n=this.options.scales||{};each(n,(r,i)=>{r.id=i})}buildOrUpdateScales(){const t=this.options,n=t.scales,r=this.scales,i=Object.keys(r).reduce((o,l)=>(o[l]=!1,o),{});let s=[];n&&(s=s.concat(Object.keys(n).map(o=>{const l=n[o],c=determineAxis(o,l),f=c==="r",h=c==="x";return{options:l,dposition:f?"chartArea":h?"bottom":"left",dtype:f?"radialLinear":h?"category":"linear"}}))),each(s,o=>{const l=o.options,c=l.id,f=determineAxis(c,l),h=valueOrDefault(l.type,o.dtype);(l.position===void 0||positionIsHorizontal(l.position,f)!==positionIsHorizontal(o.dposition))&&(l.position=o.dposition),i[c]=!0;let p=null;if(c in r&&r[c].type===h)p=r[c];else{const g=registry.getScale(h);p=new g({id:c,type:h,ctx:this.ctx,chart:this}),r[p.id]=p}p.init(l,t)}),each(i,(o,l)=>{o||delete r[l]}),each(r,o=>{layouts.configure(this,o,o.options),layouts.addBox(this,o)})}_updateMetasets(){const t=this._metasets,n=this.data.datasets.length,r=t.length;if(t.sort((i,s)=>i.index-s.index),r>n){for(let i=n;i<r;++i)this._destroyDatasetMeta(i);t.splice(n,r-n)}this._sortedMetasets=t.slice(0).sort(compare2Level("order","index"))}_removeUnreferencedMetasets(){const{_metasets:t,data:{datasets:n}}=this;t.length>n.length&&delete this._stacks,t.forEach((r,i)=>{n.filter(s=>s===r._dataset).length===0&&this._destroyDatasetMeta(i)})}buildOrUpdateControllers(){const t=[],n=this.data.datasets;let r,i;for(this._removeUnreferencedMetasets(),r=0,i=n.length;r<i;r++){const s=n[r];let o=this.getDatasetMeta(r);const l=s.type||this.config.type;if(o.type&&o.type!==l&&(this._destroyDatasetMeta(r),o=this.getDatasetMeta(r)),o.type=l,o.indexAxis=s.indexAxis||getIndexAxis(l,this.options),o.order=s.order||0,o.index=r,o.label=""+s.label,o.visible=this.isDatasetVisible(r),o.controller)o.controller.updateIndex(r),o.controller.linkScales();else{const c=registry.getController(l),{datasetElementType:f,dataElementType:h}=defaults.datasets[l];Object.assign(c,{dataElementType:registry.getElement(h),datasetElementType:f&&registry.getElement(f)}),o.controller=new c(this,r),t.push(o.controller)}}return this._updateMetasets(),t}_resetElements(){each(this.data.datasets,(t,n)=>{this.getDatasetMeta(n).controller.reset()},this)}reset(){this._resetElements(),this.notifyPlugins("reset")}update(t){const n=this.config;n.update();const r=this._options=n.createResolver(n.chartOptionScopes(),this.getContext()),i=this._animationsDisabled=!r.animation;if(this._updateScales(),this._checkEventBindings(),this._updateHiddenIndices(),this._plugins.invalidate(),this.notifyPlugins("beforeUpdate",{mode:t,cancelable:!0})===!1)return;const s=this.buildOrUpdateControllers();this.notifyPlugins("beforeElementsUpdate");let o=0;for(let f=0,h=this.data.datasets.length;f<h;f++){const{controller:p}=this.getDatasetMeta(f),g=!i&&s.indexOf(p)===-1;p.buildOrUpdateElements(g),o=Math.max(+p.getMaxOverflow(),o)}o=this._minPadding=r.layout.autoPadding?o:0,this._updateLayout(o),i||each(s,f=>{f.reset()}),this._updateDatasets(t),this.notifyPlugins("afterUpdate",{mode:t}),this._layers.sort(compare2Level("z","_idx"));const{_active:l,_lastEvent:c}=this;c?this._eventHandler(c,!0):l.length&&this._updateHoverStyles(l,l,!0),this.render()}_updateScales(){each(this.scales,t=>{layouts.removeBox(this,t)}),this.ensureScalesHaveIDs(),this.buildOrUpdateScales()}_checkEventBindings(){const t=this.options,n=new Set(Object.keys(this._listeners)),r=new Set(t.events);(!setsEqual(n,r)||!!this._responsiveListeners!==t.responsive)&&(this.unbindEvents(),this.bindEvents())}_updateHiddenIndices(){const{_hiddenIndices:t}=this,n=this._getUniformDataChanges()||[];for(const{method:r,start:i,count:s}of n){const o=r==="_removeElements"?-s:s;moveNumericKeys(t,i,o)}}_getUniformDataChanges(){const t=this._dataChanges;if(!t||!t.length)return;this._dataChanges=[];const n=this.data.datasets.length,r=s=>new Set(t.filter(o=>o[0]===s).map((o,l)=>l+","+o.splice(1).join(","))),i=r(0);for(let s=1;s<n;s++)if(!setsEqual(i,r(s)))return;return Array.from(i).map(s=>s.split(",")).map(s=>({method:s[1],start:+s[2],count:+s[3]}))}_updateLayout(t){if(this.notifyPlugins("beforeLayout",{cancelable:!0})===!1)return;layouts.update(this,this.width,this.height,t);const n=this.chartArea,r=n.width<=0||n.height<=0;this._layers=[],each(this.boxes,i=>{r&&i.position==="chartArea"||(i.configure&&i.configure(),this._layers.push(...i._layers()))},this),this._layers.forEach((i,s)=>{i._idx=s}),this.notifyPlugins("afterLayout")}_updateDatasets(t){if(this.notifyPlugins("beforeDatasetsUpdate",{mode:t,cancelable:!0})!==!1){for(let n=0,r=this.data.datasets.length;n<r;++n)this.getDatasetMeta(n).controller.configure();for(let n=0,r=this.data.datasets.length;n<r;++n)this._updateDataset(n,isFunction(t)?t({datasetIndex:n}):t);this.notifyPlugins("afterDatasetsUpdate",{mode:t})}}_updateDataset(t,n){const r=this.getDatasetMeta(t),i={meta:r,index:t,mode:n,cancelable:!0};this.notifyPlugins("beforeDatasetUpdate",i)!==!1&&(r.controller._update(n),i.cancelable=!1,this.notifyPlugins("afterDatasetUpdate",i))}render(){this.notifyPlugins("beforeRender",{cancelable:!0})!==!1&&(animator.has(this)?this.attached&&!animator.running(this)&&animator.start(this):(this.draw(),onAnimationsComplete({chart:this})))}draw(){let t;if(this._resizeBeforeDraw){const{width:r,height:i}=this._resizeBeforeDraw;this._resizeBeforeDraw=null,this._resize(r,i)}if(this.clear(),this.width<=0||this.height<=0||this.notifyPlugins("beforeDraw",{cancelable:!0})===!1)return;const n=this._layers;for(t=0;t<n.length&&n[t].z<=0;++t)n[t].draw(this.chartArea);for(this._drawDatasets();t<n.length;++t)n[t].draw(this.chartArea);this.notifyPlugins("afterDraw")}_getSortedDatasetMetas(t){const n=this._sortedMetasets,r=[];let i,s;for(i=0,s=n.length;i<s;++i){const o=n[i];(!t||o.visible)&&r.push(o)}return r}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){if(this.notifyPlugins("beforeDatasetsDraw",{cancelable:!0})===!1)return;const t=this.getSortedVisibleDatasetMetas();for(let n=t.length-1;n>=0;--n)this._drawDataset(t[n]);this.notifyPlugins("afterDatasetsDraw")}_drawDataset(t){const n=this.ctx,r=t._clip,i=!r.disabled,s=getDatasetArea(t,this.chartArea),o={meta:t,index:t.index,cancelable:!0};this.notifyPlugins("beforeDatasetDraw",o)!==!1&&(i&&clipArea(n,{left:r.left===!1?0:s.left-r.left,right:r.right===!1?this.width:s.right+r.right,top:r.top===!1?0:s.top-r.top,bottom:r.bottom===!1?this.height:s.bottom+r.bottom}),t.controller.draw(),i&&unclipArea(n),o.cancelable=!1,this.notifyPlugins("afterDatasetDraw",o))}isPointInArea(t){return _isPointInArea(t,this.chartArea,this._minPadding)}getElementsAtEventForMode(t,n,r,i){const s=Interaction.modes[n];return typeof s=="function"?s(this,t,r,i):[]}getDatasetMeta(t){const n=this.data.datasets[t],r=this._metasets;let i=r.filter(s=>s&&s._dataset===n).pop();return i||(i={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:n&&n.order||0,index:t,_dataset:n,_parsed:[],_sorted:!1},r.push(i)),i}getContext(){return this.$context||(this.$context=createContext(null,{chart:this,type:"chart"}))}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const n=this.data.datasets[t];if(!n)return!1;const r=this.getDatasetMeta(t);return typeof r.hidden=="boolean"?!r.hidden:!n.hidden}setDatasetVisibility(t,n){const r=this.getDatasetMeta(t);r.hidden=!n}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateVisibility(t,n,r){const i=r?"show":"hide",s=this.getDatasetMeta(t),o=s.controller._resolveAnimations(void 0,i);defined(n)?(s.data[n].hidden=!r,this.update()):(this.setDatasetVisibility(t,r),o.update(s,{visible:r}),this.update(l=>l.datasetIndex===t?i:void 0))}hide(t,n){this._updateVisibility(t,n,!1)}show(t,n){this._updateVisibility(t,n,!0)}_destroyDatasetMeta(t){const n=this._metasets[t];n&&n.controller&&n.controller._destroy(),delete this._metasets[t]}_stop(){let t,n;for(this.stop(),animator.remove(this),t=0,n=this.data.datasets.length;t<n;++t)this._destroyDatasetMeta(t)}destroy(){this.notifyPlugins("beforeDestroy");const{canvas:t,ctx:n}=this;this._stop(),this.config.clearCache(),t&&(this.unbindEvents(),clearCanvas(t,n),this.platform.releaseContext(n),this.canvas=null,this.ctx=null),delete instances[this.id],this.notifyPlugins("afterDestroy")}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const t=this._listeners,n=this.platform,r=(s,o)=>{n.addEventListener(this,s,o),t[s]=o},i=(s,o,l)=>{s.offsetX=o,s.offsetY=l,this._eventHandler(s)};each(this.options.events,s=>r(s,i))}bindResponsiveEvents(){this._responsiveListeners||(this._responsiveListeners={});const t=this._responsiveListeners,n=this.platform,r=(c,f)=>{n.addEventListener(this,c,f),t[c]=f},i=(c,f)=>{t[c]&&(n.removeEventListener(this,c,f),delete t[c])},s=(c,f)=>{this.canvas&&this.resize(c,f)};let o;const l=()=>{i("attach",l),this.attached=!0,this.resize(),r("resize",s),r("detach",o)};o=()=>{this.attached=!1,i("resize",s),this._stop(),this._resize(0,0),r("attach",l)},n.isAttached(this.canvas)?l():o()}unbindEvents(){each(this._listeners,(t,n)=>{this.platform.removeEventListener(this,n,t)}),this._listeners={},each(this._responsiveListeners,(t,n)=>{this.platform.removeEventListener(this,n,t)}),this._responsiveListeners=void 0}updateHoverStyle(t,n,r){const i=r?"set":"remove";let s,o,l,c;for(n==="dataset"&&(s=this.getDatasetMeta(t[0].datasetIndex),s.controller["_"+i+"DatasetHoverStyle"]()),l=0,c=t.length;l<c;++l){o=t[l];const f=o&&this.getDatasetMeta(o.datasetIndex).controller;f&&f[i+"HoverStyle"](o.element,o.datasetIndex,o.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const n=this._active||[],r=t.map(({datasetIndex:s,index:o})=>{const l=this.getDatasetMeta(s);if(!l)throw new Error("No dataset found at index "+s);return{datasetIndex:s,element:l.data[o],index:o}});!_elementsEqual(r,n)&&(this._active=r,this._lastEvent=null,this._updateHoverStyles(r,n))}notifyPlugins(t,n,r){return this._plugins.notify(this,t,n,r)}isPluginEnabled(t){return this._plugins._cache.filter(n=>n.plugin.id===t).length===1}_updateHoverStyles(t,n,r){const i=this.options.hover,s=(c,f)=>c.filter(h=>!f.some(p=>h.datasetIndex===p.datasetIndex&&h.index===p.index)),o=s(n,t),l=r?t:s(t,n);o.length&&this.updateHoverStyle(o,i.mode,!1),l.length&&i.mode&&this.updateHoverStyle(l,i.mode,!0)}_eventHandler(t,n){const r={event:t,replay:n,cancelable:!0,inChartArea:this.isPointInArea(t)},i=o=>(o.options.events||this.options.events).includes(t.native.type);if(this.notifyPlugins("beforeEvent",r,i)===!1)return;const s=this._handleEvent(t,n,r.inChartArea);return r.cancelable=!1,this.notifyPlugins("afterEvent",r,i),(s||r.changed)&&this.render(),this}_handleEvent(t,n,r){const{_active:i=[],options:s}=this,o=n,l=this._getActiveElements(t,i,r,o),c=_isClickEvent(t),f=determineLastEvent(t,this._lastEvent,r,c);r&&(this._lastEvent=null,callback(s.onHover,[t,l,this],this),c&&callback(s.onClick,[t,l,this],this));const h=!_elementsEqual(l,i);return(h||n)&&(this._active=l,this._updateHoverStyles(l,i,n)),this._lastEvent=f,h}_getActiveElements(t,n,r,i){if(t.type==="mouseout")return[];if(!r)return n;const s=this.options.hover;return this.getElementsAtEventForMode(t,s.mode,s,i)}},A1(y4,"defaults",defaults),A1(y4,"instances",instances),A1(y4,"overrides",overrides),A1(y4,"registry",registry),A1(y4,"version",version),A1(y4,"getChart",getChart),y4);function invalidatePlugins(){return each(Chart$1.instances,e=>e._plugins.invalidate())}function getBarBounds(e,t){const{x:n,y:r,base:i,width:s,height:o}=e.getProps(["x","y","base","width","height"],t);let l,c,f,h,p;return e.horizontal?(p=o/2,l=Math.min(n,i),c=Math.max(n,i),f=r-p,h=r+p):(p=s/2,l=n-p,c=n+p,f=Math.min(r,i),h=Math.max(r,i)),{left:l,top:f,right:c,bottom:h}}function skipOrLimit(e,t,n,r){return e?0:_limitValue(t,n,r)}function parseBorderWidth(e,t,n){const r=e.options.borderWidth,i=e.borderSkipped,s=toTRBL(r);return{t:skipOrLimit(i.top,s.top,0,n),r:skipOrLimit(i.right,s.right,0,t),b:skipOrLimit(i.bottom,s.bottom,0,n),l:skipOrLimit(i.left,s.left,0,t)}}function parseBorderRadius(e,t,n){const{enableBorderRadius:r}=e.getProps(["enableBorderRadius"]),i=e.options.borderRadius,s=toTRBLCorners(i),o=Math.min(t,n),l=e.borderSkipped,c=r||isObject(i);return{topLeft:skipOrLimit(!c||l.top||l.left,s.topLeft,0,o),topRight:skipOrLimit(!c||l.top||l.right,s.topRight,0,o),bottomLeft:skipOrLimit(!c||l.bottom||l.left,s.bottomLeft,0,o),bottomRight:skipOrLimit(!c||l.bottom||l.right,s.bottomRight,0,o)}}function boundingRects(e){const t=getBarBounds(e),n=t.right-t.left,r=t.bottom-t.top,i=parseBorderWidth(e,n/2,r/2),s=parseBorderRadius(e,n/2,r/2);return{outer:{x:t.left,y:t.top,w:n,h:r,radius:s},inner:{x:t.left+i.l,y:t.top+i.t,w:n-i.l-i.r,h:r-i.t-i.b,radius:{topLeft:Math.max(0,s.topLeft-Math.max(i.t,i.l)),topRight:Math.max(0,s.topRight-Math.max(i.t,i.r)),bottomLeft:Math.max(0,s.bottomLeft-Math.max(i.b,i.l)),bottomRight:Math.max(0,s.bottomRight-Math.max(i.b,i.r))}}}}function inRange(e,t,n,r){const i=t===null,s=n===null,l=e&&!(i&&s)&&getBarBounds(e,r);return l&&(i||_isBetween(t,l.left,l.right))&&(s||_isBetween(n,l.top,l.bottom))}function hasRadius(e){return e.topLeft||e.topRight||e.bottomLeft||e.bottomRight}function addNormalRectPath(e,t){e.rect(t.x,t.y,t.w,t.h)}function inflateRect(e,t,n={}){const r=e.x!==n.x?-t:0,i=e.y!==n.y?-t:0,s=(e.x+e.w!==n.x+n.w?t:0)-r,o=(e.y+e.h!==n.y+n.h?t:0)-i;return{x:e.x+r,y:e.y+i,w:e.w+s,h:e.h+o,radius:e.radius}}class BarElement extends Element{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,this.inflateAmount=void 0,t&&Object.assign(this,t)}draw(t){const{inflateAmount:n,options:{borderColor:r,backgroundColor:i}}=this,{inner:s,outer:o}=boundingRects(this),l=hasRadius(o.radius)?addRoundedRectPath:addNormalRectPath;t.save(),(o.w!==s.w||o.h!==s.h)&&(t.beginPath(),l(t,inflateRect(o,n,s)),t.clip(),l(t,inflateRect(s,-n,o)),t.fillStyle=r,t.fill("evenodd")),t.beginPath(),l(t,inflateRect(s,n)),t.fillStyle=i,t.fill(),t.restore()}inRange(t,n,r){return inRange(this,t,n,r)}inXRange(t,n){return inRange(this,t,null,n)}inYRange(t,n){return inRange(this,null,t,n)}getCenterPoint(t){const{x:n,y:r,base:i,horizontal:s}=this.getProps(["x","y","base","horizontal"],t);return{x:s?(n+i)/2:n,y:s?r:(r+i)/2}}getRange(t){return t==="x"?this.width/2:this.height/2}}A1(BarElement,"id","bar"),A1(BarElement,"defaults",{borderSkipped:"start",borderWidth:0,borderRadius:0,inflateAmount:"auto",pointStyle:void 0}),A1(BarElement,"defaultRoutes",{backgroundColor:"backgroundColor",borderColor:"borderColor"});const getBoxSize=(e,t)=>{let{boxHeight:n=t,boxWidth:r=t}=e;return e.usePointStyle&&(n=Math.min(n,t),r=e.pointStyleWidth||Math.min(r,t)),{boxWidth:r,boxHeight:n,itemHeight:Math.max(t,n)}},itemsEqual=(e,t)=>e!==null&&t!==null&&e.datasetIndex===t.datasetIndex&&e.index===t.index;class Legend extends Element{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,n,r){this.maxWidth=t,this.maxHeight=n,this._margins=r,this.setDimensions(),this.buildLabels(),this.fit()}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=this._margins.left,this.right=this.width):(this.height=this.maxHeight,this.top=this._margins.top,this.bottom=this.height)}buildLabels(){const t=this.options.labels||{};let n=callback(t.generateLabels,[this.chart],this)||[];t.filter&&(n=n.filter(r=>t.filter(r,this.chart.data))),t.sort&&(n=n.sort((r,i)=>t.sort(r,i,this.chart.data))),this.options.reverse&&n.reverse(),this.legendItems=n}fit(){const{options:t,ctx:n}=this;if(!t.display){this.width=this.height=0;return}const r=t.labels,i=toFont(r.font),s=i.size,o=this._computeTitleHeight(),{boxWidth:l,itemHeight:c}=getBoxSize(r,s);let f,h;n.font=i.string,this.isHorizontal()?(f=this.maxWidth,h=this._fitRows(o,s,l,c)+10):(h=this.maxHeight,f=this._fitCols(o,i,l,c)+10),this.width=Math.min(f,t.maxWidth||this.maxWidth),this.height=Math.min(h,t.maxHeight||this.maxHeight)}_fitRows(t,n,r,i){const{ctx:s,maxWidth:o,options:{labels:{padding:l}}}=this,c=this.legendHitBoxes=[],f=this.lineWidths=[0],h=i+l;let p=t;s.textAlign="left",s.textBaseline="middle";let g=-1,x=-h;return this.legendItems.forEach((D,y)=>{const E=r+n/2+s.measureText(D.text).width;(y===0||f[f.length-1]+E+2*l>o)&&(p+=h,f[f.length-(y>0?0:1)]=0,x+=h,g++),c[y]={left:0,top:x,row:g,width:E,height:i},f[f.length-1]+=E+l}),p}_fitCols(t,n,r,i){const{ctx:s,maxHeight:o,options:{labels:{padding:l}}}=this,c=this.legendHitBoxes=[],f=this.columnSizes=[],h=o-t;let p=l,g=0,x=0,D=0,y=0;return this.legendItems.forEach((E,F)=>{const{itemWidth:B,itemHeight:M}=calculateItemSize(r,n,s,E,i);F>0&&x+M+2*l>h&&(p+=g+l,f.push({width:g,height:x}),D+=g+l,y++,g=x=0),c[F]={left:D,top:x,col:y,width:B,height:M},g=Math.max(g,B),x+=M+l}),p+=g,f.push({width:g,height:x}),p}adjustHitBoxes(){if(!this.options.display)return;const t=this._computeTitleHeight(),{legendHitBoxes:n,options:{align:r,labels:{padding:i},rtl:s}}=this,o=getRtlAdapter(s,this.left,this.width);if(this.isHorizontal()){let l=0,c=_alignStartEnd(r,this.left+i,this.right-this.lineWidths[l]);for(const f of n)l!==f.row&&(l=f.row,c=_alignStartEnd(r,this.left+i,this.right-this.lineWidths[l])),f.top+=this.top+t+i,f.left=o.leftForLtr(o.x(c),f.width),c+=f.width+i}else{let l=0,c=_alignStartEnd(r,this.top+t+i,this.bottom-this.columnSizes[l].height);for(const f of n)f.col!==l&&(l=f.col,c=_alignStartEnd(r,this.top+t+i,this.bottom-this.columnSizes[l].height)),f.top=c,f.left+=this.left+i,f.left=o.leftForLtr(o.x(f.left),f.width),c+=f.height+i}}isHorizontal(){return this.options.position==="top"||this.options.position==="bottom"}draw(){if(this.options.display){const t=this.ctx;clipArea(t,this),this._draw(),unclipArea(t)}}_draw(){const{options:t,columnSizes:n,lineWidths:r,ctx:i}=this,{align:s,labels:o}=t,l=defaults.color,c=getRtlAdapter(t.rtl,this.left,this.width),f=toFont(o.font),{padding:h}=o,p=f.size,g=p/2;let x;this.drawTitle(),i.textAlign=c.textAlign("left"),i.textBaseline="middle",i.lineWidth=.5,i.font=f.string;const{boxWidth:D,boxHeight:y,itemHeight:E}=getBoxSize(o,p),F=function(N,$,R){if(isNaN(D)||D<=0||isNaN(y)||y<0)return;i.save();const O=valueOrDefault(R.lineWidth,1);if(i.fillStyle=valueOrDefault(R.fillStyle,l),i.lineCap=valueOrDefault(R.lineCap,"butt"),i.lineDashOffset=valueOrDefault(R.lineDashOffset,0),i.lineJoin=valueOrDefault(R.lineJoin,"miter"),i.lineWidth=O,i.strokeStyle=valueOrDefault(R.strokeStyle,l),i.setLineDash(valueOrDefault(R.lineDash,[])),o.usePointStyle){const L={radius:y*Math.SQRT2/2,pointStyle:R.pointStyle,rotation:R.rotation,borderWidth:O},z=c.xPlus(N,D/2),X=$+g;drawPointLegend(i,L,z,X,o.pointStyleWidth&&D)}else{const L=$+Math.max((p-y)/2,0),z=c.leftForLtr(N,D),X=toTRBLCorners(R.borderRadius);i.beginPath(),Object.values(X).some(o0=>o0!==0)?addRoundedRectPath(i,{x:z,y:L,w:D,h:y,radius:X}):i.rect(z,L,D,y),i.fill(),O!==0&&i.stroke()}i.restore()},B=function(N,$,R){renderText(i,R.text,N,$+E/2,f,{strikethrough:R.hidden,textAlign:c.textAlign(R.textAlign)})},M=this.isHorizontal(),k=this._computeTitleHeight();M?x={x:_alignStartEnd(s,this.left+h,this.right-r[0]),y:this.top+h+k,line:0}:x={x:this.left+h,y:_alignStartEnd(s,this.top+k+h,this.bottom-n[0].height),line:0},overrideTextDirection(this.ctx,t.textDirection);const T=E+h;this.legendItems.forEach((N,$)=>{i.strokeStyle=N.fontColor,i.fillStyle=N.fontColor;const R=i.measureText(N.text).width,O=c.textAlign(N.textAlign||(N.textAlign=o.textAlign)),L=D+g+R;let z=x.x,X=x.y;c.setWidth(this.width),M?$>0&&z+L+h>this.right&&(X=x.y+=T,x.line++,z=x.x=_alignStartEnd(s,this.left+h,this.right-r[x.line])):$>0&&X+T>this.bottom&&(z=x.x=z+n[x.line].width+h,x.line++,X=x.y=_alignStartEnd(s,this.top+k+h,this.bottom-n[x.line].height));const o0=c.x(z);if(F(o0,X,N),z=_textX(O,z+D+g,M?z+L:this.right,t.rtl),B(c.x(z),X,N),M)x.x+=L+h;else if(typeof N.text!="string"){const Z=f.lineHeight;x.y+=calculateLegendItemHeight(N,Z)+h}else x.y+=T}),restoreTextDirection(this.ctx,t.textDirection)}drawTitle(){const t=this.options,n=t.title,r=toFont(n.font),i=toPadding(n.padding);if(!n.display)return;const s=getRtlAdapter(t.rtl,this.left,this.width),o=this.ctx,l=n.position,c=r.size/2,f=i.top+c;let h,p=this.left,g=this.width;if(this.isHorizontal())g=Math.max(...this.lineWidths),h=this.top+f,p=_alignStartEnd(t.align,p,this.right-g);else{const D=this.columnSizes.reduce((y,E)=>Math.max(y,E.height),0);h=f+_alignStartEnd(t.align,this.top,this.bottom-D-t.labels.padding-this._computeTitleHeight())}const x=_alignStartEnd(l,p,p+g);o.textAlign=s.textAlign(_toLeftRightCenter(l)),o.textBaseline="middle",o.strokeStyle=n.color,o.fillStyle=n.color,o.font=r.string,renderText(o,n.text,x,h,r)}_computeTitleHeight(){const t=this.options.title,n=toFont(t.font),r=toPadding(t.padding);return t.display?n.lineHeight+r.height:0}_getLegendItemAt(t,n){let r,i,s;if(_isBetween(t,this.left,this.right)&&_isBetween(n,this.top,this.bottom)){for(s=this.legendHitBoxes,r=0;r<s.length;++r)if(i=s[r],_isBetween(t,i.left,i.left+i.width)&&_isBetween(n,i.top,i.top+i.height))return this.legendItems[r]}return null}handleEvent(t){const n=this.options;if(!isListened(t.type,n))return;const r=this._getLegendItemAt(t.x,t.y);if(t.type==="mousemove"||t.type==="mouseout"){const i=this._hoveredItem,s=itemsEqual(i,r);i&&!s&&callback(n.onLeave,[t,i,this],this),this._hoveredItem=r,r&&!s&&callback(n.onHover,[t,r,this],this)}else r&&callback(n.onClick,[t,r,this],this)}}function calculateItemSize(e,t,n,r,i){const s=calculateItemWidth(r,e,t,n),o=calculateItemHeight(i,r,t.lineHeight);return{itemWidth:s,itemHeight:o}}function calculateItemWidth(e,t,n,r){let i=e.text;return i&&typeof i!="string"&&(i=i.reduce((s,o)=>s.length>o.length?s:o)),t+n.size/2+r.measureText(i).width}function calculateItemHeight(e,t,n){let r=e;return typeof t.text!="string"&&(r=calculateLegendItemHeight(t,n)),r}function calculateLegendItemHeight(e,t){const n=e.text?e.text.length:0;return t*n}function isListened(e,t){return!!((e==="mousemove"||e==="mouseout")&&(t.onHover||t.onLeave)||t.onClick&&(e==="click"||e==="mouseup"))}var plugin_legend={id:"legend",_element:Legend,start(e,t,n){const r=e.legend=new Legend({ctx:e.ctx,options:n,chart:e});layouts.configure(e,r,n),layouts.addBox(e,r)},stop(e){layouts.removeBox(e,e.legend),delete e.legend},beforeUpdate(e,t,n){const r=e.legend;layouts.configure(e,r,n),r.options=n},afterUpdate(e){const t=e.legend;t.buildLabels(),t.adjustHitBoxes()},afterEvent(e,t){t.replay||e.legend.handleEvent(t.event)},defaults:{display:!0,position:"top",align:"center",fullSize:!0,reverse:!1,weight:1e3,onClick(e,t,n){const r=t.datasetIndex,i=n.chart;i.isDatasetVisible(r)?(i.hide(r),t.hidden=!0):(i.show(r),t.hidden=!1)},onHover:null,onLeave:null,labels:{color:e=>e.chart.options.color,boxWidth:40,padding:10,generateLabels(e){const t=e.data.datasets,{labels:{usePointStyle:n,pointStyle:r,textAlign:i,color:s,useBorderRadius:o,borderRadius:l}}=e.legend.options;return e._getSortedDatasetMetas().map(c=>{const f=c.controller.getStyle(n?0:void 0),h=toPadding(f.borderWidth);return{text:t[c.index].label,fillStyle:f.backgroundColor,fontColor:s,hidden:!c.visible,lineCap:f.borderCapStyle,lineDash:f.borderDash,lineDashOffset:f.borderDashOffset,lineJoin:f.borderJoinStyle,lineWidth:(h.width+h.height)/4,strokeStyle:f.borderColor,pointStyle:r||f.pointStyle,rotation:f.rotation,textAlign:i||f.textAlign,borderRadius:o&&(l||f.borderRadius),datasetIndex:c.index}},this)}},title:{color:e=>e.chart.options.color,display:!1,position:"center",text:""}},descriptors:{_scriptable:e=>!e.startsWith("on"),labels:{_scriptable:e=>!["generateLabels","filter","sort"].includes(e)}}};class Title extends Element{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,n){const r=this.options;if(this.left=0,this.top=0,!r.display){this.width=this.height=this.right=this.bottom=0;return}this.width=this.right=t,this.height=this.bottom=n;const i=isArray(r.text)?r.text.length:1;this._padding=toPadding(r.padding);const s=i*toFont(r.font).lineHeight+this._padding.height;this.isHorizontal()?this.height=s:this.width=s}isHorizontal(){const t=this.options.position;return t==="top"||t==="bottom"}_drawArgs(t){const{top:n,left:r,bottom:i,right:s,options:o}=this,l=o.align;let c=0,f,h,p;return this.isHorizontal()?(h=_alignStartEnd(l,r,s),p=n+t,f=s-r):(o.position==="left"?(h=r+t,p=_alignStartEnd(l,i,n),c=PI*-.5):(h=s-t,p=_alignStartEnd(l,n,i),c=PI*.5),f=i-n),{titleX:h,titleY:p,maxWidth:f,rotation:c}}draw(){const t=this.ctx,n=this.options;if(!n.display)return;const r=toFont(n.font),s=r.lineHeight/2+this._padding.top,{titleX:o,titleY:l,maxWidth:c,rotation:f}=this._drawArgs(s);renderText(t,n.text,0,0,r,{color:n.color,maxWidth:c,rotation:f,textAlign:_toLeftRightCenter(n.align),textBaseline:"middle",translation:[o,l]})}}function createTitle(e,t){const n=new Title({ctx:e.ctx,options:t,chart:e});layouts.configure(e,n,t),layouts.addBox(e,n),e.titleBlock=n}var plugin_title={id:"title",_element:Title,start(e,t,n){createTitle(e,n)},stop(e){const t=e.titleBlock;layouts.removeBox(e,t),delete e.titleBlock},beforeUpdate(e,t,n){const r=e.titleBlock;layouts.configure(e,r,n),r.options=n},defaults:{align:"center",display:!1,font:{weight:"bold"},fullSize:!0,padding:10,position:"top",text:"",weight:2e3},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const positioners={average(e){if(!e.length)return!1;let t,n,r=new Set,i=0,s=0;for(t=0,n=e.length;t<n;++t){const l=e[t].element;if(l&&l.hasValue()){const c=l.tooltipPosition();r.add(c.x),i+=c.y,++s}}return s===0||r.size===0?!1:{x:[...r].reduce((l,c)=>l+c)/r.size,y:i/s}},nearest(e,t){if(!e.length)return!1;let n=t.x,r=t.y,i=Number.POSITIVE_INFINITY,s,o,l;for(s=0,o=e.length;s<o;++s){const c=e[s].element;if(c&&c.hasValue()){const f=c.getCenterPoint(),h=distanceBetweenPoints(t,f);h<i&&(i=h,l=c)}}if(l){const c=l.tooltipPosition();n=c.x,r=c.y}return{x:n,y:r}}};function pushOrConcat(e,t){return t&&(isArray(t)?Array.prototype.push.apply(e,t):e.push(t)),e}function splitNewlines(e){return(typeof e=="string"||e instanceof String)&&e.indexOf(`
`)>-1?e.split(`
`):e}function createTooltipItem(e,t){const{element:n,datasetIndex:r,index:i}=t,s=e.getDatasetMeta(r).controller,{label:o,value:l}=s.getLabelAndValue(i);return{chart:e,label:o,parsed:s.getParsed(i),raw:e.data.datasets[r].data[i],formattedValue:l,dataset:s.getDataset(),dataIndex:i,datasetIndex:r,element:n}}function getTooltipSize(e,t){const n=e.chart.ctx,{body:r,footer:i,title:s}=e,{boxWidth:o,boxHeight:l}=t,c=toFont(t.bodyFont),f=toFont(t.titleFont),h=toFont(t.footerFont),p=s.length,g=i.length,x=r.length,D=toPadding(t.padding);let y=D.height,E=0,F=r.reduce((k,T)=>k+T.before.length+T.lines.length+T.after.length,0);if(F+=e.beforeBody.length+e.afterBody.length,p&&(y+=p*f.lineHeight+(p-1)*t.titleSpacing+t.titleMarginBottom),F){const k=t.displayColors?Math.max(l,c.lineHeight):c.lineHeight;y+=x*k+(F-x)*c.lineHeight+(F-1)*t.bodySpacing}g&&(y+=t.footerMarginTop+g*h.lineHeight+(g-1)*t.footerSpacing);let B=0;const M=function(k){E=Math.max(E,n.measureText(k).width+B)};return n.save(),n.font=f.string,each(e.title,M),n.font=c.string,each(e.beforeBody.concat(e.afterBody),M),B=t.displayColors?o+2+t.boxPadding:0,each(r,k=>{each(k.before,M),each(k.lines,M),each(k.after,M)}),B=0,n.font=h.string,each(e.footer,M),n.restore(),E+=D.width,{width:E,height:y}}function determineYAlign(e,t){const{y:n,height:r}=t;return n<r/2?"top":n>e.height-r/2?"bottom":"center"}function doesNotFitWithAlign(e,t,n,r){const{x:i,width:s}=r,o=n.caretSize+n.caretPadding;if(e==="left"&&i+s+o>t.width||e==="right"&&i-s-o<0)return!0}function determineXAlign(e,t,n,r){const{x:i,width:s}=n,{width:o,chartArea:{left:l,right:c}}=e;let f="center";return r==="center"?f=i<=(l+c)/2?"left":"right":i<=s/2?f="left":i>=o-s/2&&(f="right"),doesNotFitWithAlign(f,e,t,n)&&(f="center"),f}function determineAlignment(e,t,n){const r=n.yAlign||t.yAlign||determineYAlign(e,n);return{xAlign:n.xAlign||t.xAlign||determineXAlign(e,t,n,r),yAlign:r}}function alignX(e,t){let{x:n,width:r}=e;return t==="right"?n-=r:t==="center"&&(n-=r/2),n}function alignY(e,t,n){let{y:r,height:i}=e;return t==="top"?r+=n:t==="bottom"?r-=i+n:r-=i/2,r}function getBackgroundPoint(e,t,n,r){const{caretSize:i,caretPadding:s,cornerRadius:o}=e,{xAlign:l,yAlign:c}=n,f=i+s,{topLeft:h,topRight:p,bottomLeft:g,bottomRight:x}=toTRBLCorners(o);let D=alignX(t,l);const y=alignY(t,c,f);return c==="center"?l==="left"?D+=f:l==="right"&&(D-=f):l==="left"?D-=Math.max(h,g)+i:l==="right"&&(D+=Math.max(p,x)+i),{x:_limitValue(D,0,r.width-t.width),y:_limitValue(y,0,r.height-t.height)}}function getAlignedX(e,t,n){const r=toPadding(n.padding);return t==="center"?e.x+e.width/2:t==="right"?e.x+e.width-r.right:e.x+r.left}function getBeforeAfterBodyLines(e){return pushOrConcat([],splitNewlines(e))}function createTooltipContext(e,t,n){return createContext(e,{tooltip:t,tooltipItems:n,type:"tooltip"})}function overrideCallbacks(e,t){const n=t&&t.dataset&&t.dataset.tooltip&&t.dataset.tooltip.callbacks;return n?e.override(n):e}const defaultCallbacks={beforeTitle:noop,title(e){if(e.length>0){const t=e[0],n=t.chart.data.labels,r=n?n.length:0;if(this&&this.options&&this.options.mode==="dataset")return t.dataset.label||"";if(t.label)return t.label;if(r>0&&t.dataIndex<r)return n[t.dataIndex]}return""},afterTitle:noop,beforeBody:noop,beforeLabel:noop,label(e){if(this&&this.options&&this.options.mode==="dataset")return e.label+": "+e.formattedValue||e.formattedValue;let t=e.dataset.label||"";t&&(t+=": ");const n=e.formattedValue;return isNullOrUndef(n)||(t+=n),t},labelColor(e){const n=e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);return{borderColor:n.borderColor,backgroundColor:n.backgroundColor,borderWidth:n.borderWidth,borderDash:n.borderDash,borderDashOffset:n.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(e){const n=e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);return{pointStyle:n.pointStyle,rotation:n.rotation}},afterLabel:noop,afterBody:noop,beforeFooter:noop,footer:noop,afterFooter:noop};function invokeCallbackWithFallback(e,t,n,r){const i=e[t].call(n,r);return typeof i>"u"?defaultCallbacks[t].call(n,r):i}class Tooltip extends Element{constructor(t){super(),this.opacity=0,this._active=[],this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.chart=t.chart,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this._cachedAnimations;if(t)return t;const n=this.chart,r=this.options.setContext(this.getContext()),i=r.enabled&&n.options.animation&&r.animations,s=new Animations(this.chart,i);return i._cacheable&&(this._cachedAnimations=Object.freeze(s)),s}getContext(){return this.$context||(this.$context=createTooltipContext(this.chart.getContext(),this,this._tooltipItems))}getTitle(t,n){const{callbacks:r}=n,i=invokeCallbackWithFallback(r,"beforeTitle",this,t),s=invokeCallbackWithFallback(r,"title",this,t),o=invokeCallbackWithFallback(r,"afterTitle",this,t);let l=[];return l=pushOrConcat(l,splitNewlines(i)),l=pushOrConcat(l,splitNewlines(s)),l=pushOrConcat(l,splitNewlines(o)),l}getBeforeBody(t,n){return getBeforeAfterBodyLines(invokeCallbackWithFallback(n.callbacks,"beforeBody",this,t))}getBody(t,n){const{callbacks:r}=n,i=[];return each(t,s=>{const o={before:[],lines:[],after:[]},l=overrideCallbacks(r,s);pushOrConcat(o.before,splitNewlines(invokeCallbackWithFallback(l,"beforeLabel",this,s))),pushOrConcat(o.lines,invokeCallbackWithFallback(l,"label",this,s)),pushOrConcat(o.after,splitNewlines(invokeCallbackWithFallback(l,"afterLabel",this,s))),i.push(o)}),i}getAfterBody(t,n){return getBeforeAfterBodyLines(invokeCallbackWithFallback(n.callbacks,"afterBody",this,t))}getFooter(t,n){const{callbacks:r}=n,i=invokeCallbackWithFallback(r,"beforeFooter",this,t),s=invokeCallbackWithFallback(r,"footer",this,t),o=invokeCallbackWithFallback(r,"afterFooter",this,t);let l=[];return l=pushOrConcat(l,splitNewlines(i)),l=pushOrConcat(l,splitNewlines(s)),l=pushOrConcat(l,splitNewlines(o)),l}_createItems(t){const n=this._active,r=this.chart.data,i=[],s=[],o=[];let l=[],c,f;for(c=0,f=n.length;c<f;++c)l.push(createTooltipItem(this.chart,n[c]));return t.filter&&(l=l.filter((h,p,g)=>t.filter(h,p,g,r))),t.itemSort&&(l=l.sort((h,p)=>t.itemSort(h,p,r))),each(l,h=>{const p=overrideCallbacks(t.callbacks,h);i.push(invokeCallbackWithFallback(p,"labelColor",this,h)),s.push(invokeCallbackWithFallback(p,"labelPointStyle",this,h)),o.push(invokeCallbackWithFallback(p,"labelTextColor",this,h))}),this.labelColors=i,this.labelPointStyles=s,this.labelTextColors=o,this.dataPoints=l,l}update(t,n){const r=this.options.setContext(this.getContext()),i=this._active;let s,o=[];if(!i.length)this.opacity!==0&&(s={opacity:0});else{const l=positioners[r.position].call(this,i,this._eventPosition);o=this._createItems(r),this.title=this.getTitle(o,r),this.beforeBody=this.getBeforeBody(o,r),this.body=this.getBody(o,r),this.afterBody=this.getAfterBody(o,r),this.footer=this.getFooter(o,r);const c=this._size=getTooltipSize(this,r),f=Object.assign({},l,c),h=determineAlignment(this.chart,r,f),p=getBackgroundPoint(r,f,h,this.chart);this.xAlign=h.xAlign,this.yAlign=h.yAlign,s={opacity:1,x:p.x,y:p.y,width:c.width,height:c.height,caretX:l.x,caretY:l.y}}this._tooltipItems=o,this.$context=void 0,s&&this._resolveAnimations().update(this,s),t&&r.external&&r.external.call(this,{chart:this.chart,tooltip:this,replay:n})}drawCaret(t,n,r,i){const s=this.getCaretPosition(t,r,i);n.lineTo(s.x1,s.y1),n.lineTo(s.x2,s.y2),n.lineTo(s.x3,s.y3)}getCaretPosition(t,n,r){const{xAlign:i,yAlign:s}=this,{caretSize:o,cornerRadius:l}=r,{topLeft:c,topRight:f,bottomLeft:h,bottomRight:p}=toTRBLCorners(l),{x:g,y:x}=t,{width:D,height:y}=n;let E,F,B,M,k,T;return s==="center"?(k=x+y/2,i==="left"?(E=g,F=E-o,M=k+o,T=k-o):(E=g+D,F=E+o,M=k-o,T=k+o),B=E):(i==="left"?F=g+Math.max(c,h)+o:i==="right"?F=g+D-Math.max(f,p)-o:F=this.caretX,s==="top"?(M=x,k=M-o,E=F-o,B=F+o):(M=x+y,k=M+o,E=F+o,B=F-o),T=M),{x1:E,x2:F,x3:B,y1:M,y2:k,y3:T}}drawTitle(t,n,r){const i=this.title,s=i.length;let o,l,c;if(s){const f=getRtlAdapter(r.rtl,this.x,this.width);for(t.x=getAlignedX(this,r.titleAlign,r),n.textAlign=f.textAlign(r.titleAlign),n.textBaseline="middle",o=toFont(r.titleFont),l=r.titleSpacing,n.fillStyle=r.titleColor,n.font=o.string,c=0;c<s;++c)n.fillText(i[c],f.x(t.x),t.y+o.lineHeight/2),t.y+=o.lineHeight+l,c+1===s&&(t.y+=r.titleMarginBottom-l)}}_drawColorBox(t,n,r,i,s){const o=this.labelColors[r],l=this.labelPointStyles[r],{boxHeight:c,boxWidth:f}=s,h=toFont(s.bodyFont),p=getAlignedX(this,"left",s),g=i.x(p),x=c<h.lineHeight?(h.lineHeight-c)/2:0,D=n.y+x;if(s.usePointStyle){const y={radius:Math.min(f,c)/2,pointStyle:l.pointStyle,rotation:l.rotation,borderWidth:1},E=i.leftForLtr(g,f)+f/2,F=D+c/2;t.strokeStyle=s.multiKeyBackground,t.fillStyle=s.multiKeyBackground,drawPoint(t,y,E,F),t.strokeStyle=o.borderColor,t.fillStyle=o.backgroundColor,drawPoint(t,y,E,F)}else{t.lineWidth=isObject(o.borderWidth)?Math.max(...Object.values(o.borderWidth)):o.borderWidth||1,t.strokeStyle=o.borderColor,t.setLineDash(o.borderDash||[]),t.lineDashOffset=o.borderDashOffset||0;const y=i.leftForLtr(g,f),E=i.leftForLtr(i.xPlus(g,1),f-2),F=toTRBLCorners(o.borderRadius);Object.values(F).some(B=>B!==0)?(t.beginPath(),t.fillStyle=s.multiKeyBackground,addRoundedRectPath(t,{x:y,y:D,w:f,h:c,radius:F}),t.fill(),t.stroke(),t.fillStyle=o.backgroundColor,t.beginPath(),addRoundedRectPath(t,{x:E,y:D+1,w:f-2,h:c-2,radius:F}),t.fill()):(t.fillStyle=s.multiKeyBackground,t.fillRect(y,D,f,c),t.strokeRect(y,D,f,c),t.fillStyle=o.backgroundColor,t.fillRect(E,D+1,f-2,c-2))}t.fillStyle=this.labelTextColors[r]}drawBody(t,n,r){const{body:i}=this,{bodySpacing:s,bodyAlign:o,displayColors:l,boxHeight:c,boxWidth:f,boxPadding:h}=r,p=toFont(r.bodyFont);let g=p.lineHeight,x=0;const D=getRtlAdapter(r.rtl,this.x,this.width),y=function(R){n.fillText(R,D.x(t.x+x),t.y+g/2),t.y+=g+s},E=D.textAlign(o);let F,B,M,k,T,N,$;for(n.textAlign=o,n.textBaseline="middle",n.font=p.string,t.x=getAlignedX(this,E,r),n.fillStyle=r.bodyColor,each(this.beforeBody,y),x=l&&E!=="right"?o==="center"?f/2+h:f+2+h:0,k=0,N=i.length;k<N;++k){for(F=i[k],B=this.labelTextColors[k],n.fillStyle=B,each(F.before,y),M=F.lines,l&&M.length&&(this._drawColorBox(n,t,k,D,r),g=Math.max(p.lineHeight,c)),T=0,$=M.length;T<$;++T)y(M[T]),g=p.lineHeight;each(F.after,y)}x=0,g=p.lineHeight,each(this.afterBody,y),t.y-=s}drawFooter(t,n,r){const i=this.footer,s=i.length;let o,l;if(s){const c=getRtlAdapter(r.rtl,this.x,this.width);for(t.x=getAlignedX(this,r.footerAlign,r),t.y+=r.footerMarginTop,n.textAlign=c.textAlign(r.footerAlign),n.textBaseline="middle",o=toFont(r.footerFont),n.fillStyle=r.footerColor,n.font=o.string,l=0;l<s;++l)n.fillText(i[l],c.x(t.x),t.y+o.lineHeight/2),t.y+=o.lineHeight+r.footerSpacing}}drawBackground(t,n,r,i){const{xAlign:s,yAlign:o}=this,{x:l,y:c}=t,{width:f,height:h}=r,{topLeft:p,topRight:g,bottomLeft:x,bottomRight:D}=toTRBLCorners(i.cornerRadius);n.fillStyle=i.backgroundColor,n.strokeStyle=i.borderColor,n.lineWidth=i.borderWidth,n.beginPath(),n.moveTo(l+p,c),o==="top"&&this.drawCaret(t,n,r,i),n.lineTo(l+f-g,c),n.quadraticCurveTo(l+f,c,l+f,c+g),o==="center"&&s==="right"&&this.drawCaret(t,n,r,i),n.lineTo(l+f,c+h-D),n.quadraticCurveTo(l+f,c+h,l+f-D,c+h),o==="bottom"&&this.drawCaret(t,n,r,i),n.lineTo(l+x,c+h),n.quadraticCurveTo(l,c+h,l,c+h-x),o==="center"&&s==="left"&&this.drawCaret(t,n,r,i),n.lineTo(l,c+p),n.quadraticCurveTo(l,c,l+p,c),n.closePath(),n.fill(),i.borderWidth>0&&n.stroke()}_updateAnimationTarget(t){const n=this.chart,r=this.$animations,i=r&&r.x,s=r&&r.y;if(i||s){const o=positioners[t.position].call(this,this._active,this._eventPosition);if(!o)return;const l=this._size=getTooltipSize(this,t),c=Object.assign({},o,this._size),f=determineAlignment(n,t,c),h=getBackgroundPoint(t,c,f,n);(i._to!==h.x||s._to!==h.y)&&(this.xAlign=f.xAlign,this.yAlign=f.yAlign,this.width=l.width,this.height=l.height,this.caretX=o.x,this.caretY=o.y,this._resolveAnimations().update(this,h))}}_willRender(){return!!this.opacity}draw(t){const n=this.options.setContext(this.getContext());let r=this.opacity;if(!r)return;this._updateAnimationTarget(n);const i={width:this.width,height:this.height},s={x:this.x,y:this.y};r=Math.abs(r)<.001?0:r;const o=toPadding(n.padding),l=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;n.enabled&&l&&(t.save(),t.globalAlpha=r,this.drawBackground(s,t,i,n),overrideTextDirection(t,n.textDirection),s.y+=o.top,this.drawTitle(s,t,n),this.drawBody(s,t,n),this.drawFooter(s,t,n),restoreTextDirection(t,n.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,n){const r=this._active,i=t.map(({datasetIndex:l,index:c})=>{const f=this.chart.getDatasetMeta(l);if(!f)throw new Error("Cannot find a dataset at index "+l);return{datasetIndex:l,element:f.data[c],index:c}}),s=!_elementsEqual(r,i),o=this._positionChanged(i,n);(s||o)&&(this._active=i,this._eventPosition=n,this._ignoreReplayEvents=!0,this.update(!0))}handleEvent(t,n,r=!0){if(n&&this._ignoreReplayEvents)return!1;this._ignoreReplayEvents=!1;const i=this.options,s=this._active||[],o=this._getActiveElements(t,s,n,r),l=this._positionChanged(o,t),c=n||!_elementsEqual(o,s)||l;return c&&(this._active=o,(i.enabled||i.external)&&(this._eventPosition={x:t.x,y:t.y},this.update(!0,n))),c}_getActiveElements(t,n,r,i){const s=this.options;if(t.type==="mouseout")return[];if(!i)return n.filter(l=>this.chart.data.datasets[l.datasetIndex]&&this.chart.getDatasetMeta(l.datasetIndex).controller.getParsed(l.index)!==void 0);const o=this.chart.getElementsAtEventForMode(t,s.mode,s,r);return s.reverse&&o.reverse(),o}_positionChanged(t,n){const{caretX:r,caretY:i,options:s}=this,o=positioners[s.position].call(this,t,n);return o!==!1&&(r!==o.x||i!==o.y)}}A1(Tooltip,"positioners",positioners);var plugin_tooltip={id:"tooltip",_element:Tooltip,positioners,afterInit(e,t,n){n&&(e.tooltip=new Tooltip({chart:e,options:n}))},beforeUpdate(e,t,n){e.tooltip&&e.tooltip.initialize(n)},reset(e,t,n){e.tooltip&&e.tooltip.initialize(n)},afterDraw(e){const t=e.tooltip;if(t&&t._willRender()){const n={tooltip:t};if(e.notifyPlugins("beforeTooltipDraw",{...n,cancelable:!0})===!1)return;t.draw(e.ctx),e.notifyPlugins("afterTooltipDraw",n)}},afterEvent(e,t){if(e.tooltip){const n=t.replay;e.tooltip.handleEvent(t.event,n,t.inChartArea)&&(t.changed=!0)}},defaults:{enabled:!0,external:null,position:"average",backgroundColor:"rgba(0,0,0,0.8)",titleColor:"#fff",titleFont:{weight:"bold"},titleSpacing:2,titleMarginBottom:6,titleAlign:"left",bodyColor:"#fff",bodySpacing:2,bodyFont:{},bodyAlign:"left",footerColor:"#fff",footerSpacing:2,footerMarginTop:6,footerFont:{weight:"bold"},footerAlign:"left",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(e,t)=>t.bodyFont.size,boxWidth:(e,t)=>t.bodyFont.size,multiKeyBackground:"#fff",displayColors:!0,boxPadding:0,borderColor:"rgba(0,0,0,0)",borderWidth:0,animation:{duration:400,easing:"easeOutQuart"},animations:{numbers:{type:"number",properties:["x","y","width","height","caretX","caretY"]},opacity:{easing:"linear",duration:200}},callbacks:defaultCallbacks},defaultRoutes:{bodyFont:"font",footerFont:"font",titleFont:"font"},descriptors:{_scriptable:e=>e!=="filter"&&e!=="itemSort"&&e!=="external",_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:"animation"}},additionalOptionScopes:["interaction"]};const addIfString=(e,t,n,r)=>(typeof t=="string"?(n=e.push(t)-1,r.unshift({index:n,label:t})):isNaN(t)&&(n=null),n);function findOrAddLabel(e,t,n,r){const i=e.indexOf(t);if(i===-1)return addIfString(e,t,n,r);const s=e.lastIndexOf(t);return i!==s?n:i}const validIndex=(e,t)=>e===null?null:_limitValue(Math.round(e),0,t);function _getLabelForValue(e){const t=this.getLabels();return e>=0&&e<t.length?t[e]:e}class CategoryScale extends Scale{constructor(t){super(t),this._startValue=void 0,this._valueRange=0,this._addedLabels=[]}init(t){const n=this._addedLabels;if(n.length){const r=this.getLabels();for(const{index:i,label:s}of n)r[i]===s&&r.splice(i,1);this._addedLabels=[]}super.init(t)}parse(t,n){if(isNullOrUndef(t))return null;const r=this.getLabels();return n=isFinite(n)&&r[n]===t?n:findOrAddLabel(r,t,valueOrDefault(n,t),this._addedLabels),validIndex(n,r.length-1)}determineDataLimits(){const{minDefined:t,maxDefined:n}=this.getUserBounds();let{min:r,max:i}=this.getMinMax(!0);this.options.bounds==="ticks"&&(t||(r=0),n||(i=this.getLabels().length-1)),this.min=r,this.max=i}buildTicks(){const t=this.min,n=this.max,r=this.options.offset,i=[];let s=this.getLabels();s=t===0&&n===s.length-1?s:s.slice(t,n+1),this._valueRange=Math.max(s.length-(r?0:1),1),this._startValue=this.min-(r?.5:0);for(let o=t;o<=n;o++)i.push({value:o});return i}getLabelForValue(t){return _getLabelForValue.call(this,t)}configure(){super.configure(),this.isHorizontal()||(this._reversePixels=!this._reversePixels)}getPixelForValue(t){return typeof t!="number"&&(t=this.parse(t)),t===null?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getPixelForTick(t){const n=this.ticks;return t<0||t>n.length-1?null:this.getPixelForValue(n[t].value)}getValueForPixel(t){return Math.round(this._startValue+this.getDecimalForPixel(t)*this._valueRange)}getBasePixel(){return this.bottom}}A1(CategoryScale,"id","category"),A1(CategoryScale,"defaults",{ticks:{callback:_getLabelForValue}});function generateTicks$1(e,t){const n=[],{bounds:i,step:s,min:o,max:l,precision:c,count:f,maxTicks:h,maxDigits:p,includeBounds:g}=e,x=s||1,D=h-1,{min:y,max:E}=t,F=!isNullOrUndef(o),B=!isNullOrUndef(l),M=!isNullOrUndef(f),k=(E-y)/(p+1);let T=niceNum((E-y)/D/x)*x,N,$,R,O;if(T<1e-14&&!F&&!B)return[{value:y},{value:E}];O=Math.ceil(E/T)-Math.floor(y/T),O>D&&(T=niceNum(O*T/D/x)*x),isNullOrUndef(c)||(N=Math.pow(10,c),T=Math.ceil(T*N)/N),i==="ticks"?($=Math.floor(y/T)*T,R=Math.ceil(E/T)*T):($=y,R=E),F&&B&&s&&almostWhole((l-o)/s,T/1e3)?(O=Math.round(Math.min((l-o)/T,h)),T=(l-o)/O,$=o,R=l):M?($=F?o:$,R=B?l:R,O=f-1,T=(R-$)/O):(O=(R-$)/T,almostEquals(O,Math.round(O),T/1e3)?O=Math.round(O):O=Math.ceil(O));const L=Math.max(_decimalPlaces(T),_decimalPlaces($));N=Math.pow(10,isNullOrUndef(c)?L:c),$=Math.round($*N)/N,R=Math.round(R*N)/N;let z=0;for(F&&(g&&$!==o?(n.push({value:o}),$<o&&z++,almostEquals(Math.round(($+z*T)*N)/N,o,relativeLabelSize(o,k,e))&&z++):$<o&&z++);z<O;++z){const X=Math.round(($+z*T)*N)/N;if(B&&X>l)break;n.push({value:X})}return B&&g&&R!==l?n.length&&almostEquals(n[n.length-1].value,l,relativeLabelSize(l,k,e))?n[n.length-1].value=l:n.push({value:l}):(!B||R===l)&&n.push({value:R}),n}function relativeLabelSize(e,t,{horizontal:n,minRotation:r}){const i=toRadians(r),s=(n?Math.sin(i):Math.cos(i))||.001,o=.75*t*(""+e).length;return Math.min(t/s,o)}class LinearScaleBase extends Scale{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,n){return isNullOrUndef(t)||(typeof t=="number"||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const{beginAtZero:t}=this.options,{minDefined:n,maxDefined:r}=this.getUserBounds();let{min:i,max:s}=this;const o=c=>i=n?i:c,l=c=>s=r?s:c;if(t){const c=sign(i),f=sign(s);c<0&&f<0?l(0):c>0&&f>0&&o(0)}if(i===s){let c=s===0?1:Math.abs(s*.05);l(s+c),t||o(i-c)}this.min=i,this.max=s}getTickLimit(){const t=this.options.ticks;let{maxTicksLimit:n,stepSize:r}=t,i;return r?(i=Math.ceil(this.max/r)-Math.floor(this.min/r)+1,i>1e3&&(console.warn(`scales.${this.id}.ticks.stepSize: ${r} would result generating up to ${i} ticks. Limiting to 1000.`),i=1e3)):(i=this.computeTickLimit(),n=n||11),n&&(i=Math.min(n,i)),i}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this.options,n=t.ticks;let r=this.getTickLimit();r=Math.max(2,r);const i={maxTicks:r,bounds:t.bounds,min:t.min,max:t.max,precision:n.precision,step:n.stepSize,count:n.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:n.minRotation||0,includeBounds:n.includeBounds!==!1},s=this._range||this,o=generateTicks$1(i,s);return t.bounds==="ticks"&&_setMinAndMaxByKey(o,this,"value"),t.reverse?(o.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),o}configure(){const t=this.ticks;let n=this.min,r=this.max;if(super.configure(),this.options.offset&&t.length){const i=(r-n)/Math.max(t.length-1,1)/2;n-=i,r+=i}this._startValue=n,this._endValue=r,this._valueRange=r-n}getLabelForValue(t){return formatNumber(t,this.chart.options.locale,this.options.ticks.format)}}class LinearScale extends LinearScaleBase{determineDataLimits(){const{min:t,max:n}=this.getMinMax(!0);this.min=isNumberFinite(t)?t:0,this.max=isNumberFinite(n)?n:1,this.handleTickRangeOptions()}computeTickLimit(){const t=this.isHorizontal(),n=t?this.width:this.height,r=toRadians(this.options.ticks.minRotation),i=(t?Math.sin(r):Math.cos(r))||.001,s=this._resolveTickFontOptions(0);return Math.ceil(n/Math.min(40,s.lineHeight/i))}getPixelForValue(t){return t===null?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}A1(LinearScale,"id","linear"),A1(LinearScale,"defaults",{ticks:{callback:Ticks.formatters.numeric}});const INTERVALS={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},UNITS=Object.keys(INTERVALS);function sorter(e,t){return e-t}function parse(e,t){if(isNullOrUndef(t))return null;const n=e._adapter,{parser:r,round:i,isoWeekday:s}=e._parseOpts;let o=t;return typeof r=="function"&&(o=r(o)),isNumberFinite(o)||(o=typeof r=="string"?n.parse(o,r):n.parse(o)),o===null?null:(i&&(o=i==="week"&&(isNumber(s)||s===!0)?n.startOf(o,"isoWeek",s):n.startOf(o,i)),+o)}function determineUnitForAutoTicks(e,t,n,r){const i=UNITS.length;for(let s=UNITS.indexOf(e);s<i-1;++s){const o=INTERVALS[UNITS[s]],l=o.steps?o.steps:Number.MAX_SAFE_INTEGER;if(o.common&&Math.ceil((n-t)/(l*o.size))<=r)return UNITS[s]}return UNITS[i-1]}function determineUnitForFormatting(e,t,n,r,i){for(let s=UNITS.length-1;s>=UNITS.indexOf(n);s--){const o=UNITS[s];if(INTERVALS[o].common&&e._adapter.diff(i,r,o)>=t-1)return o}return UNITS[n?UNITS.indexOf(n):0]}function determineMajorUnit(e){for(let t=UNITS.indexOf(e)+1,n=UNITS.length;t<n;++t)if(INTERVALS[UNITS[t]].common)return UNITS[t]}function addTick(e,t,n){if(!n)e[t]=!0;else if(n.length){const{lo:r,hi:i}=_lookup(n,t),s=n[r]>=t?n[r]:n[i];e[s]=!0}}function setMajorTicks(e,t,n,r){const i=e._adapter,s=+i.startOf(t[0].value,r),o=t[t.length-1].value;let l,c;for(l=s;l<=o;l=+i.add(l,1,r))c=n[l],c>=0&&(t[c].major=!0);return t}function ticksFromTimestamps(e,t,n){const r=[],i={},s=t.length;let o,l;for(o=0;o<s;++o)l=t[o],i[l]=o,r.push({value:l,major:!1});return s===0||!n?r:setMajorTicks(e,r,i,n)}class TimeScale extends Scale{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit="day",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,n={}){const r=t.time||(t.time={}),i=this._adapter=new adapters._date(t.adapters.date);i.init(n),mergeIf(r.displayFormats,i.formats()),this._parseOpts={parser:r.parser,round:r.round,isoWeekday:r.isoWeekday},super.init(t),this._normalized=n.normalized}parse(t,n){return t===void 0?null:parse(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this.options,n=this._adapter,r=t.time.unit||"day";let{min:i,max:s,minDefined:o,maxDefined:l}=this.getUserBounds();function c(f){!o&&!isNaN(f.min)&&(i=Math.min(i,f.min)),!l&&!isNaN(f.max)&&(s=Math.max(s,f.max))}(!o||!l)&&(c(this._getLabelBounds()),(t.bounds!=="ticks"||t.ticks.source!=="labels")&&c(this.getMinMax(!1))),i=isNumberFinite(i)&&!isNaN(i)?i:+n.startOf(Date.now(),r),s=isNumberFinite(s)&&!isNaN(s)?s:+n.endOf(Date.now(),r)+1,this.min=Math.min(i,s-1),this.max=Math.max(i+1,s)}_getLabelBounds(){const t=this.getLabelTimestamps();let n=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;return t.length&&(n=t[0],r=t[t.length-1]),{min:n,max:r}}buildTicks(){const t=this.options,n=t.time,r=t.ticks,i=r.source==="labels"?this.getLabelTimestamps():this._generate();t.bounds==="ticks"&&i.length&&(this.min=this._userMin||i[0],this.max=this._userMax||i[i.length-1]);const s=this.min,o=this.max,l=_filterBetween(i,s,o);return this._unit=n.unit||(r.autoSkip?determineUnitForAutoTicks(n.minUnit,this.min,this.max,this._getLabelCapacity(s)):determineUnitForFormatting(this,l.length,n.minUnit,this.min,this.max)),this._majorUnit=!r.major.enabled||this._unit==="year"?void 0:determineMajorUnit(this._unit),this.initOffsets(i),t.reverse&&l.reverse(),ticksFromTimestamps(this,l,this._majorUnit)}afterAutoSkip(){this.options.offsetAfterAutoskip&&this.initOffsets(this.ticks.map(t=>+t.value))}initOffsets(t=[]){let n=0,r=0,i,s;this.options.offset&&t.length&&(i=this.getDecimalForValue(t[0]),t.length===1?n=1-i:n=(this.getDecimalForValue(t[1])-i)/2,s=this.getDecimalForValue(t[t.length-1]),t.length===1?r=s:r=(s-this.getDecimalForValue(t[t.length-2]))/2);const o=t.length<3?.5:.25;n=_limitValue(n,0,o),r=_limitValue(r,0,o),this._offsets={start:n,end:r,factor:1/(n+1+r)}}_generate(){const t=this._adapter,n=this.min,r=this.max,i=this.options,s=i.time,o=s.unit||determineUnitForAutoTicks(s.minUnit,n,r,this._getLabelCapacity(n)),l=valueOrDefault(i.ticks.stepSize,1),c=o==="week"?s.isoWeekday:!1,f=isNumber(c)||c===!0,h={};let p=n,g,x;if(f&&(p=+t.startOf(p,"isoWeek",c)),p=+t.startOf(p,f?"day":o),t.diff(r,n,o)>1e5*l)throw new Error(n+" and "+r+" are too far apart with stepSize of "+l+" "+o);const D=i.ticks.source==="data"&&this.getDataTimestamps();for(g=p,x=0;g<r;g=+t.add(g,l,o),x++)addTick(h,g,D);return(g===r||i.bounds==="ticks"||x===1)&&addTick(h,g,D),Object.keys(h).sort(sorter).map(y=>+y)}getLabelForValue(t){const n=this._adapter,r=this.options.time;return r.tooltipFormat?n.format(t,r.tooltipFormat):n.format(t,r.displayFormats.datetime)}format(t,n){const i=this.options.time.displayFormats,s=this._unit,o=n||i[s];return this._adapter.format(t,o)}_tickFormatFunction(t,n,r,i){const s=this.options,o=s.ticks.callback;if(o)return callback(o,[t,n,r],this);const l=s.time.displayFormats,c=this._unit,f=this._majorUnit,h=c&&l[c],p=f&&l[f],g=r[n],x=f&&p&&g&&g.major;return this._adapter.format(t,i||(x?p:h))}generateTickLabels(t){let n,r,i;for(n=0,r=t.length;n<r;++n)i=t[n],i.label=this._tickFormatFunction(i.value,n,t)}getDecimalForValue(t){return t===null?NaN:(t-this.min)/(this.max-this.min)}getPixelForValue(t){const n=this._offsets,r=this.getDecimalForValue(t);return this.getPixelForDecimal((n.start+r)*n.factor)}getValueForPixel(t){const n=this._offsets,r=this.getDecimalForPixel(t)/n.factor-n.end;return this.min+r*(this.max-this.min)}_getLabelSize(t){const n=this.options.ticks,r=this.ctx.measureText(t).width,i=toRadians(this.isHorizontal()?n.maxRotation:n.minRotation),s=Math.cos(i),o=Math.sin(i),l=this._resolveTickFontOptions(0).size;return{w:r*s+l*o,h:r*o+l*s}}_getLabelCapacity(t){const n=this.options.time,r=n.displayFormats,i=r[n.unit]||r.millisecond,s=this._tickFormatFunction(t,0,ticksFromTimestamps(this,[t],this._majorUnit),i),o=this._getLabelSize(s),l=Math.floor(this.isHorizontal()?this.width/o.w:this.height/o.h)-1;return l>0?l:1}getDataTimestamps(){let t=this._cache.data||[],n,r;if(t.length)return t;const i=this.getMatchingVisibleMetas();if(this._normalized&&i.length)return this._cache.data=i[0].controller.getAllParsedValues(this);for(n=0,r=i.length;n<r;++n)t=t.concat(i[n].controller.getAllParsedValues(this));return this._cache.data=this.normalize(t)}getLabelTimestamps(){const t=this._cache.labels||[];let n,r;if(t.length)return t;const i=this.getLabels();for(n=0,r=i.length;n<r;++n)t.push(parse(this,i[n]));return this._cache.labels=this._normalized?t:this.normalize(t)}normalize(t){return _arrayUnique(t.sort(sorter))}}A1(TimeScale,"id","time"),A1(TimeScale,"defaults",{bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{source:"auto",callback:!1,major:{enabled:!1}}});function interpolate(e,t,n){let r=0,i=e.length-1,s,o,l,c;n?(t>=e[r].pos&&t<=e[i].pos&&({lo:r,hi:i}=_lookupByKey(e,"pos",t)),{pos:s,time:l}=e[r],{pos:o,time:c}=e[i]):(t>=e[r].time&&t<=e[i].time&&({lo:r,hi:i}=_lookupByKey(e,"time",t)),{time:s,pos:l}=e[r],{time:o,pos:c}=e[i]);const f=o-s;return f?l+(c-l)*(t-s)/f:l}class TimeSeriesScale extends TimeScale{constructor(t){super(t),this._table=[],this._minPos=void 0,this._tableRange=void 0}initOffsets(){const t=this._getTimestampsForTable(),n=this._table=this.buildLookupTable(t);this._minPos=interpolate(n,this.min),this._tableRange=interpolate(n,this.max)-this._minPos,super.initOffsets(t)}buildLookupTable(t){const{min:n,max:r}=this,i=[],s=[];let o,l,c,f,h;for(o=0,l=t.length;o<l;++o)f=t[o],f>=n&&f<=r&&i.push(f);if(i.length<2)return[{time:n,pos:0},{time:r,pos:1}];for(o=0,l=i.length;o<l;++o)h=i[o+1],c=i[o-1],f=i[o],Math.round((h+c)/2)!==f&&s.push({time:f,pos:o/(l-1)});return s}_generate(){const t=this.min,n=this.max;let r=super.getDataTimestamps();return(!r.includes(t)||!r.length)&&r.splice(0,0,t),(!r.includes(n)||r.length===1)&&r.push(n),r.sort((i,s)=>i-s)}_getTimestampsForTable(){let t=this._cache.all||[];if(t.length)return t;const n=this.getDataTimestamps(),r=this.getLabelTimestamps();return n.length&&r.length?t=this.normalize(n.concat(r)):t=n.length?n:r,t=this._cache.all=t,t}getDecimalForValue(t){return(interpolate(this._table,t)-this._minPos)/this._tableRange}getValueForPixel(t){const n=this._offsets,r=this.getDecimalForPixel(t)/n.factor-n.end;return interpolate(this._table,r*this._tableRange+this._minPos,!0)}}A1(TimeSeriesScale,"id","timeseries"),A1(TimeSeriesScale,"defaults",TimeScale.defaults);const defaultDatasetIdKey="label";function reforwardRef(e,t){typeof e=="function"?e(t):e&&(e.current=t)}function setOptions(e,t){const n=e.options;n&&t&&Object.assign(n,t)}function setLabels(e,t){e.labels=t}function setDatasets(e,t){let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:defaultDatasetIdKey;const r=[];e.datasets=t.map(i=>{const s=e.datasets.find(o=>o[n]===i[n]);return!s||!i.data||r.includes(s)?{...i}:(r.push(s),Object.assign(s,i),s)})}function cloneData(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:defaultDatasetIdKey;const n={labels:[],datasets:[]};return setLabels(n,e.labels),setDatasets(n,e.datasets,t),n}function ChartComponent(e,t){const{height:n=150,width:r=300,redraw:i=!1,datasetIdKey:s,type:o,data:l,options:c,plugins:f=[],fallbackContent:h,updateMode:p,...g}=e,x=reactExports.useRef(null),D=reactExports.useRef(null),y=()=>{x.current&&(D.current=new Chart$1(x.current,{type:o,data:cloneData(l,s),options:c&&{...c},plugins:f}),reforwardRef(t,D.current))},E=()=>{reforwardRef(t,null),D.current&&(D.current.destroy(),D.current=null)};return reactExports.useEffect(()=>{!i&&D.current&&c&&setOptions(D.current,c)},[i,c]),reactExports.useEffect(()=>{!i&&D.current&&setLabels(D.current.config.data,l.labels)},[i,l.labels]),reactExports.useEffect(()=>{!i&&D.current&&l.datasets&&setDatasets(D.current.config.data,l.datasets,s)},[i,l.datasets]),reactExports.useEffect(()=>{D.current&&(i?(E(),setTimeout(y)):D.current.update(p))},[i,c,l.labels,l.datasets,p]),reactExports.useEffect(()=>{D.current&&(E(),setTimeout(y))},[o]),reactExports.useEffect(()=>(y(),()=>E()),[]),React.createElement("canvas",{ref:x,role:"img",height:n,width:r,...g},h)}const Chart=reactExports.forwardRef(ChartComponent);function createTypedChart(e,t){return Chart$1.register(t),reactExports.forwardRef((n,r)=>React.createElement(Chart,{...n,ref:r,type:e}))}const Bar=createTypedChart("bar",BarController);class NeuralNet{constructor(t){this.sizes=t.sizes,this.weights=[],this.biases=[];for(let n=0;n<t.weights.length;n++)this.weights.push(matrix$2(t.weights[n]));for(let n=0;n<t.biases.length;n++)this.biases.push(matrix$2(t.biases[n]))}relu(t){return map$2(t,n=>max$3(n,0))}softmax(t){const n=max$3(t),r=map$2(subtract$1(t,n),exp);return dotDivide(r,sum$1(r))}feedforward(t){let n=0;for(;n<this.sizes.length-2;n++)t=add$1(multiply$1(this.weights[n],t),this.biases[n]),t=this.relu(t);return t=add$1(multiply$1(this.weights[n],t),this.biases[n]),t=this.softmax(t),t}}Chart$1.register(CategoryScale,LinearScale,BarElement,plugin_title,plugin_tooltip,plugin_legend);const options={responsive:!0,plugins:{legend:{display:!1},title:{display:!0,text:"Output probabilities"}}},defaultData={labels:[0,1,2,3,4,5,6,7,8,9],datasets:[{label:"Probabilities",data:[0,0,0,0,0,0,0,0,0,0],backgroundColor:"rgba(53, 162, 235, 0.5)"}]};function App(){const[e,t]=reactExports.useState(defaultData),n=reactExports.useRef(null),r=reactExports.useRef(!1),i=reactExports.useRef({x:0,y:0}),s=reactExports.useRef(null),o=async g=>{let x=0,D=0,y=[];for(let E=0;E<10;E++){let F=g.get([E,0]);y.push(F),F>x&&(x=F,D=E)}console.log(D),t(E=>{const F=structuredClone(E);return F.datasets[0].data=y,F})},l=async()=>{if(!n.current)return;let g=await Image.load(n.current.toDataURL());g=g.grey(),g=g.resize({width:28,height:28});let x=matrix$2(Array.from(g.data));x=dotDivide(x,255),x=reshape(x,[784,1]);const D=s.current.feedforward(x);o(D)},c=g=>{r.current=!0;const{offsetX:x,offsetY:D}=g.nativeEvent;i.current={x,y:D}},f=g=>{var F;if(!r.current||!n.current)return;const{offsetX:x,offsetY:D}=g.nativeEvent,y=n.current.getContext("2d"),E=((F=document.getElementById("drawing-pad"))==null?void 0:F.clientWidth)/28;y.beginPath(),y.moveTo(i.current.x/E,i.current.y/E),y.lineTo(x/E,D/E),y.lineJoin="round",y.lineCap="round",y.strokeStyle="white",y.lineWidth=2,y.stroke(),i.current={x,y:D},l()},h=()=>{r.current=!1},p=()=>{if(!n.current)return;const g=n.current.getContext("2d");g.rect(0,0,n.current.width,n.current.height),g.fill()};return reactExports.useEffect(()=>{p(),s.current=new NeuralNet(network);let g=random([784,1]),x=s.current.feedforward(g);console.log(x)},[]),reactExports.useEffect(()=>{console.log(e)},[e]),jsxRuntimeExports.jsxs("div",{className:"flex flex-col sm:flex-row gap-4 w-[100vw] p-4 box-border",children:[jsxRuntimeExports.jsxs("div",{className:"flex flex-col gap-2 sm:grow-[2]",children:[jsxRuntimeExports.jsx("div",{id:"drawing-pad",className:"",children:jsxRuntimeExports.jsx("canvas",{ref:n,width:28,height:28,style:{backgroundColor:"black"},onMouseDown:c,onMouseMove:f,onMouseUp:h,onMouseOut:h,className:"w-[100%] border-2"})}),jsxRuntimeExports.jsx("div",{onClick:p,className:"border-2 border-white cursor-pointer p-2 text-center",children:"Clear"})]}),jsxRuntimeExports.jsx("div",{className:"border-white border-2 grow relative",children:jsxRuntimeExports.jsx(Bar,{options,data:e,className:"relative left-[50%] translate-x-[-50%]"})})]})}clientExports.createRoot(document.getElementById("root")).render(jsxRuntimeExports.jsx(reactExports.StrictMode,{children:jsxRuntimeExports.jsx(App,{})}));
